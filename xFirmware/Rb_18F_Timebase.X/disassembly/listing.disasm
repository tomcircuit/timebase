Disassembly Listing for Rb_18F_Timebase
Generated From:
C:/Users/Lab/Documents/Projects/Timebase/xFirmware/Rb_18F_Timebase.X/dist/default/production/Rb_18F_Timebase.X.production.elf
Apr 8, 2015 10:46:27 PM

---  C:/Users/Lab/Documents/Projects/Timebase/xFirmware/Rb_18F_Timebase.X/ws2812.c  ---------------------
1:             #include <xc.h>
2:             #include "ws2812.h"
3:             
4:             #define _XTAL_FREQ 64000000
5:              
6:             // transmit the ws2812 led
7:             void ws2812_send(unsigned long led)
8:             {
9:                unsigned char j;
10:            
11:               // the WS2812 wants bits in the order of:
12:               // GGGGGGGGRRRRRRRRBBBBBBBB
13:             
14:               // begin shifting them over one at a time
15:               for(j = 0; j < 24; j++) {
3BB6  0E00     MOVLW 0x0
3BB8  6E09     MOVWF j, ACCESS
3BBA  0E17     MOVLW 0x17
3BBC  6409     CPFSGT j, ACCESS
3BBE  D001     BRA 0x3BC2
3BC0  D023     BRA 0x3C08
3C04  2A09     INCF j, F, ACCESS
3C06  D7D9     BRA 0x3BBA
16:                  // depending on if the currently viewed bit is 1 or 0
17:                  // the pin will stay high for different times
18:                   
19:                  if (led & 1 == 1) {
3BC2  A001     BTFSS __pcstackCOMRAM, 0, ACCESS
3BC4  D007     BRA 0x3BD4
20:                     // if it is a 1, let it stay higher a bit longer
21:                     #asm
22:                        bsf PORTC,2
3BC6  8482     BSF PORTC, 2, ACCESS
23:                        nop
3BC8  F000     NOP
24:                        nop
3BCA  F000     NOP
25:                        nop
3BCC  F000     NOP
26:                        nop
3BCE  F000     NOP
27:                        nop
3BD0  F000     NOP
3BD2  D001     BRA 0x3BD6
28:                        bcf PORTC,2
29:                     #endasm
30:                  } else {
31:                     // but a 0 should go high and then low as fast as possible
32:                     #asm
33:                        bsf PORTC,2
3BD4  8482     BSF PORTC, 2, ACCESS
34:                        bcf PORTC,2
3BD6  9482     BCF PORTC, 2, ACCESS
3BD8  D000     BRA 0x3BDA
35:                     #endasm
36:                  }
37:                  // and then right shift to get the next bit
38:                  led = led >> 1;
3BDA  C001     MOVFF __pcstackCOMRAM, 0x5
3BDC  F005     NOP
3BDE  C002     MOVFF 0x2, 0x6
3BE0  F006     NOP
3BE2  C003     MOVFF 0x3, 0x7
3BE4  F007     NOP
3BE6  C004     MOVFF 0x4, 0x8
3BE8  F008     NOP
3BEA  90D8     BCF STATUS, 0, ACCESS
3BEC  3208     RRCF 0x8, F, ACCESS
3BEE  3207     RRCF 0x7, F, ACCESS
3BF0  3206     RRCF 0x6, F, ACCESS
3BF2  3205     RRCF 0x5, F, ACCESS
3BF4  C005     MOVFF 0x5, __pcstackCOMRAM
3BF6  F001     NOP
3BF8  C006     MOVFF 0x6, 0x2
3BFA  F002     NOP
3BFC  C007     MOVFF 0x7, 0x3
3BFE  F003     NOP
3C00  C008     MOVFF 0x8, 0x4
3C02  F004     NOP
39:               }
40:               // delay 50us to ensure the word gets accepted into WS2812
41:               __delay_us(50);
3C08  0EC8     MOVLW 0xC8
3C0A  F000     NOP
3C0C  2EE8     DECFSZ WREG, F, ACCESS
3C0E  D7FD     BRA 0x3C0A
42:            }
3C10  0012     RETURN 0
43:             
---  C:/Users/Lab/Documents/Projects/Timebase/xFirmware/Rb_18F_Timebase.X/rb_main.c  --------------------
1:             /*
2:              * Rb Oscillator Control Board Firmware
3:              * File:   rb_main.c
4:              * Author: tomcircuit
5:              *
6:              * Created on April 8, 2015
7:              */
8:             
9:             #define _XTAL_FREQ 20000000
10:            #define USE_AND_MASKS
11:            
12:            
13:            // PIC18F44K22 Configuration Bit Settings
14:            
15:            // 'C' source line config statements
16:            
17:            #include <xc.h>
18:            
19:            // #pragma config statements should precede project file includes.
20:            // Use project enums instead of #define for ON and OFF.
21:            
22:            // CONFIG1H
23:            #pragma config FOSC = INTIO67   // Oscillator Selection bits (Internal oscillator block)
24:            #pragma config PLLCFG = ON      // 4X PLL Enable (Oscillator multiplied by 4)
25:            #pragma config PRICLKEN = ON    // Primary clock enable bit (Primary clock is always enabled)
26:            #pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enable bit (Fail-Safe Clock Monitor disabled)
27:            #pragma config IESO = OFF       // Internal/External Oscillator Switchover bit (Oscillator Switchover mode disabled)
28:            
29:            // CONFIG2L
30:            #pragma config PWRTEN = OFF     // Power-up Timer Enable bit (Power up timer disabled)
31:            #pragma config BOREN = SBORDIS  // Brown-out Reset Enable bits (Brown-out Reset enabled in hardware only (SBOREN is disabled))
32:            #pragma config BORV = 285       // Brown Out Reset Voltage bits (VBOR set to 2.85 V nominal)
33:            
34:            // CONFIG2H
35:            #pragma config WDTEN = OFF      // Watchdog Timer Enable bits (Watch dog timer is always disabled. SWDTEN has no effect.)
36:            #pragma config WDTPS = 32768    // Watchdog Timer Postscale Select bits (1:32768)
37:            
38:            // CONFIG3H
39:            #pragma config CCP2MX = PORTC1  // CCP2 MUX bit (CCP2 input/output is multiplexed with RC1)
40:            #pragma config PBADEN = ON      // PORTB A/D Enable bit (PORTB<5:0> pins are configured as analog input channels on Reset)
41:            #pragma config CCP3MX = PORTB5  // P3A/CCP3 Mux bit (P3A/CCP3 input/output is multiplexed with RB5)
42:            #pragma config HFOFST = ON      // HFINTOSC Fast Start-up (HFINTOSC output and ready status are not delayed by the oscillator stable status)
43:            #pragma config T3CMX = PORTC0   // Timer3 Clock input mux bit (T3CKI is on RC0)
44:            #pragma config P2BMX = PORTD2   // ECCP2 B output mux bit (P2B is on RD2)
45:            #pragma config MCLRE = EXTMCLR  // MCLR Pin Enable bit (MCLR pin enabled, RE3 input pin disabled)
46:            
47:            // CONFIG4L
48:            #pragma config STVREN = ON      // Stack Full/Underflow Reset Enable bit (Stack full/underflow will cause Reset)
49:            #pragma config LVP = ON         // Single-Supply ICSP Enable bit (Single-Supply ICSP enabled if MCLRE is also 1)
50:            #pragma config XINST = OFF      // Extended Instruction Set Enable bit (Instruction set extension and Indexed Addressing mode disabled (Legacy mode))
51:            
52:            // CONFIG5L
53:            #pragma config CP0 = OFF        // Code Protection Block 0 (Block 0 (000800-001FFFh) not code-protected)
54:            #pragma config CP1 = OFF        // Code Protection Block 1 (Block 1 (002000-003FFFh) not code-protected)
55:            
56:            // CONFIG5H
57:            #pragma config CPB = OFF        // Boot Block Code Protection bit (Boot block (000000-0007FFh) not code-protected)
58:            #pragma config CPD = OFF        // Data EEPROM Code Protection bit (Data EEPROM not code-protected)
59:            
60:            // CONFIG6L
61:            #pragma config WRT0 = OFF       // Write Protection Block 0 (Block 0 (000800-001FFFh) not write-protected)
62:            #pragma config WRT1 = OFF       // Write Protection Block 1 (Block 1 (002000-003FFFh) not write-protected)
63:            
64:            // CONFIG6H
65:            #pragma config WRTC = OFF       // Configuration Register Write Protection bit (Configuration registers (300000-3000FFh) not write-protected)
66:            #pragma config WRTB = OFF       // Boot Block Write Protection bit (Boot Block (000000-0007FFh) not write-protected)
67:            #pragma config WRTD = OFF       // Data EEPROM Write Protection bit (Data EEPROM not write-protected)
68:            
69:            // CONFIG7L
70:            #pragma config EBTR0 = OFF      // Table Read Protection Block 0 (Block 0 (000800-001FFFh) not protected from table reads executed in other blocks)
71:            #pragma config EBTR1 = OFF      // Table Read Protection Block 1 (Block 1 (002000-003FFFh) not protected from table reads executed in other blocks)
72:            
73:            // CONFIG7H
74:            #pragma config EBTRB = OFF      // Boot Block Table Read Protection bit (Boot Block (000000-0007FFh) not protected from table reads executed in other blocks)
75:            
76:            #include <plib/usart.h>
77:            #include <plib/adc.h>
78:            #include "ws2812.h"
79:            
80:            #include "timebase.h"
81:            
82:            #define TRUE (1)
83:            #define FALSE (0)
84:            
85:            enum t_state {RESET = 0, PROVE, WARMUP, OPERATE, STANDBY, FAULT};
86:            enum t_cgrate {CG10M = 0, CG5M = 1, CG1M = 2, CG500K = 3, CG100K = 4, CGOFF = 5};
87:            enum t_fault {NORM = 0, V24_FAULT, BITE_TIMEOUT, V24SW_FAULT, BITE_FAULT, LAMPV_FAULT};
88:            
89:            enum t_state state, prev_state;
90:            enum t_cgrate comb_rate;
91:            enum t_fault fault_code;
92:            
93:            void main()
94:            {
95:               unsigned int st_counter = 0;
3C12  0E00     MOVLW 0x0
3C14  6E1C     MOVWF 0x1C, ACCESS
3C16  0E00     MOVLW 0x0
3C18  6E1B     MOVWF st_counter, ACCESS
96:               unsigned long run_counter = 0;
3C1A  0E00     MOVLW 0x0
3C1C  6E10     MOVWF run_counter, ACCESS
3C1E  0E00     MOVLW 0x0
3C20  6E11     MOVWF 0x11, ACCESS
3C22  0E00     MOVLW 0x0
3C24  6E12     MOVWF 0x12, ACCESS
3C26  0E00     MOVLW 0x0
3C28  6E13     MOVWF 0x13, ACCESS
97:            
98:               unsigned long led_color = 0;
3C2A  0E00     MOVLW 0x0
3C2C  6E17     MOVWF led_color, ACCESS
3C2E  0E00     MOVLW 0x0
3C30  6E18     MOVWF 0x18, ACCESS
3C32  0E00     MOVLW 0x0
3C34  6E19     MOVWF 0x19, ACCESS
3C36  0E00     MOVLW 0x0
3C38  6E1A     MOVWF 0x1A, ACCESS
99:            
100:              unsigned char sw_dist_count = 0;
3C3A  0E00     MOVLW 0x0
3C3C  6E20     MOVWF sw_dist_count, ACCESS
101:              unsigned char sw_cmos_count = 0;
3C3E  0E00     MOVLW 0x0
3C40  6E21     MOVWF sw_cmos_count, ACCESS
102:              unsigned char sw_comb_count = 0;
3C42  0E00     MOVLW 0x0
3C44  6E1F     MOVWF sw_comb_count, ACCESS
103:              unsigned char sw_comb_ready = 0;
3C46  0E00     MOVLW 0x0
3C48  6E16     MOVWF sw_comb_ready, ACCESS
104:           
105:              unsigned int meas_v24;
106:              unsigned int meas_v24sw;
107:              unsigned int meas_lampv;
108:              unsigned int meas_baset;
109:           
110:              // set CPU clock frequency to 8 MHz from internal RC
111:              OSCCON = RESET_OSCCON;
3C4A  0E63     MOVLW 0x63
3C4C  6ED3     MOVWF OSCCON, ACCESS
112:           
113:              state = RESET;
3C4E  0E00     MOVLW 0x0
3C50  6E25     MOVWF state, ACCESS
114:              prev_state = RESET;
3C52  0E00     MOVLW 0x0
3C54  6E24     MOVWF prev_state, ACCESS
115:           
116:              while (1)
3FFA  D62D     BRA 0x3C56
117:              {
118:                 // set CPU clock frequency to 8 MHz from internal RC
119:                 OSCCON = RESET_OSCCON;
3C56  0E63     MOVLW 0x63
3C58  6ED3     MOVWF OSCCON, ACCESS
120:           
121:                 /* initialize GPIO directions */
122:                 TRISA = RESET_TRISA;
3C5A  0E0F     MOVLW 0xF
3C5C  6E92     MOVWF TRISA, ACCESS
123:                 TRISB = RESET_TRISB;
3C5E  0E1F     MOVLW 0x1F
3C60  6E93     MOVWF TRISB, ACCESS
124:                 TRISC = RESET_TRISC;
3C62  0E81     MOVLW 0x81
3C64  6E94     MOVWF TRISC, ACCESS
125:                 TRISD = RESET_TRISD;
3C66  0E00     MOVLW 0x0
3C68  6E95     MOVWF TRISD, ACCESS
126:                 TRISE = RESET_TRISE;
3C6A  0E00     MOVLW 0x0
3C6C  6E96     MOVWF TRISE, ACCESS
127:           
128:                 /* enable analog functions on appropriate pins */
129:                 ANSELA = RESET_ANSELA;
3C6E  0E0E     MOVLW 0xE
3C70  010F     MOVLB 0xF
3C72  6F38     MOVWF 0x38, BANKED
130:                 ANSELB = RESET_ANSELB;
3C74  0E10     MOVLW 0x10
3C76  010F     MOVLB 0xF
3C78  6F39     MOVWF 0x39, BANKED
131:                 ANSELC = RESET_ANSELC;
3C7A  0E00     MOVLW 0x0
3C7C  010F     MOVLB 0xF
3C7E  6F3A     MOVWF 0x3A, BANKED
132:                 ANSELD = RESET_ANSELD;
3C80  0E00     MOVLW 0x0
3C82  010F     MOVLB 0xF
3C84  6F3B     MOVWF 0x3B, BANKED
133:                 ANSELE = RESET_ANSELE;
3C86  0E00     MOVLW 0x0
3C88  010F     MOVLB 0xF
3C8A  6F3C     MOVWF 0x3C, BANKED
134:           
135:                 /* initialize ADC */
136:                 ADCON1 = RESET_ADCON1;
3C8C  0E80     MOVLW 0x80
3C8E  6EC1     MOVWF ADCON1, ACCESS
137:                 ADCON0 = RESET_ADCON0;
3C90  0EC5     MOVLW 0xC5
3C92  6EC2     MOVWF ADCON0, ACCESS
138:           
139:                 /* measure the ADC voltages each iteration */
140:           
141:                 /* measure these each iteration - these are checked so often it makes more
142:                    sense to do this outside the loop, rather than inside. */
143:                 meas_v24 = 0; //adc_measure(ADC_CH_V24);
3C94  0E00     MOVLW 0x0
3C96  6E0F     MOVWF 0xF, ACCESS
3C98  0E00     MOVLW 0x0
3C9A  6E0E     MOVWF meas_v24, ACCESS
144:                 meas_v24sw = 0; //adc_measure(ADC_CH_V24SW);
3C9C  0E00     MOVLW 0x0
3C9E  6E1E     MOVWF 0x1E, ACCESS
3CA0  0E00     MOVLW 0x0
3CA2  6E1D     MOVWF meas_v24sw, ACCESS
145:                 meas_lampv = 0; //adc_measure(ADC_CH_LAMPV);
3CA4  0E00     MOVLW 0x0
3CA6  6E15     MOVWF 0x15, ACCESS
3CA8  0E00     MOVLW 0x0
3CAA  6E14     MOVWF meas_lampv, ACCESS
146:                 meas_baset = 0; //adc_measure(ADC_CH_BASET);
3CAC  0E00     MOVLW 0x0
3CAE  6E0D     MOVWF 0xD, ACCESS
3CB0  0E00     MOVLW 0x0
3CB2  6E0C     MOVWF meas_baset, ACCESS
147:           
148:                 /* debounce the switch inputs each iteration*/
149:           
150:                 /* simple up/down counter for each switch. each counter saturates at SW_ON (highest value)
151:                    and at SW_OFF (lowest value). A counter value of SW_ON indicates that the switch is
152:                    closed. */
153:                 if ((0 == (PORTB & SW_DIST)) && (sw_dist_count < SW_ON))
3CB4  B681     BTFSC PORTB, 3, ACCESS
3CB6  D005     BRA 0x3CC2
3CB8  0E05     MOVLW 0x5
3CBA  6020     CPFSLT sw_dist_count, ACCESS
3CBC  D002     BRA 0x3CC2
154:                    sw_dist_count++;
3CBE  2A20     INCF sw_dist_count, F, ACCESS
3CC0  D000     BRA 0x3CC2
155:                 if ((0 != (PORTB & SW_DIST)) && (sw_dist_count > SW_OFF))
3CC2  A681     BTFSS PORTB, 3, ACCESS
3CC4  D005     BRA 0x3CD0
3CC6  5020     MOVF sw_dist_count, W, ACCESS
3CC8  B4D8     BTFSC STATUS, 2, ACCESS
3CCA  D002     BRA 0x3CD0
156:                    sw_dist_count--;
3CCC  0620     DECF sw_dist_count, F, ACCESS
3CCE  D000     BRA 0x3CD0
157:           
158:                 if ((0 == (PORTB & SW_CMOS)) && (sw_cmos_count < SW_ON))
3CD0  B481     BTFSC PORTB, 2, ACCESS
3CD2  D005     BRA 0x3CDE
3CD4  0E05     MOVLW 0x5
3CD6  6021     CPFSLT sw_cmos_count, ACCESS
3CD8  D002     BRA 0x3CDE
159:                    sw_cmos_count++;
3CDA  2A21     INCF sw_cmos_count, F, ACCESS
3CDC  D000     BRA 0x3CDE
160:                 if ((0 != (PORTB & SW_CMOS)) && (sw_cmos_count > SW_OFF))
3CDE  A481     BTFSS PORTB, 2, ACCESS
3CE0  D005     BRA 0x3CEC
3CE2  5021     MOVF sw_cmos_count, W, ACCESS
3CE4  B4D8     BTFSC STATUS, 2, ACCESS
3CE6  D002     BRA 0x3CEC
161:                    sw_cmos_count--;
3CE8  0621     DECF sw_cmos_count, F, ACCESS
3CEA  D000     BRA 0x3CEC
162:           
163:                 if ((0 == (PORTB & SW_COMB)) && (sw_comb_count < SW_ON))
3CEC  B281     BTFSC PORTB, 1, ACCESS
3CEE  D005     BRA 0x3CFA
3CF0  0E05     MOVLW 0x5
3CF2  601F     CPFSLT sw_comb_count, ACCESS
3CF4  D002     BRA 0x3CFA
164:                    sw_comb_count++;
3CF6  2A1F     INCF sw_comb_count, F, ACCESS
3CF8  D000     BRA 0x3CFA
165:                 if ((0 != (PORTB & SW_COMB)) && (sw_comb_count > SW_OFF))
3CFA  A281     BTFSS PORTB, 1, ACCESS
3CFC  D005     BRA 0x3D08
3CFE  501F     MOVF sw_comb_count, W, ACCESS
3D00  B4D8     BTFSC STATUS, 2, ACCESS
3D02  D002     BRA 0x3D08
166:                    sw_comb_count--;
3D04  061F     DECF sw_comb_count, F, ACCESS
3D06  D000     BRA 0x3D08
167:           
168:                 /* OPERATE state hander */
169:           
170:                 /* OPERATE state is when the LPRO-101 is powered, at at least one output is enabled.
171:                    In OPERATE state the 24VSW and BITE and LAMPV are all checked, and if any are abnormal
172:                    we proceed to FAULT state. Otherwise, we wait for all of the outputs to be be disabled
173:                    to bring us back into STANDBY state. */
174:                 if (OPERATE == state)
3D08  0E03     MOVLW 0x3
3D0A  1825     XORWF state, W, ACCESS
3D0C  A4D8     BTFSS STATUS, 2, ACCESS
3D0E  D072     BRA 0x3DF4
175:                 {
176:                    prev_state = OPERATE;
3D10  0E03     MOVLW 0x3
3D12  6E24     MOVWF prev_state, ACCESS
177:           
178:                    // pixel_color(GREEN);
179:                    led_color = WS2812_GREEN;
3D14  0E00     MOVLW 0x0
3D16  6E17     MOVWF led_color, ACCESS
3D18  0E00     MOVLW 0x0
3D1A  6E18     MOVWF 0x18, ACCESS
3D1C  0EFF     MOVLW 0xFF
3D1E  6E19     MOVWF 0x19, ACCESS
3D20  0E00     MOVLW 0x0
3D22  6E1A     MOVWF 0x1A, ACCESS
180:           
181:                    /* turn on the 24V supply to LPRO-101 */
182:                    PORTA |= EN_V24SW;
3D24  8880     BSF PORTA, 4, ACCESS
183:           
184:                    /* control the 8V supply to the dist amp */
185:                    if (sw_dist_count >= SW_ON)
3D26  0E04     MOVLW 0x4
3D28  6420     CPFSGT sw_dist_count, ACCESS
3D2A  D002     BRA 0x3D30
186:                       PORTD |= EN_V9SW;
3D2C  8683     BSF PORTD, 3, ACCESS
3D2E  D000     BRA 0x3D30
187:           
188:                    /* control the CMOS outputs */
189:                    if (sw_cmos_count >= SW_ON)
3D30  0E04     MOVLW 0x4
3D32  6421     CPFSGT sw_cmos_count, ACCESS
3D34  D002     BRA 0x3D3A
190:                       PORTE |= EN_DIG;
3D36  8084     BSF PORTE, 0, ACCESS
3D38  D000     BRA 0x3D3A
191:           
192:                    /* handle the comb generator rate switch here */
193:                    if ((sw_comb_count >= SW_ON) && (sw_comb_ready == TRUE))
3D3A  0E04     MOVLW 0x4
3D3C  641F     CPFSGT sw_comb_count, ACCESS
3D3E  D025     BRA 0x3D8A
3D40  0416     DECF sw_comb_ready, W, ACCESS
3D42  A4D8     BTFSS STATUS, 2, ACCESS
3D44  D022     BRA 0x3D8A
194:                    {
195:                       if (comb_rate == CGOFF)
3D46  0E05     MOVLW 0x5
3D48  1822     XORWF comb_rate, W, ACCESS
3D4A  A4D8     BTFSS STATUS, 2, ACCESS
3D4C  D002     BRA 0x3D52
196:                          comb_rate = CG100K;
3D4E  0E04     MOVLW 0x4
3D50  D018     BRA 0x3D82
197:                       else if (comb_rate == CG100K)
3D52  0E04     MOVLW 0x4
3D54  1822     XORWF comb_rate, W, ACCESS
3D56  A4D8     BTFSS STATUS, 2, ACCESS
3D58  D002     BRA 0x3D5E
198:                          comb_rate = CG500K;
3D5A  0E03     MOVLW 0x3
3D5C  D012     BRA 0x3D82
199:                       else if (comb_rate == CG500K)
3D5E  0E03     MOVLW 0x3
3D60  1822     XORWF comb_rate, W, ACCESS
3D62  A4D8     BTFSS STATUS, 2, ACCESS
3D64  D002     BRA 0x3D6A
200:                          comb_rate = CG1M;
3D66  0E02     MOVLW 0x2
3D68  D00C     BRA 0x3D82
201:                       else if (comb_rate == CG1M)
3D6A  0E02     MOVLW 0x2
3D6C  1822     XORWF comb_rate, W, ACCESS
3D6E  A4D8     BTFSS STATUS, 2, ACCESS
3D70  D002     BRA 0x3D76
202:                          comb_rate = CG5M;
3D72  0E01     MOVLW 0x1
3D74  D006     BRA 0x3D82
203:                       else if (comb_rate == CG5M)
3D76  0422     DECF comb_rate, W, ACCESS
3D78  A4D8     BTFSS STATUS, 2, ACCESS
3D7A  D002     BRA 0x3D80
204:                          comb_rate = CG10M;
3D7C  0E00     MOVLW 0x0
3D7E  D001     BRA 0x3D82
205:                       else
206:                          comb_rate = CGOFF;
3D80  0E05     MOVLW 0x5
3D82  6E22     MOVWF comb_rate, ACCESS
3D84  D000     BRA 0x3D86
207:                       sw_comb_ready = FALSE;
3D86  0E00     MOVLW 0x0
3D88  6E16     MOVWF sw_comb_ready, ACCESS
208:                    }
209:                    if (sw_comb_count == SW_OFF)
3D8A  501F     MOVF sw_comb_count, W, ACCESS
3D8C  A4D8     BTFSS STATUS, 2, ACCESS
3D8E  D003     BRA 0x3D96
210:                       sw_comb_ready = TRUE;
3D90  0E01     MOVLW 0x1
3D92  6E16     MOVWF sw_comb_ready, ACCESS
3D94  D000     BRA 0x3D96
211:           
212:                    /* set the comb generator rate mux accordingly */
213:                    PORTD |= (comb_rate & 0x07);
3D96  5022     MOVF comb_rate, W, ACCESS
3D98  0B07     ANDLW 0x7
3D9A  1283     IORWF PORTD, F, ACCESS
214:           
215:                    /* enable 10MHz divider and rate mux if comb generator enabled */
216:                    if (comb_rate != CGOFF)
3D9C  0E05     MOVLW 0x5
3D9E  1822     XORWF comb_rate, W, ACCESS
3DA0  B4D8     BTFSC STATUS, 2, ACCESS
3DA2  D002     BRA 0x3DA8
217:                       PORTE &= ~EN_DIV;
3DA4  9284     BCF PORTE, 1, ACCESS
3DA6  D000     BRA 0x3DA8
218:           
219:                    /* if ALL of the outputs are disabled, go back to STANDBY mode */
220:                    if ((sw_cmos_count == SW_OFF) && (sw_dist_count == SW_OFF) && (comb_rate == CGOFF))
3DA8  5021     MOVF sw_cmos_count, W, ACCESS
3DAA  A4D8     BTFSS STATUS, 2, ACCESS
3DAC  D00A     BRA 0x3DC2
3DAE  5020     MOVF sw_dist_count, W, ACCESS
3DB0  A4D8     BTFSS STATUS, 2, ACCESS
3DB2  D007     BRA 0x3DC2
3DB4  0E05     MOVLW 0x5
3DB6  1822     XORWF comb_rate, W, ACCESS
3DB8  A4D8     BTFSS STATUS, 2, ACCESS
3DBA  D003     BRA 0x3DC2
221:                       state = STANDBY;
3DBC  0E04     MOVLW 0x4
3DBE  6E25     MOVWF state, ACCESS
3DC0  D000     BRA 0x3DC2
222:           
223:                    /* check switched 24V rail */
224:                    if ((meas_v24sw < ADC_V24SW_MIN) || (meas_v24sw > ADC_V24SW_MAX))
3DC2  0E04     MOVLW 0x4
3DC4  5C1E     SUBWF 0x1E, W, ACCESS
3DC6  A0D8     BTFSS STATUS, 0, ACCESS
3DC8  D005     BRA 0x3DD4
225:                    {
226:                       state = FAULT;
3DCA  0E05     MOVLW 0x5
3DCC  6E25     MOVWF state, ACCESS
227:                       fault_code = V24SW_FAULT;
3DCE  0E03     MOVLW 0x3
3DD0  6E23     MOVWF fault_code, ACCESS
3DD2  D000     BRA 0x3DD4
228:                    }
229:           
230:                    /* check BITE signal for HIGH state (error) */
231:                    if (0 != (PORTA & RB_BITE))
3DD4  A080     BTFSS PORTA, 0, ACCESS
3DD6  D005     BRA 0x3DE2
232:                    {
233:                       state = FAULT;
3DD8  0E05     MOVLW 0x5
3DDA  6E25     MOVWF state, ACCESS
234:                       fault_code = BITE_FAULT;
3DDC  0E04     MOVLW 0x4
3DDE  6E23     MOVWF fault_code, ACCESS
3DE0  D000     BRA 0x3DE2
235:                    }
236:           
237:                    /* check if LAMPV level is within expected value */
238:                    if ((meas_lampv < ADC_LAMP_MIN) || (meas_lampv > ADC_LAMP_MAX))
3DE2  0E04     MOVLW 0x4
3DE4  5C15     SUBWF 0x15, W, ACCESS
3DE6  A0D8     BTFSS STATUS, 0, ACCESS
3DE8  D005     BRA 0x3DF4
239:                    {
240:                       state = FAULT;
3DEA  0E05     MOVLW 0x5
3DEC  6E25     MOVWF state, ACCESS
241:                       fault_code = LAMPV_FAULT;
3DEE  0E05     MOVLW 0x5
3DF0  6E23     MOVWF fault_code, ACCESS
242:                    }
3DF2  D000     BRA 0x3DF4
243:           
244:                 } // if (OPERATE == state)
245:           
246:                 /* STANDBY state hander */
247:           
248:                 /* STANDBY state is when the LPRO-101 is powered, but no outputs are enabled.
249:                    In STANDBY state the 24VSW and BITE and LAMPV are all checked, and if any are abnormal
250:                    we proceed to FAULT state. Otherwise, we wait for one/more of the output enable switches
251:                    to close to bring us into OPERATE state. */
252:                 if (STANDBY == state)
3DF4  0E04     MOVLW 0x4
3DF6  1825     XORWF state, W, ACCESS
3DF8  A4D8     BTFSS STATUS, 2, ACCESS
3DFA  D034     BRA 0x3E64
253:                 {
254:                    prev_state = STANDBY;
3DFC  0E04     MOVLW 0x4
3DFE  6E24     MOVWF prev_state, ACCESS
255:           
256:                    // pixel_color(YELLOW);
257:                    led_color = WS2812_YELLOW;
3E00  0E00     MOVLW 0x0
3E02  6E17     MOVWF led_color, ACCESS
3E04  0EFF     MOVLW 0xFF
3E06  6E18     MOVWF 0x18, ACCESS
3E08  0EFF     MOVLW 0xFF
3E0A  6E19     MOVWF 0x19, ACCESS
3E0C  0E00     MOVLW 0x0
3E0E  6E1A     MOVWF 0x1A, ACCESS
258:           
259:                    /* turn on the 24V supply to LPRO-101 */
260:                    PORTA |= EN_V24SW;
3E10  8880     BSF PORTA, 4, ACCESS
261:           
262:                    /* turn off the 8V supply to the dist amp */
263:                    PORTD &= ~EN_V9SW;
3E12  9683     BCF PORTD, 3, ACCESS
264:           
265:                    /* turn off the 10MHz divider chain */
266:                    PORTE |= EN_DIV;
3E14  8284     BSF PORTE, 1, ACCESS
267:           
268:                    /* turn off the CMOS outputs */
269:                    PORTE &= ~EN_DIG;
3E16  9084     BCF PORTE, 0, ACCESS
270:           
271:                    if ((sw_cmos_count >= SW_ON) || (sw_dist_count >= SW_ON) || (comb_rate != CGOFF))
3E18  0E05     MOVLW 0x5
3E1A  6021     CPFSLT sw_cmos_count, ACCESS
3E1C  D007     BRA 0x3E2C
3E1E  0E05     MOVLW 0x5
3E20  6020     CPFSLT sw_dist_count, ACCESS
3E22  D004     BRA 0x3E2C
3E24  0E05     MOVLW 0x5
3E26  1822     XORWF comb_rate, W, ACCESS
3E28  B4D8     BTFSC STATUS, 2, ACCESS
3E2A  D003     BRA 0x3E32
272:                    {
273:                       state = OPERATE;
3E2C  0E03     MOVLW 0x3
3E2E  6E25     MOVWF state, ACCESS
3E30  D000     BRA 0x3E32
274:                    }
275:           
276:                    /* check switched 24V rail */
277:                    if ((meas_v24sw < ADC_V24SW_MIN) || (meas_v24sw > ADC_V24SW_MAX))
3E32  0E04     MOVLW 0x4
3E34  5C1E     SUBWF 0x1E, W, ACCESS
3E36  A0D8     BTFSS STATUS, 0, ACCESS
3E38  D005     BRA 0x3E44
278:                    {
279:                       state = FAULT;
3E3A  0E05     MOVLW 0x5
3E3C  6E25     MOVWF state, ACCESS
280:                       fault_code = V24SW_FAULT;
3E3E  0E03     MOVLW 0x3
3E40  6E23     MOVWF fault_code, ACCESS
3E42  D000     BRA 0x3E44
281:                    }
282:           
283:                    /* check BITE signal for HIGH state (error) */
284:                    if (0 != (PORTA & RB_BITE))
3E44  A080     BTFSS PORTA, 0, ACCESS
3E46  D005     BRA 0x3E52
285:                    {
286:                       state = FAULT;
3E48  0E05     MOVLW 0x5
3E4A  6E25     MOVWF state, ACCESS
287:                       fault_code = BITE_FAULT;
3E4C  0E04     MOVLW 0x4
3E4E  6E23     MOVWF fault_code, ACCESS
3E50  D000     BRA 0x3E52
288:                    }
289:           
290:                    /* check if LAMPV level is within expected value */
291:                    if ((meas_lampv < ADC_LAMP_MIN) || (meas_lampv > ADC_LAMP_MAX))
3E52  0E04     MOVLW 0x4
3E54  5C15     SUBWF 0x15, W, ACCESS
3E56  A0D8     BTFSS STATUS, 0, ACCESS
3E58  D005     BRA 0x3E64
292:                    {
293:                       state = FAULT;
3E5A  0E05     MOVLW 0x5
3E5C  6E25     MOVWF state, ACCESS
294:                       fault_code = LAMPV_FAULT;
3E5E  0E05     MOVLW 0x5
3E60  6E23     MOVWF fault_code, ACCESS
295:                    }
3E62  D000     BRA 0x3E64
296:           
297:                 } // if (STANDBY == state)
298:           
299:                 /* WARMUP state hander */
300:           
301:                 /* WARMUP state waits for up to 5 minutes for the LPRO-101 BITE signal to assert (LOW)
302:                    If it does not do so within this time, proceed to FAULT state. Otherwise, proceed to
303:                    STANDBY state. */
304:                 if (WARMUP == state)
3E64  0E02     MOVLW 0x2
3E66  1825     XORWF state, W, ACCESS
3E68  A4D8     BTFSS STATUS, 2, ACCESS
3E6A  D035     BRA 0x3ED6
305:                 {
306:                    /* upon first entry into WARMUP, clear st_counter */
307:                    if (prev_state != WARMUP)
3E6C  0E02     MOVLW 0x2
3E6E  1824     XORWF prev_state, W, ACCESS
3E70  B4D8     BTFSC STATUS, 2, ACCESS
3E72  D004     BRA 0x3E7C
308:                       st_counter = 0;
3E74  0E00     MOVLW 0x0
3E76  6E1C     MOVWF 0x1C, ACCESS
3E78  0E00     MOVLW 0x0
3E7A  6E1B     MOVWF st_counter, ACCESS
309:                    prev_state = WARMUP;
3E7C  0E02     MOVLW 0x2
3E7E  6E24     MOVWF prev_state, ACCESS
310:           
311:                    // pixel_color(RED);
312:                    led_color = WS2812_RED;
3E80  0E00     MOVLW 0x0
3E82  6E17     MOVWF led_color, ACCESS
3E84  0EFF     MOVLW 0xFF
3E86  6E18     MOVWF 0x18, ACCESS
3E88  0E00     MOVLW 0x0
3E8A  6E19     MOVWF 0x19, ACCESS
3E8C  0E00     MOVLW 0x0
3E8E  6E1A     MOVWF 0x1A, ACCESS
313:           
314:                    /* turn on the 24V supply to LPRO-101 */
315:                    PORTA |= EN_V24SW;
3E90  8880     BSF PORTA, 4, ACCESS
316:           
317:                    /* turn off the 8V supply to the dist amp */
318:                    PORTD &= ~EN_V9SW;
3E92  9683     BCF PORTD, 3, ACCESS
319:           
320:                    /* turn off the 10MHz divider chain */
321:                    PORTE |= EN_DIV;
3E94  8284     BSF PORTE, 1, ACCESS
322:           
323:                    /* turn off the CMOS outputs */
324:                    PORTE &= ~EN_DIG;
3E96  9084     BCF PORTE, 0, ACCESS
325:           
326:                    /* check BITE signal for LOW state (warmed up) */
327:                    if (0 == (PORTA & RB_BITE))
3E98  B080     BTFSC PORTA, 0, ACCESS
3E9A  D003     BRA 0x3EA2
328:                       state = STANDBY;
3E9C  0E04     MOVLW 0x4
3E9E  6E25     MOVWF state, ACCESS
3EA0  D000     BRA 0x3EA2
329:           
330:                    /* check to see if warmup timer has expired. If we haven't left WARMUP state
331:                       by now, then time to move to FAULT state! */
332:                    if (st_counter++ > ITER_WARMUP)
3EA2  501B     MOVF st_counter, W, ACCESS
3EA4  6E0A     MOVWF 0xA, ACCESS
3EA6  501C     MOVF 0x1C, W, ACCESS
3EA8  6E0B     MOVWF 0xB, ACCESS
3EAA  4A1B     INFSNZ st_counter, F, ACCESS
3EAC  2A1C     INCF 0x1C, F, ACCESS
3EAE  0EB9     MOVLW 0xB9
3EB0  5C0A     SUBWF 0xA, W, ACCESS
3EB2  0E0B     MOVLW 0xB
3EB4  580B     SUBWFB 0xB, W, ACCESS
3EB6  A0D8     BTFSS STATUS, 0, ACCESS
3EB8  D005     BRA 0x3EC4
333:                    {
334:                       state = FAULT;
3EBA  0E05     MOVLW 0x5
3EBC  6E25     MOVWF state, ACCESS
335:                       fault_code = BITE_TIMEOUT;
3EBE  0E02     MOVLW 0x2
3EC0  6E23     MOVWF fault_code, ACCESS
3EC2  D000     BRA 0x3EC4
336:                    }
337:           
338:                    /* check switched 24V rail */
339:                    if ((meas_v24sw < ADC_V24SW_MIN) || (meas_v24sw > ADC_V24SW_MAX))
3EC4  0E04     MOVLW 0x4
3EC6  5C1E     SUBWF 0x1E, W, ACCESS
3EC8  A0D8     BTFSS STATUS, 0, ACCESS
3ECA  D005     BRA 0x3ED6
340:                    {
341:                       state = FAULT;
3ECC  0E05     MOVLW 0x5
3ECE  6E25     MOVWF state, ACCESS
342:                       fault_code = V24SW_FAULT;
3ED0  0E03     MOVLW 0x3
3ED2  6E23     MOVWF fault_code, ACCESS
343:                    }
3ED4  D000     BRA 0x3ED6
344:           
345:                 } // if (WARMUP == state)
346:           
347:                 /* PROVE state handler */
348:           
349:                 /* PROVE state delays for 500ms, then checks the 24V supply to
350:                    ensure it is within expected limits. If so, proceed to WARMUP state.
351:                    If not, proceed to FAULT state. */
352:                 if (PROVE == state)
3ED6  0425     DECF state, W, ACCESS
3ED8  A4D8     BTFSS STATUS, 2, ACCESS
3EDA  D02D     BRA 0x3F36
353:                 {
354:                    /* upon first entry into PROVE, clear st_counter */
355:                    if (prev_state != PROVE)
3EDC  0424     DECF prev_state, W, ACCESS
3EDE  B4D8     BTFSC STATUS, 2, ACCESS
3EE0  D004     BRA 0x3EEA
356:                       st_counter = 0;
3EE2  0E00     MOVLW 0x0
3EE4  6E1C     MOVWF 0x1C, ACCESS
3EE6  0E00     MOVLW 0x0
3EE8  6E1B     MOVWF st_counter, ACCESS
357:                    prev_state = PROVE;
3EEA  0E01     MOVLW 0x1
3EEC  6E24     MOVWF prev_state, ACCESS
358:           
359:                    // pixel_color(VIOLET);
360:                    led_color = WS2812_VIOLET;
3EEE  0EFF     MOVLW 0xFF
3EF0  6E17     MOVWF led_color, ACCESS
3EF2  0EFF     MOVLW 0xFF
3EF4  6E18     MOVWF 0x18, ACCESS
3EF6  0E00     MOVLW 0x0
3EF8  6E19     MOVWF 0x19, ACCESS
3EFA  0E00     MOVLW 0x0
3EFC  6E1A     MOVWF 0x1A, ACCESS
361:           
362:                    /* turn off the 24V supply to LPRO-101 */
363:                    PORTA &= ~EN_V24SW;
3EFE  9880     BCF PORTA, 4, ACCESS
364:           
365:                    /* turn off the 8V supply to the dist amp */
366:                    PORTD &= ~EN_V9SW;
3F00  9683     BCF PORTD, 3, ACCESS
367:           
368:                    /* turn off the 10MHz divider chain */
369:                    PORTE |= EN_DIV;
3F02  8284     BSF PORTE, 1, ACCESS
370:           
371:                    /* turn off the CMOS outputs */
372:                    PORTE &= ~EN_DIG;
3F04  9084     BCF PORTE, 0, ACCESS
373:           
374:                    if (st_counter++ > ITER_PROVE)
3F06  501B     MOVF st_counter, W, ACCESS
3F08  6E0A     MOVWF 0xA, ACCESS
3F0A  501C     MOVF 0x1C, W, ACCESS
3F0C  6E0B     MOVWF 0xB, ACCESS
3F0E  4A1B     INFSNZ st_counter, F, ACCESS
3F10  2A1C     INCF 0x1C, F, ACCESS
3F12  500B     MOVF 0xB, W, ACCESS
3F14  E104     BNZ 0x3F1E
3F16  0E33     MOVLW 0x33
3F18  5C0A     SUBWF 0xA, W, ACCESS
3F1A  A0D8     BTFSS STATUS, 0, ACCESS
3F1C  D00C     BRA 0x3F36
375:                    {
376:                       if ((meas_v24 < ADC_V24_MIN) || (meas_v24 > ADC_V24_MAX))
3F1E  0E04     MOVLW 0x4
3F20  5C0F     SUBWF 0xF, W, ACCESS
3F22  A0D8     BTFSS STATUS, 0, ACCESS
3F24  D005     BRA 0x3F30
377:                       {
378:                          state = FAULT;
3F26  0E05     MOVLW 0x5
3F28  6E25     MOVWF state, ACCESS
379:                          fault_code = V24_FAULT;
3F2A  0E01     MOVLW 0x1
3F2C  6E23     MOVWF fault_code, ACCESS
380:                       }
3F2E  D003     BRA 0x3F36
381:                       else
382:                          state = WARMUP;
3F30  0E02     MOVLW 0x2
3F32  6E25     MOVWF state, ACCESS
383:                    }
3F34  D000     BRA 0x3F36
384:                 } // if (PROVE == state)
385:           
386:                 /* FAULT state handler */
387:           
388:                 /* FAULT state latches and never exits. The status LED is illuminated with
389:                    specific color to reflect the active fault status. */
390:           
391:                 if (FAULT == state)
3F36  0E05     MOVLW 0x5
3F38  1825     XORWF state, W, ACCESS
3F3A  A4D8     BTFSS STATUS, 2, ACCESS
3F3C  D00E     BRA 0x3F5A
392:                 {
393:                    prev_state = FAULT;
3F3E  0E05     MOVLW 0x5
3F40  6E24     MOVWF prev_state, ACCESS
394:           
395:                    // pixel_color(TEAL);
396:                    led_color = WS2812_TEAL;
3F42  0EFF     MOVLW 0xFF
3F44  6E17     MOVWF led_color, ACCESS
3F46  0E00     MOVLW 0x0
3F48  6E18     MOVWF 0x18, ACCESS
3F4A  0EFF     MOVLW 0xFF
3F4C  6E19     MOVWF 0x19, ACCESS
3F4E  0E00     MOVLW 0x0
3F50  6E1A     MOVWF 0x1A, ACCESS
397:           
398:                    /* turn off the 24V supply to LPRO-101 */
399:                    PORTA &= ~EN_V24SW;
3F52  9880     BCF PORTA, 4, ACCESS
400:           
401:                    /* turn off the 8V supply to the dist amp */
402:                    PORTD &= ~EN_V9SW;
3F54  9683     BCF PORTD, 3, ACCESS
403:           
404:                    /* turn off the 10MHz divider chain */
405:                    PORTE |= EN_DIV;
3F56  8284     BSF PORTE, 1, ACCESS
406:           
407:                    /* turn off the CMOS outputs */
408:                    PORTE &= ~EN_DIG;
3F58  9084     BCF PORTE, 0, ACCESS
409:           
410:                    //__delay_ms(90);
411:           
412:                 } // if (FAULT == state)
413:           
414:                 /* RESET state hander */
415:                 if (RESET == state)
3F5A  5025     MOVF state, W, ACCESS
3F5C  A4D8     BTFSS STATUS, 2, ACCESS
3F5E  D021     BRA 0x3FA2
416:                 {
417:                    PORTA = RESET_PORTA;
3F60  0E00     MOVLW 0x0
3F62  6E80     MOVWF PORTA, ACCESS
418:                    PORTB = RESET_PORTB;
3F64  0E00     MOVLW 0x0
3F66  6E81     MOVWF PORTB, ACCESS
419:                    PORTC = RESET_PORTC;
3F68  0E00     MOVLW 0x0
3F6A  6E82     MOVWF PORTC, ACCESS
420:                    PORTD = RESET_PORTD;
3F6C  0E07     MOVLW 0x7
3F6E  6E83     MOVWF PORTD, ACCESS
421:                    PORTE = RESET_PORTE;
3F70  0E00     MOVLW 0x0
3F72  6E84     MOVWF PORTE, ACCESS
422:           
423:                    run_counter = 0;
3F74  0E00     MOVLW 0x0
3F76  6E10     MOVWF run_counter, ACCESS
3F78  0E00     MOVLW 0x0
3F7A  6E11     MOVWF 0x11, ACCESS
3F7C  0E00     MOVLW 0x0
3F7E  6E12     MOVWF 0x12, ACCESS
3F80  0E00     MOVLW 0x0
3F82  6E13     MOVWF 0x13, ACCESS
424:           
425:                    sw_dist_count = SW_OFF;
3F84  0E00     MOVLW 0x0
3F86  6E20     MOVWF sw_dist_count, ACCESS
426:                    sw_cmos_count = SW_OFF;
3F88  0E00     MOVLW 0x0
3F8A  6E21     MOVWF sw_cmos_count, ACCESS
427:                    sw_comb_count = SW_OFF;
3F8C  0E00     MOVLW 0x0
3F8E  6E1F     MOVWF sw_comb_count, ACCESS
428:                    sw_comb_ready = FALSE;
3F90  0E00     MOVLW 0x0
3F92  6E16     MOVWF sw_comb_ready, ACCESS
429:                    comb_rate = CGOFF;
3F94  0E05     MOVLW 0x5
3F96  6E22     MOVWF comb_rate, ACCESS
430:           
431:                    prev_state = RESET;
3F98  0E00     MOVLW 0x0
3F9A  6E24     MOVWF prev_state, ACCESS
432:                    state = PROVE;
3F9C  0E01     MOVLW 0x1
3F9E  6E25     MOVWF state, ACCESS
3FA0  D000     BRA 0x3FA2
433:                 } // if (RESET == state)
434:           
435:                 /* If the LPRO-101 is powered, increment the run counter. This count saturates
436:                    at 32b long storage value, which is about 1.3 years of continuous uptime! */
437:                 if (PORTA & EN_V24SW)
3FA2  A880     BTFSS PORTA, 4, ACCESS
3FA4  D012     BRA 0x3FCA
438:                    if (run_counter++ == 0)
3FA6  0E01     MOVLW 0x1
3FA8  2610     ADDWF run_counter, F, ACCESS
3FAA  0E00     MOVLW 0x0
3FAC  2211     ADDWFC 0x11, F, ACCESS
3FAE  2212     ADDWFC 0x12, F, ACCESS
3FB0  2213     ADDWFC 0x13, F, ACCESS
3FB2  0410     DECF run_counter, W, ACCESS
3FB4  1011     IORWF 0x11, W, ACCESS
3FB6  1012     IORWF 0x12, W, ACCESS
3FB8  1013     IORWF 0x13, W, ACCESS
3FBA  A4D8     BTFSS STATUS, 2, ACCESS
3FBC  D006     BRA 0x3FCA
439:                      run_counter--;
3FBE  0610     DECF run_counter, F, ACCESS
3FC0  0E00     MOVLW 0x0
3FC2  5A11     SUBWFB 0x11, F, ACCESS
3FC4  5A12     SUBWFB 0x12, F, ACCESS
3FC6  5A13     SUBWFB 0x13, F, ACCESS
3FC8  D000     BRA 0x3FCA
440:           
441:                 /* toggle RD4 debug pin each time through main loop */
442:                 PORTD ^= RD4_DEBUG;
3FCA  0E10     MOVLW 0x10
3FCC  1A83     XORWF PORTD, F, ACCESS
443:           
444:                 /* increase CPU clock to 64 MHz and drive NEOPIXEL */
445:                 OSCCON = FAST_OSCCON;
3FCE  0E70     MOVLW 0x70
3FD0  6ED3     MOVWF OSCCON, ACCESS
446:                 ws2812_send(led_color);
3FD2  C017     MOVFF led_color, __pcstackCOMRAM
3FD4  F001     NOP
3FD6  C018     MOVFF 0x18, 0x2
3FD8  F002     NOP
3FDA  C019     MOVFF 0x19, 0x3
3FDC  F003     NOP
3FDE  C01A     MOVFF 0x1A, 0x4
3FE0  F004     NOP
3FE2  ECDB     CALL 0x3BB6, 0
3FE4  F01D     NOP
447:           
448:                 /* reduce CPU clock back down to 8 MHz */
449:                 OSCCON = RESET_OSCCON;
3FE6  0E63     MOVLW 0x63
3FE8  6ED3     MOVWF OSCCON, ACCESS
450:           
451:                 /* delay at end of each iteration through the main loop */
452:                 __delay_ms(10);
3FEA  0E41     MOVLW 0x41
3FEC  6E0A     MOVWF 0xA, ACCESS
3FEE  0EEE     MOVLW 0xEE
3FF0  2EE8     DECFSZ WREG, F, ACCESS
3FF2  D7FE     BRA 0x3FF0
3FF4  2E0A     DECFSZ 0xA, F, ACCESS
3FF6  D7FC     BRA 0x3FF0
3FF8  D000     BRA 0x3FFA
453:           
454:              } // while(1)
455:           }
3FFC  EF00     GOTO 0x0
456:           
---  C:/Program Files/Microchip/xc8/v1.34/include/pic18f44k22.h  ----------------------------------------
1:             // Version 1.34
2:             // Generated 16/02/2015 GMT
3:             
4:             /*
5:              * Copyright © 2015, Microchip Technology Inc. and its subsidiaries ("Microchip")
6:              * All rights reserved.
7:              * 
8:              * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
9:              * 
10:             * Redistribution and use in source and binary forms, with or without modification, are
11:             * permitted provided that the following conditions are met:
12:             * 
13:             *     1. Redistributions of source code must retain the above copyright notice, this list of
14:             *        conditions and the following disclaimer.
15:             * 
16:             *     2. Redistributions in binary form must reproduce the above copyright notice, this list
17:             *        of conditions and the following disclaimer in the documentation and/or other
18:             *        materials provided with the distribution.
19:             * 
20:             *     3. Microchip's name may not be used to endorse or promote products derived from this
21:             *        software without specific prior written permission.
22:             * 
23:             * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
24:             * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
25:             * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
26:             * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
27:             * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
28:             * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
29:             * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
30:             * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
31:             *  */
32:            
33:            #ifndef _PIC18F44K22_H_
34:            #define _PIC18F44K22_H_
35:            
36:            /*
37:             * C Header file for the Microchip PIC Microcontroller
38:             * PIC18F44K22
39:             *  */
40:            #ifndef __XC8
41:            #warning Header file pic18f44k22.h included directly. Use #include <xc.h> instead.
42:            #endif
43:            
44:            /*
45:             * Register Definitions
46:             *  */
47:            
48:            // Register: ANSELA
49:            extern volatile unsigned char           ANSELA              @ 0xF38;
50:            #ifndef _LIB_BUILD
51:            asm("ANSELA equ 0F38h");
52:            #endif
53:            // bitfield definitions
54:            typedef union {
55:                struct {
56:                    unsigned ANSA0                  :1;
57:                    unsigned ANSA1                  :1;
58:                    unsigned ANSA2                  :1;
59:                    unsigned ANSA3                  :1;
60:                    unsigned                        :1;
61:                    unsigned ANSA5                  :1;
62:                };
63:            } ANSELAbits_t;
64:            extern volatile ANSELAbits_t ANSELAbits @ 0xF38;
65:            // bitfield macros
66:            #define _ANSELA_ANSA0_POSN                                  0x0
67:            #define _ANSELA_ANSA0_POSITION                              0x0
68:            #define _ANSELA_ANSA0_SIZE                                  0x1
69:            #define _ANSELA_ANSA0_LENGTH                                0x1
70:            #define _ANSELA_ANSA0_MASK                                  0x1
71:            #define _ANSELA_ANSA1_POSN                                  0x1
72:            #define _ANSELA_ANSA1_POSITION                              0x1
73:            #define _ANSELA_ANSA1_SIZE                                  0x1
74:            #define _ANSELA_ANSA1_LENGTH                                0x1
75:            #define _ANSELA_ANSA1_MASK                                  0x2
76:            #define _ANSELA_ANSA2_POSN                                  0x2
77:            #define _ANSELA_ANSA2_POSITION                              0x2
78:            #define _ANSELA_ANSA2_SIZE                                  0x1
79:            #define _ANSELA_ANSA2_LENGTH                                0x1
80:            #define _ANSELA_ANSA2_MASK                                  0x4
81:            #define _ANSELA_ANSA3_POSN                                  0x3
82:            #define _ANSELA_ANSA3_POSITION                              0x3
83:            #define _ANSELA_ANSA3_SIZE                                  0x1
84:            #define _ANSELA_ANSA3_LENGTH                                0x1
85:            #define _ANSELA_ANSA3_MASK                                  0x8
86:            #define _ANSELA_ANSA5_POSN                                  0x5
87:            #define _ANSELA_ANSA5_POSITION                              0x5
88:            #define _ANSELA_ANSA5_SIZE                                  0x1
89:            #define _ANSELA_ANSA5_LENGTH                                0x1
90:            #define _ANSELA_ANSA5_MASK                                  0x20
91:            
92:            // Register: ANSELB
93:            extern volatile unsigned char           ANSELB              @ 0xF39;
94:            #ifndef _LIB_BUILD
95:            asm("ANSELB equ 0F39h");
96:            #endif
97:            // bitfield definitions
98:            typedef union {
99:                struct {
100:                   unsigned ANSB0                  :1;
101:                   unsigned ANSB1                  :1;
102:                   unsigned ANSB2                  :1;
103:                   unsigned ANSB3                  :1;
104:                   unsigned ANSB4                  :1;
105:                   unsigned ANSB5                  :1;
106:               };
107:           } ANSELBbits_t;
108:           extern volatile ANSELBbits_t ANSELBbits @ 0xF39;
109:           // bitfield macros
110:           #define _ANSELB_ANSB0_POSN                                  0x0
111:           #define _ANSELB_ANSB0_POSITION                              0x0
112:           #define _ANSELB_ANSB0_SIZE                                  0x1
113:           #define _ANSELB_ANSB0_LENGTH                                0x1
114:           #define _ANSELB_ANSB0_MASK                                  0x1
115:           #define _ANSELB_ANSB1_POSN                                  0x1
116:           #define _ANSELB_ANSB1_POSITION                              0x1
117:           #define _ANSELB_ANSB1_SIZE                                  0x1
118:           #define _ANSELB_ANSB1_LENGTH                                0x1
119:           #define _ANSELB_ANSB1_MASK                                  0x2
120:           #define _ANSELB_ANSB2_POSN                                  0x2
121:           #define _ANSELB_ANSB2_POSITION                              0x2
122:           #define _ANSELB_ANSB2_SIZE                                  0x1
123:           #define _ANSELB_ANSB2_LENGTH                                0x1
124:           #define _ANSELB_ANSB2_MASK                                  0x4
125:           #define _ANSELB_ANSB3_POSN                                  0x3
126:           #define _ANSELB_ANSB3_POSITION                              0x3
127:           #define _ANSELB_ANSB3_SIZE                                  0x1
128:           #define _ANSELB_ANSB3_LENGTH                                0x1
129:           #define _ANSELB_ANSB3_MASK                                  0x8
130:           #define _ANSELB_ANSB4_POSN                                  0x4
131:           #define _ANSELB_ANSB4_POSITION                              0x4
132:           #define _ANSELB_ANSB4_SIZE                                  0x1
133:           #define _ANSELB_ANSB4_LENGTH                                0x1
134:           #define _ANSELB_ANSB4_MASK                                  0x10
135:           #define _ANSELB_ANSB5_POSN                                  0x5
136:           #define _ANSELB_ANSB5_POSITION                              0x5
137:           #define _ANSELB_ANSB5_SIZE                                  0x1
138:           #define _ANSELB_ANSB5_LENGTH                                0x1
139:           #define _ANSELB_ANSB5_MASK                                  0x20
140:           
141:           // Register: ANSELC
142:           extern volatile unsigned char           ANSELC              @ 0xF3A;
143:           #ifndef _LIB_BUILD
144:           asm("ANSELC equ 0F3Ah");
145:           #endif
146:           // bitfield definitions
147:           typedef union {
148:               struct {
149:                   unsigned                        :2;
150:                   unsigned ANSC2                  :1;
151:                   unsigned ANSC3                  :1;
152:                   unsigned ANSC4                  :1;
153:                   unsigned ANSC5                  :1;
154:                   unsigned ANSC6                  :1;
155:                   unsigned ANSC7                  :1;
156:               };
157:           } ANSELCbits_t;
158:           extern volatile ANSELCbits_t ANSELCbits @ 0xF3A;
159:           // bitfield macros
160:           #define _ANSELC_ANSC2_POSN                                  0x2
161:           #define _ANSELC_ANSC2_POSITION                              0x2
162:           #define _ANSELC_ANSC2_SIZE                                  0x1
163:           #define _ANSELC_ANSC2_LENGTH                                0x1
164:           #define _ANSELC_ANSC2_MASK                                  0x4
165:           #define _ANSELC_ANSC3_POSN                                  0x3
166:           #define _ANSELC_ANSC3_POSITION                              0x3
167:           #define _ANSELC_ANSC3_SIZE                                  0x1
168:           #define _ANSELC_ANSC3_LENGTH                                0x1
169:           #define _ANSELC_ANSC3_MASK                                  0x8
170:           #define _ANSELC_ANSC4_POSN                                  0x4
171:           #define _ANSELC_ANSC4_POSITION                              0x4
172:           #define _ANSELC_ANSC4_SIZE                                  0x1
173:           #define _ANSELC_ANSC4_LENGTH                                0x1
174:           #define _ANSELC_ANSC4_MASK                                  0x10
175:           #define _ANSELC_ANSC5_POSN                                  0x5
176:           #define _ANSELC_ANSC5_POSITION                              0x5
177:           #define _ANSELC_ANSC5_SIZE                                  0x1
178:           #define _ANSELC_ANSC5_LENGTH                                0x1
179:           #define _ANSELC_ANSC5_MASK                                  0x20
180:           #define _ANSELC_ANSC6_POSN                                  0x6
181:           #define _ANSELC_ANSC6_POSITION                              0x6
182:           #define _ANSELC_ANSC6_SIZE                                  0x1
183:           #define _ANSELC_ANSC6_LENGTH                                0x1
184:           #define _ANSELC_ANSC6_MASK                                  0x40
185:           #define _ANSELC_ANSC7_POSN                                  0x7
186:           #define _ANSELC_ANSC7_POSITION                              0x7
187:           #define _ANSELC_ANSC7_SIZE                                  0x1
188:           #define _ANSELC_ANSC7_LENGTH                                0x1
189:           #define _ANSELC_ANSC7_MASK                                  0x80
190:           
191:           // Register: ANSELD
192:           extern volatile unsigned char           ANSELD              @ 0xF3B;
193:           #ifndef _LIB_BUILD
194:           asm("ANSELD equ 0F3Bh");
195:           #endif
196:           // bitfield definitions
197:           typedef union {
198:               struct {
199:                   unsigned ANSD0                  :1;
200:                   unsigned ANSD1                  :1;
201:                   unsigned ANSD2                  :1;
202:                   unsigned ANSD3                  :1;
203:                   unsigned ANSD4                  :1;
204:                   unsigned ANSD5                  :1;
205:                   unsigned ANSD6                  :1;
206:                   unsigned ANSD7                  :1;
207:               };
208:           } ANSELDbits_t;
209:           extern volatile ANSELDbits_t ANSELDbits @ 0xF3B;
210:           // bitfield macros
211:           #define _ANSELD_ANSD0_POSN                                  0x0
212:           #define _ANSELD_ANSD0_POSITION                              0x0
213:           #define _ANSELD_ANSD0_SIZE                                  0x1
214:           #define _ANSELD_ANSD0_LENGTH                                0x1
215:           #define _ANSELD_ANSD0_MASK                                  0x1
216:           #define _ANSELD_ANSD1_POSN                                  0x1
217:           #define _ANSELD_ANSD1_POSITION                              0x1
218:           #define _ANSELD_ANSD1_SIZE                                  0x1
219:           #define _ANSELD_ANSD1_LENGTH                                0x1
220:           #define _ANSELD_ANSD1_MASK                                  0x2
221:           #define _ANSELD_ANSD2_POSN                                  0x2
222:           #define _ANSELD_ANSD2_POSITION                              0x2
223:           #define _ANSELD_ANSD2_SIZE                                  0x1
224:           #define _ANSELD_ANSD2_LENGTH                                0x1
225:           #define _ANSELD_ANSD2_MASK                                  0x4
226:           #define _ANSELD_ANSD3_POSN                                  0x3
227:           #define _ANSELD_ANSD3_POSITION                              0x3
228:           #define _ANSELD_ANSD3_SIZE                                  0x1
229:           #define _ANSELD_ANSD3_LENGTH                                0x1
230:           #define _ANSELD_ANSD3_MASK                                  0x8
231:           #define _ANSELD_ANSD4_POSN                                  0x4
232:           #define _ANSELD_ANSD4_POSITION                              0x4
233:           #define _ANSELD_ANSD4_SIZE                                  0x1
234:           #define _ANSELD_ANSD4_LENGTH                                0x1
235:           #define _ANSELD_ANSD4_MASK                                  0x10
236:           #define _ANSELD_ANSD5_POSN                                  0x5
237:           #define _ANSELD_ANSD5_POSITION                              0x5
238:           #define _ANSELD_ANSD5_SIZE                                  0x1
239:           #define _ANSELD_ANSD5_LENGTH                                0x1
240:           #define _ANSELD_ANSD5_MASK                                  0x20
241:           #define _ANSELD_ANSD6_POSN                                  0x6
242:           #define _ANSELD_ANSD6_POSITION                              0x6
243:           #define _ANSELD_ANSD6_SIZE                                  0x1
244:           #define _ANSELD_ANSD6_LENGTH                                0x1
245:           #define _ANSELD_ANSD6_MASK                                  0x40
246:           #define _ANSELD_ANSD7_POSN                                  0x7
247:           #define _ANSELD_ANSD7_POSITION                              0x7
248:           #define _ANSELD_ANSD7_SIZE                                  0x1
249:           #define _ANSELD_ANSD7_LENGTH                                0x1
250:           #define _ANSELD_ANSD7_MASK                                  0x80
251:           
252:           // Register: ANSELE
253:           extern volatile unsigned char           ANSELE              @ 0xF3C;
254:           #ifndef _LIB_BUILD
255:           asm("ANSELE equ 0F3Ch");
256:           #endif
257:           // bitfield definitions
258:           typedef union {
259:               struct {
260:                   unsigned ANSE0                  :1;
261:                   unsigned ANSE1                  :1;
262:                   unsigned ANSE2                  :1;
263:               };
264:           } ANSELEbits_t;
265:           extern volatile ANSELEbits_t ANSELEbits @ 0xF3C;
266:           // bitfield macros
267:           #define _ANSELE_ANSE0_POSN                                  0x0
268:           #define _ANSELE_ANSE0_POSITION                              0x0
269:           #define _ANSELE_ANSE0_SIZE                                  0x1
270:           #define _ANSELE_ANSE0_LENGTH                                0x1
271:           #define _ANSELE_ANSE0_MASK                                  0x1
272:           #define _ANSELE_ANSE1_POSN                                  0x1
273:           #define _ANSELE_ANSE1_POSITION                              0x1
274:           #define _ANSELE_ANSE1_SIZE                                  0x1
275:           #define _ANSELE_ANSE1_LENGTH                                0x1
276:           #define _ANSELE_ANSE1_MASK                                  0x2
277:           #define _ANSELE_ANSE2_POSN                                  0x2
278:           #define _ANSELE_ANSE2_POSITION                              0x2
279:           #define _ANSELE_ANSE2_SIZE                                  0x1
280:           #define _ANSELE_ANSE2_LENGTH                                0x1
281:           #define _ANSELE_ANSE2_MASK                                  0x4
282:           
283:           // Register: PMD2
284:           extern volatile unsigned char           PMD2                @ 0xF3D;
285:           #ifndef _LIB_BUILD
286:           asm("PMD2 equ 0F3Dh");
287:           #endif
288:           // bitfield definitions
289:           typedef union {
290:               struct {
291:                   unsigned ADCMD                  :1;
292:                   unsigned CMP1MD                 :1;
293:                   unsigned CMP2MD                 :1;
294:                   unsigned CTMUMD                 :1;
295:               };
296:           } PMD2bits_t;
297:           extern volatile PMD2bits_t PMD2bits @ 0xF3D;
298:           // bitfield macros
299:           #define _PMD2_ADCMD_POSN                                    0x0
300:           #define _PMD2_ADCMD_POSITION                                0x0
301:           #define _PMD2_ADCMD_SIZE                                    0x1
302:           #define _PMD2_ADCMD_LENGTH                                  0x1
303:           #define _PMD2_ADCMD_MASK                                    0x1
304:           #define _PMD2_CMP1MD_POSN                                   0x1
305:           #define _PMD2_CMP1MD_POSITION                               0x1
306:           #define _PMD2_CMP1MD_SIZE                                   0x1
307:           #define _PMD2_CMP1MD_LENGTH                                 0x1
308:           #define _PMD2_CMP1MD_MASK                                   0x2
309:           #define _PMD2_CMP2MD_POSN                                   0x2
310:           #define _PMD2_CMP2MD_POSITION                               0x2
311:           #define _PMD2_CMP2MD_SIZE                                   0x1
312:           #define _PMD2_CMP2MD_LENGTH                                 0x1
313:           #define _PMD2_CMP2MD_MASK                                   0x4
314:           #define _PMD2_CTMUMD_POSN                                   0x3
315:           #define _PMD2_CTMUMD_POSITION                               0x3
316:           #define _PMD2_CTMUMD_SIZE                                   0x1
317:           #define _PMD2_CTMUMD_LENGTH                                 0x1
318:           #define _PMD2_CTMUMD_MASK                                   0x8
319:           
320:           // Register: PMD1
321:           extern volatile unsigned char           PMD1                @ 0xF3E;
322:           #ifndef _LIB_BUILD
323:           asm("PMD1 equ 0F3Eh");
324:           #endif
325:           // bitfield definitions
326:           typedef union {
327:               struct {
328:                   unsigned CCP1MD                 :1;
329:                   unsigned CCP2MD                 :1;
330:                   unsigned CCP3MD                 :1;
331:                   unsigned CCP4MD                 :1;
332:                   unsigned CCP5MD                 :1;
333:                   unsigned                        :1;
334:                   unsigned MSSP1MD                :1;
335:                   unsigned MSSP2MD                :1;
336:               };
337:               struct {
338:                   unsigned EMBMD                  :1;
339:               };
340:           } PMD1bits_t;
341:           extern volatile PMD1bits_t PMD1bits @ 0xF3E;
342:           // bitfield macros
343:           #define _PMD1_CCP1MD_POSN                                   0x0
344:           #define _PMD1_CCP1MD_POSITION                               0x0
345:           #define _PMD1_CCP1MD_SIZE                                   0x1
346:           #define _PMD1_CCP1MD_LENGTH                                 0x1
347:           #define _PMD1_CCP1MD_MASK                                   0x1
348:           #define _PMD1_CCP2MD_POSN                                   0x1
349:           #define _PMD1_CCP2MD_POSITION                               0x1
350:           #define _PMD1_CCP2MD_SIZE                                   0x1
351:           #define _PMD1_CCP2MD_LENGTH                                 0x1
352:           #define _PMD1_CCP2MD_MASK                                   0x2
353:           #define _PMD1_CCP3MD_POSN                                   0x2
354:           #define _PMD1_CCP3MD_POSITION                               0x2
355:           #define _PMD1_CCP3MD_SIZE                                   0x1
356:           #define _PMD1_CCP3MD_LENGTH                                 0x1
357:           #define _PMD1_CCP3MD_MASK                                   0x4
358:           #define _PMD1_CCP4MD_POSN                                   0x3
359:           #define _PMD1_CCP4MD_POSITION                               0x3
360:           #define _PMD1_CCP4MD_SIZE                                   0x1
361:           #define _PMD1_CCP4MD_LENGTH                                 0x1
362:           #define _PMD1_CCP4MD_MASK                                   0x8
363:           #define _PMD1_CCP5MD_POSN                                   0x4
364:           #define _PMD1_CCP5MD_POSITION                               0x4
365:           #define _PMD1_CCP5MD_SIZE                                   0x1
366:           #define _PMD1_CCP5MD_LENGTH                                 0x1
367:           #define _PMD1_CCP5MD_MASK                                   0x10
368:           #define _PMD1_MSSP1MD_POSN                                  0x6
369:           #define _PMD1_MSSP1MD_POSITION                              0x6
370:           #define _PMD1_MSSP1MD_SIZE                                  0x1
371:           #define _PMD1_MSSP1MD_LENGTH                                0x1
372:           #define _PMD1_MSSP1MD_MASK                                  0x40
373:           #define _PMD1_MSSP2MD_POSN                                  0x7
374:           #define _PMD1_MSSP2MD_POSITION                              0x7
375:           #define _PMD1_MSSP2MD_SIZE                                  0x1
376:           #define _PMD1_MSSP2MD_LENGTH                                0x1
377:           #define _PMD1_MSSP2MD_MASK                                  0x80
378:           #define _PMD1_EMBMD_POSN                                    0x0
379:           #define _PMD1_EMBMD_POSITION                                0x0
380:           #define _PMD1_EMBMD_SIZE                                    0x1
381:           #define _PMD1_EMBMD_LENGTH                                  0x1
382:           #define _PMD1_EMBMD_MASK                                    0x1
383:           
384:           // Register: PMD0
385:           extern volatile unsigned char           PMD0                @ 0xF3F;
386:           #ifndef _LIB_BUILD
387:           asm("PMD0 equ 0F3Fh");
388:           #endif
389:           // bitfield definitions
390:           typedef union {
391:               struct {
392:                   unsigned TMR1MD                 :1;
393:                   unsigned TMR2MD                 :1;
394:                   unsigned TMR3MD                 :1;
395:                   unsigned TMR4MD                 :1;
396:                   unsigned TMR5MD                 :1;
397:                   unsigned TMR6MD                 :1;
398:                   unsigned UART1MD                :1;
399:                   unsigned UART2MD                :1;
400:               };
401:               struct {
402:                   unsigned                        :1;
403:                   unsigned SPI1MD                 :1;
404:               };
405:               struct {
406:                   unsigned                        :2;
407:                   unsigned SPI2MD                 :1;
408:               };
409:           } PMD0bits_t;
410:           extern volatile PMD0bits_t PMD0bits @ 0xF3F;
411:           // bitfield macros
412:           #define _PMD0_TMR1MD_POSN                                   0x0
413:           #define _PMD0_TMR1MD_POSITION                               0x0
414:           #define _PMD0_TMR1MD_SIZE                                   0x1
415:           #define _PMD0_TMR1MD_LENGTH                                 0x1
416:           #define _PMD0_TMR1MD_MASK                                   0x1
417:           #define _PMD0_TMR2MD_POSN                                   0x1
418:           #define _PMD0_TMR2MD_POSITION                               0x1
419:           #define _PMD0_TMR2MD_SIZE                                   0x1
420:           #define _PMD0_TMR2MD_LENGTH                                 0x1
421:           #define _PMD0_TMR2MD_MASK                                   0x2
422:           #define _PMD0_TMR3MD_POSN                                   0x2
423:           #define _PMD0_TMR3MD_POSITION                               0x2
424:           #define _PMD0_TMR3MD_SIZE                                   0x1
425:           #define _PMD0_TMR3MD_LENGTH                                 0x1
426:           #define _PMD0_TMR3MD_MASK                                   0x4
427:           #define _PMD0_TMR4MD_POSN                                   0x3
428:           #define _PMD0_TMR4MD_POSITION                               0x3
429:           #define _PMD0_TMR4MD_SIZE                                   0x1
430:           #define _PMD0_TMR4MD_LENGTH                                 0x1
431:           #define _PMD0_TMR4MD_MASK                                   0x8
432:           #define _PMD0_TMR5MD_POSN                                   0x4
433:           #define _PMD0_TMR5MD_POSITION                               0x4
434:           #define _PMD0_TMR5MD_SIZE                                   0x1
435:           #define _PMD0_TMR5MD_LENGTH                                 0x1
436:           #define _PMD0_TMR5MD_MASK                                   0x10
437:           #define _PMD0_TMR6MD_POSN                                   0x5
438:           #define _PMD0_TMR6MD_POSITION                               0x5
439:           #define _PMD0_TMR6MD_SIZE                                   0x1
440:           #define _PMD0_TMR6MD_LENGTH                                 0x1
441:           #define _PMD0_TMR6MD_MASK                                   0x20
442:           #define _PMD0_UART1MD_POSN                                  0x6
443:           #define _PMD0_UART1MD_POSITION                              0x6
444:           #define _PMD0_UART1MD_SIZE                                  0x1
445:           #define _PMD0_UART1MD_LENGTH                                0x1
446:           #define _PMD0_UART1MD_MASK                                  0x40
447:           #define _PMD0_UART2MD_POSN                                  0x7
448:           #define _PMD0_UART2MD_POSITION                              0x7
449:           #define _PMD0_UART2MD_SIZE                                  0x1
450:           #define _PMD0_UART2MD_LENGTH                                0x1
451:           #define _PMD0_UART2MD_MASK                                  0x80
452:           #define _PMD0_SPI1MD_POSN                                   0x1
453:           #define _PMD0_SPI1MD_POSITION                               0x1
454:           #define _PMD0_SPI1MD_SIZE                                   0x1
455:           #define _PMD0_SPI1MD_LENGTH                                 0x1
456:           #define _PMD0_SPI1MD_MASK                                   0x2
457:           #define _PMD0_SPI2MD_POSN                                   0x2
458:           #define _PMD0_SPI2MD_POSITION                               0x2
459:           #define _PMD0_SPI2MD_SIZE                                   0x1
460:           #define _PMD0_SPI2MD_LENGTH                                 0x1
461:           #define _PMD0_SPI2MD_MASK                                   0x4
462:           
463:           // Register: VREFCON2
464:           extern volatile unsigned char           VREFCON2            @ 0xF40;
465:           #ifndef _LIB_BUILD
466:           asm("VREFCON2 equ 0F40h");
467:           #endif
468:           // aliases
469:           extern volatile unsigned char           DACCON1             @ 0xF40;
470:           #ifndef _LIB_BUILD
471:           asm("DACCON1 equ 0F40h");
472:           #endif
473:           // bitfield definitions
474:           typedef union {
475:               struct {
476:                   unsigned DACR                   :5;
477:               };
478:               struct {
479:                   unsigned DACR0                  :1;
480:                   unsigned DACR1                  :1;
481:                   unsigned DACR2                  :1;
482:                   unsigned DACR3                  :1;
483:                   unsigned DACR4                  :1;
484:               };
485:           } VREFCON2bits_t;
486:           extern volatile VREFCON2bits_t VREFCON2bits @ 0xF40;
487:           // bitfield macros
488:           #define _VREFCON2_DACR_POSN                                 0x0
489:           #define _VREFCON2_DACR_POSITION                             0x0
490:           #define _VREFCON2_DACR_SIZE                                 0x5
491:           #define _VREFCON2_DACR_LENGTH                               0x5
492:           #define _VREFCON2_DACR_MASK                                 0x1F
493:           #define _VREFCON2_DACR0_POSN                                0x0
494:           #define _VREFCON2_DACR0_POSITION                            0x0
495:           #define _VREFCON2_DACR0_SIZE                                0x1
496:           #define _VREFCON2_DACR0_LENGTH                              0x1
497:           #define _VREFCON2_DACR0_MASK                                0x1
498:           #define _VREFCON2_DACR1_POSN                                0x1
499:           #define _VREFCON2_DACR1_POSITION                            0x1
500:           #define _VREFCON2_DACR1_SIZE                                0x1
501:           #define _VREFCON2_DACR1_LENGTH                              0x1
502:           #define _VREFCON2_DACR1_MASK                                0x2
503:           #define _VREFCON2_DACR2_POSN                                0x2
504:           #define _VREFCON2_DACR2_POSITION                            0x2
505:           #define _VREFCON2_DACR2_SIZE                                0x1
506:           #define _VREFCON2_DACR2_LENGTH                              0x1
507:           #define _VREFCON2_DACR2_MASK                                0x4
508:           #define _VREFCON2_DACR3_POSN                                0x3
509:           #define _VREFCON2_DACR3_POSITION                            0x3
510:           #define _VREFCON2_DACR3_SIZE                                0x1
511:           #define _VREFCON2_DACR3_LENGTH                              0x1
512:           #define _VREFCON2_DACR3_MASK                                0x8
513:           #define _VREFCON2_DACR4_POSN                                0x4
514:           #define _VREFCON2_DACR4_POSITION                            0x4
515:           #define _VREFCON2_DACR4_SIZE                                0x1
516:           #define _VREFCON2_DACR4_LENGTH                              0x1
517:           #define _VREFCON2_DACR4_MASK                                0x10
518:           // alias bitfield definitions
519:           typedef union {
520:               struct {
521:                   unsigned DACR                   :5;
522:               };
523:               struct {
524:                   unsigned DACR0                  :1;
525:                   unsigned DACR1                  :1;
526:                   unsigned DACR2                  :1;
527:                   unsigned DACR3                  :1;
528:                   unsigned DACR4                  :1;
529:               };
530:           } DACCON1bits_t;
531:           extern volatile DACCON1bits_t DACCON1bits @ 0xF40;
532:           // bitfield macros
533:           #define _DACCON1_DACR_POSN                                  0x0
534:           #define _DACCON1_DACR_POSITION                              0x0
535:           #define _DACCON1_DACR_SIZE                                  0x5
536:           #define _DACCON1_DACR_LENGTH                                0x5
537:           #define _DACCON1_DACR_MASK                                  0x1F
538:           #define _DACCON1_DACR0_POSN                                 0x0
539:           #define _DACCON1_DACR0_POSITION                             0x0
540:           #define _DACCON1_DACR0_SIZE                                 0x1
541:           #define _DACCON1_DACR0_LENGTH                               0x1
542:           #define _DACCON1_DACR0_MASK                                 0x1
543:           #define _DACCON1_DACR1_POSN                                 0x1
544:           #define _DACCON1_DACR1_POSITION                             0x1
545:           #define _DACCON1_DACR1_SIZE                                 0x1
546:           #define _DACCON1_DACR1_LENGTH                               0x1
547:           #define _DACCON1_DACR1_MASK                                 0x2
548:           #define _DACCON1_DACR2_POSN                                 0x2
549:           #define _DACCON1_DACR2_POSITION                             0x2
550:           #define _DACCON1_DACR2_SIZE                                 0x1
551:           #define _DACCON1_DACR2_LENGTH                               0x1
552:           #define _DACCON1_DACR2_MASK                                 0x4
553:           #define _DACCON1_DACR3_POSN                                 0x3
554:           #define _DACCON1_DACR3_POSITION                             0x3
555:           #define _DACCON1_DACR3_SIZE                                 0x1
556:           #define _DACCON1_DACR3_LENGTH                               0x1
557:           #define _DACCON1_DACR3_MASK                                 0x8
558:           #define _DACCON1_DACR4_POSN                                 0x4
559:           #define _DACCON1_DACR4_POSITION                             0x4
560:           #define _DACCON1_DACR4_SIZE                                 0x1
561:           #define _DACCON1_DACR4_LENGTH                               0x1
562:           #define _DACCON1_DACR4_MASK                                 0x10
563:           
564:           // Register: VREFCON1
565:           extern volatile unsigned char           VREFCON1            @ 0xF41;
566:           #ifndef _LIB_BUILD
567:           asm("VREFCON1 equ 0F41h");
568:           #endif
569:           // aliases
570:           extern volatile unsigned char           DACCON0             @ 0xF41;
571:           #ifndef _LIB_BUILD
572:           asm("DACCON0 equ 0F41h");
573:           #endif
574:           // bitfield definitions
575:           typedef union {
576:               struct {
577:                   unsigned DACNSS                 :1;
578:                   unsigned                        :1;
579:                   unsigned DACPSS                 :2;
580:                   unsigned                        :1;
581:                   unsigned DACOE                  :1;
582:                   unsigned DACLPS                 :1;
583:                   unsigned DACEN                  :1;
584:               };
585:               struct {
586:                   unsigned                        :2;
587:                   unsigned DACPSS0                :1;
588:                   unsigned DACPSS1                :1;
589:               };
590:           } VREFCON1bits_t;
591:           extern volatile VREFCON1bits_t VREFCON1bits @ 0xF41;
592:           // bitfield macros
593:           #define _VREFCON1_DACNSS_POSN                               0x0
594:           #define _VREFCON1_DACNSS_POSITION                           0x0
595:           #define _VREFCON1_DACNSS_SIZE                               0x1
596:           #define _VREFCON1_DACNSS_LENGTH                             0x1
597:           #define _VREFCON1_DACNSS_MASK                               0x1
598:           #define _VREFCON1_DACPSS_POSN                               0x2
599:           #define _VREFCON1_DACPSS_POSITION                           0x2
600:           #define _VREFCON1_DACPSS_SIZE                               0x2
601:           #define _VREFCON1_DACPSS_LENGTH                             0x2
602:           #define _VREFCON1_DACPSS_MASK                               0xC
603:           #define _VREFCON1_DACOE_POSN                                0x5
604:           #define _VREFCON1_DACOE_POSITION                            0x5
605:           #define _VREFCON1_DACOE_SIZE                                0x1
606:           #define _VREFCON1_DACOE_LENGTH                              0x1
607:           #define _VREFCON1_DACOE_MASK                                0x20
608:           #define _VREFCON1_DACLPS_POSN                               0x6
609:           #define _VREFCON1_DACLPS_POSITION                           0x6
610:           #define _VREFCON1_DACLPS_SIZE                               0x1
611:           #define _VREFCON1_DACLPS_LENGTH                             0x1
612:           #define _VREFCON1_DACLPS_MASK                               0x40
613:           #define _VREFCON1_DACEN_POSN                                0x7
614:           #define _VREFCON1_DACEN_POSITION                            0x7
615:           #define _VREFCON1_DACEN_SIZE                                0x1
616:           #define _VREFCON1_DACEN_LENGTH                              0x1
617:           #define _VREFCON1_DACEN_MASK                                0x80
618:           #define _VREFCON1_DACPSS0_POSN                              0x2
619:           #define _VREFCON1_DACPSS0_POSITION                          0x2
620:           #define _VREFCON1_DACPSS0_SIZE                              0x1
621:           #define _VREFCON1_DACPSS0_LENGTH                            0x1
622:           #define _VREFCON1_DACPSS0_MASK                              0x4
623:           #define _VREFCON1_DACPSS1_POSN                              0x3
624:           #define _VREFCON1_DACPSS1_POSITION                          0x3
625:           #define _VREFCON1_DACPSS1_SIZE                              0x1
626:           #define _VREFCON1_DACPSS1_LENGTH                            0x1
627:           #define _VREFCON1_DACPSS1_MASK                              0x8
628:           // alias bitfield definitions
629:           typedef union {
630:               struct {
631:                   unsigned DACNSS                 :1;
632:                   unsigned                        :1;
633:                   unsigned DACPSS                 :2;
634:                   unsigned                        :1;
635:                   unsigned DACOE                  :1;
636:                   unsigned DACLPS                 :1;
637:                   unsigned DACEN                  :1;
638:               };
639:               struct {
640:                   unsigned                        :2;
641:                   unsigned DACPSS0                :1;
642:                   unsigned DACPSS1                :1;
643:               };
644:           } DACCON0bits_t;
645:           extern volatile DACCON0bits_t DACCON0bits @ 0xF41;
646:           // bitfield macros
647:           #define _DACCON0_DACNSS_POSN                                0x0
648:           #define _DACCON0_DACNSS_POSITION                            0x0
649:           #define _DACCON0_DACNSS_SIZE                                0x1
650:           #define _DACCON0_DACNSS_LENGTH                              0x1
651:           #define _DACCON0_DACNSS_MASK                                0x1
652:           #define _DACCON0_DACPSS_POSN                                0x2
653:           #define _DACCON0_DACPSS_POSITION                            0x2
654:           #define _DACCON0_DACPSS_SIZE                                0x2
655:           #define _DACCON0_DACPSS_LENGTH                              0x2
656:           #define _DACCON0_DACPSS_MASK                                0xC
657:           #define _DACCON0_DACOE_POSN                                 0x5
658:           #define _DACCON0_DACOE_POSITION                             0x5
659:           #define _DACCON0_DACOE_SIZE                                 0x1
660:           #define _DACCON0_DACOE_LENGTH                               0x1
661:           #define _DACCON0_DACOE_MASK                                 0x20
662:           #define _DACCON0_DACLPS_POSN                                0x6
663:           #define _DACCON0_DACLPS_POSITION                            0x6
664:           #define _DACCON0_DACLPS_SIZE                                0x1
665:           #define _DACCON0_DACLPS_LENGTH                              0x1
666:           #define _DACCON0_DACLPS_MASK                                0x40
667:           #define _DACCON0_DACEN_POSN                                 0x7
668:           #define _DACCON0_DACEN_POSITION                             0x7
669:           #define _DACCON0_DACEN_SIZE                                 0x1
670:           #define _DACCON0_DACEN_LENGTH                               0x1
671:           #define _DACCON0_DACEN_MASK                                 0x80
672:           #define _DACCON0_DACPSS0_POSN                               0x2
673:           #define _DACCON0_DACPSS0_POSITION                           0x2
674:           #define _DACCON0_DACPSS0_SIZE                               0x1
675:           #define _DACCON0_DACPSS0_LENGTH                             0x1
676:           #define _DACCON0_DACPSS0_MASK                               0x4
677:           #define _DACCON0_DACPSS1_POSN                               0x3
678:           #define _DACCON0_DACPSS1_POSITION                           0x3
679:           #define _DACCON0_DACPSS1_SIZE                               0x1
680:           #define _DACCON0_DACPSS1_LENGTH                             0x1
681:           #define _DACCON0_DACPSS1_MASK                               0x8
682:           
683:           // Register: VREFCON0
684:           extern volatile unsigned char           VREFCON0            @ 0xF42;
685:           #ifndef _LIB_BUILD
686:           asm("VREFCON0 equ 0F42h");
687:           #endif
688:           // aliases
689:           extern volatile unsigned char           FVRCON              @ 0xF42;
690:           #ifndef _LIB_BUILD
691:           asm("FVRCON equ 0F42h");
692:           #endif
693:           // bitfield definitions
694:           typedef union {
695:               struct {
696:                   unsigned                        :4;
697:                   unsigned FVRS                   :2;
698:                   unsigned FVRST                  :1;
699:                   unsigned FVREN                  :1;
700:               };
701:               struct {
702:                   unsigned                        :4;
703:                   unsigned FVRS0                  :1;
704:                   unsigned FVRS1                  :1;
705:               };
706:           } VREFCON0bits_t;
707:           extern volatile VREFCON0bits_t VREFCON0bits @ 0xF42;
708:           // bitfield macros
709:           #define _VREFCON0_FVRS_POSN                                 0x4
710:           #define _VREFCON0_FVRS_POSITION                             0x4
711:           #define _VREFCON0_FVRS_SIZE                                 0x2
712:           #define _VREFCON0_FVRS_LENGTH                               0x2
713:           #define _VREFCON0_FVRS_MASK                                 0x30
714:           #define _VREFCON0_FVRST_POSN                                0x6
715:           #define _VREFCON0_FVRST_POSITION                            0x6
716:           #define _VREFCON0_FVRST_SIZE                                0x1
717:           #define _VREFCON0_FVRST_LENGTH                              0x1
718:           #define _VREFCON0_FVRST_MASK                                0x40
719:           #define _VREFCON0_FVREN_POSN                                0x7
720:           #define _VREFCON0_FVREN_POSITION                            0x7
721:           #define _VREFCON0_FVREN_SIZE                                0x1
722:           #define _VREFCON0_FVREN_LENGTH                              0x1
723:           #define _VREFCON0_FVREN_MASK                                0x80
724:           #define _VREFCON0_FVRS0_POSN                                0x4
725:           #define _VREFCON0_FVRS0_POSITION                            0x4
726:           #define _VREFCON0_FVRS0_SIZE                                0x1
727:           #define _VREFCON0_FVRS0_LENGTH                              0x1
728:           #define _VREFCON0_FVRS0_MASK                                0x10
729:           #define _VREFCON0_FVRS1_POSN                                0x5
730:           #define _VREFCON0_FVRS1_POSITION                            0x5
731:           #define _VREFCON0_FVRS1_SIZE                                0x1
732:           #define _VREFCON0_FVRS1_LENGTH                              0x1
733:           #define _VREFCON0_FVRS1_MASK                                0x20
734:           // alias bitfield definitions
735:           typedef union {
736:               struct {
737:                   unsigned                        :4;
738:                   unsigned FVRS                   :2;
739:                   unsigned FVRST                  :1;
740:                   unsigned FVREN                  :1;
741:               };
742:               struct {
743:                   unsigned                        :4;
744:                   unsigned FVRS0                  :1;
745:                   unsigned FVRS1                  :1;
746:               };
747:           } FVRCONbits_t;
748:           extern volatile FVRCONbits_t FVRCONbits @ 0xF42;
749:           // bitfield macros
750:           #define _FVRCON_FVRS_POSN                                   0x4
751:           #define _FVRCON_FVRS_POSITION                               0x4
752:           #define _FVRCON_FVRS_SIZE                                   0x2
753:           #define _FVRCON_FVRS_LENGTH                                 0x2
754:           #define _FVRCON_FVRS_MASK                                   0x30
755:           #define _FVRCON_FVRST_POSN                                  0x6
756:           #define _FVRCON_FVRST_POSITION                              0x6
757:           #define _FVRCON_FVRST_SIZE                                  0x1
758:           #define _FVRCON_FVRST_LENGTH                                0x1
759:           #define _FVRCON_FVRST_MASK                                  0x40
760:           #define _FVRCON_FVREN_POSN                                  0x7
761:           #define _FVRCON_FVREN_POSITION                              0x7
762:           #define _FVRCON_FVREN_SIZE                                  0x1
763:           #define _FVRCON_FVREN_LENGTH                                0x1
764:           #define _FVRCON_FVREN_MASK                                  0x80
765:           #define _FVRCON_FVRS0_POSN                                  0x4
766:           #define _FVRCON_FVRS0_POSITION                              0x4
767:           #define _FVRCON_FVRS0_SIZE                                  0x1
768:           #define _FVRCON_FVRS0_LENGTH                                0x1
769:           #define _FVRCON_FVRS0_MASK                                  0x10
770:           #define _FVRCON_FVRS1_POSN                                  0x5
771:           #define _FVRCON_FVRS1_POSITION                              0x5
772:           #define _FVRCON_FVRS1_SIZE                                  0x1
773:           #define _FVRCON_FVRS1_LENGTH                                0x1
774:           #define _FVRCON_FVRS1_MASK                                  0x20
775:           
776:           // Register: CTMUICON
777:           extern volatile unsigned char           CTMUICON            @ 0xF43;
778:           #ifndef _LIB_BUILD
779:           asm("CTMUICON equ 0F43h");
780:           #endif
781:           // aliases
782:           extern volatile unsigned char           CTMUICONH           @ 0xF43;
783:           #ifndef _LIB_BUILD
784:           asm("CTMUICONH equ 0F43h");
785:           #endif
786:           // bitfield definitions
787:           typedef union {
788:               struct {
789:                   unsigned IRNG                   :2;
790:                   unsigned ITRIM                  :6;
791:               };
792:               struct {
793:                   unsigned IRNG0                  :1;
794:                   unsigned IRNG1                  :1;
795:                   unsigned ITRIM0                 :1;
796:                   unsigned ITRIM1                 :1;
797:                   unsigned ITRIM2                 :1;
798:                   unsigned ITRIM3                 :1;
799:                   unsigned ITRIM4                 :1;
800:                   unsigned ITRIM5                 :1;
801:               };
802:           } CTMUICONbits_t;
803:           extern volatile CTMUICONbits_t CTMUICONbits @ 0xF43;
804:           // bitfield macros
805:           #define _CTMUICON_IRNG_POSN                                 0x0
806:           #define _CTMUICON_IRNG_POSITION                             0x0
807:           #define _CTMUICON_IRNG_SIZE                                 0x2
808:           #define _CTMUICON_IRNG_LENGTH                               0x2
809:           #define _CTMUICON_IRNG_MASK                                 0x3
810:           #define _CTMUICON_ITRIM_POSN                                0x2
811:           #define _CTMUICON_ITRIM_POSITION                            0x2
812:           #define _CTMUICON_ITRIM_SIZE                                0x6
813:           #define _CTMUICON_ITRIM_LENGTH                              0x6
814:           #define _CTMUICON_ITRIM_MASK                                0xFC
815:           #define _CTMUICON_IRNG0_POSN                                0x0
816:           #define _CTMUICON_IRNG0_POSITION                            0x0
817:           #define _CTMUICON_IRNG0_SIZE                                0x1
818:           #define _CTMUICON_IRNG0_LENGTH                              0x1
819:           #define _CTMUICON_IRNG0_MASK                                0x1
820:           #define _CTMUICON_IRNG1_POSN                                0x1
821:           #define _CTMUICON_IRNG1_POSITION                            0x1
822:           #define _CTMUICON_IRNG1_SIZE                                0x1
823:           #define _CTMUICON_IRNG1_LENGTH                              0x1
824:           #define _CTMUICON_IRNG1_MASK                                0x2
825:           #define _CTMUICON_ITRIM0_POSN                               0x2
826:           #define _CTMUICON_ITRIM0_POSITION                           0x2
827:           #define _CTMUICON_ITRIM0_SIZE                               0x1
828:           #define _CTMUICON_ITRIM0_LENGTH                             0x1
829:           #define _CTMUICON_ITRIM0_MASK                               0x4
830:           #define _CTMUICON_ITRIM1_POSN                               0x3
831:           #define _CTMUICON_ITRIM1_POSITION                           0x3
832:           #define _CTMUICON_ITRIM1_SIZE                               0x1
833:           #define _CTMUICON_ITRIM1_LENGTH                             0x1
834:           #define _CTMUICON_ITRIM1_MASK                               0x8
835:           #define _CTMUICON_ITRIM2_POSN                               0x4
836:           #define _CTMUICON_ITRIM2_POSITION                           0x4
837:           #define _CTMUICON_ITRIM2_SIZE                               0x1
838:           #define _CTMUICON_ITRIM2_LENGTH                             0x1
839:           #define _CTMUICON_ITRIM2_MASK                               0x10
840:           #define _CTMUICON_ITRIM3_POSN                               0x5
841:           #define _CTMUICON_ITRIM3_POSITION                           0x5
842:           #define _CTMUICON_ITRIM3_SIZE                               0x1
843:           #define _CTMUICON_ITRIM3_LENGTH                             0x1
844:           #define _CTMUICON_ITRIM3_MASK                               0x20
845:           #define _CTMUICON_ITRIM4_POSN                               0x6
846:           #define _CTMUICON_ITRIM4_POSITION                           0x6
847:           #define _CTMUICON_ITRIM4_SIZE                               0x1
848:           #define _CTMUICON_ITRIM4_LENGTH                             0x1
849:           #define _CTMUICON_ITRIM4_MASK                               0x40
850:           #define _CTMUICON_ITRIM5_POSN                               0x7
851:           #define _CTMUICON_ITRIM5_POSITION                           0x7
852:           #define _CTMUICON_ITRIM5_SIZE                               0x1
853:           #define _CTMUICON_ITRIM5_LENGTH                             0x1
854:           #define _CTMUICON_ITRIM5_MASK                               0x80
855:           // alias bitfield definitions
856:           typedef union {
857:               struct {
858:                   unsigned IRNG                   :2;
859:                   unsigned ITRIM                  :6;
860:               };
861:               struct {
862:                   unsigned IRNG0                  :1;
863:                   unsigned IRNG1                  :1;
864:                   unsigned ITRIM0                 :1;
865:                   unsigned ITRIM1                 :1;
866:                   unsigned ITRIM2                 :1;
867:                   unsigned ITRIM3                 :1;
868:                   unsigned ITRIM4                 :1;
869:                   unsigned ITRIM5                 :1;
870:               };
871:           } CTMUICONHbits_t;
872:           extern volatile CTMUICONHbits_t CTMUICONHbits @ 0xF43;
873:           // bitfield macros
874:           #define _CTMUICONH_IRNG_POSN                                0x0
875:           #define _CTMUICONH_IRNG_POSITION                            0x0
876:           #define _CTMUICONH_IRNG_SIZE                                0x2
877:           #define _CTMUICONH_IRNG_LENGTH                              0x2
878:           #define _CTMUICONH_IRNG_MASK                                0x3
879:           #define _CTMUICONH_ITRIM_POSN                               0x2
880:           #define _CTMUICONH_ITRIM_POSITION                           0x2
881:           #define _CTMUICONH_ITRIM_SIZE                               0x6
882:           #define _CTMUICONH_ITRIM_LENGTH                             0x6
883:           #define _CTMUICONH_ITRIM_MASK                               0xFC
884:           #define _CTMUICONH_IRNG0_POSN                               0x0
885:           #define _CTMUICONH_IRNG0_POSITION                           0x0
886:           #define _CTMUICONH_IRNG0_SIZE                               0x1
887:           #define _CTMUICONH_IRNG0_LENGTH                             0x1
888:           #define _CTMUICONH_IRNG0_MASK                               0x1
889:           #define _CTMUICONH_IRNG1_POSN                               0x1
890:           #define _CTMUICONH_IRNG1_POSITION                           0x1
891:           #define _CTMUICONH_IRNG1_SIZE                               0x1
892:           #define _CTMUICONH_IRNG1_LENGTH                             0x1
893:           #define _CTMUICONH_IRNG1_MASK                               0x2
894:           #define _CTMUICONH_ITRIM0_POSN                              0x2
895:           #define _CTMUICONH_ITRIM0_POSITION                          0x2
896:           #define _CTMUICONH_ITRIM0_SIZE                              0x1
897:           #define _CTMUICONH_ITRIM0_LENGTH                            0x1
898:           #define _CTMUICONH_ITRIM0_MASK                              0x4
899:           #define _CTMUICONH_ITRIM1_POSN                              0x3
900:           #define _CTMUICONH_ITRIM1_POSITION                          0x3
901:           #define _CTMUICONH_ITRIM1_SIZE                              0x1
902:           #define _CTMUICONH_ITRIM1_LENGTH                            0x1
903:           #define _CTMUICONH_ITRIM1_MASK                              0x8
904:           #define _CTMUICONH_ITRIM2_POSN                              0x4
905:           #define _CTMUICONH_ITRIM2_POSITION                          0x4
906:           #define _CTMUICONH_ITRIM2_SIZE                              0x1
907:           #define _CTMUICONH_ITRIM2_LENGTH                            0x1
908:           #define _CTMUICONH_ITRIM2_MASK                              0x10
909:           #define _CTMUICONH_ITRIM3_POSN                              0x5
910:           #define _CTMUICONH_ITRIM3_POSITION                          0x5
911:           #define _CTMUICONH_ITRIM3_SIZE                              0x1
912:           #define _CTMUICONH_ITRIM3_LENGTH                            0x1
913:           #define _CTMUICONH_ITRIM3_MASK                              0x20
914:           #define _CTMUICONH_ITRIM4_POSN                              0x6
915:           #define _CTMUICONH_ITRIM4_POSITION                          0x6
916:           #define _CTMUICONH_ITRIM4_SIZE                              0x1
917:           #define _CTMUICONH_ITRIM4_LENGTH                            0x1
918:           #define _CTMUICONH_ITRIM4_MASK                              0x40
919:           #define _CTMUICONH_ITRIM5_POSN                              0x7
920:           #define _CTMUICONH_ITRIM5_POSITION                          0x7
921:           #define _CTMUICONH_ITRIM5_SIZE                              0x1
922:           #define _CTMUICONH_ITRIM5_LENGTH                            0x1
923:           #define _CTMUICONH_ITRIM5_MASK                              0x80
924:           
925:           // Register: CTMUCONL
926:           extern volatile unsigned char           CTMUCONL            @ 0xF44;
927:           #ifndef _LIB_BUILD
928:           asm("CTMUCONL equ 0F44h");
929:           #endif
930:           // aliases
931:           extern volatile unsigned char           CTMUCON1            @ 0xF44;
932:           #ifndef _LIB_BUILD
933:           asm("CTMUCON1 equ 0F44h");
934:           #endif
935:           // bitfield definitions
936:           typedef union {
937:               struct {
938:                   unsigned EDG1STAT               :1;
939:                   unsigned EDG2STAT               :1;
940:                   unsigned EDG1SEL                :2;
941:                   unsigned EDG1POL                :1;
942:                   unsigned EDG2SEL                :2;
943:                   unsigned EDG2POL                :1;
944:               };
945:               struct {
946:                   unsigned                        :2;
947:                   unsigned EDG1SEL0               :1;
948:                   unsigned EDG1SEL1               :1;
949:                   unsigned                        :1;
950:                   unsigned EDG2SEL0               :1;
951:                   unsigned EDG2SEL1               :1;
952:               };
953:           } CTMUCONLbits_t;
954:           extern volatile CTMUCONLbits_t CTMUCONLbits @ 0xF44;
955:           // bitfield macros
956:           #define _CTMUCONL_EDG1STAT_POSN                             0x0
957:           #define _CTMUCONL_EDG1STAT_POSITION                         0x0
958:           #define _CTMUCONL_EDG1STAT_SIZE                             0x1
959:           #define _CTMUCONL_EDG1STAT_LENGTH                           0x1
960:           #define _CTMUCONL_EDG1STAT_MASK                             0x1
961:           #define _CTMUCONL_EDG2STAT_POSN                             0x1
962:           #define _CTMUCONL_EDG2STAT_POSITION                         0x1
963:           #define _CTMUCONL_EDG2STAT_SIZE                             0x1
964:           #define _CTMUCONL_EDG2STAT_LENGTH                           0x1
965:           #define _CTMUCONL_EDG2STAT_MASK                             0x2
966:           #define _CTMUCONL_EDG1SEL_POSN                              0x2
967:           #define _CTMUCONL_EDG1SEL_POSITION                          0x2
968:           #define _CTMUCONL_EDG1SEL_SIZE                              0x2
969:           #define _CTMUCONL_EDG1SEL_LENGTH                            0x2
970:           #define _CTMUCONL_EDG1SEL_MASK                              0xC
971:           #define _CTMUCONL_EDG1POL_POSN                              0x4
972:           #define _CTMUCONL_EDG1POL_POSITION                          0x4
973:           #define _CTMUCONL_EDG1POL_SIZE                              0x1
974:           #define _CTMUCONL_EDG1POL_LENGTH                            0x1
975:           #define _CTMUCONL_EDG1POL_MASK                              0x10
976:           #define _CTMUCONL_EDG2SEL_POSN                              0x5
977:           #define _CTMUCONL_EDG2SEL_POSITION                          0x5
978:           #define _CTMUCONL_EDG2SEL_SIZE                              0x2
979:           #define _CTMUCONL_EDG2SEL_LENGTH                            0x2
980:           #define _CTMUCONL_EDG2SEL_MASK                              0x60
981:           #define _CTMUCONL_EDG2POL_POSN                              0x7
982:           #define _CTMUCONL_EDG2POL_POSITION                          0x7
983:           #define _CTMUCONL_EDG2POL_SIZE                              0x1
984:           #define _CTMUCONL_EDG2POL_LENGTH                            0x1
985:           #define _CTMUCONL_EDG2POL_MASK                              0x80
986:           #define _CTMUCONL_EDG1SEL0_POSN                             0x2
987:           #define _CTMUCONL_EDG1SEL0_POSITION                         0x2
988:           #define _CTMUCONL_EDG1SEL0_SIZE                             0x1
989:           #define _CTMUCONL_EDG1SEL0_LENGTH                           0x1
990:           #define _CTMUCONL_EDG1SEL0_MASK                             0x4
991:           #define _CTMUCONL_EDG1SEL1_POSN                             0x3
992:           #define _CTMUCONL_EDG1SEL1_POSITION                         0x3
993:           #define _CTMUCONL_EDG1SEL1_SIZE                             0x1
994:           #define _CTMUCONL_EDG1SEL1_LENGTH                           0x1
995:           #define _CTMUCONL_EDG1SEL1_MASK                             0x8
996:           #define _CTMUCONL_EDG2SEL0_POSN                             0x5
997:           #define _CTMUCONL_EDG2SEL0_POSITION                         0x5
998:           #define _CTMUCONL_EDG2SEL0_SIZE                             0x1
999:           #define _CTMUCONL_EDG2SEL0_LENGTH                           0x1
1000:          #define _CTMUCONL_EDG2SEL0_MASK                             0x20
1001:          #define _CTMUCONL_EDG2SEL1_POSN                             0x6
1002:          #define _CTMUCONL_EDG2SEL1_POSITION                         0x6
1003:          #define _CTMUCONL_EDG2SEL1_SIZE                             0x1
1004:          #define _CTMUCONL_EDG2SEL1_LENGTH                           0x1
1005:          #define _CTMUCONL_EDG2SEL1_MASK                             0x40
1006:          // alias bitfield definitions
1007:          typedef union {
1008:              struct {
1009:                  unsigned EDG1STAT               :1;
1010:                  unsigned EDG2STAT               :1;
1011:                  unsigned EDG1SEL                :2;
1012:                  unsigned EDG1POL                :1;
1013:                  unsigned EDG2SEL                :2;
1014:                  unsigned EDG2POL                :1;
1015:              };
1016:              struct {
1017:                  unsigned                        :2;
1018:                  unsigned EDG1SEL0               :1;
1019:                  unsigned EDG1SEL1               :1;
1020:                  unsigned                        :1;
1021:                  unsigned EDG2SEL0               :1;
1022:                  unsigned EDG2SEL1               :1;
1023:              };
1024:          } CTMUCON1bits_t;
1025:          extern volatile CTMUCON1bits_t CTMUCON1bits @ 0xF44;
1026:          // bitfield macros
1027:          #define _CTMUCON1_EDG1STAT_POSN                             0x0
1028:          #define _CTMUCON1_EDG1STAT_POSITION                         0x0
1029:          #define _CTMUCON1_EDG1STAT_SIZE                             0x1
1030:          #define _CTMUCON1_EDG1STAT_LENGTH                           0x1
1031:          #define _CTMUCON1_EDG1STAT_MASK                             0x1
1032:          #define _CTMUCON1_EDG2STAT_POSN                             0x1
1033:          #define _CTMUCON1_EDG2STAT_POSITION                         0x1
1034:          #define _CTMUCON1_EDG2STAT_SIZE                             0x1
1035:          #define _CTMUCON1_EDG2STAT_LENGTH                           0x1
1036:          #define _CTMUCON1_EDG2STAT_MASK                             0x2
1037:          #define _CTMUCON1_EDG1SEL_POSN                              0x2
1038:          #define _CTMUCON1_EDG1SEL_POSITION                          0x2
1039:          #define _CTMUCON1_EDG1SEL_SIZE                              0x2
1040:          #define _CTMUCON1_EDG1SEL_LENGTH                            0x2
1041:          #define _CTMUCON1_EDG1SEL_MASK                              0xC
1042:          #define _CTMUCON1_EDG1POL_POSN                              0x4
1043:          #define _CTMUCON1_EDG1POL_POSITION                          0x4
1044:          #define _CTMUCON1_EDG1POL_SIZE                              0x1
1045:          #define _CTMUCON1_EDG1POL_LENGTH                            0x1
1046:          #define _CTMUCON1_EDG1POL_MASK                              0x10
1047:          #define _CTMUCON1_EDG2SEL_POSN                              0x5
1048:          #define _CTMUCON1_EDG2SEL_POSITION                          0x5
1049:          #define _CTMUCON1_EDG2SEL_SIZE                              0x2
1050:          #define _CTMUCON1_EDG2SEL_LENGTH                            0x2
1051:          #define _CTMUCON1_EDG2SEL_MASK                              0x60
1052:          #define _CTMUCON1_EDG2POL_POSN                              0x7
1053:          #define _CTMUCON1_EDG2POL_POSITION                          0x7
1054:          #define _CTMUCON1_EDG2POL_SIZE                              0x1
1055:          #define _CTMUCON1_EDG2POL_LENGTH                            0x1
1056:          #define _CTMUCON1_EDG2POL_MASK                              0x80
1057:          #define _CTMUCON1_EDG1SEL0_POSN                             0x2
1058:          #define _CTMUCON1_EDG1SEL0_POSITION                         0x2
1059:          #define _CTMUCON1_EDG1SEL0_SIZE                             0x1
1060:          #define _CTMUCON1_EDG1SEL0_LENGTH                           0x1
1061:          #define _CTMUCON1_EDG1SEL0_MASK                             0x4
1062:          #define _CTMUCON1_EDG1SEL1_POSN                             0x3
1063:          #define _CTMUCON1_EDG1SEL1_POSITION                         0x3
1064:          #define _CTMUCON1_EDG1SEL1_SIZE                             0x1
1065:          #define _CTMUCON1_EDG1SEL1_LENGTH                           0x1
1066:          #define _CTMUCON1_EDG1SEL1_MASK                             0x8
1067:          #define _CTMUCON1_EDG2SEL0_POSN                             0x5
1068:          #define _CTMUCON1_EDG2SEL0_POSITION                         0x5
1069:          #define _CTMUCON1_EDG2SEL0_SIZE                             0x1
1070:          #define _CTMUCON1_EDG2SEL0_LENGTH                           0x1
1071:          #define _CTMUCON1_EDG2SEL0_MASK                             0x20
1072:          #define _CTMUCON1_EDG2SEL1_POSN                             0x6
1073:          #define _CTMUCON1_EDG2SEL1_POSITION                         0x6
1074:          #define _CTMUCON1_EDG2SEL1_SIZE                             0x1
1075:          #define _CTMUCON1_EDG2SEL1_LENGTH                           0x1
1076:          #define _CTMUCON1_EDG2SEL1_MASK                             0x40
1077:          
1078:          // Register: CTMUCONH
1079:          extern volatile unsigned char           CTMUCONH            @ 0xF45;
1080:          #ifndef _LIB_BUILD
1081:          asm("CTMUCONH equ 0F45h");
1082:          #endif
1083:          // aliases
1084:          extern volatile unsigned char           CTMUCON0            @ 0xF45;
1085:          #ifndef _LIB_BUILD
1086:          asm("CTMUCON0 equ 0F45h");
1087:          #endif
1088:          // bitfield definitions
1089:          typedef union {
1090:              struct {
1091:                  unsigned CTTRIG                 :1;
1092:                  unsigned IDISSEN                :1;
1093:                  unsigned EDGSEQEN               :1;
1094:                  unsigned EDGEN                  :1;
1095:                  unsigned TGEN                   :1;
1096:                  unsigned CTMUSIDL               :1;
1097:                  unsigned                        :1;
1098:                  unsigned CTMUEN                 :1;
1099:              };
1100:          } CTMUCONHbits_t;
1101:          extern volatile CTMUCONHbits_t CTMUCONHbits @ 0xF45;
1102:          // bitfield macros
1103:          #define _CTMUCONH_CTTRIG_POSN                               0x0
1104:          #define _CTMUCONH_CTTRIG_POSITION                           0x0
1105:          #define _CTMUCONH_CTTRIG_SIZE                               0x1
1106:          #define _CTMUCONH_CTTRIG_LENGTH                             0x1
1107:          #define _CTMUCONH_CTTRIG_MASK                               0x1
1108:          #define _CTMUCONH_IDISSEN_POSN                              0x1
1109:          #define _CTMUCONH_IDISSEN_POSITION                          0x1
1110:          #define _CTMUCONH_IDISSEN_SIZE                              0x1
1111:          #define _CTMUCONH_IDISSEN_LENGTH                            0x1
1112:          #define _CTMUCONH_IDISSEN_MASK                              0x2
1113:          #define _CTMUCONH_EDGSEQEN_POSN                             0x2
1114:          #define _CTMUCONH_EDGSEQEN_POSITION                         0x2
1115:          #define _CTMUCONH_EDGSEQEN_SIZE                             0x1
1116:          #define _CTMUCONH_EDGSEQEN_LENGTH                           0x1
1117:          #define _CTMUCONH_EDGSEQEN_MASK                             0x4
1118:          #define _CTMUCONH_EDGEN_POSN                                0x3
1119:          #define _CTMUCONH_EDGEN_POSITION                            0x3
1120:          #define _CTMUCONH_EDGEN_SIZE                                0x1
1121:          #define _CTMUCONH_EDGEN_LENGTH                              0x1
1122:          #define _CTMUCONH_EDGEN_MASK                                0x8
1123:          #define _CTMUCONH_TGEN_POSN                                 0x4
1124:          #define _CTMUCONH_TGEN_POSITION                             0x4
1125:          #define _CTMUCONH_TGEN_SIZE                                 0x1
1126:          #define _CTMUCONH_TGEN_LENGTH                               0x1
1127:          #define _CTMUCONH_TGEN_MASK                                 0x10
1128:          #define _CTMUCONH_CTMUSIDL_POSN                             0x5
1129:          #define _CTMUCONH_CTMUSIDL_POSITION                         0x5
1130:          #define _CTMUCONH_CTMUSIDL_SIZE                             0x1
1131:          #define _CTMUCONH_CTMUSIDL_LENGTH                           0x1
1132:          #define _CTMUCONH_CTMUSIDL_MASK                             0x20
1133:          #define _CTMUCONH_CTMUEN_POSN                               0x7
1134:          #define _CTMUCONH_CTMUEN_POSITION                           0x7
1135:          #define _CTMUCONH_CTMUEN_SIZE                               0x1
1136:          #define _CTMUCONH_CTMUEN_LENGTH                             0x1
1137:          #define _CTMUCONH_CTMUEN_MASK                               0x80
1138:          // alias bitfield definitions
1139:          typedef union {
1140:              struct {
1141:                  unsigned CTTRIG                 :1;
1142:                  unsigned IDISSEN                :1;
1143:                  unsigned EDGSEQEN               :1;
1144:                  unsigned EDGEN                  :1;
1145:                  unsigned TGEN                   :1;
1146:                  unsigned CTMUSIDL               :1;
1147:                  unsigned                        :1;
1148:                  unsigned CTMUEN                 :1;
1149:              };
1150:          } CTMUCON0bits_t;
1151:          extern volatile CTMUCON0bits_t CTMUCON0bits @ 0xF45;
1152:          // bitfield macros
1153:          #define _CTMUCON0_CTTRIG_POSN                               0x0
1154:          #define _CTMUCON0_CTTRIG_POSITION                           0x0
1155:          #define _CTMUCON0_CTTRIG_SIZE                               0x1
1156:          #define _CTMUCON0_CTTRIG_LENGTH                             0x1
1157:          #define _CTMUCON0_CTTRIG_MASK                               0x1
1158:          #define _CTMUCON0_IDISSEN_POSN                              0x1
1159:          #define _CTMUCON0_IDISSEN_POSITION                          0x1
1160:          #define _CTMUCON0_IDISSEN_SIZE                              0x1
1161:          #define _CTMUCON0_IDISSEN_LENGTH                            0x1
1162:          #define _CTMUCON0_IDISSEN_MASK                              0x2
1163:          #define _CTMUCON0_EDGSEQEN_POSN                             0x2
1164:          #define _CTMUCON0_EDGSEQEN_POSITION                         0x2
1165:          #define _CTMUCON0_EDGSEQEN_SIZE                             0x1
1166:          #define _CTMUCON0_EDGSEQEN_LENGTH                           0x1
1167:          #define _CTMUCON0_EDGSEQEN_MASK                             0x4
1168:          #define _CTMUCON0_EDGEN_POSN                                0x3
1169:          #define _CTMUCON0_EDGEN_POSITION                            0x3
1170:          #define _CTMUCON0_EDGEN_SIZE                                0x1
1171:          #define _CTMUCON0_EDGEN_LENGTH                              0x1
1172:          #define _CTMUCON0_EDGEN_MASK                                0x8
1173:          #define _CTMUCON0_TGEN_POSN                                 0x4
1174:          #define _CTMUCON0_TGEN_POSITION                             0x4
1175:          #define _CTMUCON0_TGEN_SIZE                                 0x1
1176:          #define _CTMUCON0_TGEN_LENGTH                               0x1
1177:          #define _CTMUCON0_TGEN_MASK                                 0x10
1178:          #define _CTMUCON0_CTMUSIDL_POSN                             0x5
1179:          #define _CTMUCON0_CTMUSIDL_POSITION                         0x5
1180:          #define _CTMUCON0_CTMUSIDL_SIZE                             0x1
1181:          #define _CTMUCON0_CTMUSIDL_LENGTH                           0x1
1182:          #define _CTMUCON0_CTMUSIDL_MASK                             0x20
1183:          #define _CTMUCON0_CTMUEN_POSN                               0x7
1184:          #define _CTMUCON0_CTMUEN_POSITION                           0x7
1185:          #define _CTMUCON0_CTMUEN_SIZE                               0x1
1186:          #define _CTMUCON0_CTMUEN_LENGTH                             0x1
1187:          #define _CTMUCON0_CTMUEN_MASK                               0x80
1188:          
1189:          // Register: SRCON1
1190:          extern volatile unsigned char           SRCON1              @ 0xF46;
1191:          #ifndef _LIB_BUILD
1192:          asm("SRCON1 equ 0F46h");
1193:          #endif
1194:          // bitfield definitions
1195:          typedef union {
1196:              struct {
1197:                  unsigned SRRC1E                 :1;
1198:                  unsigned SRRC2E                 :1;
1199:                  unsigned SRRCKE                 :1;
1200:                  unsigned SRRPE                  :1;
1201:                  unsigned SRSC1E                 :1;
1202:                  unsigned SRSC2E                 :1;
1203:                  unsigned SRSCKE                 :1;
1204:                  unsigned SRSPE                  :1;
1205:              };
1206:          } SRCON1bits_t;
1207:          extern volatile SRCON1bits_t SRCON1bits @ 0xF46;
1208:          // bitfield macros
1209:          #define _SRCON1_SRRC1E_POSN                                 0x0
1210:          #define _SRCON1_SRRC1E_POSITION                             0x0
1211:          #define _SRCON1_SRRC1E_SIZE                                 0x1
1212:          #define _SRCON1_SRRC1E_LENGTH                               0x1
1213:          #define _SRCON1_SRRC1E_MASK                                 0x1
1214:          #define _SRCON1_SRRC2E_POSN                                 0x1
1215:          #define _SRCON1_SRRC2E_POSITION                             0x1
1216:          #define _SRCON1_SRRC2E_SIZE                                 0x1
1217:          #define _SRCON1_SRRC2E_LENGTH                               0x1
1218:          #define _SRCON1_SRRC2E_MASK                                 0x2
1219:          #define _SRCON1_SRRCKE_POSN                                 0x2
1220:          #define _SRCON1_SRRCKE_POSITION                             0x2
1221:          #define _SRCON1_SRRCKE_SIZE                                 0x1
1222:          #define _SRCON1_SRRCKE_LENGTH                               0x1
1223:          #define _SRCON1_SRRCKE_MASK                                 0x4
1224:          #define _SRCON1_SRRPE_POSN                                  0x3
1225:          #define _SRCON1_SRRPE_POSITION                              0x3
1226:          #define _SRCON1_SRRPE_SIZE                                  0x1
1227:          #define _SRCON1_SRRPE_LENGTH                                0x1
1228:          #define _SRCON1_SRRPE_MASK                                  0x8
1229:          #define _SRCON1_SRSC1E_POSN                                 0x4
1230:          #define _SRCON1_SRSC1E_POSITION                             0x4
1231:          #define _SRCON1_SRSC1E_SIZE                                 0x1
1232:          #define _SRCON1_SRSC1E_LENGTH                               0x1
1233:          #define _SRCON1_SRSC1E_MASK                                 0x10
1234:          #define _SRCON1_SRSC2E_POSN                                 0x5
1235:          #define _SRCON1_SRSC2E_POSITION                             0x5
1236:          #define _SRCON1_SRSC2E_SIZE                                 0x1
1237:          #define _SRCON1_SRSC2E_LENGTH                               0x1
1238:          #define _SRCON1_SRSC2E_MASK                                 0x20
1239:          #define _SRCON1_SRSCKE_POSN                                 0x6
1240:          #define _SRCON1_SRSCKE_POSITION                             0x6
1241:          #define _SRCON1_SRSCKE_SIZE                                 0x1
1242:          #define _SRCON1_SRSCKE_LENGTH                               0x1
1243:          #define _SRCON1_SRSCKE_MASK                                 0x40
1244:          #define _SRCON1_SRSPE_POSN                                  0x7
1245:          #define _SRCON1_SRSPE_POSITION                              0x7
1246:          #define _SRCON1_SRSPE_SIZE                                  0x1
1247:          #define _SRCON1_SRSPE_LENGTH                                0x1
1248:          #define _SRCON1_SRSPE_MASK                                  0x80
1249:          
1250:          // Register: SRCON0
1251:          extern volatile unsigned char           SRCON0              @ 0xF47;
1252:          #ifndef _LIB_BUILD
1253:          asm("SRCON0 equ 0F47h");
1254:          #endif
1255:          // bitfield definitions
1256:          typedef union {
1257:              struct {
1258:                  unsigned SRPR                   :1;
1259:                  unsigned SRPS                   :1;
1260:                  unsigned SRNQEN                 :1;
1261:                  unsigned SRQEN                  :1;
1262:                  unsigned SRCLK                  :3;
1263:                  unsigned SRLEN                  :1;
1264:              };
1265:              struct {
1266:                  unsigned                        :4;
1267:                  unsigned SRCLK0                 :1;
1268:                  unsigned SRCLK1                 :1;
1269:                  unsigned SRCLK2                 :1;
1270:              };
1271:          } SRCON0bits_t;
1272:          extern volatile SRCON0bits_t SRCON0bits @ 0xF47;
1273:          // bitfield macros
1274:          #define _SRCON0_SRPR_POSN                                   0x0
1275:          #define _SRCON0_SRPR_POSITION                               0x0
1276:          #define _SRCON0_SRPR_SIZE                                   0x1
1277:          #define _SRCON0_SRPR_LENGTH                                 0x1
1278:          #define _SRCON0_SRPR_MASK                                   0x1
1279:          #define _SRCON0_SRPS_POSN                                   0x1
1280:          #define _SRCON0_SRPS_POSITION                               0x1
1281:          #define _SRCON0_SRPS_SIZE                                   0x1
1282:          #define _SRCON0_SRPS_LENGTH                                 0x1
1283:          #define _SRCON0_SRPS_MASK                                   0x2
1284:          #define _SRCON0_SRNQEN_POSN                                 0x2
1285:          #define _SRCON0_SRNQEN_POSITION                             0x2
1286:          #define _SRCON0_SRNQEN_SIZE                                 0x1
1287:          #define _SRCON0_SRNQEN_LENGTH                               0x1
1288:          #define _SRCON0_SRNQEN_MASK                                 0x4
1289:          #define _SRCON0_SRQEN_POSN                                  0x3
1290:          #define _SRCON0_SRQEN_POSITION                              0x3
1291:          #define _SRCON0_SRQEN_SIZE                                  0x1
1292:          #define _SRCON0_SRQEN_LENGTH                                0x1
1293:          #define _SRCON0_SRQEN_MASK                                  0x8
1294:          #define _SRCON0_SRCLK_POSN                                  0x4
1295:          #define _SRCON0_SRCLK_POSITION                              0x4
1296:          #define _SRCON0_SRCLK_SIZE                                  0x3
1297:          #define _SRCON0_SRCLK_LENGTH                                0x3
1298:          #define _SRCON0_SRCLK_MASK                                  0x70
1299:          #define _SRCON0_SRLEN_POSN                                  0x7
1300:          #define _SRCON0_SRLEN_POSITION                              0x7
1301:          #define _SRCON0_SRLEN_SIZE                                  0x1
1302:          #define _SRCON0_SRLEN_LENGTH                                0x1
1303:          #define _SRCON0_SRLEN_MASK                                  0x80
1304:          #define _SRCON0_SRCLK0_POSN                                 0x4
1305:          #define _SRCON0_SRCLK0_POSITION                             0x4
1306:          #define _SRCON0_SRCLK0_SIZE                                 0x1
1307:          #define _SRCON0_SRCLK0_LENGTH                               0x1
1308:          #define _SRCON0_SRCLK0_MASK                                 0x10
1309:          #define _SRCON0_SRCLK1_POSN                                 0x5
1310:          #define _SRCON0_SRCLK1_POSITION                             0x5
1311:          #define _SRCON0_SRCLK1_SIZE                                 0x1
1312:          #define _SRCON0_SRCLK1_LENGTH                               0x1
1313:          #define _SRCON0_SRCLK1_MASK                                 0x20
1314:          #define _SRCON0_SRCLK2_POSN                                 0x6
1315:          #define _SRCON0_SRCLK2_POSITION                             0x6
1316:          #define _SRCON0_SRCLK2_SIZE                                 0x1
1317:          #define _SRCON0_SRCLK2_LENGTH                               0x1
1318:          #define _SRCON0_SRCLK2_MASK                                 0x40
1319:          
1320:          // Register: CCPTMRS1
1321:          extern volatile unsigned char           CCPTMRS1            @ 0xF48;
1322:          #ifndef _LIB_BUILD
1323:          asm("CCPTMRS1 equ 0F48h");
1324:          #endif
1325:          // bitfield definitions
1326:          typedef union {
1327:              struct {
1328:                  unsigned C4TSEL                 :2;
1329:                  unsigned C5TSEL                 :2;
1330:              };
1331:              struct {
1332:                  unsigned C4TSEL0                :1;
1333:                  unsigned C4TSEL1                :1;
1334:                  unsigned C5TSEL0                :1;
1335:                  unsigned C5TSEL1                :1;
1336:              };
1337:          } CCPTMRS1bits_t;
1338:          extern volatile CCPTMRS1bits_t CCPTMRS1bits @ 0xF48;
1339:          // bitfield macros
1340:          #define _CCPTMRS1_C4TSEL_POSN                               0x0
1341:          #define _CCPTMRS1_C4TSEL_POSITION                           0x0
1342:          #define _CCPTMRS1_C4TSEL_SIZE                               0x2
1343:          #define _CCPTMRS1_C4TSEL_LENGTH                             0x2
1344:          #define _CCPTMRS1_C4TSEL_MASK                               0x3
1345:          #define _CCPTMRS1_C5TSEL_POSN                               0x2
1346:          #define _CCPTMRS1_C5TSEL_POSITION                           0x2
1347:          #define _CCPTMRS1_C5TSEL_SIZE                               0x2
1348:          #define _CCPTMRS1_C5TSEL_LENGTH                             0x2
1349:          #define _CCPTMRS1_C5TSEL_MASK                               0xC
1350:          #define _CCPTMRS1_C4TSEL0_POSN                              0x0
1351:          #define _CCPTMRS1_C4TSEL0_POSITION                          0x0
1352:          #define _CCPTMRS1_C4TSEL0_SIZE                              0x1
1353:          #define _CCPTMRS1_C4TSEL0_LENGTH                            0x1
1354:          #define _CCPTMRS1_C4TSEL0_MASK                              0x1
1355:          #define _CCPTMRS1_C4TSEL1_POSN                              0x1
1356:          #define _CCPTMRS1_C4TSEL1_POSITION                          0x1
1357:          #define _CCPTMRS1_C4TSEL1_SIZE                              0x1
1358:          #define _CCPTMRS1_C4TSEL1_LENGTH                            0x1
1359:          #define _CCPTMRS1_C4TSEL1_MASK                              0x2
1360:          #define _CCPTMRS1_C5TSEL0_POSN                              0x2
1361:          #define _CCPTMRS1_C5TSEL0_POSITION                          0x2
1362:          #define _CCPTMRS1_C5TSEL0_SIZE                              0x1
1363:          #define _CCPTMRS1_C5TSEL0_LENGTH                            0x1
1364:          #define _CCPTMRS1_C5TSEL0_MASK                              0x4
1365:          #define _CCPTMRS1_C5TSEL1_POSN                              0x3
1366:          #define _CCPTMRS1_C5TSEL1_POSITION                          0x3
1367:          #define _CCPTMRS1_C5TSEL1_SIZE                              0x1
1368:          #define _CCPTMRS1_C5TSEL1_LENGTH                            0x1
1369:          #define _CCPTMRS1_C5TSEL1_MASK                              0x8
1370:          
1371:          // Register: CCPTMRS0
1372:          extern volatile unsigned char           CCPTMRS0            @ 0xF49;
1373:          #ifndef _LIB_BUILD
1374:          asm("CCPTMRS0 equ 0F49h");
1375:          #endif
1376:          // bitfield definitions
1377:          typedef union {
1378:              struct {
1379:                  unsigned C1TSEL                 :2;
1380:                  unsigned                        :1;
1381:                  unsigned C2TSEL                 :2;
1382:                  unsigned                        :1;
1383:                  unsigned C3TSEL                 :2;
1384:              };
1385:              struct {
1386:                  unsigned C1TSEL0                :1;
1387:                  unsigned C1TSEL1                :1;
1388:                  unsigned                        :1;
1389:                  unsigned C2TSEL0                :1;
1390:                  unsigned C2TSEL1                :1;
1391:                  unsigned                        :1;
1392:                  unsigned C3TSEL0                :1;
1393:                  unsigned C3TSEL1                :1;
1394:              };
1395:          } CCPTMRS0bits_t;
1396:          extern volatile CCPTMRS0bits_t CCPTMRS0bits @ 0xF49;
1397:          // bitfield macros
1398:          #define _CCPTMRS0_C1TSEL_POSN                               0x0
1399:          #define _CCPTMRS0_C1TSEL_POSITION                           0x0
1400:          #define _CCPTMRS0_C1TSEL_SIZE                               0x2
1401:          #define _CCPTMRS0_C1TSEL_LENGTH                             0x2
1402:          #define _CCPTMRS0_C1TSEL_MASK                               0x3
1403:          #define _CCPTMRS0_C2TSEL_POSN                               0x3
1404:          #define _CCPTMRS0_C2TSEL_POSITION                           0x3
1405:          #define _CCPTMRS0_C2TSEL_SIZE                               0x2
1406:          #define _CCPTMRS0_C2TSEL_LENGTH                             0x2
1407:          #define _CCPTMRS0_C2TSEL_MASK                               0x18
1408:          #define _CCPTMRS0_C3TSEL_POSN                               0x6
1409:          #define _CCPTMRS0_C3TSEL_POSITION                           0x6
1410:          #define _CCPTMRS0_C3TSEL_SIZE                               0x2
1411:          #define _CCPTMRS0_C3TSEL_LENGTH                             0x2
1412:          #define _CCPTMRS0_C3TSEL_MASK                               0xC0
1413:          #define _CCPTMRS0_C1TSEL0_POSN                              0x0
1414:          #define _CCPTMRS0_C1TSEL0_POSITION                          0x0
1415:          #define _CCPTMRS0_C1TSEL0_SIZE                              0x1
1416:          #define _CCPTMRS0_C1TSEL0_LENGTH                            0x1
1417:          #define _CCPTMRS0_C1TSEL0_MASK                              0x1
1418:          #define _CCPTMRS0_C1TSEL1_POSN                              0x1
1419:          #define _CCPTMRS0_C1TSEL1_POSITION                          0x1
1420:          #define _CCPTMRS0_C1TSEL1_SIZE                              0x1
1421:          #define _CCPTMRS0_C1TSEL1_LENGTH                            0x1
1422:          #define _CCPTMRS0_C1TSEL1_MASK                              0x2
1423:          #define _CCPTMRS0_C2TSEL0_POSN                              0x3
1424:          #define _CCPTMRS0_C2TSEL0_POSITION                          0x3
1425:          #define _CCPTMRS0_C2TSEL0_SIZE                              0x1
1426:          #define _CCPTMRS0_C2TSEL0_LENGTH                            0x1
1427:          #define _CCPTMRS0_C2TSEL0_MASK                              0x8
1428:          #define _CCPTMRS0_C2TSEL1_POSN                              0x4
1429:          #define _CCPTMRS0_C2TSEL1_POSITION                          0x4
1430:          #define _CCPTMRS0_C2TSEL1_SIZE                              0x1
1431:          #define _CCPTMRS0_C2TSEL1_LENGTH                            0x1
1432:          #define _CCPTMRS0_C2TSEL1_MASK                              0x10
1433:          #define _CCPTMRS0_C3TSEL0_POSN                              0x6
1434:          #define _CCPTMRS0_C3TSEL0_POSITION                          0x6
1435:          #define _CCPTMRS0_C3TSEL0_SIZE                              0x1
1436:          #define _CCPTMRS0_C3TSEL0_LENGTH                            0x1
1437:          #define _CCPTMRS0_C3TSEL0_MASK                              0x40
1438:          #define _CCPTMRS0_C3TSEL1_POSN                              0x7
1439:          #define _CCPTMRS0_C3TSEL1_POSITION                          0x7
1440:          #define _CCPTMRS0_C3TSEL1_SIZE                              0x1
1441:          #define _CCPTMRS0_C3TSEL1_LENGTH                            0x1
1442:          #define _CCPTMRS0_C3TSEL1_MASK                              0x80
1443:          
1444:          // Register: T6CON
1445:          extern volatile unsigned char           T6CON               @ 0xF4A;
1446:          #ifndef _LIB_BUILD
1447:          asm("T6CON equ 0F4Ah");
1448:          #endif
1449:          // bitfield definitions
1450:          typedef union {
1451:              struct {
1452:                  unsigned T6CKPS                 :2;
1453:                  unsigned TMR6ON                 :1;
1454:                  unsigned T6OUTPS                :4;
1455:              };
1456:              struct {
1457:                  unsigned T6CKPS0                :1;
1458:                  unsigned T6CKPS1                :1;
1459:                  unsigned                        :1;
1460:                  unsigned T6OUTPS0               :1;
1461:                  unsigned T6OUTPS1               :1;
1462:                  unsigned T6OUTPS2               :1;
1463:                  unsigned T6OUTPS3               :1;
1464:              };
1465:          } T6CONbits_t;
1466:          extern volatile T6CONbits_t T6CONbits @ 0xF4A;
1467:          // bitfield macros
1468:          #define _T6CON_T6CKPS_POSN                                  0x0
1469:          #define _T6CON_T6CKPS_POSITION                              0x0
1470:          #define _T6CON_T6CKPS_SIZE                                  0x2
1471:          #define _T6CON_T6CKPS_LENGTH                                0x2
1472:          #define _T6CON_T6CKPS_MASK                                  0x3
1473:          #define _T6CON_TMR6ON_POSN                                  0x2
1474:          #define _T6CON_TMR6ON_POSITION                              0x2
1475:          #define _T6CON_TMR6ON_SIZE                                  0x1
1476:          #define _T6CON_TMR6ON_LENGTH                                0x1
1477:          #define _T6CON_TMR6ON_MASK                                  0x4
1478:          #define _T6CON_T6OUTPS_POSN                                 0x3
1479:          #define _T6CON_T6OUTPS_POSITION                             0x3
1480:          #define _T6CON_T6OUTPS_SIZE                                 0x4
1481:          #define _T6CON_T6OUTPS_LENGTH                               0x4
1482:          #define _T6CON_T6OUTPS_MASK                                 0x78
1483:          #define _T6CON_T6CKPS0_POSN                                 0x0
1484:          #define _T6CON_T6CKPS0_POSITION                             0x0
1485:          #define _T6CON_T6CKPS0_SIZE                                 0x1
1486:          #define _T6CON_T6CKPS0_LENGTH                               0x1
1487:          #define _T6CON_T6CKPS0_MASK                                 0x1
1488:          #define _T6CON_T6CKPS1_POSN                                 0x1
1489:          #define _T6CON_T6CKPS1_POSITION                             0x1
1490:          #define _T6CON_T6CKPS1_SIZE                                 0x1
1491:          #define _T6CON_T6CKPS1_LENGTH                               0x1
1492:          #define _T6CON_T6CKPS1_MASK                                 0x2
1493:          #define _T6CON_T6OUTPS0_POSN                                0x3
1494:          #define _T6CON_T6OUTPS0_POSITION                            0x3
1495:          #define _T6CON_T6OUTPS0_SIZE                                0x1
1496:          #define _T6CON_T6OUTPS0_LENGTH                              0x1
1497:          #define _T6CON_T6OUTPS0_MASK                                0x8
1498:          #define _T6CON_T6OUTPS1_POSN                                0x4
1499:          #define _T6CON_T6OUTPS1_POSITION                            0x4
1500:          #define _T6CON_T6OUTPS1_SIZE                                0x1
1501:          #define _T6CON_T6OUTPS1_LENGTH                              0x1
1502:          #define _T6CON_T6OUTPS1_MASK                                0x10
1503:          #define _T6CON_T6OUTPS2_POSN                                0x5
1504:          #define _T6CON_T6OUTPS2_POSITION                            0x5
1505:          #define _T6CON_T6OUTPS2_SIZE                                0x1
1506:          #define _T6CON_T6OUTPS2_LENGTH                              0x1
1507:          #define _T6CON_T6OUTPS2_MASK                                0x20
1508:          #define _T6CON_T6OUTPS3_POSN                                0x6
1509:          #define _T6CON_T6OUTPS3_POSITION                            0x6
1510:          #define _T6CON_T6OUTPS3_SIZE                                0x1
1511:          #define _T6CON_T6OUTPS3_LENGTH                              0x1
1512:          #define _T6CON_T6OUTPS3_MASK                                0x40
1513:          
1514:          // Register: PR6
1515:          extern volatile unsigned char           PR6                 @ 0xF4B;
1516:          #ifndef _LIB_BUILD
1517:          asm("PR6 equ 0F4Bh");
1518:          #endif
1519:          // bitfield definitions
1520:          typedef union {
1521:              struct {
1522:                  unsigned PR6                    :8;
1523:              };
1524:          } PR6bits_t;
1525:          extern volatile PR6bits_t PR6bits @ 0xF4B;
1526:          // bitfield macros
1527:          #define _PR6_PR6_POSN                                       0x0
1528:          #define _PR6_PR6_POSITION                                   0x0
1529:          #define _PR6_PR6_SIZE                                       0x8
1530:          #define _PR6_PR6_LENGTH                                     0x8
1531:          #define _PR6_PR6_MASK                                       0xFF
1532:          
1533:          // Register: TMR6
1534:          extern volatile unsigned char           TMR6                @ 0xF4C;
1535:          #ifndef _LIB_BUILD
1536:          asm("TMR6 equ 0F4Ch");
1537:          #endif
1538:          // bitfield definitions
1539:          typedef union {
1540:              struct {
1541:                  unsigned TMR6                   :8;
1542:              };
1543:          } TMR6bits_t;
1544:          extern volatile TMR6bits_t TMR6bits @ 0xF4C;
1545:          // bitfield macros
1546:          #define _TMR6_TMR6_POSN                                     0x0
1547:          #define _TMR6_TMR6_POSITION                                 0x0
1548:          #define _TMR6_TMR6_SIZE                                     0x8
1549:          #define _TMR6_TMR6_LENGTH                                   0x8
1550:          #define _TMR6_TMR6_MASK                                     0xFF
1551:          
1552:          // Register: T5GCON
1553:          extern volatile unsigned char           T5GCON              @ 0xF4D;
1554:          #ifndef _LIB_BUILD
1555:          asm("T5GCON equ 0F4Dh");
1556:          #endif
1557:          // bitfield definitions
1558:          typedef union {
1559:              struct {
1560:                  unsigned                        :3;
1561:                  unsigned T5GGO_NOT_DONE         :1;
1562:              };
1563:              struct {
1564:                  unsigned T5GSS                  :2;
1565:                  unsigned T5GVAL                 :1;
1566:                  unsigned T5GGO_nDONE            :1;
1567:                  unsigned T5GSPM                 :1;
1568:                  unsigned T5GTM                  :1;
1569:                  unsigned T5GPOL                 :1;
1570:                  unsigned TMR5GE                 :1;
1571:              };
1572:              struct {
1573:                  unsigned T5GSS0                 :1;
1574:                  unsigned T5GSS1                 :1;
1575:                  unsigned                        :1;
1576:                  unsigned T5GGO                  :1;
1577:              };
1578:              struct {
1579:                  unsigned                        :3;
1580:                  unsigned T5G_DONE               :1;
1581:              };
1582:          } T5GCONbits_t;
1583:          extern volatile T5GCONbits_t T5GCONbits @ 0xF4D;
1584:          // bitfield macros
1585:          #define _T5GCON_T5GGO_NOT_DONE_POSN                         0x3
1586:          #define _T5GCON_T5GGO_NOT_DONE_POSITION                     0x3
1587:          #define _T5GCON_T5GGO_NOT_DONE_SIZE                         0x1
1588:          #define _T5GCON_T5GGO_NOT_DONE_LENGTH                       0x1
1589:          #define _T5GCON_T5GGO_NOT_DONE_MASK                         0x8
1590:          #define _T5GCON_T5GSS_POSN                                  0x0
1591:          #define _T5GCON_T5GSS_POSITION                              0x0
1592:          #define _T5GCON_T5GSS_SIZE                                  0x2
1593:          #define _T5GCON_T5GSS_LENGTH                                0x2
1594:          #define _T5GCON_T5GSS_MASK                                  0x3
1595:          #define _T5GCON_T5GVAL_POSN                                 0x2
1596:          #define _T5GCON_T5GVAL_POSITION                             0x2
1597:          #define _T5GCON_T5GVAL_SIZE                                 0x1
1598:          #define _T5GCON_T5GVAL_LENGTH                               0x1
1599:          #define _T5GCON_T5GVAL_MASK                                 0x4
1600:          #define _T5GCON_T5GGO_nDONE_POSN                            0x3
1601:          #define _T5GCON_T5GGO_nDONE_POSITION                        0x3
1602:          #define _T5GCON_T5GGO_nDONE_SIZE                            0x1
1603:          #define _T5GCON_T5GGO_nDONE_LENGTH                          0x1
1604:          #define _T5GCON_T5GGO_nDONE_MASK                            0x8
1605:          #define _T5GCON_T5GSPM_POSN                                 0x4
1606:          #define _T5GCON_T5GSPM_POSITION                             0x4
1607:          #define _T5GCON_T5GSPM_SIZE                                 0x1
1608:          #define _T5GCON_T5GSPM_LENGTH                               0x1
1609:          #define _T5GCON_T5GSPM_MASK                                 0x10
1610:          #define _T5GCON_T5GTM_POSN                                  0x5
1611:          #define _T5GCON_T5GTM_POSITION                              0x5
1612:          #define _T5GCON_T5GTM_SIZE                                  0x1
1613:          #define _T5GCON_T5GTM_LENGTH                                0x1
1614:          #define _T5GCON_T5GTM_MASK                                  0x20
1615:          #define _T5GCON_T5GPOL_POSN                                 0x6
1616:          #define _T5GCON_T5GPOL_POSITION                             0x6
1617:          #define _T5GCON_T5GPOL_SIZE                                 0x1
1618:          #define _T5GCON_T5GPOL_LENGTH                               0x1
1619:          #define _T5GCON_T5GPOL_MASK                                 0x40
1620:          #define _T5GCON_TMR5GE_POSN                                 0x7
1621:          #define _T5GCON_TMR5GE_POSITION                             0x7
1622:          #define _T5GCON_TMR5GE_SIZE                                 0x1
1623:          #define _T5GCON_TMR5GE_LENGTH                               0x1
1624:          #define _T5GCON_TMR5GE_MASK                                 0x80
1625:          #define _T5GCON_T5GSS0_POSN                                 0x0
1626:          #define _T5GCON_T5GSS0_POSITION                             0x0
1627:          #define _T5GCON_T5GSS0_SIZE                                 0x1
1628:          #define _T5GCON_T5GSS0_LENGTH                               0x1
1629:          #define _T5GCON_T5GSS0_MASK                                 0x1
1630:          #define _T5GCON_T5GSS1_POSN                                 0x1
1631:          #define _T5GCON_T5GSS1_POSITION                             0x1
1632:          #define _T5GCON_T5GSS1_SIZE                                 0x1
1633:          #define _T5GCON_T5GSS1_LENGTH                               0x1
1634:          #define _T5GCON_T5GSS1_MASK                                 0x2
1635:          #define _T5GCON_T5GGO_POSN                                  0x3
1636:          #define _T5GCON_T5GGO_POSITION                              0x3
1637:          #define _T5GCON_T5GGO_SIZE                                  0x1
1638:          #define _T5GCON_T5GGO_LENGTH                                0x1
1639:          #define _T5GCON_T5GGO_MASK                                  0x8
1640:          #define _T5GCON_T5G_DONE_POSN                               0x3
1641:          #define _T5GCON_T5G_DONE_POSITION                           0x3
1642:          #define _T5GCON_T5G_DONE_SIZE                               0x1
1643:          #define _T5GCON_T5G_DONE_LENGTH                             0x1
1644:          #define _T5GCON_T5G_DONE_MASK                               0x8
1645:          
1646:          // Register: T5CON
1647:          extern volatile unsigned char           T5CON               @ 0xF4E;
1648:          #ifndef _LIB_BUILD
1649:          asm("T5CON equ 0F4Eh");
1650:          #endif
1651:          // bitfield definitions
1652:          typedef union {
1653:              struct {
1654:                  unsigned                        :2;
1655:                  unsigned NOT_T5SYNC             :1;
1656:              };
1657:              struct {
1658:                  unsigned TMR5ON                 :1;
1659:                  unsigned T5RD16                 :1;
1660:                  unsigned nT5SYNC                :1;
1661:                  unsigned T5SOSCEN               :1;
1662:                  unsigned T5CKPS                 :2;
1663:                  unsigned TMR5CS                 :2;
1664:              };
1665:              struct {
1666:                  unsigned                        :2;
1667:                  unsigned T5SYNC                 :1;
1668:                  unsigned                        :1;
1669:                  unsigned T5CKPS0                :1;
1670:                  unsigned T5CKPS1                :1;
1671:                  unsigned TMR5CS0                :1;
1672:                  unsigned TMR5CS1                :1;
1673:              };
1674:              struct {
1675:                  unsigned                        :1;
1676:                  unsigned RD165                  :1;
1677:              };
1678:              struct {
1679:                  unsigned                        :3;
1680:                  unsigned SOSCEN5                :1;
1681:              };
1682:          } T5CONbits_t;
1683:          extern volatile T5CONbits_t T5CONbits @ 0xF4E;
1684:          // bitfield macros
1685:          #define _T5CON_NOT_T5SYNC_POSN                              0x2
1686:          #define _T5CON_NOT_T5SYNC_POSITION                          0x2
1687:          #define _T5CON_NOT_T5SYNC_SIZE                              0x1
1688:          #define _T5CON_NOT_T5SYNC_LENGTH                            0x1
1689:          #define _T5CON_NOT_T5SYNC_MASK                              0x4
1690:          #define _T5CON_TMR5ON_POSN                                  0x0
1691:          #define _T5CON_TMR5ON_POSITION                              0x0
1692:          #define _T5CON_TMR5ON_SIZE                                  0x1
1693:          #define _T5CON_TMR5ON_LENGTH                                0x1
1694:          #define _T5CON_TMR5ON_MASK                                  0x1
1695:          #define _T5CON_T5RD16_POSN                                  0x1
1696:          #define _T5CON_T5RD16_POSITION                              0x1
1697:          #define _T5CON_T5RD16_SIZE                                  0x1
1698:          #define _T5CON_T5RD16_LENGTH                                0x1
1699:          #define _T5CON_T5RD16_MASK                                  0x2
1700:          #define _T5CON_nT5SYNC_POSN                                 0x2
1701:          #define _T5CON_nT5SYNC_POSITION                             0x2
1702:          #define _T5CON_nT5SYNC_SIZE                                 0x1
1703:          #define _T5CON_nT5SYNC_LENGTH                               0x1
1704:          #define _T5CON_nT5SYNC_MASK                                 0x4
1705:          #define _T5CON_T5SOSCEN_POSN                                0x3
1706:          #define _T5CON_T5SOSCEN_POSITION                            0x3
1707:          #define _T5CON_T5SOSCEN_SIZE                                0x1
1708:          #define _T5CON_T5SOSCEN_LENGTH                              0x1
1709:          #define _T5CON_T5SOSCEN_MASK                                0x8
1710:          #define _T5CON_T5CKPS_POSN                                  0x4
1711:          #define _T5CON_T5CKPS_POSITION                              0x4
1712:          #define _T5CON_T5CKPS_SIZE                                  0x2
1713:          #define _T5CON_T5CKPS_LENGTH                                0x2
1714:          #define _T5CON_T5CKPS_MASK                                  0x30
1715:          #define _T5CON_TMR5CS_POSN                                  0x6
1716:          #define _T5CON_TMR5CS_POSITION                              0x6
1717:          #define _T5CON_TMR5CS_SIZE                                  0x2
1718:          #define _T5CON_TMR5CS_LENGTH                                0x2
1719:          #define _T5CON_TMR5CS_MASK                                  0xC0
1720:          #define _T5CON_T5SYNC_POSN                                  0x2
1721:          #define _T5CON_T5SYNC_POSITION                              0x2
1722:          #define _T5CON_T5SYNC_SIZE                                  0x1
1723:          #define _T5CON_T5SYNC_LENGTH                                0x1
1724:          #define _T5CON_T5SYNC_MASK                                  0x4
1725:          #define _T5CON_T5CKPS0_POSN                                 0x4
1726:          #define _T5CON_T5CKPS0_POSITION                             0x4
1727:          #define _T5CON_T5CKPS0_SIZE                                 0x1
1728:          #define _T5CON_T5CKPS0_LENGTH                               0x1
1729:          #define _T5CON_T5CKPS0_MASK                                 0x10
1730:          #define _T5CON_T5CKPS1_POSN                                 0x5
1731:          #define _T5CON_T5CKPS1_POSITION                             0x5
1732:          #define _T5CON_T5CKPS1_SIZE                                 0x1
1733:          #define _T5CON_T5CKPS1_LENGTH                               0x1
1734:          #define _T5CON_T5CKPS1_MASK                                 0x20
1735:          #define _T5CON_TMR5CS0_POSN                                 0x6
1736:          #define _T5CON_TMR5CS0_POSITION                             0x6
1737:          #define _T5CON_TMR5CS0_SIZE                                 0x1
1738:          #define _T5CON_TMR5CS0_LENGTH                               0x1
1739:          #define _T5CON_TMR5CS0_MASK                                 0x40
1740:          #define _T5CON_TMR5CS1_POSN                                 0x7
1741:          #define _T5CON_TMR5CS1_POSITION                             0x7
1742:          #define _T5CON_TMR5CS1_SIZE                                 0x1
1743:          #define _T5CON_TMR5CS1_LENGTH                               0x1
1744:          #define _T5CON_TMR5CS1_MASK                                 0x80
1745:          #define _T5CON_RD165_POSN                                   0x1
1746:          #define _T5CON_RD165_POSITION                               0x1
1747:          #define _T5CON_RD165_SIZE                                   0x1
1748:          #define _T5CON_RD165_LENGTH                                 0x1
1749:          #define _T5CON_RD165_MASK                                   0x2
1750:          #define _T5CON_SOSCEN5_POSN                                 0x3
1751:          #define _T5CON_SOSCEN5_POSITION                             0x3
1752:          #define _T5CON_SOSCEN5_SIZE                                 0x1
1753:          #define _T5CON_SOSCEN5_LENGTH                               0x1
1754:          #define _T5CON_SOSCEN5_MASK                                 0x8
1755:          
1756:          // Register: TMR5
1757:          extern volatile unsigned short          TMR5                @ 0xF4F;
1758:          #ifndef _LIB_BUILD
1759:          asm("TMR5 equ 0F4Fh");
1760:          #endif
1761:          
1762:          // Register: TMR5L
1763:          extern volatile unsigned char           TMR5L               @ 0xF4F;
1764:          #ifndef _LIB_BUILD
1765:          asm("TMR5L equ 0F4Fh");
1766:          #endif
1767:          // bitfield definitions
1768:          typedef union {
1769:              struct {
1770:                  unsigned TMR5L                  :8;
1771:              };
1772:          } TMR5Lbits_t;
1773:          extern volatile TMR5Lbits_t TMR5Lbits @ 0xF4F;
1774:          // bitfield macros
1775:          #define _TMR5L_TMR5L_POSN                                   0x0
1776:          #define _TMR5L_TMR5L_POSITION                               0x0
1777:          #define _TMR5L_TMR5L_SIZE                                   0x8
1778:          #define _TMR5L_TMR5L_LENGTH                                 0x8
1779:          #define _TMR5L_TMR5L_MASK                                   0xFF
1780:          
1781:          // Register: TMR5H
1782:          extern volatile unsigned char           TMR5H               @ 0xF50;
1783:          #ifndef _LIB_BUILD
1784:          asm("TMR5H equ 0F50h");
1785:          #endif
1786:          // bitfield definitions
1787:          typedef union {
1788:              struct {
1789:                  unsigned TMR5H                  :8;
1790:              };
1791:          } TMR5Hbits_t;
1792:          extern volatile TMR5Hbits_t TMR5Hbits @ 0xF50;
1793:          // bitfield macros
1794:          #define _TMR5H_TMR5H_POSN                                   0x0
1795:          #define _TMR5H_TMR5H_POSITION                               0x0
1796:          #define _TMR5H_TMR5H_SIZE                                   0x8
1797:          #define _TMR5H_TMR5H_LENGTH                                 0x8
1798:          #define _TMR5H_TMR5H_MASK                                   0xFF
1799:          
1800:          // Register: T4CON
1801:          extern volatile unsigned char           T4CON               @ 0xF51;
1802:          #ifndef _LIB_BUILD
1803:          asm("T4CON equ 0F51h");
1804:          #endif
1805:          // bitfield definitions
1806:          typedef union {
1807:              struct {
1808:                  unsigned T4CKPS                 :2;
1809:                  unsigned TMR4ON                 :1;
1810:                  unsigned T4OUTPS                :4;
1811:              };
1812:              struct {
1813:                  unsigned T4CKPS0                :1;
1814:                  unsigned T4CKPS1                :1;
1815:                  unsigned                        :1;
1816:                  unsigned T4OUTPS0               :1;
1817:                  unsigned T4OUTPS1               :1;
1818:                  unsigned T4OUTPS2               :1;
1819:                  unsigned T4OUTPS3               :1;
1820:              };
1821:          } T4CONbits_t;
1822:          extern volatile T4CONbits_t T4CONbits @ 0xF51;
1823:          // bitfield macros
1824:          #define _T4CON_T4CKPS_POSN                                  0x0
1825:          #define _T4CON_T4CKPS_POSITION                              0x0
1826:          #define _T4CON_T4CKPS_SIZE                                  0x2
1827:          #define _T4CON_T4CKPS_LENGTH                                0x2
1828:          #define _T4CON_T4CKPS_MASK                                  0x3
1829:          #define _T4CON_TMR4ON_POSN                                  0x2
1830:          #define _T4CON_TMR4ON_POSITION                              0x2
1831:          #define _T4CON_TMR4ON_SIZE                                  0x1
1832:          #define _T4CON_TMR4ON_LENGTH                                0x1
1833:          #define _T4CON_TMR4ON_MASK                                  0x4
1834:          #define _T4CON_T4OUTPS_POSN                                 0x3
1835:          #define _T4CON_T4OUTPS_POSITION                             0x3
1836:          #define _T4CON_T4OUTPS_SIZE                                 0x4
1837:          #define _T4CON_T4OUTPS_LENGTH                               0x4
1838:          #define _T4CON_T4OUTPS_MASK                                 0x78
1839:          #define _T4CON_T4CKPS0_POSN                                 0x0
1840:          #define _T4CON_T4CKPS0_POSITION                             0x0
1841:          #define _T4CON_T4CKPS0_SIZE                                 0x1
1842:          #define _T4CON_T4CKPS0_LENGTH                               0x1
1843:          #define _T4CON_T4CKPS0_MASK                                 0x1
1844:          #define _T4CON_T4CKPS1_POSN                                 0x1
1845:          #define _T4CON_T4CKPS1_POSITION                             0x1
1846:          #define _T4CON_T4CKPS1_SIZE                                 0x1
1847:          #define _T4CON_T4CKPS1_LENGTH                               0x1
1848:          #define _T4CON_T4CKPS1_MASK                                 0x2
1849:          #define _T4CON_T4OUTPS0_POSN                                0x3
1850:          #define _T4CON_T4OUTPS0_POSITION                            0x3
1851:          #define _T4CON_T4OUTPS0_SIZE                                0x1
1852:          #define _T4CON_T4OUTPS0_LENGTH                              0x1
1853:          #define _T4CON_T4OUTPS0_MASK                                0x8
1854:          #define _T4CON_T4OUTPS1_POSN                                0x4
1855:          #define _T4CON_T4OUTPS1_POSITION                            0x4
1856:          #define _T4CON_T4OUTPS1_SIZE                                0x1
1857:          #define _T4CON_T4OUTPS1_LENGTH                              0x1
1858:          #define _T4CON_T4OUTPS1_MASK                                0x10
1859:          #define _T4CON_T4OUTPS2_POSN                                0x5
1860:          #define _T4CON_T4OUTPS2_POSITION                            0x5
1861:          #define _T4CON_T4OUTPS2_SIZE                                0x1
1862:          #define _T4CON_T4OUTPS2_LENGTH                              0x1
1863:          #define _T4CON_T4OUTPS2_MASK                                0x20
1864:          #define _T4CON_T4OUTPS3_POSN                                0x6
1865:          #define _T4CON_T4OUTPS3_POSITION                            0x6
1866:          #define _T4CON_T4OUTPS3_SIZE                                0x1
1867:          #define _T4CON_T4OUTPS3_LENGTH                              0x1
1868:          #define _T4CON_T4OUTPS3_MASK                                0x40
1869:          
1870:          // Register: PR4
1871:          extern volatile unsigned char           PR4                 @ 0xF52;
1872:          #ifndef _LIB_BUILD
1873:          asm("PR4 equ 0F52h");
1874:          #endif
1875:          // bitfield definitions
1876:          typedef union {
1877:              struct {
1878:                  unsigned PR4                    :8;
1879:              };
1880:          } PR4bits_t;
1881:          extern volatile PR4bits_t PR4bits @ 0xF52;
1882:          // bitfield macros
1883:          #define _PR4_PR4_POSN                                       0x0
1884:          #define _PR4_PR4_POSITION                                   0x0
1885:          #define _PR4_PR4_SIZE                                       0x8
1886:          #define _PR4_PR4_LENGTH                                     0x8
1887:          #define _PR4_PR4_MASK                                       0xFF
1888:          
1889:          // Register: TMR4
1890:          extern volatile unsigned char           TMR4                @ 0xF53;
1891:          #ifndef _LIB_BUILD
1892:          asm("TMR4 equ 0F53h");
1893:          #endif
1894:          // bitfield definitions
1895:          typedef union {
1896:              struct {
1897:                  unsigned TMR4                   :8;
1898:              };
1899:          } TMR4bits_t;
1900:          extern volatile TMR4bits_t TMR4bits @ 0xF53;
1901:          // bitfield macros
1902:          #define _TMR4_TMR4_POSN                                     0x0
1903:          #define _TMR4_TMR4_POSITION                                 0x0
1904:          #define _TMR4_TMR4_SIZE                                     0x8
1905:          #define _TMR4_TMR4_LENGTH                                   0x8
1906:          #define _TMR4_TMR4_MASK                                     0xFF
1907:          
1908:          // Register: CCP5CON
1909:          extern volatile unsigned char           CCP5CON             @ 0xF54;
1910:          #ifndef _LIB_BUILD
1911:          asm("CCP5CON equ 0F54h");
1912:          #endif
1913:          // bitfield definitions
1914:          typedef union {
1915:              struct {
1916:                  unsigned CCP5M                  :4;
1917:                  unsigned DC5B                   :2;
1918:              };
1919:              struct {
1920:                  unsigned CCP5M0                 :1;
1921:                  unsigned CCP5M1                 :1;
1922:                  unsigned CCP5M2                 :1;
1923:                  unsigned CCP5M3                 :1;
1924:                  unsigned DC5B0                  :1;
1925:                  unsigned DC5B1                  :1;
1926:              };
1927:          } CCP5CONbits_t;
1928:          extern volatile CCP5CONbits_t CCP5CONbits @ 0xF54;
1929:          // bitfield macros
1930:          #define _CCP5CON_CCP5M_POSN                                 0x0
1931:          #define _CCP5CON_CCP5M_POSITION                             0x0
1932:          #define _CCP5CON_CCP5M_SIZE                                 0x4
1933:          #define _CCP5CON_CCP5M_LENGTH                               0x4
1934:          #define _CCP5CON_CCP5M_MASK                                 0xF
1935:          #define _CCP5CON_DC5B_POSN                                  0x4
1936:          #define _CCP5CON_DC5B_POSITION                              0x4
1937:          #define _CCP5CON_DC5B_SIZE                                  0x2
1938:          #define _CCP5CON_DC5B_LENGTH                                0x2
1939:          #define _CCP5CON_DC5B_MASK                                  0x30
1940:          #define _CCP5CON_CCP5M0_POSN                                0x0
1941:          #define _CCP5CON_CCP5M0_POSITION                            0x0
1942:          #define _CCP5CON_CCP5M0_SIZE                                0x1
1943:          #define _CCP5CON_CCP5M0_LENGTH                              0x1
1944:          #define _CCP5CON_CCP5M0_MASK                                0x1
1945:          #define _CCP5CON_CCP5M1_POSN                                0x1
1946:          #define _CCP5CON_CCP5M1_POSITION                            0x1
1947:          #define _CCP5CON_CCP5M1_SIZE                                0x1
1948:          #define _CCP5CON_CCP5M1_LENGTH                              0x1
1949:          #define _CCP5CON_CCP5M1_MASK                                0x2
1950:          #define _CCP5CON_CCP5M2_POSN                                0x2
1951:          #define _CCP5CON_CCP5M2_POSITION                            0x2
1952:          #define _CCP5CON_CCP5M2_SIZE                                0x1
1953:          #define _CCP5CON_CCP5M2_LENGTH                              0x1
1954:          #define _CCP5CON_CCP5M2_MASK                                0x4
1955:          #define _CCP5CON_CCP5M3_POSN                                0x3
1956:          #define _CCP5CON_CCP5M3_POSITION                            0x3
1957:          #define _CCP5CON_CCP5M3_SIZE                                0x1
1958:          #define _CCP5CON_CCP5M3_LENGTH                              0x1
1959:          #define _CCP5CON_CCP5M3_MASK                                0x8
1960:          #define _CCP5CON_DC5B0_POSN                                 0x4
1961:          #define _CCP5CON_DC5B0_POSITION                             0x4
1962:          #define _CCP5CON_DC5B0_SIZE                                 0x1
1963:          #define _CCP5CON_DC5B0_LENGTH                               0x1
1964:          #define _CCP5CON_DC5B0_MASK                                 0x10
1965:          #define _CCP5CON_DC5B1_POSN                                 0x5
1966:          #define _CCP5CON_DC5B1_POSITION                             0x5
1967:          #define _CCP5CON_DC5B1_SIZE                                 0x1
1968:          #define _CCP5CON_DC5B1_LENGTH                               0x1
1969:          #define _CCP5CON_DC5B1_MASK                                 0x20
1970:          
1971:          // Register: CCPR5
1972:          extern volatile unsigned short          CCPR5               @ 0xF55;
1973:          #ifndef _LIB_BUILD
1974:          asm("CCPR5 equ 0F55h");
1975:          #endif
1976:          
1977:          // Register: CCPR5L
1978:          extern volatile unsigned char           CCPR5L              @ 0xF55;
1979:          #ifndef _LIB_BUILD
1980:          asm("CCPR5L equ 0F55h");
1981:          #endif
1982:          // bitfield definitions
1983:          typedef union {
1984:              struct {
1985:                  unsigned CCPR5L                 :8;
1986:              };
1987:          } CCPR5Lbits_t;
1988:          extern volatile CCPR5Lbits_t CCPR5Lbits @ 0xF55;
1989:          // bitfield macros
1990:          #define _CCPR5L_CCPR5L_POSN                                 0x0
1991:          #define _CCPR5L_CCPR5L_POSITION                             0x0
1992:          #define _CCPR5L_CCPR5L_SIZE                                 0x8
1993:          #define _CCPR5L_CCPR5L_LENGTH                               0x8
1994:          #define _CCPR5L_CCPR5L_MASK                                 0xFF
1995:          
1996:          // Register: CCPR5H
1997:          extern volatile unsigned char           CCPR5H              @ 0xF56;
1998:          #ifndef _LIB_BUILD
1999:          asm("CCPR5H equ 0F56h");
2000:          #endif
2001:          // bitfield definitions
2002:          typedef union {
2003:              struct {
2004:                  unsigned CCPR5H                 :8;
2005:              };
2006:          } CCPR5Hbits_t;
2007:          extern volatile CCPR5Hbits_t CCPR5Hbits @ 0xF56;
2008:          // bitfield macros
2009:          #define _CCPR5H_CCPR5H_POSN                                 0x0
2010:          #define _CCPR5H_CCPR5H_POSITION                             0x0
2011:          #define _CCPR5H_CCPR5H_SIZE                                 0x8
2012:          #define _CCPR5H_CCPR5H_LENGTH                               0x8
2013:          #define _CCPR5H_CCPR5H_MASK                                 0xFF
2014:          
2015:          // Register: CCP4CON
2016:          extern volatile unsigned char           CCP4CON             @ 0xF57;
2017:          #ifndef _LIB_BUILD
2018:          asm("CCP4CON equ 0F57h");
2019:          #endif
2020:          // bitfield definitions
2021:          typedef union {
2022:              struct {
2023:                  unsigned CCP4M                  :4;
2024:                  unsigned DC4B                   :2;
2025:              };
2026:              struct {
2027:                  unsigned CCP4M0                 :1;
2028:                  unsigned CCP4M1                 :1;
2029:                  unsigned CCP4M2                 :1;
2030:                  unsigned CCP4M3                 :1;
2031:                  unsigned DC4B0                  :1;
2032:                  unsigned DC4B1                  :1;
2033:              };
2034:          } CCP4CONbits_t;
2035:          extern volatile CCP4CONbits_t CCP4CONbits @ 0xF57;
2036:          // bitfield macros
2037:          #define _CCP4CON_CCP4M_POSN                                 0x0
2038:          #define _CCP4CON_CCP4M_POSITION                             0x0
2039:          #define _CCP4CON_CCP4M_SIZE                                 0x4
2040:          #define _CCP4CON_CCP4M_LENGTH                               0x4
2041:          #define _CCP4CON_CCP4M_MASK                                 0xF
2042:          #define _CCP4CON_DC4B_POSN                                  0x4
2043:          #define _CCP4CON_DC4B_POSITION                              0x4
2044:          #define _CCP4CON_DC4B_SIZE                                  0x2
2045:          #define _CCP4CON_DC4B_LENGTH                                0x2
2046:          #define _CCP4CON_DC4B_MASK                                  0x30
2047:          #define _CCP4CON_CCP4M0_POSN                                0x0
2048:          #define _CCP4CON_CCP4M0_POSITION                            0x0
2049:          #define _CCP4CON_CCP4M0_SIZE                                0x1
2050:          #define _CCP4CON_CCP4M0_LENGTH                              0x1
2051:          #define _CCP4CON_CCP4M0_MASK                                0x1
2052:          #define _CCP4CON_CCP4M1_POSN                                0x1
2053:          #define _CCP4CON_CCP4M1_POSITION                            0x1
2054:          #define _CCP4CON_CCP4M1_SIZE                                0x1
2055:          #define _CCP4CON_CCP4M1_LENGTH                              0x1
2056:          #define _CCP4CON_CCP4M1_MASK                                0x2
2057:          #define _CCP4CON_CCP4M2_POSN                                0x2
2058:          #define _CCP4CON_CCP4M2_POSITION                            0x2
2059:          #define _CCP4CON_CCP4M2_SIZE                                0x1
2060:          #define _CCP4CON_CCP4M2_LENGTH                              0x1
2061:          #define _CCP4CON_CCP4M2_MASK                                0x4
2062:          #define _CCP4CON_CCP4M3_POSN                                0x3
2063:          #define _CCP4CON_CCP4M3_POSITION                            0x3
2064:          #define _CCP4CON_CCP4M3_SIZE                                0x1
2065:          #define _CCP4CON_CCP4M3_LENGTH                              0x1
2066:          #define _CCP4CON_CCP4M3_MASK                                0x8
2067:          #define _CCP4CON_DC4B0_POSN                                 0x4
2068:          #define _CCP4CON_DC4B0_POSITION                             0x4
2069:          #define _CCP4CON_DC4B0_SIZE                                 0x1
2070:          #define _CCP4CON_DC4B0_LENGTH                               0x1
2071:          #define _CCP4CON_DC4B0_MASK                                 0x10
2072:          #define _CCP4CON_DC4B1_POSN                                 0x5
2073:          #define _CCP4CON_DC4B1_POSITION                             0x5
2074:          #define _CCP4CON_DC4B1_SIZE                                 0x1
2075:          #define _CCP4CON_DC4B1_LENGTH                               0x1
2076:          #define _CCP4CON_DC4B1_MASK                                 0x20
2077:          
2078:          // Register: CCPR4
2079:          extern volatile unsigned short          CCPR4               @ 0xF58;
2080:          #ifndef _LIB_BUILD
2081:          asm("CCPR4 equ 0F58h");
2082:          #endif
2083:          
2084:          // Register: CCPR4L
2085:          extern volatile unsigned char           CCPR4L              @ 0xF58;
2086:          #ifndef _LIB_BUILD
2087:          asm("CCPR4L equ 0F58h");
2088:          #endif
2089:          // bitfield definitions
2090:          typedef union {
2091:              struct {
2092:                  unsigned CCPR4L                 :8;
2093:              };
2094:          } CCPR4Lbits_t;
2095:          extern volatile CCPR4Lbits_t CCPR4Lbits @ 0xF58;
2096:          // bitfield macros
2097:          #define _CCPR4L_CCPR4L_POSN                                 0x0
2098:          #define _CCPR4L_CCPR4L_POSITION                             0x0
2099:          #define _CCPR4L_CCPR4L_SIZE                                 0x8
2100:          #define _CCPR4L_CCPR4L_LENGTH                               0x8
2101:          #define _CCPR4L_CCPR4L_MASK                                 0xFF
2102:          
2103:          // Register: CCPR4H
2104:          extern volatile unsigned char           CCPR4H              @ 0xF59;
2105:          #ifndef _LIB_BUILD
2106:          asm("CCPR4H equ 0F59h");
2107:          #endif
2108:          // bitfield definitions
2109:          typedef union {
2110:              struct {
2111:                  unsigned CCPR4H                 :8;
2112:              };
2113:          } CCPR4Hbits_t;
2114:          extern volatile CCPR4Hbits_t CCPR4Hbits @ 0xF59;
2115:          // bitfield macros
2116:          #define _CCPR4H_CCPR4H_POSN                                 0x0
2117:          #define _CCPR4H_CCPR4H_POSITION                             0x0
2118:          #define _CCPR4H_CCPR4H_SIZE                                 0x8
2119:          #define _CCPR4H_CCPR4H_LENGTH                               0x8
2120:          #define _CCPR4H_CCPR4H_MASK                                 0xFF
2121:          
2122:          // Register: PSTR3CON
2123:          extern volatile unsigned char           PSTR3CON            @ 0xF5A;
2124:          #ifndef _LIB_BUILD
2125:          asm("PSTR3CON equ 0F5Ah");
2126:          #endif
2127:          // bitfield definitions
2128:          typedef union {
2129:              struct {
2130:                  unsigned STR3A                  :1;
2131:                  unsigned STR3B                  :1;
2132:                  unsigned STR3C                  :1;
2133:                  unsigned STR3D                  :1;
2134:                  unsigned STR3SYNC               :1;
2135:              };
2136:              struct {
2137:                  unsigned STRA3                  :1;
2138:              };
2139:              struct {
2140:                  unsigned                        :1;
2141:                  unsigned STRB3                  :1;
2142:              };
2143:              struct {
2144:                  unsigned                        :2;
2145:                  unsigned STRC3                  :1;
2146:              };
2147:              struct {
2148:                  unsigned                        :3;
2149:                  unsigned STRD3                  :1;
2150:              };
2151:              struct {
2152:                  unsigned                        :4;
2153:                  unsigned STRSYNC3               :1;
2154:              };
2155:          } PSTR3CONbits_t;
2156:          extern volatile PSTR3CONbits_t PSTR3CONbits @ 0xF5A;
2157:          // bitfield macros
2158:          #define _PSTR3CON_STR3A_POSN                                0x0
2159:          #define _PSTR3CON_STR3A_POSITION                            0x0
2160:          #define _PSTR3CON_STR3A_SIZE                                0x1
2161:          #define _PSTR3CON_STR3A_LENGTH                              0x1
2162:          #define _PSTR3CON_STR3A_MASK                                0x1
2163:          #define _PSTR3CON_STR3B_POSN                                0x1
2164:          #define _PSTR3CON_STR3B_POSITION                            0x1
2165:          #define _PSTR3CON_STR3B_SIZE                                0x1
2166:          #define _PSTR3CON_STR3B_LENGTH                              0x1
2167:          #define _PSTR3CON_STR3B_MASK                                0x2
2168:          #define _PSTR3CON_STR3C_POSN                                0x2
2169:          #define _PSTR3CON_STR3C_POSITION                            0x2
2170:          #define _PSTR3CON_STR3C_SIZE                                0x1
2171:          #define _PSTR3CON_STR3C_LENGTH                              0x1
2172:          #define _PSTR3CON_STR3C_MASK                                0x4
2173:          #define _PSTR3CON_STR3D_POSN                                0x3
2174:          #define _PSTR3CON_STR3D_POSITION                            0x3
2175:          #define _PSTR3CON_STR3D_SIZE                                0x1
2176:          #define _PSTR3CON_STR3D_LENGTH                              0x1
2177:          #define _PSTR3CON_STR3D_MASK                                0x8
2178:          #define _PSTR3CON_STR3SYNC_POSN                             0x4
2179:          #define _PSTR3CON_STR3SYNC_POSITION                         0x4
2180:          #define _PSTR3CON_STR3SYNC_SIZE                             0x1
2181:          #define _PSTR3CON_STR3SYNC_LENGTH                           0x1
2182:          #define _PSTR3CON_STR3SYNC_MASK                             0x10
2183:          #define _PSTR3CON_STRA3_POSN                                0x0
2184:          #define _PSTR3CON_STRA3_POSITION                            0x0
2185:          #define _PSTR3CON_STRA3_SIZE                                0x1
2186:          #define _PSTR3CON_STRA3_LENGTH                              0x1
2187:          #define _PSTR3CON_STRA3_MASK                                0x1
2188:          #define _PSTR3CON_STRB3_POSN                                0x1
2189:          #define _PSTR3CON_STRB3_POSITION                            0x1
2190:          #define _PSTR3CON_STRB3_SIZE                                0x1
2191:          #define _PSTR3CON_STRB3_LENGTH                              0x1
2192:          #define _PSTR3CON_STRB3_MASK                                0x2
2193:          #define _PSTR3CON_STRC3_POSN                                0x2
2194:          #define _PSTR3CON_STRC3_POSITION                            0x2
2195:          #define _PSTR3CON_STRC3_SIZE                                0x1
2196:          #define _PSTR3CON_STRC3_LENGTH                              0x1
2197:          #define _PSTR3CON_STRC3_MASK                                0x4
2198:          #define _PSTR3CON_STRD3_POSN                                0x3
2199:          #define _PSTR3CON_STRD3_POSITION                            0x3
2200:          #define _PSTR3CON_STRD3_SIZE                                0x1
2201:          #define _PSTR3CON_STRD3_LENGTH                              0x1
2202:          #define _PSTR3CON_STRD3_MASK                                0x8
2203:          #define _PSTR3CON_STRSYNC3_POSN                             0x4
2204:          #define _PSTR3CON_STRSYNC3_POSITION                         0x4
2205:          #define _PSTR3CON_STRSYNC3_SIZE                             0x1
2206:          #define _PSTR3CON_STRSYNC3_LENGTH                           0x1
2207:          #define _PSTR3CON_STRSYNC3_MASK                             0x10
2208:          
2209:          // Register: ECCP3AS
2210:          extern volatile unsigned char           ECCP3AS             @ 0xF5B;
2211:          #ifndef _LIB_BUILD
2212:          asm("ECCP3AS equ 0F5Bh");
2213:          #endif
2214:          // aliases
2215:          extern volatile unsigned char           CCP3AS              @ 0xF5B;
2216:          #ifndef _LIB_BUILD
2217:          asm("CCP3AS equ 0F5Bh");
2218:          #endif
2219:          // bitfield definitions
2220:          typedef union {
2221:              struct {
2222:                  unsigned P3SSBD                 :2;
2223:                  unsigned P3SSAC                 :2;
2224:                  unsigned CCP3AS                 :3;
2225:                  unsigned CCP3ASE                :1;
2226:              };
2227:              struct {
2228:                  unsigned P3SSBD0                :1;
2229:                  unsigned P3SSBD1                :1;
2230:                  unsigned P3SSAC0                :1;
2231:                  unsigned P3SSAC1                :1;
2232:                  unsigned CCP3AS0                :1;
2233:                  unsigned CCP3AS1                :1;
2234:                  unsigned CCP3AS2                :1;
2235:              };
2236:              struct {
2237:                  unsigned PSS3BD                 :2;
2238:                  unsigned PSS3AC                 :2;
2239:              };
2240:              struct {
2241:                  unsigned PSS3BD0                :1;
2242:                  unsigned PSS3BD1                :1;
2243:                  unsigned PSS3AC0                :1;
2244:                  unsigned PSS3AC1                :1;
2245:              };
2246:          } ECCP3ASbits_t;
2247:          extern volatile ECCP3ASbits_t ECCP3ASbits @ 0xF5B;
2248:          // bitfield macros
2249:          #define _ECCP3AS_P3SSBD_POSN                                0x0
2250:          #define _ECCP3AS_P3SSBD_POSITION                            0x0
2251:          #define _ECCP3AS_P3SSBD_SIZE                                0x2
2252:          #define _ECCP3AS_P3SSBD_LENGTH                              0x2
2253:          #define _ECCP3AS_P3SSBD_MASK                                0x3
2254:          #define _ECCP3AS_P3SSAC_POSN                                0x2
2255:          #define _ECCP3AS_P3SSAC_POSITION                            0x2
2256:          #define _ECCP3AS_P3SSAC_SIZE                                0x2
2257:          #define _ECCP3AS_P3SSAC_LENGTH                              0x2
2258:          #define _ECCP3AS_P3SSAC_MASK                                0xC
2259:          #define _ECCP3AS_CCP3AS_POSN                                0x4
2260:          #define _ECCP3AS_CCP3AS_POSITION                            0x4
2261:          #define _ECCP3AS_CCP3AS_SIZE                                0x3
2262:          #define _ECCP3AS_CCP3AS_LENGTH                              0x3
2263:          #define _ECCP3AS_CCP3AS_MASK                                0x70
2264:          #define _ECCP3AS_CCP3ASE_POSN                               0x7
2265:          #define _ECCP3AS_CCP3ASE_POSITION                           0x7
2266:          #define _ECCP3AS_CCP3ASE_SIZE                               0x1
2267:          #define _ECCP3AS_CCP3ASE_LENGTH                             0x1
2268:          #define _ECCP3AS_CCP3ASE_MASK                               0x80
2269:          #define _ECCP3AS_P3SSBD0_POSN                               0x0
2270:          #define _ECCP3AS_P3SSBD0_POSITION                           0x0
2271:          #define _ECCP3AS_P3SSBD0_SIZE                               0x1
2272:          #define _ECCP3AS_P3SSBD0_LENGTH                             0x1
2273:          #define _ECCP3AS_P3SSBD0_MASK                               0x1
2274:          #define _ECCP3AS_P3SSBD1_POSN                               0x1
2275:          #define _ECCP3AS_P3SSBD1_POSITION                           0x1
2276:          #define _ECCP3AS_P3SSBD1_SIZE                               0x1
2277:          #define _ECCP3AS_P3SSBD1_LENGTH                             0x1
2278:          #define _ECCP3AS_P3SSBD1_MASK                               0x2
2279:          #define _ECCP3AS_P3SSAC0_POSN                               0x2
2280:          #define _ECCP3AS_P3SSAC0_POSITION                           0x2
2281:          #define _ECCP3AS_P3SSAC0_SIZE                               0x1
2282:          #define _ECCP3AS_P3SSAC0_LENGTH                             0x1
2283:          #define _ECCP3AS_P3SSAC0_MASK                               0x4
2284:          #define _ECCP3AS_P3SSAC1_POSN                               0x3
2285:          #define _ECCP3AS_P3SSAC1_POSITION                           0x3
2286:          #define _ECCP3AS_P3SSAC1_SIZE                               0x1
2287:          #define _ECCP3AS_P3SSAC1_LENGTH                             0x1
2288:          #define _ECCP3AS_P3SSAC1_MASK                               0x8
2289:          #define _ECCP3AS_CCP3AS0_POSN                               0x4
2290:          #define _ECCP3AS_CCP3AS0_POSITION                           0x4
2291:          #define _ECCP3AS_CCP3AS0_SIZE                               0x1
2292:          #define _ECCP3AS_CCP3AS0_LENGTH                             0x1
2293:          #define _ECCP3AS_CCP3AS0_MASK                               0x10
2294:          #define _ECCP3AS_CCP3AS1_POSN                               0x5
2295:          #define _ECCP3AS_CCP3AS1_POSITION                           0x5
2296:          #define _ECCP3AS_CCP3AS1_SIZE                               0x1
2297:          #define _ECCP3AS_CCP3AS1_LENGTH                             0x1
2298:          #define _ECCP3AS_CCP3AS1_MASK                               0x20
2299:          #define _ECCP3AS_CCP3AS2_POSN                               0x6
2300:          #define _ECCP3AS_CCP3AS2_POSITION                           0x6
2301:          #define _ECCP3AS_CCP3AS2_SIZE                               0x1
2302:          #define _ECCP3AS_CCP3AS2_LENGTH                             0x1
2303:          #define _ECCP3AS_CCP3AS2_MASK                               0x40
2304:          #define _ECCP3AS_PSS3BD_POSN                                0x0
2305:          #define _ECCP3AS_PSS3BD_POSITION                            0x0
2306:          #define _ECCP3AS_PSS3BD_SIZE                                0x2
2307:          #define _ECCP3AS_PSS3BD_LENGTH                              0x2
2308:          #define _ECCP3AS_PSS3BD_MASK                                0x3
2309:          #define _ECCP3AS_PSS3AC_POSN                                0x2
2310:          #define _ECCP3AS_PSS3AC_POSITION                            0x2
2311:          #define _ECCP3AS_PSS3AC_SIZE                                0x2
2312:          #define _ECCP3AS_PSS3AC_LENGTH                              0x2
2313:          #define _ECCP3AS_PSS3AC_MASK                                0xC
2314:          #define _ECCP3AS_PSS3BD0_POSN                               0x0
2315:          #define _ECCP3AS_PSS3BD0_POSITION                           0x0
2316:          #define _ECCP3AS_PSS3BD0_SIZE                               0x1
2317:          #define _ECCP3AS_PSS3BD0_LENGTH                             0x1
2318:          #define _ECCP3AS_PSS3BD0_MASK                               0x1
2319:          #define _ECCP3AS_PSS3BD1_POSN                               0x1
2320:          #define _ECCP3AS_PSS3BD1_POSITION                           0x1
2321:          #define _ECCP3AS_PSS3BD1_SIZE                               0x1
2322:          #define _ECCP3AS_PSS3BD1_LENGTH                             0x1
2323:          #define _ECCP3AS_PSS3BD1_MASK                               0x2
2324:          #define _ECCP3AS_PSS3AC0_POSN                               0x2
2325:          #define _ECCP3AS_PSS3AC0_POSITION                           0x2
2326:          #define _ECCP3AS_PSS3AC0_SIZE                               0x1
2327:          #define _ECCP3AS_PSS3AC0_LENGTH                             0x1
2328:          #define _ECCP3AS_PSS3AC0_MASK                               0x4
2329:          #define _ECCP3AS_PSS3AC1_POSN                               0x3
2330:          #define _ECCP3AS_PSS3AC1_POSITION                           0x3
2331:          #define _ECCP3AS_PSS3AC1_SIZE                               0x1
2332:          #define _ECCP3AS_PSS3AC1_LENGTH                             0x1
2333:          #define _ECCP3AS_PSS3AC1_MASK                               0x8
2334:          // alias bitfield definitions
2335:          typedef union {
2336:              struct {
2337:                  unsigned P3SSBD                 :2;
2338:                  unsigned P3SSAC                 :2;
2339:                  unsigned CCP3AS                 :3;
2340:                  unsigned CCP3ASE                :1;
2341:              };
2342:              struct {
2343:                  unsigned P3SSBD0                :1;
2344:                  unsigned P3SSBD1                :1;
2345:                  unsigned P3SSAC0                :1;
2346:                  unsigned P3SSAC1                :1;
2347:                  unsigned CCP3AS0                :1;
2348:                  unsigned CCP3AS1                :1;
2349:                  unsigned CCP3AS2                :1;
2350:              };
2351:              struct {
2352:                  unsigned PSS3BD                 :2;
2353:                  unsigned PSS3AC                 :2;
2354:              };
2355:              struct {
2356:                  unsigned PSS3BD0                :1;
2357:                  unsigned PSS3BD1                :1;
2358:                  unsigned PSS3AC0                :1;
2359:                  unsigned PSS3AC1                :1;
2360:              };
2361:          } CCP3ASbits_t;
2362:          extern volatile CCP3ASbits_t CCP3ASbits @ 0xF5B;
2363:          // bitfield macros
2364:          #define _CCP3AS_P3SSBD_POSN                                 0x0
2365:          #define _CCP3AS_P3SSBD_POSITION                             0x0
2366:          #define _CCP3AS_P3SSBD_SIZE                                 0x2
2367:          #define _CCP3AS_P3SSBD_LENGTH                               0x2
2368:          #define _CCP3AS_P3SSBD_MASK                                 0x3
2369:          #define _CCP3AS_P3SSAC_POSN                                 0x2
2370:          #define _CCP3AS_P3SSAC_POSITION                             0x2
2371:          #define _CCP3AS_P3SSAC_SIZE                                 0x2
2372:          #define _CCP3AS_P3SSAC_LENGTH                               0x2
2373:          #define _CCP3AS_P3SSAC_MASK                                 0xC
2374:          #define _CCP3AS_CCP3AS_POSN                                 0x4
2375:          #define _CCP3AS_CCP3AS_POSITION                             0x4
2376:          #define _CCP3AS_CCP3AS_SIZE                                 0x3
2377:          #define _CCP3AS_CCP3AS_LENGTH                               0x3
2378:          #define _CCP3AS_CCP3AS_MASK                                 0x70
2379:          #define _CCP3AS_CCP3ASE_POSN                                0x7
2380:          #define _CCP3AS_CCP3ASE_POSITION                            0x7
2381:          #define _CCP3AS_CCP3ASE_SIZE                                0x1
2382:          #define _CCP3AS_CCP3ASE_LENGTH                              0x1
2383:          #define _CCP3AS_CCP3ASE_MASK                                0x80
2384:          #define _CCP3AS_P3SSBD0_POSN                                0x0
2385:          #define _CCP3AS_P3SSBD0_POSITION                            0x0
2386:          #define _CCP3AS_P3SSBD0_SIZE                                0x1
2387:          #define _CCP3AS_P3SSBD0_LENGTH                              0x1
2388:          #define _CCP3AS_P3SSBD0_MASK                                0x1
2389:          #define _CCP3AS_P3SSBD1_POSN                                0x1
2390:          #define _CCP3AS_P3SSBD1_POSITION                            0x1
2391:          #define _CCP3AS_P3SSBD1_SIZE                                0x1
2392:          #define _CCP3AS_P3SSBD1_LENGTH                              0x1
2393:          #define _CCP3AS_P3SSBD1_MASK                                0x2
2394:          #define _CCP3AS_P3SSAC0_POSN                                0x2
2395:          #define _CCP3AS_P3SSAC0_POSITION                            0x2
2396:          #define _CCP3AS_P3SSAC0_SIZE                                0x1
2397:          #define _CCP3AS_P3SSAC0_LENGTH                              0x1
2398:          #define _CCP3AS_P3SSAC0_MASK                                0x4
2399:          #define _CCP3AS_P3SSAC1_POSN                                0x3
2400:          #define _CCP3AS_P3SSAC1_POSITION                            0x3
2401:          #define _CCP3AS_P3SSAC1_SIZE                                0x1
2402:          #define _CCP3AS_P3SSAC1_LENGTH                              0x1
2403:          #define _CCP3AS_P3SSAC1_MASK                                0x8
2404:          #define _CCP3AS_CCP3AS0_POSN                                0x4
2405:          #define _CCP3AS_CCP3AS0_POSITION                            0x4
2406:          #define _CCP3AS_CCP3AS0_SIZE                                0x1
2407:          #define _CCP3AS_CCP3AS0_LENGTH                              0x1
2408:          #define _CCP3AS_CCP3AS0_MASK                                0x10
2409:          #define _CCP3AS_CCP3AS1_POSN                                0x5
2410:          #define _CCP3AS_CCP3AS1_POSITION                            0x5
2411:          #define _CCP3AS_CCP3AS1_SIZE                                0x1
2412:          #define _CCP3AS_CCP3AS1_LENGTH                              0x1
2413:          #define _CCP3AS_CCP3AS1_MASK                                0x20
2414:          #define _CCP3AS_CCP3AS2_POSN                                0x6
2415:          #define _CCP3AS_CCP3AS2_POSITION                            0x6
2416:          #define _CCP3AS_CCP3AS2_SIZE                                0x1
2417:          #define _CCP3AS_CCP3AS2_LENGTH                              0x1
2418:          #define _CCP3AS_CCP3AS2_MASK                                0x40
2419:          #define _CCP3AS_PSS3BD_POSN                                 0x0
2420:          #define _CCP3AS_PSS3BD_POSITION                             0x0
2421:          #define _CCP3AS_PSS3BD_SIZE                                 0x2
2422:          #define _CCP3AS_PSS3BD_LENGTH                               0x2
2423:          #define _CCP3AS_PSS3BD_MASK                                 0x3
2424:          #define _CCP3AS_PSS3AC_POSN                                 0x2
2425:          #define _CCP3AS_PSS3AC_POSITION                             0x2
2426:          #define _CCP3AS_PSS3AC_SIZE                                 0x2
2427:          #define _CCP3AS_PSS3AC_LENGTH                               0x2
2428:          #define _CCP3AS_PSS3AC_MASK                                 0xC
2429:          #define _CCP3AS_PSS3BD0_POSN                                0x0
2430:          #define _CCP3AS_PSS3BD0_POSITION                            0x0
2431:          #define _CCP3AS_PSS3BD0_SIZE                                0x1
2432:          #define _CCP3AS_PSS3BD0_LENGTH                              0x1
2433:          #define _CCP3AS_PSS3BD0_MASK                                0x1
2434:          #define _CCP3AS_PSS3BD1_POSN                                0x1
2435:          #define _CCP3AS_PSS3BD1_POSITION                            0x1
2436:          #define _CCP3AS_PSS3BD1_SIZE                                0x1
2437:          #define _CCP3AS_PSS3BD1_LENGTH                              0x1
2438:          #define _CCP3AS_PSS3BD1_MASK                                0x2
2439:          #define _CCP3AS_PSS3AC0_POSN                                0x2
2440:          #define _CCP3AS_PSS3AC0_POSITION                            0x2
2441:          #define _CCP3AS_PSS3AC0_SIZE                                0x1
2442:          #define _CCP3AS_PSS3AC0_LENGTH                              0x1
2443:          #define _CCP3AS_PSS3AC0_MASK                                0x4
2444:          #define _CCP3AS_PSS3AC1_POSN                                0x3
2445:          #define _CCP3AS_PSS3AC1_POSITION                            0x3
2446:          #define _CCP3AS_PSS3AC1_SIZE                                0x1
2447:          #define _CCP3AS_PSS3AC1_LENGTH                              0x1
2448:          #define _CCP3AS_PSS3AC1_MASK                                0x8
2449:          
2450:          // Register: PWM3CON
2451:          extern volatile unsigned char           PWM3CON             @ 0xF5C;
2452:          #ifndef _LIB_BUILD
2453:          asm("PWM3CON equ 0F5Ch");
2454:          #endif
2455:          // bitfield definitions
2456:          typedef union {
2457:              struct {
2458:                  unsigned P3DC                   :7;
2459:                  unsigned P3RSEN                 :1;
2460:              };
2461:              struct {
2462:                  unsigned P3DC0                  :1;
2463:                  unsigned P3DC1                  :1;
2464:                  unsigned P3DC2                  :1;
2465:                  unsigned P3DC3                  :1;
2466:                  unsigned P3DC4                  :1;
2467:                  unsigned P3DC5                  :1;
2468:                  unsigned P3DC6                  :1;
2469:              };
2470:          } PWM3CONbits_t;
2471:          extern volatile PWM3CONbits_t PWM3CONbits @ 0xF5C;
2472:          // bitfield macros
2473:          #define _PWM3CON_P3DC_POSN                                  0x0
2474:          #define _PWM3CON_P3DC_POSITION                              0x0
2475:          #define _PWM3CON_P3DC_SIZE                                  0x7
2476:          #define _PWM3CON_P3DC_LENGTH                                0x7
2477:          #define _PWM3CON_P3DC_MASK                                  0x7F
2478:          #define _PWM3CON_P3RSEN_POSN                                0x7
2479:          #define _PWM3CON_P3RSEN_POSITION                            0x7
2480:          #define _PWM3CON_P3RSEN_SIZE                                0x1
2481:          #define _PWM3CON_P3RSEN_LENGTH                              0x1
2482:          #define _PWM3CON_P3RSEN_MASK                                0x80
2483:          #define _PWM3CON_P3DC0_POSN                                 0x0
2484:          #define _PWM3CON_P3DC0_POSITION                             0x0
2485:          #define _PWM3CON_P3DC0_SIZE                                 0x1
2486:          #define _PWM3CON_P3DC0_LENGTH                               0x1
2487:          #define _PWM3CON_P3DC0_MASK                                 0x1
2488:          #define _PWM3CON_P3DC1_POSN                                 0x1
2489:          #define _PWM3CON_P3DC1_POSITION                             0x1
2490:          #define _PWM3CON_P3DC1_SIZE                                 0x1
2491:          #define _PWM3CON_P3DC1_LENGTH                               0x1
2492:          #define _PWM3CON_P3DC1_MASK                                 0x2
2493:          #define _PWM3CON_P3DC2_POSN                                 0x2
2494:          #define _PWM3CON_P3DC2_POSITION                             0x2
2495:          #define _PWM3CON_P3DC2_SIZE                                 0x1
2496:          #define _PWM3CON_P3DC2_LENGTH                               0x1
2497:          #define _PWM3CON_P3DC2_MASK                                 0x4
2498:          #define _PWM3CON_P3DC3_POSN                                 0x3
2499:          #define _PWM3CON_P3DC3_POSITION                             0x3
2500:          #define _PWM3CON_P3DC3_SIZE                                 0x1
2501:          #define _PWM3CON_P3DC3_LENGTH                               0x1
2502:          #define _PWM3CON_P3DC3_MASK                                 0x8
2503:          #define _PWM3CON_P3DC4_POSN                                 0x4
2504:          #define _PWM3CON_P3DC4_POSITION                             0x4
2505:          #define _PWM3CON_P3DC4_SIZE                                 0x1
2506:          #define _PWM3CON_P3DC4_LENGTH                               0x1
2507:          #define _PWM3CON_P3DC4_MASK                                 0x10
2508:          #define _PWM3CON_P3DC5_POSN                                 0x5
2509:          #define _PWM3CON_P3DC5_POSITION                             0x5
2510:          #define _PWM3CON_P3DC5_SIZE                                 0x1
2511:          #define _PWM3CON_P3DC5_LENGTH                               0x1
2512:          #define _PWM3CON_P3DC5_MASK                                 0x20
2513:          #define _PWM3CON_P3DC6_POSN                                 0x6
2514:          #define _PWM3CON_P3DC6_POSITION                             0x6
2515:          #define _PWM3CON_P3DC6_SIZE                                 0x1
2516:          #define _PWM3CON_P3DC6_LENGTH                               0x1
2517:          #define _PWM3CON_P3DC6_MASK                                 0x40
2518:          
2519:          // Register: CCP3CON
2520:          extern volatile unsigned char           CCP3CON             @ 0xF5D;
2521:          #ifndef _LIB_BUILD
2522:          asm("CCP3CON equ 0F5Dh");
2523:          #endif
2524:          // bitfield definitions
2525:          typedef union {
2526:              struct {
2527:                  unsigned CCP3M                  :4;
2528:                  unsigned DC3B                   :2;
2529:                  unsigned P3M                    :2;
2530:              };
2531:              struct {
2532:                  unsigned CCP3M0                 :1;
2533:                  unsigned CCP3M1                 :1;
2534:                  unsigned CCP3M2                 :1;
2535:                  unsigned CCP3M3                 :1;
2536:                  unsigned DC3B0                  :1;
2537:                  unsigned DC3B1                  :1;
2538:                  unsigned P3M0                   :1;
2539:                  unsigned P3M1                   :1;
2540:              };
2541:          } CCP3CONbits_t;
2542:          extern volatile CCP3CONbits_t CCP3CONbits @ 0xF5D;
2543:          // bitfield macros
2544:          #define _CCP3CON_CCP3M_POSN                                 0x0
2545:          #define _CCP3CON_CCP3M_POSITION                             0x0
2546:          #define _CCP3CON_CCP3M_SIZE                                 0x4
2547:          #define _CCP3CON_CCP3M_LENGTH                               0x4
2548:          #define _CCP3CON_CCP3M_MASK                                 0xF
2549:          #define _CCP3CON_DC3B_POSN                                  0x4
2550:          #define _CCP3CON_DC3B_POSITION                              0x4
2551:          #define _CCP3CON_DC3B_SIZE                                  0x2
2552:          #define _CCP3CON_DC3B_LENGTH                                0x2
2553:          #define _CCP3CON_DC3B_MASK                                  0x30
2554:          #define _CCP3CON_P3M_POSN                                   0x6
2555:          #define _CCP3CON_P3M_POSITION                               0x6
2556:          #define _CCP3CON_P3M_SIZE                                   0x2
2557:          #define _CCP3CON_P3M_LENGTH                                 0x2
2558:          #define _CCP3CON_P3M_MASK                                   0xC0
2559:          #define _CCP3CON_CCP3M0_POSN                                0x0
2560:          #define _CCP3CON_CCP3M0_POSITION                            0x0
2561:          #define _CCP3CON_CCP3M0_SIZE                                0x1
2562:          #define _CCP3CON_CCP3M0_LENGTH                              0x1
2563:          #define _CCP3CON_CCP3M0_MASK                                0x1
2564:          #define _CCP3CON_CCP3M1_POSN                                0x1
2565:          #define _CCP3CON_CCP3M1_POSITION                            0x1
2566:          #define _CCP3CON_CCP3M1_SIZE                                0x1
2567:          #define _CCP3CON_CCP3M1_LENGTH                              0x1
2568:          #define _CCP3CON_CCP3M1_MASK                                0x2
2569:          #define _CCP3CON_CCP3M2_POSN                                0x2
2570:          #define _CCP3CON_CCP3M2_POSITION                            0x2
2571:          #define _CCP3CON_CCP3M2_SIZE                                0x1
2572:          #define _CCP3CON_CCP3M2_LENGTH                              0x1
2573:          #define _CCP3CON_CCP3M2_MASK                                0x4
2574:          #define _CCP3CON_CCP3M3_POSN                                0x3
2575:          #define _CCP3CON_CCP3M3_POSITION                            0x3
2576:          #define _CCP3CON_CCP3M3_SIZE                                0x1
2577:          #define _CCP3CON_CCP3M3_LENGTH                              0x1
2578:          #define _CCP3CON_CCP3M3_MASK                                0x8
2579:          #define _CCP3CON_DC3B0_POSN                                 0x4
2580:          #define _CCP3CON_DC3B0_POSITION                             0x4
2581:          #define _CCP3CON_DC3B0_SIZE                                 0x1
2582:          #define _CCP3CON_DC3B0_LENGTH                               0x1
2583:          #define _CCP3CON_DC3B0_MASK                                 0x10
2584:          #define _CCP3CON_DC3B1_POSN                                 0x5
2585:          #define _CCP3CON_DC3B1_POSITION                             0x5
2586:          #define _CCP3CON_DC3B1_SIZE                                 0x1
2587:          #define _CCP3CON_DC3B1_LENGTH                               0x1
2588:          #define _CCP3CON_DC3B1_MASK                                 0x20
2589:          #define _CCP3CON_P3M0_POSN                                  0x6
2590:          #define _CCP3CON_P3M0_POSITION                              0x6
2591:          #define _CCP3CON_P3M0_SIZE                                  0x1
2592:          #define _CCP3CON_P3M0_LENGTH                                0x1
2593:          #define _CCP3CON_P3M0_MASK                                  0x40
2594:          #define _CCP3CON_P3M1_POSN                                  0x7
2595:          #define _CCP3CON_P3M1_POSITION                              0x7
2596:          #define _CCP3CON_P3M1_SIZE                                  0x1
2597:          #define _CCP3CON_P3M1_LENGTH                                0x1
2598:          #define _CCP3CON_P3M1_MASK                                  0x80
2599:          
2600:          // Register: CCPR3
2601:          extern volatile unsigned short          CCPR3               @ 0xF5E;
2602:          #ifndef _LIB_BUILD
2603:          asm("CCPR3 equ 0F5Eh");
2604:          #endif
2605:          
2606:          // Register: CCPR3L
2607:          extern volatile unsigned char           CCPR3L              @ 0xF5E;
2608:          #ifndef _LIB_BUILD
2609:          asm("CCPR3L equ 0F5Eh");
2610:          #endif
2611:          // bitfield definitions
2612:          typedef union {
2613:              struct {
2614:                  unsigned CCPR3L                 :8;
2615:              };
2616:          } CCPR3Lbits_t;
2617:          extern volatile CCPR3Lbits_t CCPR3Lbits @ 0xF5E;
2618:          // bitfield macros
2619:          #define _CCPR3L_CCPR3L_POSN                                 0x0
2620:          #define _CCPR3L_CCPR3L_POSITION                             0x0
2621:          #define _CCPR3L_CCPR3L_SIZE                                 0x8
2622:          #define _CCPR3L_CCPR3L_LENGTH                               0x8
2623:          #define _CCPR3L_CCPR3L_MASK                                 0xFF
2624:          
2625:          // Register: CCPR3H
2626:          extern volatile unsigned char           CCPR3H              @ 0xF5F;
2627:          #ifndef _LIB_BUILD
2628:          asm("CCPR3H equ 0F5Fh");
2629:          #endif
2630:          // bitfield definitions
2631:          typedef union {
2632:              struct {
2633:                  unsigned CCPR3H                 :8;
2634:              };
2635:          } CCPR3Hbits_t;
2636:          extern volatile CCPR3Hbits_t CCPR3Hbits @ 0xF5F;
2637:          // bitfield macros
2638:          #define _CCPR3H_CCPR3H_POSN                                 0x0
2639:          #define _CCPR3H_CCPR3H_POSITION                             0x0
2640:          #define _CCPR3H_CCPR3H_SIZE                                 0x8
2641:          #define _CCPR3H_CCPR3H_LENGTH                               0x8
2642:          #define _CCPR3H_CCPR3H_MASK                                 0xFF
2643:          
2644:          // Register: SLRCON
2645:          extern volatile unsigned char           SLRCON              @ 0xF60;
2646:          #ifndef _LIB_BUILD
2647:          asm("SLRCON equ 0F60h");
2648:          #endif
2649:          // bitfield definitions
2650:          typedef union {
2651:              struct {
2652:                  unsigned SLRA                   :1;
2653:                  unsigned SLRB                   :1;
2654:                  unsigned SLRC                   :1;
2655:                  unsigned SLRD                   :1;
2656:                  unsigned SLRE                   :1;
2657:              };
2658:          } SLRCONbits_t;
2659:          extern volatile SLRCONbits_t SLRCONbits @ 0xF60;
2660:          // bitfield macros
2661:          #define _SLRCON_SLRA_POSN                                   0x0
2662:          #define _SLRCON_SLRA_POSITION                               0x0
2663:          #define _SLRCON_SLRA_SIZE                                   0x1
2664:          #define _SLRCON_SLRA_LENGTH                                 0x1
2665:          #define _SLRCON_SLRA_MASK                                   0x1
2666:          #define _SLRCON_SLRB_POSN                                   0x1
2667:          #define _SLRCON_SLRB_POSITION                               0x1
2668:          #define _SLRCON_SLRB_SIZE                                   0x1
2669:          #define _SLRCON_SLRB_LENGTH                                 0x1
2670:          #define _SLRCON_SLRB_MASK                                   0x2
2671:          #define _SLRCON_SLRC_POSN                                   0x2
2672:          #define _SLRCON_SLRC_POSITION                               0x2
2673:          #define _SLRCON_SLRC_SIZE                                   0x1
2674:          #define _SLRCON_SLRC_LENGTH                                 0x1
2675:          #define _SLRCON_SLRC_MASK                                   0x4
2676:          #define _SLRCON_SLRD_POSN                                   0x3
2677:          #define _SLRCON_SLRD_POSITION                               0x3
2678:          #define _SLRCON_SLRD_SIZE                                   0x1
2679:          #define _SLRCON_SLRD_LENGTH                                 0x1
2680:          #define _SLRCON_SLRD_MASK                                   0x8
2681:          #define _SLRCON_SLRE_POSN                                   0x4
2682:          #define _SLRCON_SLRE_POSITION                               0x4
2683:          #define _SLRCON_SLRE_SIZE                                   0x1
2684:          #define _SLRCON_SLRE_LENGTH                                 0x1
2685:          #define _SLRCON_SLRE_MASK                                   0x10
2686:          
2687:          // Register: WPUB
2688:          extern volatile unsigned char           WPUB                @ 0xF61;
2689:          #ifndef _LIB_BUILD
2690:          asm("WPUB equ 0F61h");
2691:          #endif
2692:          // bitfield definitions
2693:          typedef union {
2694:              struct {
2695:                  unsigned WPUB0                  :1;
2696:                  unsigned WPUB1                  :1;
2697:                  unsigned WPUB2                  :1;
2698:                  unsigned WPUB3                  :1;
2699:                  unsigned WPUB4                  :1;
2700:                  unsigned WPUB5                  :1;
2701:                  unsigned WPUB6                  :1;
2702:                  unsigned WPUB7                  :1;
2703:              };
2704:          } WPUBbits_t;
2705:          extern volatile WPUBbits_t WPUBbits @ 0xF61;
2706:          // bitfield macros
2707:          #define _WPUB_WPUB0_POSN                                    0x0
2708:          #define _WPUB_WPUB0_POSITION                                0x0
2709:          #define _WPUB_WPUB0_SIZE                                    0x1
2710:          #define _WPUB_WPUB0_LENGTH                                  0x1
2711:          #define _WPUB_WPUB0_MASK                                    0x1
2712:          #define _WPUB_WPUB1_POSN                                    0x1
2713:          #define _WPUB_WPUB1_POSITION                                0x1
2714:          #define _WPUB_WPUB1_SIZE                                    0x1
2715:          #define _WPUB_WPUB1_LENGTH                                  0x1
2716:          #define _WPUB_WPUB1_MASK                                    0x2
2717:          #define _WPUB_WPUB2_POSN                                    0x2
2718:          #define _WPUB_WPUB2_POSITION                                0x2
2719:          #define _WPUB_WPUB2_SIZE                                    0x1
2720:          #define _WPUB_WPUB2_LENGTH                                  0x1
2721:          #define _WPUB_WPUB2_MASK                                    0x4
2722:          #define _WPUB_WPUB3_POSN                                    0x3
2723:          #define _WPUB_WPUB3_POSITION                                0x3
2724:          #define _WPUB_WPUB3_SIZE                                    0x1
2725:          #define _WPUB_WPUB3_LENGTH                                  0x1
2726:          #define _WPUB_WPUB3_MASK                                    0x8
2727:          #define _WPUB_WPUB4_POSN                                    0x4
2728:          #define _WPUB_WPUB4_POSITION                                0x4
2729:          #define _WPUB_WPUB4_SIZE                                    0x1
2730:          #define _WPUB_WPUB4_LENGTH                                  0x1
2731:          #define _WPUB_WPUB4_MASK                                    0x10
2732:          #define _WPUB_WPUB5_POSN                                    0x5
2733:          #define _WPUB_WPUB5_POSITION                                0x5
2734:          #define _WPUB_WPUB5_SIZE                                    0x1
2735:          #define _WPUB_WPUB5_LENGTH                                  0x1
2736:          #define _WPUB_WPUB5_MASK                                    0x20
2737:          #define _WPUB_WPUB6_POSN                                    0x6
2738:          #define _WPUB_WPUB6_POSITION                                0x6
2739:          #define _WPUB_WPUB6_SIZE                                    0x1
2740:          #define _WPUB_WPUB6_LENGTH                                  0x1
2741:          #define _WPUB_WPUB6_MASK                                    0x40
2742:          #define _WPUB_WPUB7_POSN                                    0x7
2743:          #define _WPUB_WPUB7_POSITION                                0x7
2744:          #define _WPUB_WPUB7_SIZE                                    0x1
2745:          #define _WPUB_WPUB7_LENGTH                                  0x1
2746:          #define _WPUB_WPUB7_MASK                                    0x80
2747:          
2748:          // Register: IOCB
2749:          extern volatile unsigned char           IOCB                @ 0xF62;
2750:          #ifndef _LIB_BUILD
2751:          asm("IOCB equ 0F62h");
2752:          #endif
2753:          // bitfield definitions
2754:          typedef union {
2755:              struct {
2756:                  unsigned                        :4;
2757:                  unsigned IOCB4                  :1;
2758:                  unsigned IOCB5                  :1;
2759:                  unsigned IOCB6                  :1;
2760:                  unsigned IOCB7                  :1;
2761:              };
2762:          } IOCBbits_t;
2763:          extern volatile IOCBbits_t IOCBbits @ 0xF62;
2764:          // bitfield macros
2765:          #define _IOCB_IOCB4_POSN                                    0x4
2766:          #define _IOCB_IOCB4_POSITION                                0x4
2767:          #define _IOCB_IOCB4_SIZE                                    0x1
2768:          #define _IOCB_IOCB4_LENGTH                                  0x1
2769:          #define _IOCB_IOCB4_MASK                                    0x10
2770:          #define _IOCB_IOCB5_POSN                                    0x5
2771:          #define _IOCB_IOCB5_POSITION                                0x5
2772:          #define _IOCB_IOCB5_SIZE                                    0x1
2773:          #define _IOCB_IOCB5_LENGTH                                  0x1
2774:          #define _IOCB_IOCB5_MASK                                    0x20
2775:          #define _IOCB_IOCB6_POSN                                    0x6
2776:          #define _IOCB_IOCB6_POSITION                                0x6
2777:          #define _IOCB_IOCB6_SIZE                                    0x1
2778:          #define _IOCB_IOCB6_LENGTH                                  0x1
2779:          #define _IOCB_IOCB6_MASK                                    0x40
2780:          #define _IOCB_IOCB7_POSN                                    0x7
2781:          #define _IOCB_IOCB7_POSITION                                0x7
2782:          #define _IOCB_IOCB7_SIZE                                    0x1
2783:          #define _IOCB_IOCB7_LENGTH                                  0x1
2784:          #define _IOCB_IOCB7_MASK                                    0x80
2785:          
2786:          // Register: PSTR2CON
2787:          extern volatile unsigned char           PSTR2CON            @ 0xF63;
2788:          #ifndef _LIB_BUILD
2789:          asm("PSTR2CON equ 0F63h");
2790:          #endif
2791:          // bitfield definitions
2792:          typedef union {
2793:              struct {
2794:                  unsigned STR2A                  :1;
2795:                  unsigned STR2B                  :1;
2796:                  unsigned STR2C                  :1;
2797:                  unsigned STR2D                  :1;
2798:                  unsigned STR2SYNC               :1;
2799:              };
2800:              struct {
2801:                  unsigned P2DC02                 :1;
2802:              };
2803:              struct {
2804:                  unsigned P2DC0CON               :1;
2805:              };
2806:              struct {
2807:                  unsigned                        :1;
2808:                  unsigned P2DC12                 :1;
2809:              };
2810:              struct {
2811:                  unsigned                        :1;
2812:                  unsigned P2DC1CON               :1;
2813:              };
2814:              struct {
2815:                  unsigned                        :2;
2816:                  unsigned P2DC22                 :1;
2817:              };
2818:              struct {
2819:                  unsigned                        :2;
2820:                  unsigned P2DC2CON               :1;
2821:              };
2822:              struct {
2823:                  unsigned                        :3;
2824:                  unsigned P2DC32                 :1;
2825:              };
2826:              struct {
2827:                  unsigned                        :3;
2828:                  unsigned P2DC3CON               :1;
2829:              };
2830:              struct {
2831:                  unsigned                        :4;
2832:                  unsigned P2DC42                 :1;
2833:              };
2834:              struct {
2835:                  unsigned                        :4;
2836:                  unsigned P2DC4CON               :1;
2837:              };
2838:              struct {
2839:                  unsigned STRA2                  :1;
2840:              };
2841:              struct {
2842:                  unsigned                        :1;
2843:                  unsigned STRB2                  :1;
2844:              };
2845:              struct {
2846:                  unsigned                        :2;
2847:                  unsigned STRC2                  :1;
2848:              };
2849:              struct {
2850:                  unsigned                        :3;
2851:                  unsigned STRD2                  :1;
2852:              };
2853:              struct {
2854:                  unsigned                        :4;
2855:                  unsigned STRSYNC2               :1;
2856:              };
2857:          } PSTR2CONbits_t;
2858:          extern volatile PSTR2CONbits_t PSTR2CONbits @ 0xF63;
2859:          // bitfield macros
2860:          #define _PSTR2CON_STR2A_POSN                                0x0
2861:          #define _PSTR2CON_STR2A_POSITION                            0x0
2862:          #define _PSTR2CON_STR2A_SIZE                                0x1
2863:          #define _PSTR2CON_STR2A_LENGTH                              0x1
2864:          #define _PSTR2CON_STR2A_MASK                                0x1
2865:          #define _PSTR2CON_STR2B_POSN                                0x1
2866:          #define _PSTR2CON_STR2B_POSITION                            0x1
2867:          #define _PSTR2CON_STR2B_SIZE                                0x1
2868:          #define _PSTR2CON_STR2B_LENGTH                              0x1
2869:          #define _PSTR2CON_STR2B_MASK                                0x2
2870:          #define _PSTR2CON_STR2C_POSN                                0x2
2871:          #define _PSTR2CON_STR2C_POSITION                            0x2
2872:          #define _PSTR2CON_STR2C_SIZE                                0x1
2873:          #define _PSTR2CON_STR2C_LENGTH                              0x1
2874:          #define _PSTR2CON_STR2C_MASK                                0x4
2875:          #define _PSTR2CON_STR2D_POSN                                0x3
2876:          #define _PSTR2CON_STR2D_POSITION                            0x3
2877:          #define _PSTR2CON_STR2D_SIZE                                0x1
2878:          #define _PSTR2CON_STR2D_LENGTH                              0x1
2879:          #define _PSTR2CON_STR2D_MASK                                0x8
2880:          #define _PSTR2CON_STR2SYNC_POSN                             0x4
2881:          #define _PSTR2CON_STR2SYNC_POSITION                         0x4
2882:          #define _PSTR2CON_STR2SYNC_SIZE                             0x1
2883:          #define _PSTR2CON_STR2SYNC_LENGTH                           0x1
2884:          #define _PSTR2CON_STR2SYNC_MASK                             0x10
2885:          #define _PSTR2CON_P2DC02_POSN                               0x0
2886:          #define _PSTR2CON_P2DC02_POSITION                           0x0
2887:          #define _PSTR2CON_P2DC02_SIZE                               0x1
2888:          #define _PSTR2CON_P2DC02_LENGTH                             0x1
2889:          #define _PSTR2CON_P2DC02_MASK                               0x1
2890:          #define _PSTR2CON_P2DC0CON_POSN                             0x0
2891:          #define _PSTR2CON_P2DC0CON_POSITION                         0x0
2892:          #define _PSTR2CON_P2DC0CON_SIZE                             0x1
2893:          #define _PSTR2CON_P2DC0CON_LENGTH                           0x1
2894:          #define _PSTR2CON_P2DC0CON_MASK                             0x1
2895:          #define _PSTR2CON_P2DC12_POSN                               0x1
2896:          #define _PSTR2CON_P2DC12_POSITION                           0x1
2897:          #define _PSTR2CON_P2DC12_SIZE                               0x1
2898:          #define _PSTR2CON_P2DC12_LENGTH                             0x1
2899:          #define _PSTR2CON_P2DC12_MASK                               0x2
2900:          #define _PSTR2CON_P2DC1CON_POSN                             0x1
2901:          #define _PSTR2CON_P2DC1CON_POSITION                         0x1
2902:          #define _PSTR2CON_P2DC1CON_SIZE                             0x1
2903:          #define _PSTR2CON_P2DC1CON_LENGTH                           0x1
2904:          #define _PSTR2CON_P2DC1CON_MASK                             0x2
2905:          #define _PSTR2CON_P2DC22_POSN                               0x2
2906:          #define _PSTR2CON_P2DC22_POSITION                           0x2
2907:          #define _PSTR2CON_P2DC22_SIZE                               0x1
2908:          #define _PSTR2CON_P2DC22_LENGTH                             0x1
2909:          #define _PSTR2CON_P2DC22_MASK                               0x4
2910:          #define _PSTR2CON_P2DC2CON_POSN                             0x2
2911:          #define _PSTR2CON_P2DC2CON_POSITION                         0x2
2912:          #define _PSTR2CON_P2DC2CON_SIZE                             0x1
2913:          #define _PSTR2CON_P2DC2CON_LENGTH                           0x1
2914:          #define _PSTR2CON_P2DC2CON_MASK                             0x4
2915:          #define _PSTR2CON_P2DC32_POSN                               0x3
2916:          #define _PSTR2CON_P2DC32_POSITION                           0x3
2917:          #define _PSTR2CON_P2DC32_SIZE                               0x1
2918:          #define _PSTR2CON_P2DC32_LENGTH                             0x1
2919:          #define _PSTR2CON_P2DC32_MASK                               0x8
2920:          #define _PSTR2CON_P2DC3CON_POSN                             0x3
2921:          #define _PSTR2CON_P2DC3CON_POSITION                         0x3
2922:          #define _PSTR2CON_P2DC3CON_SIZE                             0x1
2923:          #define _PSTR2CON_P2DC3CON_LENGTH                           0x1
2924:          #define _PSTR2CON_P2DC3CON_MASK                             0x8
2925:          #define _PSTR2CON_P2DC42_POSN                               0x4
2926:          #define _PSTR2CON_P2DC42_POSITION                           0x4
2927:          #define _PSTR2CON_P2DC42_SIZE                               0x1
2928:          #define _PSTR2CON_P2DC42_LENGTH                             0x1
2929:          #define _PSTR2CON_P2DC42_MASK                               0x10
2930:          #define _PSTR2CON_P2DC4CON_POSN                             0x4
2931:          #define _PSTR2CON_P2DC4CON_POSITION                         0x4
2932:          #define _PSTR2CON_P2DC4CON_SIZE                             0x1
2933:          #define _PSTR2CON_P2DC4CON_LENGTH                           0x1
2934:          #define _PSTR2CON_P2DC4CON_MASK                             0x10
2935:          #define _PSTR2CON_STRA2_POSN                                0x0
2936:          #define _PSTR2CON_STRA2_POSITION                            0x0
2937:          #define _PSTR2CON_STRA2_SIZE                                0x1
2938:          #define _PSTR2CON_STRA2_LENGTH                              0x1
2939:          #define _PSTR2CON_STRA2_MASK                                0x1
2940:          #define _PSTR2CON_STRB2_POSN                                0x1
2941:          #define _PSTR2CON_STRB2_POSITION                            0x1
2942:          #define _PSTR2CON_STRB2_SIZE                                0x1
2943:          #define _PSTR2CON_STRB2_LENGTH                              0x1
2944:          #define _PSTR2CON_STRB2_MASK                                0x2
2945:          #define _PSTR2CON_STRC2_POSN                                0x2
2946:          #define _PSTR2CON_STRC2_POSITION                            0x2
2947:          #define _PSTR2CON_STRC2_SIZE                                0x1
2948:          #define _PSTR2CON_STRC2_LENGTH                              0x1
2949:          #define _PSTR2CON_STRC2_MASK                                0x4
2950:          #define _PSTR2CON_STRD2_POSN                                0x3
2951:          #define _PSTR2CON_STRD2_POSITION                            0x3
2952:          #define _PSTR2CON_STRD2_SIZE                                0x1
2953:          #define _PSTR2CON_STRD2_LENGTH                              0x1
2954:          #define _PSTR2CON_STRD2_MASK                                0x8
2955:          #define _PSTR2CON_STRSYNC2_POSN                             0x4
2956:          #define _PSTR2CON_STRSYNC2_POSITION                         0x4
2957:          #define _PSTR2CON_STRSYNC2_SIZE                             0x1
2958:          #define _PSTR2CON_STRSYNC2_LENGTH                           0x1
2959:          #define _PSTR2CON_STRSYNC2_MASK                             0x10
2960:          
2961:          // Register: ECCP2AS
2962:          extern volatile unsigned char           ECCP2AS             @ 0xF64;
2963:          #ifndef _LIB_BUILD
2964:          asm("ECCP2AS equ 0F64h");
2965:          #endif
2966:          // aliases
2967:          extern volatile unsigned char           CCP2AS              @ 0xF64;
2968:          #ifndef _LIB_BUILD
2969:          asm("CCP2AS equ 0F64h");
2970:          #endif
2971:          // bitfield definitions
2972:          typedef union {
2973:              struct {
2974:                  unsigned P2SSBD                 :2;
2975:                  unsigned P2SSAC                 :2;
2976:                  unsigned CCP2AS                 :3;
2977:                  unsigned CCP2ASE                :1;
2978:              };
2979:              struct {
2980:                  unsigned P2SSBD0                :1;
2981:                  unsigned P2SSBD1                :1;
2982:                  unsigned P2SSAC0                :1;
2983:                  unsigned P2SSAC1                :1;
2984:                  unsigned CCP2AS0                :1;
2985:                  unsigned CCP2AS1                :1;
2986:                  unsigned CCP2AS2                :1;
2987:              };
2988:              struct {
2989:                  unsigned PSS2BD                 :2;
2990:                  unsigned PSS2AC                 :2;
2991:              };
2992:              struct {
2993:                  unsigned PSS2BD0                :1;
2994:                  unsigned PSS2BD1                :1;
2995:                  unsigned PSS2AC0                :1;
2996:                  unsigned PSS2AC1                :1;
2997:              };
2998:          } ECCP2ASbits_t;
2999:          extern volatile ECCP2ASbits_t ECCP2ASbits @ 0xF64;
3000:          // bitfield macros
3001:          #define _ECCP2AS_P2SSBD_POSN                                0x0
3002:          #define _ECCP2AS_P2SSBD_POSITION                            0x0
3003:          #define _ECCP2AS_P2SSBD_SIZE                                0x2
3004:          #define _ECCP2AS_P2SSBD_LENGTH                              0x2
3005:          #define _ECCP2AS_P2SSBD_MASK                                0x3
3006:          #define _ECCP2AS_P2SSAC_POSN                                0x2
3007:          #define _ECCP2AS_P2SSAC_POSITION                            0x2
3008:          #define _ECCP2AS_P2SSAC_SIZE                                0x2
3009:          #define _ECCP2AS_P2SSAC_LENGTH                              0x2
3010:          #define _ECCP2AS_P2SSAC_MASK                                0xC
3011:          #define _ECCP2AS_CCP2AS_POSN                                0x4
3012:          #define _ECCP2AS_CCP2AS_POSITION                            0x4
3013:          #define _ECCP2AS_CCP2AS_SIZE                                0x3
3014:          #define _ECCP2AS_CCP2AS_LENGTH                              0x3
3015:          #define _ECCP2AS_CCP2AS_MASK                                0x70
3016:          #define _ECCP2AS_CCP2ASE_POSN                               0x7
3017:          #define _ECCP2AS_CCP2ASE_POSITION                           0x7
3018:          #define _ECCP2AS_CCP2ASE_SIZE                               0x1
3019:          #define _ECCP2AS_CCP2ASE_LENGTH                             0x1
3020:          #define _ECCP2AS_CCP2ASE_MASK                               0x80
3021:          #define _ECCP2AS_P2SSBD0_POSN                               0x0
3022:          #define _ECCP2AS_P2SSBD0_POSITION                           0x0
3023:          #define _ECCP2AS_P2SSBD0_SIZE                               0x1
3024:          #define _ECCP2AS_P2SSBD0_LENGTH                             0x1
3025:          #define _ECCP2AS_P2SSBD0_MASK                               0x1
3026:          #define _ECCP2AS_P2SSBD1_POSN                               0x1
3027:          #define _ECCP2AS_P2SSBD1_POSITION                           0x1
3028:          #define _ECCP2AS_P2SSBD1_SIZE                               0x1
3029:          #define _ECCP2AS_P2SSBD1_LENGTH                             0x1
3030:          #define _ECCP2AS_P2SSBD1_MASK                               0x2
3031:          #define _ECCP2AS_P2SSAC0_POSN                               0x2
3032:          #define _ECCP2AS_P2SSAC0_POSITION                           0x2
3033:          #define _ECCP2AS_P2SSAC0_SIZE                               0x1
3034:          #define _ECCP2AS_P2SSAC0_LENGTH                             0x1
3035:          #define _ECCP2AS_P2SSAC0_MASK                               0x4
3036:          #define _ECCP2AS_P2SSAC1_POSN                               0x3
3037:          #define _ECCP2AS_P2SSAC1_POSITION                           0x3
3038:          #define _ECCP2AS_P2SSAC1_SIZE                               0x1
3039:          #define _ECCP2AS_P2SSAC1_LENGTH                             0x1
3040:          #define _ECCP2AS_P2SSAC1_MASK                               0x8
3041:          #define _ECCP2AS_CCP2AS0_POSN                               0x4
3042:          #define _ECCP2AS_CCP2AS0_POSITION                           0x4
3043:          #define _ECCP2AS_CCP2AS0_SIZE                               0x1
3044:          #define _ECCP2AS_CCP2AS0_LENGTH                             0x1
3045:          #define _ECCP2AS_CCP2AS0_MASK                               0x10
3046:          #define _ECCP2AS_CCP2AS1_POSN                               0x5
3047:          #define _ECCP2AS_CCP2AS1_POSITION                           0x5
3048:          #define _ECCP2AS_CCP2AS1_SIZE                               0x1
3049:          #define _ECCP2AS_CCP2AS1_LENGTH                             0x1
3050:          #define _ECCP2AS_CCP2AS1_MASK                               0x20
3051:          #define _ECCP2AS_CCP2AS2_POSN                               0x6
3052:          #define _ECCP2AS_CCP2AS2_POSITION                           0x6
3053:          #define _ECCP2AS_CCP2AS2_SIZE                               0x1
3054:          #define _ECCP2AS_CCP2AS2_LENGTH                             0x1
3055:          #define _ECCP2AS_CCP2AS2_MASK                               0x40
3056:          #define _ECCP2AS_PSS2BD_POSN                                0x0
3057:          #define _ECCP2AS_PSS2BD_POSITION                            0x0
3058:          #define _ECCP2AS_PSS2BD_SIZE                                0x2
3059:          #define _ECCP2AS_PSS2BD_LENGTH                              0x2
3060:          #define _ECCP2AS_PSS2BD_MASK                                0x3
3061:          #define _ECCP2AS_PSS2AC_POSN                                0x2
3062:          #define _ECCP2AS_PSS2AC_POSITION                            0x2
3063:          #define _ECCP2AS_PSS2AC_SIZE                                0x2
3064:          #define _ECCP2AS_PSS2AC_LENGTH                              0x2
3065:          #define _ECCP2AS_PSS2AC_MASK                                0xC
3066:          #define _ECCP2AS_PSS2BD0_POSN                               0x0
3067:          #define _ECCP2AS_PSS2BD0_POSITION                           0x0
3068:          #define _ECCP2AS_PSS2BD0_SIZE                               0x1
3069:          #define _ECCP2AS_PSS2BD0_LENGTH                             0x1
3070:          #define _ECCP2AS_PSS2BD0_MASK                               0x1
3071:          #define _ECCP2AS_PSS2BD1_POSN                               0x1
3072:          #define _ECCP2AS_PSS2BD1_POSITION                           0x1
3073:          #define _ECCP2AS_PSS2BD1_SIZE                               0x1
3074:          #define _ECCP2AS_PSS2BD1_LENGTH                             0x1
3075:          #define _ECCP2AS_PSS2BD1_MASK                               0x2
3076:          #define _ECCP2AS_PSS2AC0_POSN                               0x2
3077:          #define _ECCP2AS_PSS2AC0_POSITION                           0x2
3078:          #define _ECCP2AS_PSS2AC0_SIZE                               0x1
3079:          #define _ECCP2AS_PSS2AC0_LENGTH                             0x1
3080:          #define _ECCP2AS_PSS2AC0_MASK                               0x4
3081:          #define _ECCP2AS_PSS2AC1_POSN                               0x3
3082:          #define _ECCP2AS_PSS2AC1_POSITION                           0x3
3083:          #define _ECCP2AS_PSS2AC1_SIZE                               0x1
3084:          #define _ECCP2AS_PSS2AC1_LENGTH                             0x1
3085:          #define _ECCP2AS_PSS2AC1_MASK                               0x8
3086:          // alias bitfield definitions
3087:          typedef union {
3088:              struct {
3089:                  unsigned P2SSBD                 :2;
3090:                  unsigned P2SSAC                 :2;
3091:                  unsigned CCP2AS                 :3;
3092:                  unsigned CCP2ASE                :1;
3093:              };
3094:              struct {
3095:                  unsigned P2SSBD0                :1;
3096:                  unsigned P2SSBD1                :1;
3097:                  unsigned P2SSAC0                :1;
3098:                  unsigned P2SSAC1                :1;
3099:                  unsigned CCP2AS0                :1;
3100:                  unsigned CCP2AS1                :1;
3101:                  unsigned CCP2AS2                :1;
3102:              };
3103:              struct {
3104:                  unsigned PSS2BD                 :2;
3105:                  unsigned PSS2AC                 :2;
3106:              };
3107:              struct {
3108:                  unsigned PSS2BD0                :1;
3109:                  unsigned PSS2BD1                :1;
3110:                  unsigned PSS2AC0                :1;
3111:                  unsigned PSS2AC1                :1;
3112:              };
3113:          } CCP2ASbits_t;
3114:          extern volatile CCP2ASbits_t CCP2ASbits @ 0xF64;
3115:          // bitfield macros
3116:          #define _CCP2AS_P2SSBD_POSN                                 0x0
3117:          #define _CCP2AS_P2SSBD_POSITION                             0x0
3118:          #define _CCP2AS_P2SSBD_SIZE                                 0x2
3119:          #define _CCP2AS_P2SSBD_LENGTH                               0x2
3120:          #define _CCP2AS_P2SSBD_MASK                                 0x3
3121:          #define _CCP2AS_P2SSAC_POSN                                 0x2
3122:          #define _CCP2AS_P2SSAC_POSITION                             0x2
3123:          #define _CCP2AS_P2SSAC_SIZE                                 0x2
3124:          #define _CCP2AS_P2SSAC_LENGTH                               0x2
3125:          #define _CCP2AS_P2SSAC_MASK                                 0xC
3126:          #define _CCP2AS_CCP2AS_POSN                                 0x4
3127:          #define _CCP2AS_CCP2AS_POSITION                             0x4
3128:          #define _CCP2AS_CCP2AS_SIZE                                 0x3
3129:          #define _CCP2AS_CCP2AS_LENGTH                               0x3
3130:          #define _CCP2AS_CCP2AS_MASK                                 0x70
3131:          #define _CCP2AS_CCP2ASE_POSN                                0x7
3132:          #define _CCP2AS_CCP2ASE_POSITION                            0x7
3133:          #define _CCP2AS_CCP2ASE_SIZE                                0x1
3134:          #define _CCP2AS_CCP2ASE_LENGTH                              0x1
3135:          #define _CCP2AS_CCP2ASE_MASK                                0x80
3136:          #define _CCP2AS_P2SSBD0_POSN                                0x0
3137:          #define _CCP2AS_P2SSBD0_POSITION                            0x0
3138:          #define _CCP2AS_P2SSBD0_SIZE                                0x1
3139:          #define _CCP2AS_P2SSBD0_LENGTH                              0x1
3140:          #define _CCP2AS_P2SSBD0_MASK                                0x1
3141:          #define _CCP2AS_P2SSBD1_POSN                                0x1
3142:          #define _CCP2AS_P2SSBD1_POSITION                            0x1
3143:          #define _CCP2AS_P2SSBD1_SIZE                                0x1
3144:          #define _CCP2AS_P2SSBD1_LENGTH                              0x1
3145:          #define _CCP2AS_P2SSBD1_MASK                                0x2
3146:          #define _CCP2AS_P2SSAC0_POSN                                0x2
3147:          #define _CCP2AS_P2SSAC0_POSITION                            0x2
3148:          #define _CCP2AS_P2SSAC0_SIZE                                0x1
3149:          #define _CCP2AS_P2SSAC0_LENGTH                              0x1
3150:          #define _CCP2AS_P2SSAC0_MASK                                0x4
3151:          #define _CCP2AS_P2SSAC1_POSN                                0x3
3152:          #define _CCP2AS_P2SSAC1_POSITION                            0x3
3153:          #define _CCP2AS_P2SSAC1_SIZE                                0x1
3154:          #define _CCP2AS_P2SSAC1_LENGTH                              0x1
3155:          #define _CCP2AS_P2SSAC1_MASK                                0x8
3156:          #define _CCP2AS_CCP2AS0_POSN                                0x4
3157:          #define _CCP2AS_CCP2AS0_POSITION                            0x4
3158:          #define _CCP2AS_CCP2AS0_SIZE                                0x1
3159:          #define _CCP2AS_CCP2AS0_LENGTH                              0x1
3160:          #define _CCP2AS_CCP2AS0_MASK                                0x10
3161:          #define _CCP2AS_CCP2AS1_POSN                                0x5
3162:          #define _CCP2AS_CCP2AS1_POSITION                            0x5
3163:          #define _CCP2AS_CCP2AS1_SIZE                                0x1
3164:          #define _CCP2AS_CCP2AS1_LENGTH                              0x1
3165:          #define _CCP2AS_CCP2AS1_MASK                                0x20
3166:          #define _CCP2AS_CCP2AS2_POSN                                0x6
3167:          #define _CCP2AS_CCP2AS2_POSITION                            0x6
3168:          #define _CCP2AS_CCP2AS2_SIZE                                0x1
3169:          #define _CCP2AS_CCP2AS2_LENGTH                              0x1
3170:          #define _CCP2AS_CCP2AS2_MASK                                0x40
3171:          #define _CCP2AS_PSS2BD_POSN                                 0x0
3172:          #define _CCP2AS_PSS2BD_POSITION                             0x0
3173:          #define _CCP2AS_PSS2BD_SIZE                                 0x2
3174:          #define _CCP2AS_PSS2BD_LENGTH                               0x2
3175:          #define _CCP2AS_PSS2BD_MASK                                 0x3
3176:          #define _CCP2AS_PSS2AC_POSN                                 0x2
3177:          #define _CCP2AS_PSS2AC_POSITION                             0x2
3178:          #define _CCP2AS_PSS2AC_SIZE                                 0x2
3179:          #define _CCP2AS_PSS2AC_LENGTH                               0x2
3180:          #define _CCP2AS_PSS2AC_MASK                                 0xC
3181:          #define _CCP2AS_PSS2BD0_POSN                                0x0
3182:          #define _CCP2AS_PSS2BD0_POSITION                            0x0
3183:          #define _CCP2AS_PSS2BD0_SIZE                                0x1
3184:          #define _CCP2AS_PSS2BD0_LENGTH                              0x1
3185:          #define _CCP2AS_PSS2BD0_MASK                                0x1
3186:          #define _CCP2AS_PSS2BD1_POSN                                0x1
3187:          #define _CCP2AS_PSS2BD1_POSITION                            0x1
3188:          #define _CCP2AS_PSS2BD1_SIZE                                0x1
3189:          #define _CCP2AS_PSS2BD1_LENGTH                              0x1
3190:          #define _CCP2AS_PSS2BD1_MASK                                0x2
3191:          #define _CCP2AS_PSS2AC0_POSN                                0x2
3192:          #define _CCP2AS_PSS2AC0_POSITION                            0x2
3193:          #define _CCP2AS_PSS2AC0_SIZE                                0x1
3194:          #define _CCP2AS_PSS2AC0_LENGTH                              0x1
3195:          #define _CCP2AS_PSS2AC0_MASK                                0x4
3196:          #define _CCP2AS_PSS2AC1_POSN                                0x3
3197:          #define _CCP2AS_PSS2AC1_POSITION                            0x3
3198:          #define _CCP2AS_PSS2AC1_SIZE                                0x1
3199:          #define _CCP2AS_PSS2AC1_LENGTH                              0x1
3200:          #define _CCP2AS_PSS2AC1_MASK                                0x8
3201:          
3202:          // Register: PWM2CON
3203:          extern volatile unsigned char           PWM2CON             @ 0xF65;
3204:          #ifndef _LIB_BUILD
3205:          asm("PWM2CON equ 0F65h");
3206:          #endif
3207:          // bitfield definitions
3208:          typedef union {
3209:              struct {
3210:                  unsigned P2DC                   :7;
3211:                  unsigned P2RSEN                 :1;
3212:              };
3213:              struct {
3214:                  unsigned P2DC0                  :1;
3215:                  unsigned P2DC1                  :1;
3216:                  unsigned P2DC2                  :1;
3217:                  unsigned P2DC3                  :1;
3218:                  unsigned P2DC4                  :1;
3219:                  unsigned P2DC5                  :1;
3220:                  unsigned P2DC6                  :1;
3221:              };
3222:          } PWM2CONbits_t;
3223:          extern volatile PWM2CONbits_t PWM2CONbits @ 0xF65;
3224:          // bitfield macros
3225:          #define _PWM2CON_P2DC_POSN                                  0x0
3226:          #define _PWM2CON_P2DC_POSITION                              0x0
3227:          #define _PWM2CON_P2DC_SIZE                                  0x7
3228:          #define _PWM2CON_P2DC_LENGTH                                0x7
3229:          #define _PWM2CON_P2DC_MASK                                  0x7F
3230:          #define _PWM2CON_P2RSEN_POSN                                0x7
3231:          #define _PWM2CON_P2RSEN_POSITION                            0x7
3232:          #define _PWM2CON_P2RSEN_SIZE                                0x1
3233:          #define _PWM2CON_P2RSEN_LENGTH                              0x1
3234:          #define _PWM2CON_P2RSEN_MASK                                0x80
3235:          #define _PWM2CON_P2DC0_POSN                                 0x0
3236:          #define _PWM2CON_P2DC0_POSITION                             0x0
3237:          #define _PWM2CON_P2DC0_SIZE                                 0x1
3238:          #define _PWM2CON_P2DC0_LENGTH                               0x1
3239:          #define _PWM2CON_P2DC0_MASK                                 0x1
3240:          #define _PWM2CON_P2DC1_POSN                                 0x1
3241:          #define _PWM2CON_P2DC1_POSITION                             0x1
3242:          #define _PWM2CON_P2DC1_SIZE                                 0x1
3243:          #define _PWM2CON_P2DC1_LENGTH                               0x1
3244:          #define _PWM2CON_P2DC1_MASK                                 0x2
3245:          #define _PWM2CON_P2DC2_POSN                                 0x2
3246:          #define _PWM2CON_P2DC2_POSITION                             0x2
3247:          #define _PWM2CON_P2DC2_SIZE                                 0x1
3248:          #define _PWM2CON_P2DC2_LENGTH                               0x1
3249:          #define _PWM2CON_P2DC2_MASK                                 0x4
3250:          #define _PWM2CON_P2DC3_POSN                                 0x3
3251:          #define _PWM2CON_P2DC3_POSITION                             0x3
3252:          #define _PWM2CON_P2DC3_SIZE                                 0x1
3253:          #define _PWM2CON_P2DC3_LENGTH                               0x1
3254:          #define _PWM2CON_P2DC3_MASK                                 0x8
3255:          #define _PWM2CON_P2DC4_POSN                                 0x4
3256:          #define _PWM2CON_P2DC4_POSITION                             0x4
3257:          #define _PWM2CON_P2DC4_SIZE                                 0x1
3258:          #define _PWM2CON_P2DC4_LENGTH                               0x1
3259:          #define _PWM2CON_P2DC4_MASK                                 0x10
3260:          #define _PWM2CON_P2DC5_POSN                                 0x5
3261:          #define _PWM2CON_P2DC5_POSITION                             0x5
3262:          #define _PWM2CON_P2DC5_SIZE                                 0x1
3263:          #define _PWM2CON_P2DC5_LENGTH                               0x1
3264:          #define _PWM2CON_P2DC5_MASK                                 0x20
3265:          #define _PWM2CON_P2DC6_POSN                                 0x6
3266:          #define _PWM2CON_P2DC6_POSITION                             0x6
3267:          #define _PWM2CON_P2DC6_SIZE                                 0x1
3268:          #define _PWM2CON_P2DC6_LENGTH                               0x1
3269:          #define _PWM2CON_P2DC6_MASK                                 0x40
3270:          
3271:          // Register: CCP2CON
3272:          extern volatile unsigned char           CCP2CON             @ 0xF66;
3273:          #ifndef _LIB_BUILD
3274:          asm("CCP2CON equ 0F66h");
3275:          #endif
3276:          // bitfield definitions
3277:          typedef union {
3278:              struct {
3279:                  unsigned CCP2M                  :4;
3280:                  unsigned DC2B                   :2;
3281:                  unsigned P2M                    :2;
3282:              };
3283:              struct {
3284:                  unsigned CCP2M0                 :1;
3285:                  unsigned CCP2M1                 :1;
3286:                  unsigned CCP2M2                 :1;
3287:                  unsigned CCP2M3                 :1;
3288:                  unsigned DC2B0                  :1;
3289:                  unsigned DC2B1                  :1;
3290:                  unsigned P2M0                   :1;
3291:                  unsigned P2M1                   :1;
3292:              };
3293:          } CCP2CONbits_t;
3294:          extern volatile CCP2CONbits_t CCP2CONbits @ 0xF66;
3295:          // bitfield macros
3296:          #define _CCP2CON_CCP2M_POSN                                 0x0
3297:          #define _CCP2CON_CCP2M_POSITION                             0x0
3298:          #define _CCP2CON_CCP2M_SIZE                                 0x4
3299:          #define _CCP2CON_CCP2M_LENGTH                               0x4
3300:          #define _CCP2CON_CCP2M_MASK                                 0xF
3301:          #define _CCP2CON_DC2B_POSN                                  0x4
3302:          #define _CCP2CON_DC2B_POSITION                              0x4
3303:          #define _CCP2CON_DC2B_SIZE                                  0x2
3304:          #define _CCP2CON_DC2B_LENGTH                                0x2
3305:          #define _CCP2CON_DC2B_MASK                                  0x30
3306:          #define _CCP2CON_P2M_POSN                                   0x6
3307:          #define _CCP2CON_P2M_POSITION                               0x6
3308:          #define _CCP2CON_P2M_SIZE                                   0x2
3309:          #define _CCP2CON_P2M_LENGTH                                 0x2
3310:          #define _CCP2CON_P2M_MASK                                   0xC0
3311:          #define _CCP2CON_CCP2M0_POSN                                0x0
3312:          #define _CCP2CON_CCP2M0_POSITION                            0x0
3313:          #define _CCP2CON_CCP2M0_SIZE                                0x1
3314:          #define _CCP2CON_CCP2M0_LENGTH                              0x1
3315:          #define _CCP2CON_CCP2M0_MASK                                0x1
3316:          #define _CCP2CON_CCP2M1_POSN                                0x1
3317:          #define _CCP2CON_CCP2M1_POSITION                            0x1
3318:          #define _CCP2CON_CCP2M1_SIZE                                0x1
3319:          #define _CCP2CON_CCP2M1_LENGTH                              0x1
3320:          #define _CCP2CON_CCP2M1_MASK                                0x2
3321:          #define _CCP2CON_CCP2M2_POSN                                0x2
3322:          #define _CCP2CON_CCP2M2_POSITION                            0x2
3323:          #define _CCP2CON_CCP2M2_SIZE                                0x1
3324:          #define _CCP2CON_CCP2M2_LENGTH                              0x1
3325:          #define _CCP2CON_CCP2M2_MASK                                0x4
3326:          #define _CCP2CON_CCP2M3_POSN                                0x3
3327:          #define _CCP2CON_CCP2M3_POSITION                            0x3
3328:          #define _CCP2CON_CCP2M3_SIZE                                0x1
3329:          #define _CCP2CON_CCP2M3_LENGTH                              0x1
3330:          #define _CCP2CON_CCP2M3_MASK                                0x8
3331:          #define _CCP2CON_DC2B0_POSN                                 0x4
3332:          #define _CCP2CON_DC2B0_POSITION                             0x4
3333:          #define _CCP2CON_DC2B0_SIZE                                 0x1
3334:          #define _CCP2CON_DC2B0_LENGTH                               0x1
3335:          #define _CCP2CON_DC2B0_MASK                                 0x10
3336:          #define _CCP2CON_DC2B1_POSN                                 0x5
3337:          #define _CCP2CON_DC2B1_POSITION                             0x5
3338:          #define _CCP2CON_DC2B1_SIZE                                 0x1
3339:          #define _CCP2CON_DC2B1_LENGTH                               0x1
3340:          #define _CCP2CON_DC2B1_MASK                                 0x20
3341:          #define _CCP2CON_P2M0_POSN                                  0x6
3342:          #define _CCP2CON_P2M0_POSITION                              0x6
3343:          #define _CCP2CON_P2M0_SIZE                                  0x1
3344:          #define _CCP2CON_P2M0_LENGTH                                0x1
3345:          #define _CCP2CON_P2M0_MASK                                  0x40
3346:          #define _CCP2CON_P2M1_POSN                                  0x7
3347:          #define _CCP2CON_P2M1_POSITION                              0x7
3348:          #define _CCP2CON_P2M1_SIZE                                  0x1
3349:          #define _CCP2CON_P2M1_LENGTH                                0x1
3350:          #define _CCP2CON_P2M1_MASK                                  0x80
3351:          
3352:          // Register: CCPR2
3353:          extern volatile unsigned short          CCPR2               @ 0xF67;
3354:          #ifndef _LIB_BUILD
3355:          asm("CCPR2 equ 0F67h");
3356:          #endif
3357:          
3358:          // Register: CCPR2L
3359:          extern volatile unsigned char           CCPR2L              @ 0xF67;
3360:          #ifndef _LIB_BUILD
3361:          asm("CCPR2L equ 0F67h");
3362:          #endif
3363:          // bitfield definitions
3364:          typedef union {
3365:              struct {
3366:                  unsigned CCPR2L                 :8;
3367:              };
3368:          } CCPR2Lbits_t;
3369:          extern volatile CCPR2Lbits_t CCPR2Lbits @ 0xF67;
3370:          // bitfield macros
3371:          #define _CCPR2L_CCPR2L_POSN                                 0x0
3372:          #define _CCPR2L_CCPR2L_POSITION                             0x0
3373:          #define _CCPR2L_CCPR2L_SIZE                                 0x8
3374:          #define _CCPR2L_CCPR2L_LENGTH                               0x8
3375:          #define _CCPR2L_CCPR2L_MASK                                 0xFF
3376:          
3377:          // Register: CCPR2H
3378:          extern volatile unsigned char           CCPR2H              @ 0xF68;
3379:          #ifndef _LIB_BUILD
3380:          asm("CCPR2H equ 0F68h");
3381:          #endif
3382:          // bitfield definitions
3383:          typedef union {
3384:              struct {
3385:                  unsigned CCPR2H                 :8;
3386:              };
3387:          } CCPR2Hbits_t;
3388:          extern volatile CCPR2Hbits_t CCPR2Hbits @ 0xF68;
3389:          // bitfield macros
3390:          #define _CCPR2H_CCPR2H_POSN                                 0x0
3391:          #define _CCPR2H_CCPR2H_POSITION                             0x0
3392:          #define _CCPR2H_CCPR2H_SIZE                                 0x8
3393:          #define _CCPR2H_CCPR2H_LENGTH                               0x8
3394:          #define _CCPR2H_CCPR2H_MASK                                 0xFF
3395:          
3396:          // Register: SSP2CON3
3397:          extern volatile unsigned char           SSP2CON3            @ 0xF69;
3398:          #ifndef _LIB_BUILD
3399:          asm("SSP2CON3 equ 0F69h");
3400:          #endif
3401:          // bitfield definitions
3402:          typedef union {
3403:              struct {
3404:                  unsigned DHEN                   :1;
3405:                  unsigned AHEN                   :1;
3406:                  unsigned SBCDE                  :1;
3407:                  unsigned SDAHT                  :1;
3408:                  unsigned BOEN                   :1;
3409:                  unsigned SCIE                   :1;
3410:                  unsigned PCIE                   :1;
3411:                  unsigned ACKTIM                 :1;
3412:              };
3413:          } SSP2CON3bits_t;
3414:          extern volatile SSP2CON3bits_t SSP2CON3bits @ 0xF69;
3415:          // bitfield macros
3416:          #define _SSP2CON3_DHEN_POSN                                 0x0
3417:          #define _SSP2CON3_DHEN_POSITION                             0x0
3418:          #define _SSP2CON3_DHEN_SIZE                                 0x1
3419:          #define _SSP2CON3_DHEN_LENGTH                               0x1
3420:          #define _SSP2CON3_DHEN_MASK                                 0x1
3421:          #define _SSP2CON3_AHEN_POSN                                 0x1
3422:          #define _SSP2CON3_AHEN_POSITION                             0x1
3423:          #define _SSP2CON3_AHEN_SIZE                                 0x1
3424:          #define _SSP2CON3_AHEN_LENGTH                               0x1
3425:          #define _SSP2CON3_AHEN_MASK                                 0x2
3426:          #define _SSP2CON3_SBCDE_POSN                                0x2
3427:          #define _SSP2CON3_SBCDE_POSITION                            0x2
3428:          #define _SSP2CON3_SBCDE_SIZE                                0x1
3429:          #define _SSP2CON3_SBCDE_LENGTH                              0x1
3430:          #define _SSP2CON3_SBCDE_MASK                                0x4
3431:          #define _SSP2CON3_SDAHT_POSN                                0x3
3432:          #define _SSP2CON3_SDAHT_POSITION                            0x3
3433:          #define _SSP2CON3_SDAHT_SIZE                                0x1
3434:          #define _SSP2CON3_SDAHT_LENGTH                              0x1
3435:          #define _SSP2CON3_SDAHT_MASK                                0x8
3436:          #define _SSP2CON3_BOEN_POSN                                 0x4
3437:          #define _SSP2CON3_BOEN_POSITION                             0x4
3438:          #define _SSP2CON3_BOEN_SIZE                                 0x1
3439:          #define _SSP2CON3_BOEN_LENGTH                               0x1
3440:          #define _SSP2CON3_BOEN_MASK                                 0x10
3441:          #define _SSP2CON3_SCIE_POSN                                 0x5
3442:          #define _SSP2CON3_SCIE_POSITION                             0x5
3443:          #define _SSP2CON3_SCIE_SIZE                                 0x1
3444:          #define _SSP2CON3_SCIE_LENGTH                               0x1
3445:          #define _SSP2CON3_SCIE_MASK                                 0x20
3446:          #define _SSP2CON3_PCIE_POSN                                 0x6
3447:          #define _SSP2CON3_PCIE_POSITION                             0x6
3448:          #define _SSP2CON3_PCIE_SIZE                                 0x1
3449:          #define _SSP2CON3_PCIE_LENGTH                               0x1
3450:          #define _SSP2CON3_PCIE_MASK                                 0x40
3451:          #define _SSP2CON3_ACKTIM_POSN                               0x7
3452:          #define _SSP2CON3_ACKTIM_POSITION                           0x7
3453:          #define _SSP2CON3_ACKTIM_SIZE                               0x1
3454:          #define _SSP2CON3_ACKTIM_LENGTH                             0x1
3455:          #define _SSP2CON3_ACKTIM_MASK                               0x80
3456:          
3457:          // Register: SSP2MSK
3458:          extern volatile unsigned char           SSP2MSK             @ 0xF6A;
3459:          #ifndef _LIB_BUILD
3460:          asm("SSP2MSK equ 0F6Ah");
3461:          #endif
3462:          // bitfield definitions
3463:          typedef union {
3464:              struct {
3465:                  unsigned MSK0                   :1;
3466:                  unsigned MSK1                   :1;
3467:                  unsigned MSK2                   :1;
3468:                  unsigned MSK3                   :1;
3469:                  unsigned MSK4                   :1;
3470:                  unsigned MSK5                   :1;
3471:                  unsigned MSK6                   :1;
3472:                  unsigned MSK7                   :1;
3473:              };
3474:          } SSP2MSKbits_t;
3475:          extern volatile SSP2MSKbits_t SSP2MSKbits @ 0xF6A;
3476:          // bitfield macros
3477:          #define _SSP2MSK_MSK0_POSN                                  0x0
3478:          #define _SSP2MSK_MSK0_POSITION                              0x0
3479:          #define _SSP2MSK_MSK0_SIZE                                  0x1
3480:          #define _SSP2MSK_MSK0_LENGTH                                0x1
3481:          #define _SSP2MSK_MSK0_MASK                                  0x1
3482:          #define _SSP2MSK_MSK1_POSN                                  0x1
3483:          #define _SSP2MSK_MSK1_POSITION                              0x1
3484:          #define _SSP2MSK_MSK1_SIZE                                  0x1
3485:          #define _SSP2MSK_MSK1_LENGTH                                0x1
3486:          #define _SSP2MSK_MSK1_MASK                                  0x2
3487:          #define _SSP2MSK_MSK2_POSN                                  0x2
3488:          #define _SSP2MSK_MSK2_POSITION                              0x2
3489:          #define _SSP2MSK_MSK2_SIZE                                  0x1
3490:          #define _SSP2MSK_MSK2_LENGTH                                0x1
3491:          #define _SSP2MSK_MSK2_MASK                                  0x4
3492:          #define _SSP2MSK_MSK3_POSN                                  0x3
3493:          #define _SSP2MSK_MSK3_POSITION                              0x3
3494:          #define _SSP2MSK_MSK3_SIZE                                  0x1
3495:          #define _SSP2MSK_MSK3_LENGTH                                0x1
3496:          #define _SSP2MSK_MSK3_MASK                                  0x8
3497:          #define _SSP2MSK_MSK4_POSN                                  0x4
3498:          #define _SSP2MSK_MSK4_POSITION                              0x4
3499:          #define _SSP2MSK_MSK4_SIZE                                  0x1
3500:          #define _SSP2MSK_MSK4_LENGTH                                0x1
3501:          #define _SSP2MSK_MSK4_MASK                                  0x10
3502:          #define _SSP2MSK_MSK5_POSN                                  0x5
3503:          #define _SSP2MSK_MSK5_POSITION                              0x5
3504:          #define _SSP2MSK_MSK5_SIZE                                  0x1
3505:          #define _SSP2MSK_MSK5_LENGTH                                0x1
3506:          #define _SSP2MSK_MSK5_MASK                                  0x20
3507:          #define _SSP2MSK_MSK6_POSN                                  0x6
3508:          #define _SSP2MSK_MSK6_POSITION                              0x6
3509:          #define _SSP2MSK_MSK6_SIZE                                  0x1
3510:          #define _SSP2MSK_MSK6_LENGTH                                0x1
3511:          #define _SSP2MSK_MSK6_MASK                                  0x40
3512:          #define _SSP2MSK_MSK7_POSN                                  0x7
3513:          #define _SSP2MSK_MSK7_POSITION                              0x7
3514:          #define _SSP2MSK_MSK7_SIZE                                  0x1
3515:          #define _SSP2MSK_MSK7_LENGTH                                0x1
3516:          #define _SSP2MSK_MSK7_MASK                                  0x80
3517:          
3518:          // Register: SSP2CON2
3519:          extern volatile unsigned char           SSP2CON2            @ 0xF6B;
3520:          #ifndef _LIB_BUILD
3521:          asm("SSP2CON2 equ 0F6Bh");
3522:          #endif
3523:          // bitfield definitions
3524:          typedef union {
3525:              struct {
3526:                  unsigned SEN                    :1;
3527:                  unsigned RSEN                   :1;
3528:                  unsigned PEN                    :1;
3529:                  unsigned RCEN                   :1;
3530:                  unsigned ACKEN                  :1;
3531:                  unsigned ACKDT                  :1;
3532:                  unsigned ACKSTAT                :1;
3533:                  unsigned GCEN                   :1;
3534:              };
3535:              struct {
3536:                  unsigned                        :5;
3537:                  unsigned ACKDT2                 :1;
3538:              };
3539:              struct {
3540:                  unsigned                        :4;
3541:                  unsigned ACKEN2                 :1;
3542:              };
3543:              struct {
3544:                  unsigned                        :6;
3545:                  unsigned ACKSTAT2               :1;
3546:              };
3547:              struct {
3548:                  unsigned                        :1;
3549:                  unsigned ADMSK12                :1;
3550:              };
3551:              struct {
3552:                  unsigned                        :2;
3553:                  unsigned ADMSK22                :1;
3554:              };
3555:              struct {
3556:                  unsigned                        :3;
3557:                  unsigned ADMSK32                :1;
3558:              };
3559:              struct {
3560:                  unsigned                        :4;
3561:                  unsigned ADMSK42                :1;
3562:              };
3563:              struct {
3564:                  unsigned                        :5;
3565:                  unsigned ADMSK52                :1;
3566:              };
3567:              struct {
3568:                  unsigned                        :7;
3569:                  unsigned GCEN2                  :1;
3570:              };
3571:              struct {
3572:                  unsigned                        :2;
3573:                  unsigned PEN2                   :1;
3574:              };
3575:              struct {
3576:                  unsigned                        :3;
3577:                  unsigned RCEN2                  :1;
3578:              };
3579:              struct {
3580:                  unsigned                        :1;
3581:                  unsigned RSEN2                  :1;
3582:              };
3583:              struct {
3584:                  unsigned SEN2                   :1;
3585:              };
3586:          } SSP2CON2bits_t;
3587:          extern volatile SSP2CON2bits_t SSP2CON2bits @ 0xF6B;
3588:          // bitfield macros
3589:          #define _SSP2CON2_SEN_POSN                                  0x0
3590:          #define _SSP2CON2_SEN_POSITION                              0x0
3591:          #define _SSP2CON2_SEN_SIZE                                  0x1
3592:          #define _SSP2CON2_SEN_LENGTH                                0x1
3593:          #define _SSP2CON2_SEN_MASK                                  0x1
3594:          #define _SSP2CON2_RSEN_POSN                                 0x1
3595:          #define _SSP2CON2_RSEN_POSITION                             0x1
3596:          #define _SSP2CON2_RSEN_SIZE                                 0x1
3597:          #define _SSP2CON2_RSEN_LENGTH                               0x1
3598:          #define _SSP2CON2_RSEN_MASK                                 0x2
3599:          #define _SSP2CON2_PEN_POSN                                  0x2
3600:          #define _SSP2CON2_PEN_POSITION                              0x2
3601:          #define _SSP2CON2_PEN_SIZE                                  0x1
3602:          #define _SSP2CON2_PEN_LENGTH                                0x1
3603:          #define _SSP2CON2_PEN_MASK                                  0x4
3604:          #define _SSP2CON2_RCEN_POSN                                 0x3
3605:          #define _SSP2CON2_RCEN_POSITION                             0x3
3606:          #define _SSP2CON2_RCEN_SIZE                                 0x1
3607:          #define _SSP2CON2_RCEN_LENGTH                               0x1
3608:          #define _SSP2CON2_RCEN_MASK                                 0x8
3609:          #define _SSP2CON2_ACKEN_POSN                                0x4
3610:          #define _SSP2CON2_ACKEN_POSITION                            0x4
3611:          #define _SSP2CON2_ACKEN_SIZE                                0x1
3612:          #define _SSP2CON2_ACKEN_LENGTH                              0x1
3613:          #define _SSP2CON2_ACKEN_MASK                                0x10
3614:          #define _SSP2CON2_ACKDT_POSN                                0x5
3615:          #define _SSP2CON2_ACKDT_POSITION                            0x5
3616:          #define _SSP2CON2_ACKDT_SIZE                                0x1
3617:          #define _SSP2CON2_ACKDT_LENGTH                              0x1
3618:          #define _SSP2CON2_ACKDT_MASK                                0x20
3619:          #define _SSP2CON2_ACKSTAT_POSN                              0x6
3620:          #define _SSP2CON2_ACKSTAT_POSITION                          0x6
3621:          #define _SSP2CON2_ACKSTAT_SIZE                              0x1
3622:          #define _SSP2CON2_ACKSTAT_LENGTH                            0x1
3623:          #define _SSP2CON2_ACKSTAT_MASK                              0x40
3624:          #define _SSP2CON2_GCEN_POSN                                 0x7
3625:          #define _SSP2CON2_GCEN_POSITION                             0x7
3626:          #define _SSP2CON2_GCEN_SIZE                                 0x1
3627:          #define _SSP2CON2_GCEN_LENGTH                               0x1
3628:          #define _SSP2CON2_GCEN_MASK                                 0x80
3629:          #define _SSP2CON2_ACKDT2_POSN                               0x5
3630:          #define _SSP2CON2_ACKDT2_POSITION                           0x5
3631:          #define _SSP2CON2_ACKDT2_SIZE                               0x1
3632:          #define _SSP2CON2_ACKDT2_LENGTH                             0x1
3633:          #define _SSP2CON2_ACKDT2_MASK                               0x20
3634:          #define _SSP2CON2_ACKEN2_POSN                               0x4
3635:          #define _SSP2CON2_ACKEN2_POSITION                           0x4
3636:          #define _SSP2CON2_ACKEN2_SIZE                               0x1
3637:          #define _SSP2CON2_ACKEN2_LENGTH                             0x1
3638:          #define _SSP2CON2_ACKEN2_MASK                               0x10
3639:          #define _SSP2CON2_ACKSTAT2_POSN                             0x6
3640:          #define _SSP2CON2_ACKSTAT2_POSITION                         0x6
3641:          #define _SSP2CON2_ACKSTAT2_SIZE                             0x1
3642:          #define _SSP2CON2_ACKSTAT2_LENGTH                           0x1
3643:          #define _SSP2CON2_ACKSTAT2_MASK                             0x40
3644:          #define _SSP2CON2_ADMSK12_POSN                              0x1
3645:          #define _SSP2CON2_ADMSK12_POSITION                          0x1
3646:          #define _SSP2CON2_ADMSK12_SIZE                              0x1
3647:          #define _SSP2CON2_ADMSK12_LENGTH                            0x1
3648:          #define _SSP2CON2_ADMSK12_MASK                              0x2
3649:          #define _SSP2CON2_ADMSK22_POSN                              0x2
3650:          #define _SSP2CON2_ADMSK22_POSITION                          0x2
3651:          #define _SSP2CON2_ADMSK22_SIZE                              0x1
3652:          #define _SSP2CON2_ADMSK22_LENGTH                            0x1
3653:          #define _SSP2CON2_ADMSK22_MASK                              0x4
3654:          #define _SSP2CON2_ADMSK32_POSN                              0x3
3655:          #define _SSP2CON2_ADMSK32_POSITION                          0x3
3656:          #define _SSP2CON2_ADMSK32_SIZE                              0x1
3657:          #define _SSP2CON2_ADMSK32_LENGTH                            0x1
3658:          #define _SSP2CON2_ADMSK32_MASK                              0x8
3659:          #define _SSP2CON2_ADMSK42_POSN                              0x4
3660:          #define _SSP2CON2_ADMSK42_POSITION                          0x4
3661:          #define _SSP2CON2_ADMSK42_SIZE                              0x1
3662:          #define _SSP2CON2_ADMSK42_LENGTH                            0x1
3663:          #define _SSP2CON2_ADMSK42_MASK                              0x10
3664:          #define _SSP2CON2_ADMSK52_POSN                              0x5
3665:          #define _SSP2CON2_ADMSK52_POSITION                          0x5
3666:          #define _SSP2CON2_ADMSK52_SIZE                              0x1
3667:          #define _SSP2CON2_ADMSK52_LENGTH                            0x1
3668:          #define _SSP2CON2_ADMSK52_MASK                              0x20
3669:          #define _SSP2CON2_GCEN2_POSN                                0x7
3670:          #define _SSP2CON2_GCEN2_POSITION                            0x7
3671:          #define _SSP2CON2_GCEN2_SIZE                                0x1
3672:          #define _SSP2CON2_GCEN2_LENGTH                              0x1
3673:          #define _SSP2CON2_GCEN2_MASK                                0x80
3674:          #define _SSP2CON2_PEN2_POSN                                 0x2
3675:          #define _SSP2CON2_PEN2_POSITION                             0x2
3676:          #define _SSP2CON2_PEN2_SIZE                                 0x1
3677:          #define _SSP2CON2_PEN2_LENGTH                               0x1
3678:          #define _SSP2CON2_PEN2_MASK                                 0x4
3679:          #define _SSP2CON2_RCEN2_POSN                                0x3
3680:          #define _SSP2CON2_RCEN2_POSITION                            0x3
3681:          #define _SSP2CON2_RCEN2_SIZE                                0x1
3682:          #define _SSP2CON2_RCEN2_LENGTH                              0x1
3683:          #define _SSP2CON2_RCEN2_MASK                                0x8
3684:          #define _SSP2CON2_RSEN2_POSN                                0x1
3685:          #define _SSP2CON2_RSEN2_POSITION                            0x1
3686:          #define _SSP2CON2_RSEN2_SIZE                                0x1
3687:          #define _SSP2CON2_RSEN2_LENGTH                              0x1
3688:          #define _SSP2CON2_RSEN2_MASK                                0x2
3689:          #define _SSP2CON2_SEN2_POSN                                 0x0
3690:          #define _SSP2CON2_SEN2_POSITION                             0x0
3691:          #define _SSP2CON2_SEN2_SIZE                                 0x1
3692:          #define _SSP2CON2_SEN2_LENGTH                               0x1
3693:          #define _SSP2CON2_SEN2_MASK                                 0x1
3694:          
3695:          // Register: SSP2CON1
3696:          extern volatile unsigned char           SSP2CON1            @ 0xF6C;
3697:          #ifndef _LIB_BUILD
3698:          asm("SSP2CON1 equ 0F6Ch");
3699:          #endif
3700:          // bitfield definitions
3701:          typedef union {
3702:              struct {
3703:                  unsigned SSPM                   :4;
3704:                  unsigned CKP                    :1;
3705:                  unsigned SSPEN                  :1;
3706:                  unsigned SSPOV                  :1;
3707:                  unsigned WCOL                   :1;
3708:              };
3709:              struct {
3710:                  unsigned SSPM0                  :1;
3711:                  unsigned SSPM1                  :1;
3712:                  unsigned SSPM2                  :1;
3713:                  unsigned SSPM3                  :1;
3714:              };
3715:              struct {
3716:                  unsigned                        :4;
3717:                  unsigned CKP2                   :1;
3718:              };
3719:              struct {
3720:                  unsigned                        :5;
3721:                  unsigned SSPEN2                 :1;
3722:              };
3723:              struct {
3724:                  unsigned SSPM02                 :1;
3725:              };
3726:              struct {
3727:                  unsigned                        :1;
3728:                  unsigned SSPM12                 :1;
3729:              };
3730:              struct {
3731:                  unsigned                        :2;
3732:                  unsigned SSPM22                 :1;
3733:              };
3734:              struct {
3735:                  unsigned                        :3;
3736:                  unsigned SSPM32                 :1;
3737:              };
3738:              struct {
3739:                  unsigned                        :6;
3740:                  unsigned SSPOV2                 :1;
3741:              };
3742:              struct {
3743:                  unsigned                        :7;
3744:                  unsigned WCOL2                  :1;
3745:              };
3746:          } SSP2CON1bits_t;
3747:          extern volatile SSP2CON1bits_t SSP2CON1bits @ 0xF6C;
3748:          // bitfield macros
3749:          #define _SSP2CON1_SSPM_POSN                                 0x0
3750:          #define _SSP2CON1_SSPM_POSITION                             0x0
3751:          #define _SSP2CON1_SSPM_SIZE                                 0x4
3752:          #define _SSP2CON1_SSPM_LENGTH                               0x4
3753:          #define _SSP2CON1_SSPM_MASK                                 0xF
3754:          #define _SSP2CON1_CKP_POSN                                  0x4
3755:          #define _SSP2CON1_CKP_POSITION                              0x4
3756:          #define _SSP2CON1_CKP_SIZE                                  0x1
3757:          #define _SSP2CON1_CKP_LENGTH                                0x1
3758:          #define _SSP2CON1_CKP_MASK                                  0x10
3759:          #define _SSP2CON1_SSPEN_POSN                                0x5
3760:          #define _SSP2CON1_SSPEN_POSITION                            0x5
3761:          #define _SSP2CON1_SSPEN_SIZE                                0x1
3762:          #define _SSP2CON1_SSPEN_LENGTH                              0x1
3763:          #define _SSP2CON1_SSPEN_MASK                                0x20
3764:          #define _SSP2CON1_SSPOV_POSN                                0x6
3765:          #define _SSP2CON1_SSPOV_POSITION                            0x6
3766:          #define _SSP2CON1_SSPOV_SIZE                                0x1
3767:          #define _SSP2CON1_SSPOV_LENGTH                              0x1
3768:          #define _SSP2CON1_SSPOV_MASK                                0x40
3769:          #define _SSP2CON1_WCOL_POSN                                 0x7
3770:          #define _SSP2CON1_WCOL_POSITION                             0x7
3771:          #define _SSP2CON1_WCOL_SIZE                                 0x1
3772:          #define _SSP2CON1_WCOL_LENGTH                               0x1
3773:          #define _SSP2CON1_WCOL_MASK                                 0x80
3774:          #define _SSP2CON1_SSPM0_POSN                                0x0
3775:          #define _SSP2CON1_SSPM0_POSITION                            0x0
3776:          #define _SSP2CON1_SSPM0_SIZE                                0x1
3777:          #define _SSP2CON1_SSPM0_LENGTH                              0x1
3778:          #define _SSP2CON1_SSPM0_MASK                                0x1
3779:          #define _SSP2CON1_SSPM1_POSN                                0x1
3780:          #define _SSP2CON1_SSPM1_POSITION                            0x1
3781:          #define _SSP2CON1_SSPM1_SIZE                                0x1
3782:          #define _SSP2CON1_SSPM1_LENGTH                              0x1
3783:          #define _SSP2CON1_SSPM1_MASK                                0x2
3784:          #define _SSP2CON1_SSPM2_POSN                                0x2
3785:          #define _SSP2CON1_SSPM2_POSITION                            0x2
3786:          #define _SSP2CON1_SSPM2_SIZE                                0x1
3787:          #define _SSP2CON1_SSPM2_LENGTH                              0x1
3788:          #define _SSP2CON1_SSPM2_MASK                                0x4
3789:          #define _SSP2CON1_SSPM3_POSN                                0x3
3790:          #define _SSP2CON1_SSPM3_POSITION                            0x3
3791:          #define _SSP2CON1_SSPM3_SIZE                                0x1
3792:          #define _SSP2CON1_SSPM3_LENGTH                              0x1
3793:          #define _SSP2CON1_SSPM3_MASK                                0x8
3794:          #define _SSP2CON1_CKP2_POSN                                 0x4
3795:          #define _SSP2CON1_CKP2_POSITION                             0x4
3796:          #define _SSP2CON1_CKP2_SIZE                                 0x1
3797:          #define _SSP2CON1_CKP2_LENGTH                               0x1
3798:          #define _SSP2CON1_CKP2_MASK                                 0x10
3799:          #define _SSP2CON1_SSPEN2_POSN                               0x5
3800:          #define _SSP2CON1_SSPEN2_POSITION                           0x5
3801:          #define _SSP2CON1_SSPEN2_SIZE                               0x1
3802:          #define _SSP2CON1_SSPEN2_LENGTH                             0x1
3803:          #define _SSP2CON1_SSPEN2_MASK                               0x20
3804:          #define _SSP2CON1_SSPM02_POSN                               0x0
3805:          #define _SSP2CON1_SSPM02_POSITION                           0x0
3806:          #define _SSP2CON1_SSPM02_SIZE                               0x1
3807:          #define _SSP2CON1_SSPM02_LENGTH                             0x1
3808:          #define _SSP2CON1_SSPM02_MASK                               0x1
3809:          #define _SSP2CON1_SSPM12_POSN                               0x1
3810:          #define _SSP2CON1_SSPM12_POSITION                           0x1
3811:          #define _SSP2CON1_SSPM12_SIZE                               0x1
3812:          #define _SSP2CON1_SSPM12_LENGTH                             0x1
3813:          #define _SSP2CON1_SSPM12_MASK                               0x2
3814:          #define _SSP2CON1_SSPM22_POSN                               0x2
3815:          #define _SSP2CON1_SSPM22_POSITION                           0x2
3816:          #define _SSP2CON1_SSPM22_SIZE                               0x1
3817:          #define _SSP2CON1_SSPM22_LENGTH                             0x1
3818:          #define _SSP2CON1_SSPM22_MASK                               0x4
3819:          #define _SSP2CON1_SSPM32_POSN                               0x3
3820:          #define _SSP2CON1_SSPM32_POSITION                           0x3
3821:          #define _SSP2CON1_SSPM32_SIZE                               0x1
3822:          #define _SSP2CON1_SSPM32_LENGTH                             0x1
3823:          #define _SSP2CON1_SSPM32_MASK                               0x8
3824:          #define _SSP2CON1_SSPOV2_POSN                               0x6
3825:          #define _SSP2CON1_SSPOV2_POSITION                           0x6
3826:          #define _SSP2CON1_SSPOV2_SIZE                               0x1
3827:          #define _SSP2CON1_SSPOV2_LENGTH                             0x1
3828:          #define _SSP2CON1_SSPOV2_MASK                               0x40
3829:          #define _SSP2CON1_WCOL2_POSN                                0x7
3830:          #define _SSP2CON1_WCOL2_POSITION                            0x7
3831:          #define _SSP2CON1_WCOL2_SIZE                                0x1
3832:          #define _SSP2CON1_WCOL2_LENGTH                              0x1
3833:          #define _SSP2CON1_WCOL2_MASK                                0x80
3834:          
3835:          // Register: SSP2STAT
3836:          extern volatile unsigned char           SSP2STAT            @ 0xF6D;
3837:          #ifndef _LIB_BUILD
3838:          asm("SSP2STAT equ 0F6Dh");
3839:          #endif
3840:          // bitfield definitions
3841:          typedef union {
3842:              struct {
3843:                  unsigned                        :2;
3844:                  unsigned R_NOT_W                :1;
3845:              };
3846:              struct {
3847:                  unsigned                        :5;
3848:                  unsigned D_NOT_A                :1;
3849:              };
3850:              struct {
3851:                  unsigned BF                     :1;
3852:                  unsigned UA                     :1;
3853:                  unsigned R_nW                   :1;
3854:                  unsigned S                      :1;
3855:                  unsigned P                      :1;
3856:                  unsigned D_nA                   :1;
3857:                  unsigned CKE                    :1;
3858:                  unsigned SMP                    :1;
3859:              };
3860:              struct {
3861:                  unsigned                        :2;
3862:                  unsigned R                      :1;
3863:                  unsigned                        :2;
3864:                  unsigned D                      :1;
3865:              };
3866:              struct {
3867:                  unsigned                        :2;
3868:                  unsigned W                      :1;
3869:                  unsigned                        :2;
3870:                  unsigned A                      :1;
3871:              };
3872:              struct {
3873:                  unsigned                        :2;
3874:                  unsigned nW                     :1;
3875:                  unsigned                        :2;
3876:                  unsigned nA                     :1;
3877:              };
3878:              struct {
3879:                  unsigned                        :2;
3880:                  unsigned R_W                    :1;
3881:                  unsigned                        :2;
3882:                  unsigned D_A                    :1;
3883:              };
3884:              struct {
3885:                  unsigned                        :2;
3886:                  unsigned NOT_WRITE              :1;
3887:              };
3888:              struct {
3889:                  unsigned                        :5;
3890:                  unsigned NOT_ADDRESS            :1;
3891:              };
3892:              struct {
3893:                  unsigned                        :2;
3894:                  unsigned nWRITE                 :1;
3895:                  unsigned                        :2;
3896:                  unsigned nADDRESS               :1;
3897:              };
3898:              struct {
3899:                  unsigned BF2                    :1;
3900:              };
3901:              struct {
3902:                  unsigned                        :6;
3903:                  unsigned CKE2                   :1;
3904:              };
3905:              struct {
3906:                  unsigned                        :5;
3907:                  unsigned DA2                    :1;
3908:              };
3909:              struct {
3910:                  unsigned                        :5;
3911:                  unsigned DATA_ADDRESS2          :1;
3912:              };
3913:              struct {
3914:                  unsigned                        :5;
3915:                  unsigned D_A2                   :1;
3916:              };
3917:              struct {
3918:                  unsigned                        :5;
3919:                  unsigned D_nA2                  :1;
3920:              };
3921:              struct {
3922:                  unsigned                        :5;
3923:                  unsigned I2C_DAT2               :1;
3924:              };
3925:              struct {
3926:                  unsigned                        :2;
3927:                  unsigned I2C_READ2              :1;
3928:              };
3929:              struct {
3930:                  unsigned                        :3;
3931:                  unsigned I2C_START2             :1;
3932:              };
3933:              struct {
3934:                  unsigned                        :4;
3935:                  unsigned I2C_STOP2              :1;
3936:              };
3937:              struct {
3938:                  unsigned                        :4;
3939:                  unsigned P2                     :1;
3940:              };
3941:              struct {
3942:                  unsigned                        :2;
3943:                  unsigned READ_WRITE2            :1;
3944:              };
3945:              struct {
3946:                  unsigned                        :2;
3947:                  unsigned RW2                    :1;
3948:              };
3949:              struct {
3950:                  unsigned                        :2;
3951:                  unsigned R_W2                   :1;
3952:              };
3953:              struct {
3954:                  unsigned                        :2;
3955:                  unsigned R_nW2                  :1;
3956:              };
3957:              struct {
3958:                  unsigned                        :3;
3959:                  unsigned S2                     :1;
3960:              };
3961:              struct {
3962:                  unsigned                        :7;
3963:                  unsigned SMP2                   :1;
3964:              };
3965:              struct {
3966:                  unsigned                        :3;
3967:                  unsigned START2                 :1;
3968:              };
3969:              struct {
3970:                  unsigned                        :4;
3971:                  unsigned STOP2                  :1;
3972:              };
3973:              struct {
3974:                  unsigned                        :1;
3975:                  unsigned UA2                    :1;
3976:              };
3977:              struct {
3978:                  unsigned                        :5;
3979:                  unsigned nA2                    :1;
3980:              };
3981:              struct {
3982:                  unsigned                        :5;
3983:                  unsigned nADDRESS2              :1;
3984:              };
3985:              struct {
3986:                  unsigned                        :2;
3987:                  unsigned nW2                    :1;
3988:              };
3989:              struct {
3990:                  unsigned                        :2;
3991:                  unsigned nWRITE2                :1;
3992:              };
3993:          } SSP2STATbits_t;
3994:          extern volatile SSP2STATbits_t SSP2STATbits @ 0xF6D;
3995:          // bitfield macros
3996:          #define _SSP2STAT_R_NOT_W_POSN                              0x2
3997:          #define _SSP2STAT_R_NOT_W_POSITION                          0x2
3998:          #define _SSP2STAT_R_NOT_W_SIZE                              0x1
3999:          #define _SSP2STAT_R_NOT_W_LENGTH                            0x1
4000:          #define _SSP2STAT_R_NOT_W_MASK                              0x4
4001:          #define _SSP2STAT_D_NOT_A_POSN                              0x5
4002:          #define _SSP2STAT_D_NOT_A_POSITION                          0x5
4003:          #define _SSP2STAT_D_NOT_A_SIZE                              0x1
4004:          #define _SSP2STAT_D_NOT_A_LENGTH                            0x1
4005:          #define _SSP2STAT_D_NOT_A_MASK                              0x20
4006:          #define _SSP2STAT_BF_POSN                                   0x0
4007:          #define _SSP2STAT_BF_POSITION                               0x0
4008:          #define _SSP2STAT_BF_SIZE                                   0x1
4009:          #define _SSP2STAT_BF_LENGTH                                 0x1
4010:          #define _SSP2STAT_BF_MASK                                   0x1
4011:          #define _SSP2STAT_UA_POSN                                   0x1
4012:          #define _SSP2STAT_UA_POSITION                               0x1
4013:          #define _SSP2STAT_UA_SIZE                                   0x1
4014:          #define _SSP2STAT_UA_LENGTH                                 0x1
4015:          #define _SSP2STAT_UA_MASK                                   0x2
4016:          #define _SSP2STAT_R_nW_POSN                                 0x2
4017:          #define _SSP2STAT_R_nW_POSITION                             0x2
4018:          #define _SSP2STAT_R_nW_SIZE                                 0x1
4019:          #define _SSP2STAT_R_nW_LENGTH                               0x1
4020:          #define _SSP2STAT_R_nW_MASK                                 0x4
4021:          #define _SSP2STAT_S_POSN                                    0x3
4022:          #define _SSP2STAT_S_POSITION                                0x3
4023:          #define _SSP2STAT_S_SIZE                                    0x1
4024:          #define _SSP2STAT_S_LENGTH                                  0x1
4025:          #define _SSP2STAT_S_MASK                                    0x8
4026:          #define _SSP2STAT_P_POSN                                    0x4
4027:          #define _SSP2STAT_P_POSITION                                0x4
4028:          #define _SSP2STAT_P_SIZE                                    0x1
4029:          #define _SSP2STAT_P_LENGTH                                  0x1
4030:          #define _SSP2STAT_P_MASK                                    0x10
4031:          #define _SSP2STAT_D_nA_POSN                                 0x5
4032:          #define _SSP2STAT_D_nA_POSITION                             0x5
4033:          #define _SSP2STAT_D_nA_SIZE                                 0x1
4034:          #define _SSP2STAT_D_nA_LENGTH                               0x1
4035:          #define _SSP2STAT_D_nA_MASK                                 0x20
4036:          #define _SSP2STAT_CKE_POSN                                  0x6
4037:          #define _SSP2STAT_CKE_POSITION                              0x6
4038:          #define _SSP2STAT_CKE_SIZE                                  0x1
4039:          #define _SSP2STAT_CKE_LENGTH                                0x1
4040:          #define _SSP2STAT_CKE_MASK                                  0x40
4041:          #define _SSP2STAT_SMP_POSN                                  0x7
4042:          #define _SSP2STAT_SMP_POSITION                              0x7
4043:          #define _SSP2STAT_SMP_SIZE                                  0x1
4044:          #define _SSP2STAT_SMP_LENGTH                                0x1
4045:          #define _SSP2STAT_SMP_MASK                                  0x80
4046:          #define _SSP2STAT_R_POSN                                    0x2
4047:          #define _SSP2STAT_R_POSITION                                0x2
4048:          #define _SSP2STAT_R_SIZE                                    0x1
4049:          #define _SSP2STAT_R_LENGTH                                  0x1
4050:          #define _SSP2STAT_R_MASK                                    0x4
4051:          #define _SSP2STAT_D_POSN                                    0x5
4052:          #define _SSP2STAT_D_POSITION                                0x5
4053:          #define _SSP2STAT_D_SIZE                                    0x1
4054:          #define _SSP2STAT_D_LENGTH                                  0x1
4055:          #define _SSP2STAT_D_MASK                                    0x20
4056:          #define _SSP2STAT_W_POSN                                    0x2
4057:          #define _SSP2STAT_W_POSITION                                0x2
4058:          #define _SSP2STAT_W_SIZE                                    0x1
4059:          #define _SSP2STAT_W_LENGTH                                  0x1
4060:          #define _SSP2STAT_W_MASK                                    0x4
4061:          #define _SSP2STAT_A_POSN                                    0x5
4062:          #define _SSP2STAT_A_POSITION                                0x5
4063:          #define _SSP2STAT_A_SIZE                                    0x1
4064:          #define _SSP2STAT_A_LENGTH                                  0x1
4065:          #define _SSP2STAT_A_MASK                                    0x20
4066:          #define _SSP2STAT_nW_POSN                                   0x2
4067:          #define _SSP2STAT_nW_POSITION                               0x2
4068:          #define _SSP2STAT_nW_SIZE                                   0x1
4069:          #define _SSP2STAT_nW_LENGTH                                 0x1
4070:          #define _SSP2STAT_nW_MASK                                   0x4
4071:          #define _SSP2STAT_nA_POSN                                   0x5
4072:          #define _SSP2STAT_nA_POSITION                               0x5
4073:          #define _SSP2STAT_nA_SIZE                                   0x1
4074:          #define _SSP2STAT_nA_LENGTH                                 0x1
4075:          #define _SSP2STAT_nA_MASK                                   0x20
4076:          #define _SSP2STAT_R_W_POSN                                  0x2
4077:          #define _SSP2STAT_R_W_POSITION                              0x2
4078:          #define _SSP2STAT_R_W_SIZE                                  0x1
4079:          #define _SSP2STAT_R_W_LENGTH                                0x1
4080:          #define _SSP2STAT_R_W_MASK                                  0x4
4081:          #define _SSP2STAT_D_A_POSN                                  0x5
4082:          #define _SSP2STAT_D_A_POSITION                              0x5
4083:          #define _SSP2STAT_D_A_SIZE                                  0x1
4084:          #define _SSP2STAT_D_A_LENGTH                                0x1
4085:          #define _SSP2STAT_D_A_MASK                                  0x20
4086:          #define _SSP2STAT_NOT_WRITE_POSN                            0x2
4087:          #define _SSP2STAT_NOT_WRITE_POSITION                        0x2
4088:          #define _SSP2STAT_NOT_WRITE_SIZE                            0x1
4089:          #define _SSP2STAT_NOT_WRITE_LENGTH                          0x1
4090:          #define _SSP2STAT_NOT_WRITE_MASK                            0x4
4091:          #define _SSP2STAT_NOT_ADDRESS_POSN                          0x5
4092:          #define _SSP2STAT_NOT_ADDRESS_POSITION                      0x5
4093:          #define _SSP2STAT_NOT_ADDRESS_SIZE                          0x1
4094:          #define _SSP2STAT_NOT_ADDRESS_LENGTH                        0x1
4095:          #define _SSP2STAT_NOT_ADDRESS_MASK                          0x20
4096:          #define _SSP2STAT_nWRITE_POSN                               0x2
4097:          #define _SSP2STAT_nWRITE_POSITION                           0x2
4098:          #define _SSP2STAT_nWRITE_SIZE                               0x1
4099:          #define _SSP2STAT_nWRITE_LENGTH                             0x1
4100:          #define _SSP2STAT_nWRITE_MASK                               0x4
4101:          #define _SSP2STAT_nADDRESS_POSN                             0x5
4102:          #define _SSP2STAT_nADDRESS_POSITION                         0x5
4103:          #define _SSP2STAT_nADDRESS_SIZE                             0x1
4104:          #define _SSP2STAT_nADDRESS_LENGTH                           0x1
4105:          #define _SSP2STAT_nADDRESS_MASK                             0x20
4106:          #define _SSP2STAT_BF2_POSN                                  0x0
4107:          #define _SSP2STAT_BF2_POSITION                              0x0
4108:          #define _SSP2STAT_BF2_SIZE                                  0x1
4109:          #define _SSP2STAT_BF2_LENGTH                                0x1
4110:          #define _SSP2STAT_BF2_MASK                                  0x1
4111:          #define _SSP2STAT_CKE2_POSN                                 0x6
4112:          #define _SSP2STAT_CKE2_POSITION                             0x6
4113:          #define _SSP2STAT_CKE2_SIZE                                 0x1
4114:          #define _SSP2STAT_CKE2_LENGTH                               0x1
4115:          #define _SSP2STAT_CKE2_MASK                                 0x40
4116:          #define _SSP2STAT_DA2_POSN                                  0x5
4117:          #define _SSP2STAT_DA2_POSITION                              0x5
4118:          #define _SSP2STAT_DA2_SIZE                                  0x1
4119:          #define _SSP2STAT_DA2_LENGTH                                0x1
4120:          #define _SSP2STAT_DA2_MASK                                  0x20
4121:          #define _SSP2STAT_DATA_ADDRESS2_POSN                        0x5
4122:          #define _SSP2STAT_DATA_ADDRESS2_POSITION                    0x5
4123:          #define _SSP2STAT_DATA_ADDRESS2_SIZE                        0x1
4124:          #define _SSP2STAT_DATA_ADDRESS2_LENGTH                      0x1
4125:          #define _SSP2STAT_DATA_ADDRESS2_MASK                        0x20
4126:          #define _SSP2STAT_D_A2_POSN                                 0x5
4127:          #define _SSP2STAT_D_A2_POSITION                             0x5
4128:          #define _SSP2STAT_D_A2_SIZE                                 0x1
4129:          #define _SSP2STAT_D_A2_LENGTH                               0x1
4130:          #define _SSP2STAT_D_A2_MASK                                 0x20
4131:          #define _SSP2STAT_D_nA2_POSN                                0x5
4132:          #define _SSP2STAT_D_nA2_POSITION                            0x5
4133:          #define _SSP2STAT_D_nA2_SIZE                                0x1
4134:          #define _SSP2STAT_D_nA2_LENGTH                              0x1
4135:          #define _SSP2STAT_D_nA2_MASK                                0x20
4136:          #define _SSP2STAT_I2C_DAT2_POSN                             0x5
4137:          #define _SSP2STAT_I2C_DAT2_POSITION                         0x5
4138:          #define _SSP2STAT_I2C_DAT2_SIZE                             0x1
4139:          #define _SSP2STAT_I2C_DAT2_LENGTH                           0x1
4140:          #define _SSP2STAT_I2C_DAT2_MASK                             0x20
4141:          #define _SSP2STAT_I2C_READ2_POSN                            0x2
4142:          #define _SSP2STAT_I2C_READ2_POSITION                        0x2
4143:          #define _SSP2STAT_I2C_READ2_SIZE                            0x1
4144:          #define _SSP2STAT_I2C_READ2_LENGTH                          0x1
4145:          #define _SSP2STAT_I2C_READ2_MASK                            0x4
4146:          #define _SSP2STAT_I2C_START2_POSN                           0x3
4147:          #define _SSP2STAT_I2C_START2_POSITION                       0x3
4148:          #define _SSP2STAT_I2C_START2_SIZE                           0x1
4149:          #define _SSP2STAT_I2C_START2_LENGTH                         0x1
4150:          #define _SSP2STAT_I2C_START2_MASK                           0x8
4151:          #define _SSP2STAT_I2C_STOP2_POSN                            0x4
4152:          #define _SSP2STAT_I2C_STOP2_POSITION                        0x4
4153:          #define _SSP2STAT_I2C_STOP2_SIZE                            0x1
4154:          #define _SSP2STAT_I2C_STOP2_LENGTH                          0x1
4155:          #define _SSP2STAT_I2C_STOP2_MASK                            0x10
4156:          #define _SSP2STAT_P2_POSN                                   0x4
4157:          #define _SSP2STAT_P2_POSITION                               0x4
4158:          #define _SSP2STAT_P2_SIZE                                   0x1
4159:          #define _SSP2STAT_P2_LENGTH                                 0x1
4160:          #define _SSP2STAT_P2_MASK                                   0x10
4161:          #define _SSP2STAT_READ_WRITE2_POSN                          0x2
4162:          #define _SSP2STAT_READ_WRITE2_POSITION                      0x2
4163:          #define _SSP2STAT_READ_WRITE2_SIZE                          0x1
4164:          #define _SSP2STAT_READ_WRITE2_LENGTH                        0x1
4165:          #define _SSP2STAT_READ_WRITE2_MASK                          0x4
4166:          #define _SSP2STAT_RW2_POSN                                  0x2
4167:          #define _SSP2STAT_RW2_POSITION                              0x2
4168:          #define _SSP2STAT_RW2_SIZE                                  0x1
4169:          #define _SSP2STAT_RW2_LENGTH                                0x1
4170:          #define _SSP2STAT_RW2_MASK                                  0x4
4171:          #define _SSP2STAT_R_W2_POSN                                 0x2
4172:          #define _SSP2STAT_R_W2_POSITION                             0x2
4173:          #define _SSP2STAT_R_W2_SIZE                                 0x1
4174:          #define _SSP2STAT_R_W2_LENGTH                               0x1
4175:          #define _SSP2STAT_R_W2_MASK                                 0x4
4176:          #define _SSP2STAT_R_nW2_POSN                                0x2
4177:          #define _SSP2STAT_R_nW2_POSITION                            0x2
4178:          #define _SSP2STAT_R_nW2_SIZE                                0x1
4179:          #define _SSP2STAT_R_nW2_LENGTH                              0x1
4180:          #define _SSP2STAT_R_nW2_MASK                                0x4
4181:          #define _SSP2STAT_S2_POSN                                   0x3
4182:          #define _SSP2STAT_S2_POSITION                               0x3
4183:          #define _SSP2STAT_S2_SIZE                                   0x1
4184:          #define _SSP2STAT_S2_LENGTH                                 0x1
4185:          #define _SSP2STAT_S2_MASK                                   0x8
4186:          #define _SSP2STAT_SMP2_POSN                                 0x7
4187:          #define _SSP2STAT_SMP2_POSITION                             0x7
4188:          #define _SSP2STAT_SMP2_SIZE                                 0x1
4189:          #define _SSP2STAT_SMP2_LENGTH                               0x1
4190:          #define _SSP2STAT_SMP2_MASK                                 0x80
4191:          #define _SSP2STAT_START2_POSN                               0x3
4192:          #define _SSP2STAT_START2_POSITION                           0x3
4193:          #define _SSP2STAT_START2_SIZE                               0x1
4194:          #define _SSP2STAT_START2_LENGTH                             0x1
4195:          #define _SSP2STAT_START2_MASK                               0x8
4196:          #define _SSP2STAT_STOP2_POSN                                0x4
4197:          #define _SSP2STAT_STOP2_POSITION                            0x4
4198:          #define _SSP2STAT_STOP2_SIZE                                0x1
4199:          #define _SSP2STAT_STOP2_LENGTH                              0x1
4200:          #define _SSP2STAT_STOP2_MASK                                0x10
4201:          #define _SSP2STAT_UA2_POSN                                  0x1
4202:          #define _SSP2STAT_UA2_POSITION                              0x1
4203:          #define _SSP2STAT_UA2_SIZE                                  0x1
4204:          #define _SSP2STAT_UA2_LENGTH                                0x1
4205:          #define _SSP2STAT_UA2_MASK                                  0x2
4206:          #define _SSP2STAT_nA2_POSN                                  0x5
4207:          #define _SSP2STAT_nA2_POSITION                              0x5
4208:          #define _SSP2STAT_nA2_SIZE                                  0x1
4209:          #define _SSP2STAT_nA2_LENGTH                                0x1
4210:          #define _SSP2STAT_nA2_MASK                                  0x20
4211:          #define _SSP2STAT_nADDRESS2_POSN                            0x5
4212:          #define _SSP2STAT_nADDRESS2_POSITION                        0x5
4213:          #define _SSP2STAT_nADDRESS2_SIZE                            0x1
4214:          #define _SSP2STAT_nADDRESS2_LENGTH                          0x1
4215:          #define _SSP2STAT_nADDRESS2_MASK                            0x20
4216:          #define _SSP2STAT_nW2_POSN                                  0x2
4217:          #define _SSP2STAT_nW2_POSITION                              0x2
4218:          #define _SSP2STAT_nW2_SIZE                                  0x1
4219:          #define _SSP2STAT_nW2_LENGTH                                0x1
4220:          #define _SSP2STAT_nW2_MASK                                  0x4
4221:          #define _SSP2STAT_nWRITE2_POSN                              0x2
4222:          #define _SSP2STAT_nWRITE2_POSITION                          0x2
4223:          #define _SSP2STAT_nWRITE2_SIZE                              0x1
4224:          #define _SSP2STAT_nWRITE2_LENGTH                            0x1
4225:          #define _SSP2STAT_nWRITE2_MASK                              0x4
4226:          
4227:          // Register: SSP2ADD
4228:          extern volatile unsigned char           SSP2ADD             @ 0xF6E;
4229:          #ifndef _LIB_BUILD
4230:          asm("SSP2ADD equ 0F6Eh");
4231:          #endif
4232:          // bitfield definitions
4233:          typedef union {
4234:              struct {
4235:                  unsigned SSPADD                 :8;
4236:              };
4237:              struct {
4238:                  unsigned MSK02                  :1;
4239:              };
4240:              struct {
4241:                  unsigned                        :1;
4242:                  unsigned MSK12                  :1;
4243:              };
4244:              struct {
4245:                  unsigned                        :2;
4246:                  unsigned MSK22                  :1;
4247:              };
4248:              struct {
4249:                  unsigned                        :3;
4250:                  unsigned MSK32                  :1;
4251:              };
4252:              struct {
4253:                  unsigned                        :4;
4254:                  unsigned MSK42                  :1;
4255:              };
4256:              struct {
4257:                  unsigned                        :5;
4258:                  unsigned MSK52                  :1;
4259:              };
4260:              struct {
4261:                  unsigned                        :6;
4262:                  unsigned MSK62                  :1;
4263:              };
4264:              struct {
4265:                  unsigned                        :7;
4266:                  unsigned MSK72                  :1;
4267:              };
4268:          } SSP2ADDbits_t;
4269:          extern volatile SSP2ADDbits_t SSP2ADDbits @ 0xF6E;
4270:          // bitfield macros
4271:          #define _SSP2ADD_SSPADD_POSN                                0x0
4272:          #define _SSP2ADD_SSPADD_POSITION                            0x0
4273:          #define _SSP2ADD_SSPADD_SIZE                                0x8
4274:          #define _SSP2ADD_SSPADD_LENGTH                              0x8
4275:          #define _SSP2ADD_SSPADD_MASK                                0xFF
4276:          #define _SSP2ADD_MSK02_POSN                                 0x0
4277:          #define _SSP2ADD_MSK02_POSITION                             0x0
4278:          #define _SSP2ADD_MSK02_SIZE                                 0x1
4279:          #define _SSP2ADD_MSK02_LENGTH                               0x1
4280:          #define _SSP2ADD_MSK02_MASK                                 0x1
4281:          #define _SSP2ADD_MSK12_POSN                                 0x1
4282:          #define _SSP2ADD_MSK12_POSITION                             0x1
4283:          #define _SSP2ADD_MSK12_SIZE                                 0x1
4284:          #define _SSP2ADD_MSK12_LENGTH                               0x1
4285:          #define _SSP2ADD_MSK12_MASK                                 0x2
4286:          #define _SSP2ADD_MSK22_POSN                                 0x2
4287:          #define _SSP2ADD_MSK22_POSITION                             0x2
4288:          #define _SSP2ADD_MSK22_SIZE                                 0x1
4289:          #define _SSP2ADD_MSK22_LENGTH                               0x1
4290:          #define _SSP2ADD_MSK22_MASK                                 0x4
4291:          #define _SSP2ADD_MSK32_POSN                                 0x3
4292:          #define _SSP2ADD_MSK32_POSITION                             0x3
4293:          #define _SSP2ADD_MSK32_SIZE                                 0x1
4294:          #define _SSP2ADD_MSK32_LENGTH                               0x1
4295:          #define _SSP2ADD_MSK32_MASK                                 0x8
4296:          #define _SSP2ADD_MSK42_POSN                                 0x4
4297:          #define _SSP2ADD_MSK42_POSITION                             0x4
4298:          #define _SSP2ADD_MSK42_SIZE                                 0x1
4299:          #define _SSP2ADD_MSK42_LENGTH                               0x1
4300:          #define _SSP2ADD_MSK42_MASK                                 0x10
4301:          #define _SSP2ADD_MSK52_POSN                                 0x5
4302:          #define _SSP2ADD_MSK52_POSITION                             0x5
4303:          #define _SSP2ADD_MSK52_SIZE                                 0x1
4304:          #define _SSP2ADD_MSK52_LENGTH                               0x1
4305:          #define _SSP2ADD_MSK52_MASK                                 0x20
4306:          #define _SSP2ADD_MSK62_POSN                                 0x6
4307:          #define _SSP2ADD_MSK62_POSITION                             0x6
4308:          #define _SSP2ADD_MSK62_SIZE                                 0x1
4309:          #define _SSP2ADD_MSK62_LENGTH                               0x1
4310:          #define _SSP2ADD_MSK62_MASK                                 0x40
4311:          #define _SSP2ADD_MSK72_POSN                                 0x7
4312:          #define _SSP2ADD_MSK72_POSITION                             0x7
4313:          #define _SSP2ADD_MSK72_SIZE                                 0x1
4314:          #define _SSP2ADD_MSK72_LENGTH                               0x1
4315:          #define _SSP2ADD_MSK72_MASK                                 0x80
4316:          
4317:          // Register: SSP2BUF
4318:          extern volatile unsigned char           SSP2BUF             @ 0xF6F;
4319:          #ifndef _LIB_BUILD
4320:          asm("SSP2BUF equ 0F6Fh");
4321:          #endif
4322:          // bitfield definitions
4323:          typedef union {
4324:              struct {
4325:                  unsigned SSPBUF                 :8;
4326:              };
4327:          } SSP2BUFbits_t;
4328:          extern volatile SSP2BUFbits_t SSP2BUFbits @ 0xF6F;
4329:          // bitfield macros
4330:          #define _SSP2BUF_SSPBUF_POSN                                0x0
4331:          #define _SSP2BUF_SSPBUF_POSITION                            0x0
4332:          #define _SSP2BUF_SSPBUF_SIZE                                0x8
4333:          #define _SSP2BUF_SSPBUF_LENGTH                              0x8
4334:          #define _SSP2BUF_SSPBUF_MASK                                0xFF
4335:          
4336:          // Register: BAUDCON2
4337:          extern volatile unsigned char           BAUDCON2            @ 0xF70;
4338:          #ifndef _LIB_BUILD
4339:          asm("BAUDCON2 equ 0F70h");
4340:          #endif
4341:          // aliases
4342:          extern volatile unsigned char           BAUD2CON            @ 0xF70;
4343:          #ifndef _LIB_BUILD
4344:          asm("BAUD2CON equ 0F70h");
4345:          #endif
4346:          // bitfield definitions
4347:          typedef union {
4348:              struct {
4349:                  unsigned ABDEN                  :1;
4350:                  unsigned WUE                    :1;
4351:                  unsigned                        :1;
4352:                  unsigned BRG16                  :1;
4353:                  unsigned CKTXP                  :1;
4354:                  unsigned DTRXP                  :1;
4355:                  unsigned RCIDL                  :1;
4356:                  unsigned ABDOVF                 :1;
4357:              };
4358:              struct {
4359:                  unsigned                        :4;
4360:                  unsigned SCKP                   :1;
4361:              };
4362:              struct {
4363:                  unsigned ABDEN2                 :1;
4364:              };
4365:              struct {
4366:                  unsigned                        :7;
4367:                  unsigned ABDOVF2                :1;
4368:              };
4369:              struct {
4370:                  unsigned                        :3;
4371:                  unsigned BRG162                 :1;
4372:              };
4373:              struct {
4374:                  unsigned                        :5;
4375:                  unsigned DTRXP2                 :1;
4376:              };
4377:              struct {
4378:                  unsigned                        :6;
4379:                  unsigned RCIDL2                 :1;
4380:              };
4381:              struct {
4382:                  unsigned                        :6;
4383:                  unsigned RCMT2                  :1;
4384:              };
4385:              struct {
4386:                  unsigned                        :5;
4387:                  unsigned RXDTP2                 :1;
4388:              };
4389:              struct {
4390:                  unsigned                        :4;
4391:                  unsigned SCKP2                  :1;
4392:              };
4393:              struct {
4394:                  unsigned                        :4;
4395:                  unsigned TXCKP2                 :1;
4396:              };
4397:              struct {
4398:                  unsigned                        :1;
4399:                  unsigned WUE2                   :1;
4400:              };
4401:          } BAUDCON2bits_t;
4402:          extern volatile BAUDCON2bits_t BAUDCON2bits @ 0xF70;
4403:          // bitfield macros
4404:          #define _BAUDCON2_ABDEN_POSN                                0x0
4405:          #define _BAUDCON2_ABDEN_POSITION                            0x0
4406:          #define _BAUDCON2_ABDEN_SIZE                                0x1
4407:          #define _BAUDCON2_ABDEN_LENGTH                              0x1
4408:          #define _BAUDCON2_ABDEN_MASK                                0x1
4409:          #define _BAUDCON2_WUE_POSN                                  0x1
4410:          #define _BAUDCON2_WUE_POSITION                              0x1
4411:          #define _BAUDCON2_WUE_SIZE                                  0x1
4412:          #define _BAUDCON2_WUE_LENGTH                                0x1
4413:          #define _BAUDCON2_WUE_MASK                                  0x2
4414:          #define _BAUDCON2_BRG16_POSN                                0x3
4415:          #define _BAUDCON2_BRG16_POSITION                            0x3
4416:          #define _BAUDCON2_BRG16_SIZE                                0x1
4417:          #define _BAUDCON2_BRG16_LENGTH                              0x1
4418:          #define _BAUDCON2_BRG16_MASK                                0x8
4419:          #define _BAUDCON2_CKTXP_POSN                                0x4
4420:          #define _BAUDCON2_CKTXP_POSITION                            0x4
4421:          #define _BAUDCON2_CKTXP_SIZE                                0x1
4422:          #define _BAUDCON2_CKTXP_LENGTH                              0x1
4423:          #define _BAUDCON2_CKTXP_MASK                                0x10
4424:          #define _BAUDCON2_DTRXP_POSN                                0x5
4425:          #define _BAUDCON2_DTRXP_POSITION                            0x5
4426:          #define _BAUDCON2_DTRXP_SIZE                                0x1
4427:          #define _BAUDCON2_DTRXP_LENGTH                              0x1
4428:          #define _BAUDCON2_DTRXP_MASK                                0x20
4429:          #define _BAUDCON2_RCIDL_POSN                                0x6
4430:          #define _BAUDCON2_RCIDL_POSITION                            0x6
4431:          #define _BAUDCON2_RCIDL_SIZE                                0x1
4432:          #define _BAUDCON2_RCIDL_LENGTH                              0x1
4433:          #define _BAUDCON2_RCIDL_MASK                                0x40
4434:          #define _BAUDCON2_ABDOVF_POSN                               0x7
4435:          #define _BAUDCON2_ABDOVF_POSITION                           0x7
4436:          #define _BAUDCON2_ABDOVF_SIZE                               0x1
4437:          #define _BAUDCON2_ABDOVF_LENGTH                             0x1
4438:          #define _BAUDCON2_ABDOVF_MASK                               0x80
4439:          #define _BAUDCON2_SCKP_POSN                                 0x4
4440:          #define _BAUDCON2_SCKP_POSITION                             0x4
4441:          #define _BAUDCON2_SCKP_SIZE                                 0x1
4442:          #define _BAUDCON2_SCKP_LENGTH                               0x1
4443:          #define _BAUDCON2_SCKP_MASK                                 0x10
4444:          #define _BAUDCON2_ABDEN2_POSN                               0x0
4445:          #define _BAUDCON2_ABDEN2_POSITION                           0x0
4446:          #define _BAUDCON2_ABDEN2_SIZE                               0x1
4447:          #define _BAUDCON2_ABDEN2_LENGTH                             0x1
4448:          #define _BAUDCON2_ABDEN2_MASK                               0x1
4449:          #define _BAUDCON2_ABDOVF2_POSN                              0x7
4450:          #define _BAUDCON2_ABDOVF2_POSITION                          0x7
4451:          #define _BAUDCON2_ABDOVF2_SIZE                              0x1
4452:          #define _BAUDCON2_ABDOVF2_LENGTH                            0x1
4453:          #define _BAUDCON2_ABDOVF2_MASK                              0x80
4454:          #define _BAUDCON2_BRG162_POSN                               0x3
4455:          #define _BAUDCON2_BRG162_POSITION                           0x3
4456:          #define _BAUDCON2_BRG162_SIZE                               0x1
4457:          #define _BAUDCON2_BRG162_LENGTH                             0x1
4458:          #define _BAUDCON2_BRG162_MASK                               0x8
4459:          #define _BAUDCON2_DTRXP2_POSN                               0x5
4460:          #define _BAUDCON2_DTRXP2_POSITION                           0x5
4461:          #define _BAUDCON2_DTRXP2_SIZE                               0x1
4462:          #define _BAUDCON2_DTRXP2_LENGTH                             0x1
4463:          #define _BAUDCON2_DTRXP2_MASK                               0x20
4464:          #define _BAUDCON2_RCIDL2_POSN                               0x6
4465:          #define _BAUDCON2_RCIDL2_POSITION                           0x6
4466:          #define _BAUDCON2_RCIDL2_SIZE                               0x1
4467:          #define _BAUDCON2_RCIDL2_LENGTH                             0x1
4468:          #define _BAUDCON2_RCIDL2_MASK                               0x40
4469:          #define _BAUDCON2_RCMT2_POSN                                0x6
4470:          #define _BAUDCON2_RCMT2_POSITION                            0x6
4471:          #define _BAUDCON2_RCMT2_SIZE                                0x1
4472:          #define _BAUDCON2_RCMT2_LENGTH                              0x1
4473:          #define _BAUDCON2_RCMT2_MASK                                0x40
4474:          #define _BAUDCON2_RXDTP2_POSN                               0x5
4475:          #define _BAUDCON2_RXDTP2_POSITION                           0x5
4476:          #define _BAUDCON2_RXDTP2_SIZE                               0x1
4477:          #define _BAUDCON2_RXDTP2_LENGTH                             0x1
4478:          #define _BAUDCON2_RXDTP2_MASK                               0x20
4479:          #define _BAUDCON2_SCKP2_POSN                                0x4
4480:          #define _BAUDCON2_SCKP2_POSITION                            0x4
4481:          #define _BAUDCON2_SCKP2_SIZE                                0x1
4482:          #define _BAUDCON2_SCKP2_LENGTH                              0x1
4483:          #define _BAUDCON2_SCKP2_MASK                                0x10
4484:          #define _BAUDCON2_TXCKP2_POSN                               0x4
4485:          #define _BAUDCON2_TXCKP2_POSITION                           0x4
4486:          #define _BAUDCON2_TXCKP2_SIZE                               0x1
4487:          #define _BAUDCON2_TXCKP2_LENGTH                             0x1
4488:          #define _BAUDCON2_TXCKP2_MASK                               0x10
4489:          #define _BAUDCON2_WUE2_POSN                                 0x1
4490:          #define _BAUDCON2_WUE2_POSITION                             0x1
4491:          #define _BAUDCON2_WUE2_SIZE                                 0x1
4492:          #define _BAUDCON2_WUE2_LENGTH                               0x1
4493:          #define _BAUDCON2_WUE2_MASK                                 0x2
4494:          // alias bitfield definitions
4495:          typedef union {
4496:              struct {
4497:                  unsigned ABDEN                  :1;
4498:                  unsigned WUE                    :1;
4499:                  unsigned                        :1;
4500:                  unsigned BRG16                  :1;
4501:                  unsigned CKTXP                  :1;
4502:                  unsigned DTRXP                  :1;
4503:                  unsigned RCIDL                  :1;
4504:                  unsigned ABDOVF                 :1;
4505:              };
4506:              struct {
4507:                  unsigned                        :4;
4508:                  unsigned SCKP                   :1;
4509:              };
4510:              struct {
4511:                  unsigned ABDEN2                 :1;
4512:              };
4513:              struct {
4514:                  unsigned                        :7;
4515:                  unsigned ABDOVF2                :1;
4516:              };
4517:              struct {
4518:                  unsigned                        :3;
4519:                  unsigned BRG162                 :1;
4520:              };
4521:              struct {
4522:                  unsigned                        :5;
4523:                  unsigned DTRXP2                 :1;
4524:              };
4525:              struct {
4526:                  unsigned                        :6;
4527:                  unsigned RCIDL2                 :1;
4528:              };
4529:              struct {
4530:                  unsigned                        :6;
4531:                  unsigned RCMT2                  :1;
4532:              };
4533:              struct {
4534:                  unsigned                        :5;
4535:                  unsigned RXDTP2                 :1;
4536:              };
4537:              struct {
4538:                  unsigned                        :4;
4539:                  unsigned SCKP2                  :1;
4540:              };
4541:              struct {
4542:                  unsigned                        :4;
4543:                  unsigned TXCKP2                 :1;
4544:              };
4545:              struct {
4546:                  unsigned                        :1;
4547:                  unsigned WUE2                   :1;
4548:              };
4549:          } BAUD2CONbits_t;
4550:          extern volatile BAUD2CONbits_t BAUD2CONbits @ 0xF70;
4551:          // bitfield macros
4552:          #define _BAUD2CON_ABDEN_POSN                                0x0
4553:          #define _BAUD2CON_ABDEN_POSITION                            0x0
4554:          #define _BAUD2CON_ABDEN_SIZE                                0x1
4555:          #define _BAUD2CON_ABDEN_LENGTH                              0x1
4556:          #define _BAUD2CON_ABDEN_MASK                                0x1
4557:          #define _BAUD2CON_WUE_POSN                                  0x1
4558:          #define _BAUD2CON_WUE_POSITION                              0x1
4559:          #define _BAUD2CON_WUE_SIZE                                  0x1
4560:          #define _BAUD2CON_WUE_LENGTH                                0x1
4561:          #define _BAUD2CON_WUE_MASK                                  0x2
4562:          #define _BAUD2CON_BRG16_POSN                                0x3
4563:          #define _BAUD2CON_BRG16_POSITION                            0x3
4564:          #define _BAUD2CON_BRG16_SIZE                                0x1
4565:          #define _BAUD2CON_BRG16_LENGTH                              0x1
4566:          #define _BAUD2CON_BRG16_MASK                                0x8
4567:          #define _BAUD2CON_CKTXP_POSN                                0x4
4568:          #define _BAUD2CON_CKTXP_POSITION                            0x4
4569:          #define _BAUD2CON_CKTXP_SIZE                                0x1
4570:          #define _BAUD2CON_CKTXP_LENGTH                              0x1
4571:          #define _BAUD2CON_CKTXP_MASK                                0x10
4572:          #define _BAUD2CON_DTRXP_POSN                                0x5
4573:          #define _BAUD2CON_DTRXP_POSITION                            0x5
4574:          #define _BAUD2CON_DTRXP_SIZE                                0x1
4575:          #define _BAUD2CON_DTRXP_LENGTH                              0x1
4576:          #define _BAUD2CON_DTRXP_MASK                                0x20
4577:          #define _BAUD2CON_RCIDL_POSN                                0x6
4578:          #define _BAUD2CON_RCIDL_POSITION                            0x6
4579:          #define _BAUD2CON_RCIDL_SIZE                                0x1
4580:          #define _BAUD2CON_RCIDL_LENGTH                              0x1
4581:          #define _BAUD2CON_RCIDL_MASK                                0x40
4582:          #define _BAUD2CON_ABDOVF_POSN                               0x7
4583:          #define _BAUD2CON_ABDOVF_POSITION                           0x7
4584:          #define _BAUD2CON_ABDOVF_SIZE                               0x1
4585:          #define _BAUD2CON_ABDOVF_LENGTH                             0x1
4586:          #define _BAUD2CON_ABDOVF_MASK                               0x80
4587:          #define _BAUD2CON_SCKP_POSN                                 0x4
4588:          #define _BAUD2CON_SCKP_POSITION                             0x4
4589:          #define _BAUD2CON_SCKP_SIZE                                 0x1
4590:          #define _BAUD2CON_SCKP_LENGTH                               0x1
4591:          #define _BAUD2CON_SCKP_MASK                                 0x10
4592:          #define _BAUD2CON_ABDEN2_POSN                               0x0
4593:          #define _BAUD2CON_ABDEN2_POSITION                           0x0
4594:          #define _BAUD2CON_ABDEN2_SIZE                               0x1
4595:          #define _BAUD2CON_ABDEN2_LENGTH                             0x1
4596:          #define _BAUD2CON_ABDEN2_MASK                               0x1
4597:          #define _BAUD2CON_ABDOVF2_POSN                              0x7
4598:          #define _BAUD2CON_ABDOVF2_POSITION                          0x7
4599:          #define _BAUD2CON_ABDOVF2_SIZE                              0x1
4600:          #define _BAUD2CON_ABDOVF2_LENGTH                            0x1
4601:          #define _BAUD2CON_ABDOVF2_MASK                              0x80
4602:          #define _BAUD2CON_BRG162_POSN                               0x3
4603:          #define _BAUD2CON_BRG162_POSITION                           0x3
4604:          #define _BAUD2CON_BRG162_SIZE                               0x1
4605:          #define _BAUD2CON_BRG162_LENGTH                             0x1
4606:          #define _BAUD2CON_BRG162_MASK                               0x8
4607:          #define _BAUD2CON_DTRXP2_POSN                               0x5
4608:          #define _BAUD2CON_DTRXP2_POSITION                           0x5
4609:          #define _BAUD2CON_DTRXP2_SIZE                               0x1
4610:          #define _BAUD2CON_DTRXP2_LENGTH                             0x1
4611:          #define _BAUD2CON_DTRXP2_MASK                               0x20
4612:          #define _BAUD2CON_RCIDL2_POSN                               0x6
4613:          #define _BAUD2CON_RCIDL2_POSITION                           0x6
4614:          #define _BAUD2CON_RCIDL2_SIZE                               0x1
4615:          #define _BAUD2CON_RCIDL2_LENGTH                             0x1
4616:          #define _BAUD2CON_RCIDL2_MASK                               0x40
4617:          #define _BAUD2CON_RCMT2_POSN                                0x6
4618:          #define _BAUD2CON_RCMT2_POSITION                            0x6
4619:          #define _BAUD2CON_RCMT2_SIZE                                0x1
4620:          #define _BAUD2CON_RCMT2_LENGTH                              0x1
4621:          #define _BAUD2CON_RCMT2_MASK                                0x40
4622:          #define _BAUD2CON_RXDTP2_POSN                               0x5
4623:          #define _BAUD2CON_RXDTP2_POSITION                           0x5
4624:          #define _BAUD2CON_RXDTP2_SIZE                               0x1
4625:          #define _BAUD2CON_RXDTP2_LENGTH                             0x1
4626:          #define _BAUD2CON_RXDTP2_MASK                               0x20
4627:          #define _BAUD2CON_SCKP2_POSN                                0x4
4628:          #define _BAUD2CON_SCKP2_POSITION                            0x4
4629:          #define _BAUD2CON_SCKP2_SIZE                                0x1
4630:          #define _BAUD2CON_SCKP2_LENGTH                              0x1
4631:          #define _BAUD2CON_SCKP2_MASK                                0x10
4632:          #define _BAUD2CON_TXCKP2_POSN                               0x4
4633:          #define _BAUD2CON_TXCKP2_POSITION                           0x4
4634:          #define _BAUD2CON_TXCKP2_SIZE                               0x1
4635:          #define _BAUD2CON_TXCKP2_LENGTH                             0x1
4636:          #define _BAUD2CON_TXCKP2_MASK                               0x10
4637:          #define _BAUD2CON_WUE2_POSN                                 0x1
4638:          #define _BAUD2CON_WUE2_POSITION                             0x1
4639:          #define _BAUD2CON_WUE2_SIZE                                 0x1
4640:          #define _BAUD2CON_WUE2_LENGTH                               0x1
4641:          #define _BAUD2CON_WUE2_MASK                                 0x2
4642:          
4643:          // Register: RCSTA2
4644:          extern volatile unsigned char           RCSTA2              @ 0xF71;
4645:          #ifndef _LIB_BUILD
4646:          asm("RCSTA2 equ 0F71h");
4647:          #endif
4648:          // aliases
4649:          extern volatile unsigned char           RC2STA              @ 0xF71;
4650:          #ifndef _LIB_BUILD
4651:          asm("RC2STA equ 0F71h");
4652:          #endif
4653:          // bitfield definitions
4654:          typedef union {
4655:              struct {
4656:                  unsigned RX9D                   :1;
4657:                  unsigned OERR                   :1;
4658:                  unsigned FERR                   :1;
4659:                  unsigned ADDEN                  :1;
4660:                  unsigned CREN                   :1;
4661:                  unsigned SREN                   :1;
4662:                  unsigned RX9                    :1;
4663:                  unsigned SPEN                   :1;
4664:              };
4665:              struct {
4666:                  unsigned                        :3;
4667:                  unsigned ADEN                   :1;
4668:              };
4669:              struct {
4670:                  unsigned RX9D2                  :1;
4671:                  unsigned OERR2                  :1;
4672:                  unsigned FERR2                  :1;
4673:                  unsigned ADDEN2                 :1;
4674:                  unsigned CREN2                  :1;
4675:                  unsigned SREN2                  :1;
4676:                  unsigned RX92                   :1;
4677:                  unsigned SPEN2                  :1;
4678:              };
4679:              struct {
4680:                  unsigned                        :6;
4681:                  unsigned RC8_92                 :1;
4682:              };
4683:              struct {
4684:                  unsigned                        :6;
4685:                  unsigned RC92                   :1;
4686:              };
4687:              struct {
4688:                  unsigned RCD82                  :1;
4689:              };
4690:          } RCSTA2bits_t;
4691:          extern volatile RCSTA2bits_t RCSTA2bits @ 0xF71;
4692:          // bitfield macros
4693:          #define _RCSTA2_RX9D_POSN                                   0x0
4694:          #define _RCSTA2_RX9D_POSITION                               0x0
4695:          #define _RCSTA2_RX9D_SIZE                                   0x1
4696:          #define _RCSTA2_RX9D_LENGTH                                 0x1
4697:          #define _RCSTA2_RX9D_MASK                                   0x1
4698:          #define _RCSTA2_OERR_POSN                                   0x1
4699:          #define _RCSTA2_OERR_POSITION                               0x1
4700:          #define _RCSTA2_OERR_SIZE                                   0x1
4701:          #define _RCSTA2_OERR_LENGTH                                 0x1
4702:          #define _RCSTA2_OERR_MASK                                   0x2
4703:          #define _RCSTA2_FERR_POSN                                   0x2
4704:          #define _RCSTA2_FERR_POSITION                               0x2
4705:          #define _RCSTA2_FERR_SIZE                                   0x1
4706:          #define _RCSTA2_FERR_LENGTH                                 0x1
4707:          #define _RCSTA2_FERR_MASK                                   0x4
4708:          #define _RCSTA2_ADDEN_POSN                                  0x3
4709:          #define _RCSTA2_ADDEN_POSITION                              0x3
4710:          #define _RCSTA2_ADDEN_SIZE                                  0x1
4711:          #define _RCSTA2_ADDEN_LENGTH                                0x1
4712:          #define _RCSTA2_ADDEN_MASK                                  0x8
4713:          #define _RCSTA2_CREN_POSN                                   0x4
4714:          #define _RCSTA2_CREN_POSITION                               0x4
4715:          #define _RCSTA2_CREN_SIZE                                   0x1
4716:          #define _RCSTA2_CREN_LENGTH                                 0x1
4717:          #define _RCSTA2_CREN_MASK                                   0x10
4718:          #define _RCSTA2_SREN_POSN                                   0x5
4719:          #define _RCSTA2_SREN_POSITION                               0x5
4720:          #define _RCSTA2_SREN_SIZE                                   0x1
4721:          #define _RCSTA2_SREN_LENGTH                                 0x1
4722:          #define _RCSTA2_SREN_MASK                                   0x20
4723:          #define _RCSTA2_RX9_POSN                                    0x6
4724:          #define _RCSTA2_RX9_POSITION                                0x6
4725:          #define _RCSTA2_RX9_SIZE                                    0x1
4726:          #define _RCSTA2_RX9_LENGTH                                  0x1
4727:          #define _RCSTA2_RX9_MASK                                    0x40
4728:          #define _RCSTA2_SPEN_POSN                                   0x7
4729:          #define _RCSTA2_SPEN_POSITION                               0x7
4730:          #define _RCSTA2_SPEN_SIZE                                   0x1
4731:          #define _RCSTA2_SPEN_LENGTH                                 0x1
4732:          #define _RCSTA2_SPEN_MASK                                   0x80
4733:          #define _RCSTA2_ADEN_POSN                                   0x3
4734:          #define _RCSTA2_ADEN_POSITION                               0x3
4735:          #define _RCSTA2_ADEN_SIZE                                   0x1
4736:          #define _RCSTA2_ADEN_LENGTH                                 0x1
4737:          #define _RCSTA2_ADEN_MASK                                   0x8
4738:          #define _RCSTA2_RX9D2_POSN                                  0x0
4739:          #define _RCSTA2_RX9D2_POSITION                              0x0
4740:          #define _RCSTA2_RX9D2_SIZE                                  0x1
4741:          #define _RCSTA2_RX9D2_LENGTH                                0x1
4742:          #define _RCSTA2_RX9D2_MASK                                  0x1
4743:          #define _RCSTA2_OERR2_POSN                                  0x1
4744:          #define _RCSTA2_OERR2_POSITION                              0x1
4745:          #define _RCSTA2_OERR2_SIZE                                  0x1
4746:          #define _RCSTA2_OERR2_LENGTH                                0x1
4747:          #define _RCSTA2_OERR2_MASK                                  0x2
4748:          #define _RCSTA2_FERR2_POSN                                  0x2
4749:          #define _RCSTA2_FERR2_POSITION                              0x2
4750:          #define _RCSTA2_FERR2_SIZE                                  0x1
4751:          #define _RCSTA2_FERR2_LENGTH                                0x1
4752:          #define _RCSTA2_FERR2_MASK                                  0x4
4753:          #define _RCSTA2_ADDEN2_POSN                                 0x3
4754:          #define _RCSTA2_ADDEN2_POSITION                             0x3
4755:          #define _RCSTA2_ADDEN2_SIZE                                 0x1
4756:          #define _RCSTA2_ADDEN2_LENGTH                               0x1
4757:          #define _RCSTA2_ADDEN2_MASK                                 0x8
4758:          #define _RCSTA2_CREN2_POSN                                  0x4
4759:          #define _RCSTA2_CREN2_POSITION                              0x4
4760:          #define _RCSTA2_CREN2_SIZE                                  0x1
4761:          #define _RCSTA2_CREN2_LENGTH                                0x1
4762:          #define _RCSTA2_CREN2_MASK                                  0x10
4763:          #define _RCSTA2_SREN2_POSN                                  0x5
4764:          #define _RCSTA2_SREN2_POSITION                              0x5
4765:          #define _RCSTA2_SREN2_SIZE                                  0x1
4766:          #define _RCSTA2_SREN2_LENGTH                                0x1
4767:          #define _RCSTA2_SREN2_MASK                                  0x20
4768:          #define _RCSTA2_RX92_POSN                                   0x6
4769:          #define _RCSTA2_RX92_POSITION                               0x6
4770:          #define _RCSTA2_RX92_SIZE                                   0x1
4771:          #define _RCSTA2_RX92_LENGTH                                 0x1
4772:          #define _RCSTA2_RX92_MASK                                   0x40
4773:          #define _RCSTA2_SPEN2_POSN                                  0x7
4774:          #define _RCSTA2_SPEN2_POSITION                              0x7
4775:          #define _RCSTA2_SPEN2_SIZE                                  0x1
4776:          #define _RCSTA2_SPEN2_LENGTH                                0x1
4777:          #define _RCSTA2_SPEN2_MASK                                  0x80
4778:          #define _RCSTA2_RC8_92_POSN                                 0x6
4779:          #define _RCSTA2_RC8_92_POSITION                             0x6
4780:          #define _RCSTA2_RC8_92_SIZE                                 0x1
4781:          #define _RCSTA2_RC8_92_LENGTH                               0x1
4782:          #define _RCSTA2_RC8_92_MASK                                 0x40
4783:          #define _RCSTA2_RC92_POSN                                   0x6
4784:          #define _RCSTA2_RC92_POSITION                               0x6
4785:          #define _RCSTA2_RC92_SIZE                                   0x1
4786:          #define _RCSTA2_RC92_LENGTH                                 0x1
4787:          #define _RCSTA2_RC92_MASK                                   0x40
4788:          #define _RCSTA2_RCD82_POSN                                  0x0
4789:          #define _RCSTA2_RCD82_POSITION                              0x0
4790:          #define _RCSTA2_RCD82_SIZE                                  0x1
4791:          #define _RCSTA2_RCD82_LENGTH                                0x1
4792:          #define _RCSTA2_RCD82_MASK                                  0x1
4793:          // alias bitfield definitions
4794:          typedef union {
4795:              struct {
4796:                  unsigned RX9D                   :1;
4797:                  unsigned OERR                   :1;
4798:                  unsigned FERR                   :1;
4799:                  unsigned ADDEN                  :1;
4800:                  unsigned CREN                   :1;
4801:                  unsigned SREN                   :1;
4802:                  unsigned RX9                    :1;
4803:                  unsigned SPEN                   :1;
4804:              };
4805:              struct {
4806:                  unsigned                        :3;
4807:                  unsigned ADEN                   :1;
4808:              };
4809:              struct {
4810:                  unsigned RX9D2                  :1;
4811:                  unsigned OERR2                  :1;
4812:                  unsigned FERR2                  :1;
4813:                  unsigned ADDEN2                 :1;
4814:                  unsigned CREN2                  :1;
4815:                  unsigned SREN2                  :1;
4816:                  unsigned RX92                   :1;
4817:                  unsigned SPEN2                  :1;
4818:              };
4819:              struct {
4820:                  unsigned                        :6;
4821:                  unsigned RC8_92                 :1;
4822:              };
4823:              struct {
4824:                  unsigned                        :6;
4825:                  unsigned RC92                   :1;
4826:              };
4827:              struct {
4828:                  unsigned RCD82                  :1;
4829:              };
4830:          } RC2STAbits_t;
4831:          extern volatile RC2STAbits_t RC2STAbits @ 0xF71;
4832:          // bitfield macros
4833:          #define _RC2STA_RX9D_POSN                                   0x0
4834:          #define _RC2STA_RX9D_POSITION                               0x0
4835:          #define _RC2STA_RX9D_SIZE                                   0x1
4836:          #define _RC2STA_RX9D_LENGTH                                 0x1
4837:          #define _RC2STA_RX9D_MASK                                   0x1
4838:          #define _RC2STA_OERR_POSN                                   0x1
4839:          #define _RC2STA_OERR_POSITION                               0x1
4840:          #define _RC2STA_OERR_SIZE                                   0x1
4841:          #define _RC2STA_OERR_LENGTH                                 0x1
4842:          #define _RC2STA_OERR_MASK                                   0x2
4843:          #define _RC2STA_FERR_POSN                                   0x2
4844:          #define _RC2STA_FERR_POSITION                               0x2
4845:          #define _RC2STA_FERR_SIZE                                   0x1
4846:          #define _RC2STA_FERR_LENGTH                                 0x1
4847:          #define _RC2STA_FERR_MASK                                   0x4
4848:          #define _RC2STA_ADDEN_POSN                                  0x3
4849:          #define _RC2STA_ADDEN_POSITION                              0x3
4850:          #define _RC2STA_ADDEN_SIZE                                  0x1
4851:          #define _RC2STA_ADDEN_LENGTH                                0x1
4852:          #define _RC2STA_ADDEN_MASK                                  0x8
4853:          #define _RC2STA_CREN_POSN                                   0x4
4854:          #define _RC2STA_CREN_POSITION                               0x4
4855:          #define _RC2STA_CREN_SIZE                                   0x1
4856:          #define _RC2STA_CREN_LENGTH                                 0x1
4857:          #define _RC2STA_CREN_MASK                                   0x10
4858:          #define _RC2STA_SREN_POSN                                   0x5
4859:          #define _RC2STA_SREN_POSITION                               0x5
4860:          #define _RC2STA_SREN_SIZE                                   0x1
4861:          #define _RC2STA_SREN_LENGTH                                 0x1
4862:          #define _RC2STA_SREN_MASK                                   0x20
4863:          #define _RC2STA_RX9_POSN                                    0x6
4864:          #define _RC2STA_RX9_POSITION                                0x6
4865:          #define _RC2STA_RX9_SIZE                                    0x1
4866:          #define _RC2STA_RX9_LENGTH                                  0x1
4867:          #define _RC2STA_RX9_MASK                                    0x40
4868:          #define _RC2STA_SPEN_POSN                                   0x7
4869:          #define _RC2STA_SPEN_POSITION                               0x7
4870:          #define _RC2STA_SPEN_SIZE                                   0x1
4871:          #define _RC2STA_SPEN_LENGTH                                 0x1
4872:          #define _RC2STA_SPEN_MASK                                   0x80
4873:          #define _RC2STA_ADEN_POSN                                   0x3
4874:          #define _RC2STA_ADEN_POSITION                               0x3
4875:          #define _RC2STA_ADEN_SIZE                                   0x1
4876:          #define _RC2STA_ADEN_LENGTH                                 0x1
4877:          #define _RC2STA_ADEN_MASK                                   0x8
4878:          #define _RC2STA_RX9D2_POSN                                  0x0
4879:          #define _RC2STA_RX9D2_POSITION                              0x0
4880:          #define _RC2STA_RX9D2_SIZE                                  0x1
4881:          #define _RC2STA_RX9D2_LENGTH                                0x1
4882:          #define _RC2STA_RX9D2_MASK                                  0x1
4883:          #define _RC2STA_OERR2_POSN                                  0x1
4884:          #define _RC2STA_OERR2_POSITION                              0x1
4885:          #define _RC2STA_OERR2_SIZE                                  0x1
4886:          #define _RC2STA_OERR2_LENGTH                                0x1
4887:          #define _RC2STA_OERR2_MASK                                  0x2
4888:          #define _RC2STA_FERR2_POSN                                  0x2
4889:          #define _RC2STA_FERR2_POSITION                              0x2
4890:          #define _RC2STA_FERR2_SIZE                                  0x1
4891:          #define _RC2STA_FERR2_LENGTH                                0x1
4892:          #define _RC2STA_FERR2_MASK                                  0x4
4893:          #define _RC2STA_ADDEN2_POSN                                 0x3
4894:          #define _RC2STA_ADDEN2_POSITION                             0x3
4895:          #define _RC2STA_ADDEN2_SIZE                                 0x1
4896:          #define _RC2STA_ADDEN2_LENGTH                               0x1
4897:          #define _RC2STA_ADDEN2_MASK                                 0x8
4898:          #define _RC2STA_CREN2_POSN                                  0x4
4899:          #define _RC2STA_CREN2_POSITION                              0x4
4900:          #define _RC2STA_CREN2_SIZE                                  0x1
4901:          #define _RC2STA_CREN2_LENGTH                                0x1
4902:          #define _RC2STA_CREN2_MASK                                  0x10
4903:          #define _RC2STA_SREN2_POSN                                  0x5
4904:          #define _RC2STA_SREN2_POSITION                              0x5
4905:          #define _RC2STA_SREN2_SIZE                                  0x1
4906:          #define _RC2STA_SREN2_LENGTH                                0x1
4907:          #define _RC2STA_SREN2_MASK                                  0x20
4908:          #define _RC2STA_RX92_POSN                                   0x6
4909:          #define _RC2STA_RX92_POSITION                               0x6
4910:          #define _RC2STA_RX92_SIZE                                   0x1
4911:          #define _RC2STA_RX92_LENGTH                                 0x1
4912:          #define _RC2STA_RX92_MASK                                   0x40
4913:          #define _RC2STA_SPEN2_POSN                                  0x7
4914:          #define _RC2STA_SPEN2_POSITION                              0x7
4915:          #define _RC2STA_SPEN2_SIZE                                  0x1
4916:          #define _RC2STA_SPEN2_LENGTH                                0x1
4917:          #define _RC2STA_SPEN2_MASK                                  0x80
4918:          #define _RC2STA_RC8_92_POSN                                 0x6
4919:          #define _RC2STA_RC8_92_POSITION                             0x6
4920:          #define _RC2STA_RC8_92_SIZE                                 0x1
4921:          #define _RC2STA_RC8_92_LENGTH                               0x1
4922:          #define _RC2STA_RC8_92_MASK                                 0x40
4923:          #define _RC2STA_RC92_POSN                                   0x6
4924:          #define _RC2STA_RC92_POSITION                               0x6
4925:          #define _RC2STA_RC92_SIZE                                   0x1
4926:          #define _RC2STA_RC92_LENGTH                                 0x1
4927:          #define _RC2STA_RC92_MASK                                   0x40
4928:          #define _RC2STA_RCD82_POSN                                  0x0
4929:          #define _RC2STA_RCD82_POSITION                              0x0
4930:          #define _RC2STA_RCD82_SIZE                                  0x1
4931:          #define _RC2STA_RCD82_LENGTH                                0x1
4932:          #define _RC2STA_RCD82_MASK                                  0x1
4933:          
4934:          // Register: TXSTA2
4935:          extern volatile unsigned char           TXSTA2              @ 0xF72;
4936:          #ifndef _LIB_BUILD
4937:          asm("TXSTA2 equ 0F72h");
4938:          #endif
4939:          // aliases
4940:          extern volatile unsigned char           TX2STA              @ 0xF72;
4941:          #ifndef _LIB_BUILD
4942:          asm("TX2STA equ 0F72h");
4943:          #endif
4944:          // bitfield definitions
4945:          typedef union {
4946:              struct {
4947:                  unsigned TX9D                   :1;
4948:                  unsigned TRMT                   :1;
4949:                  unsigned BRGH                   :1;
4950:                  unsigned SENDB                  :1;
4951:                  unsigned SYNC                   :1;
4952:                  unsigned TXEN                   :1;
4953:                  unsigned TX9                    :1;
4954:                  unsigned CSRC                   :1;
4955:              };
4956:              struct {
4957:                  unsigned TX9D2                  :1;
4958:                  unsigned TRMT2                  :1;
4959:                  unsigned BRGH2                  :1;
4960:                  unsigned SENDB2                 :1;
4961:                  unsigned SYNC2                  :1;
4962:                  unsigned TXEN2                  :1;
4963:                  unsigned TX92                   :1;
4964:                  unsigned CSRC2                  :1;
4965:              };
4966:              struct {
4967:                  unsigned                        :6;
4968:                  unsigned TX8_92                 :1;
4969:              };
4970:              struct {
4971:                  unsigned TXD82                  :1;
4972:              };
4973:          } TXSTA2bits_t;
4974:          extern volatile TXSTA2bits_t TXSTA2bits @ 0xF72;
4975:          // bitfield macros
4976:          #define _TXSTA2_TX9D_POSN                                   0x0
4977:          #define _TXSTA2_TX9D_POSITION                               0x0
4978:          #define _TXSTA2_TX9D_SIZE                                   0x1
4979:          #define _TXSTA2_TX9D_LENGTH                                 0x1
4980:          #define _TXSTA2_TX9D_MASK                                   0x1
4981:          #define _TXSTA2_TRMT_POSN                                   0x1
4982:          #define _TXSTA2_TRMT_POSITION                               0x1
4983:          #define _TXSTA2_TRMT_SIZE                                   0x1
4984:          #define _TXSTA2_TRMT_LENGTH                                 0x1
4985:          #define _TXSTA2_TRMT_MASK                                   0x2
4986:          #define _TXSTA2_BRGH_POSN                                   0x2
4987:          #define _TXSTA2_BRGH_POSITION                               0x2
4988:          #define _TXSTA2_BRGH_SIZE                                   0x1
4989:          #define _TXSTA2_BRGH_LENGTH                                 0x1
4990:          #define _TXSTA2_BRGH_MASK                                   0x4
4991:          #define _TXSTA2_SENDB_POSN                                  0x3
4992:          #define _TXSTA2_SENDB_POSITION                              0x3
4993:          #define _TXSTA2_SENDB_SIZE                                  0x1
4994:          #define _TXSTA2_SENDB_LENGTH                                0x1
4995:          #define _TXSTA2_SENDB_MASK                                  0x8
4996:          #define _TXSTA2_SYNC_POSN                                   0x4
4997:          #define _TXSTA2_SYNC_POSITION                               0x4
4998:          #define _TXSTA2_SYNC_SIZE                                   0x1
4999:          #define _TXSTA2_SYNC_LENGTH                                 0x1
5000:          #define _TXSTA2_SYNC_MASK                                   0x10
5001:          #define _TXSTA2_TXEN_POSN                                   0x5
5002:          #define _TXSTA2_TXEN_POSITION                               0x5
5003:          #define _TXSTA2_TXEN_SIZE                                   0x1
5004:          #define _TXSTA2_TXEN_LENGTH                                 0x1
5005:          #define _TXSTA2_TXEN_MASK                                   0x20
5006:          #define _TXSTA2_TX9_POSN                                    0x6
5007:          #define _TXSTA2_TX9_POSITION                                0x6
5008:          #define _TXSTA2_TX9_SIZE                                    0x1
5009:          #define _TXSTA2_TX9_LENGTH                                  0x1
5010:          #define _TXSTA2_TX9_MASK                                    0x40
5011:          #define _TXSTA2_CSRC_POSN                                   0x7
5012:          #define _TXSTA2_CSRC_POSITION                               0x7
5013:          #define _TXSTA2_CSRC_SIZE                                   0x1
5014:          #define _TXSTA2_CSRC_LENGTH                                 0x1
5015:          #define _TXSTA2_CSRC_MASK                                   0x80
5016:          #define _TXSTA2_TX9D2_POSN                                  0x0
5017:          #define _TXSTA2_TX9D2_POSITION                              0x0
5018:          #define _TXSTA2_TX9D2_SIZE                                  0x1
5019:          #define _TXSTA2_TX9D2_LENGTH                                0x1
5020:          #define _TXSTA2_TX9D2_MASK                                  0x1
5021:          #define _TXSTA2_TRMT2_POSN                                  0x1
5022:          #define _TXSTA2_TRMT2_POSITION                              0x1
5023:          #define _TXSTA2_TRMT2_SIZE                                  0x1
5024:          #define _TXSTA2_TRMT2_LENGTH                                0x1
5025:          #define _TXSTA2_TRMT2_MASK                                  0x2
5026:          #define _TXSTA2_BRGH2_POSN                                  0x2
5027:          #define _TXSTA2_BRGH2_POSITION                              0x2
5028:          #define _TXSTA2_BRGH2_SIZE                                  0x1
5029:          #define _TXSTA2_BRGH2_LENGTH                                0x1
5030:          #define _TXSTA2_BRGH2_MASK                                  0x4
5031:          #define _TXSTA2_SENDB2_POSN                                 0x3
5032:          #define _TXSTA2_SENDB2_POSITION                             0x3
5033:          #define _TXSTA2_SENDB2_SIZE                                 0x1
5034:          #define _TXSTA2_SENDB2_LENGTH                               0x1
5035:          #define _TXSTA2_SENDB2_MASK                                 0x8
5036:          #define _TXSTA2_SYNC2_POSN                                  0x4
5037:          #define _TXSTA2_SYNC2_POSITION                              0x4
5038:          #define _TXSTA2_SYNC2_SIZE                                  0x1
5039:          #define _TXSTA2_SYNC2_LENGTH                                0x1
5040:          #define _TXSTA2_SYNC2_MASK                                  0x10
5041:          #define _TXSTA2_TXEN2_POSN                                  0x5
5042:          #define _TXSTA2_TXEN2_POSITION                              0x5
5043:          #define _TXSTA2_TXEN2_SIZE                                  0x1
5044:          #define _TXSTA2_TXEN2_LENGTH                                0x1
5045:          #define _TXSTA2_TXEN2_MASK                                  0x20
5046:          #define _TXSTA2_TX92_POSN                                   0x6
5047:          #define _TXSTA2_TX92_POSITION                               0x6
5048:          #define _TXSTA2_TX92_SIZE                                   0x1
5049:          #define _TXSTA2_TX92_LENGTH                                 0x1
5050:          #define _TXSTA2_TX92_MASK                                   0x40
5051:          #define _TXSTA2_CSRC2_POSN                                  0x7
5052:          #define _TXSTA2_CSRC2_POSITION                              0x7
5053:          #define _TXSTA2_CSRC2_SIZE                                  0x1
5054:          #define _TXSTA2_CSRC2_LENGTH                                0x1
5055:          #define _TXSTA2_CSRC2_MASK                                  0x80
5056:          #define _TXSTA2_TX8_92_POSN                                 0x6
5057:          #define _TXSTA2_TX8_92_POSITION                             0x6
5058:          #define _TXSTA2_TX8_92_SIZE                                 0x1
5059:          #define _TXSTA2_TX8_92_LENGTH                               0x1
5060:          #define _TXSTA2_TX8_92_MASK                                 0x40
5061:          #define _TXSTA2_TXD82_POSN                                  0x0
5062:          #define _TXSTA2_TXD82_POSITION                              0x0
5063:          #define _TXSTA2_TXD82_SIZE                                  0x1
5064:          #define _TXSTA2_TXD82_LENGTH                                0x1
5065:          #define _TXSTA2_TXD82_MASK                                  0x1
5066:          // alias bitfield definitions
5067:          typedef union {
5068:              struct {
5069:                  unsigned TX9D                   :1;
5070:                  unsigned TRMT                   :1;
5071:                  unsigned BRGH                   :1;
5072:                  unsigned SENDB                  :1;
5073:                  unsigned SYNC                   :1;
5074:                  unsigned TXEN                   :1;
5075:                  unsigned TX9                    :1;
5076:                  unsigned CSRC                   :1;
5077:              };
5078:              struct {
5079:                  unsigned TX9D2                  :1;
5080:                  unsigned TRMT2                  :1;
5081:                  unsigned BRGH2                  :1;
5082:                  unsigned SENDB2                 :1;
5083:                  unsigned SYNC2                  :1;
5084:                  unsigned TXEN2                  :1;
5085:                  unsigned TX92                   :1;
5086:                  unsigned CSRC2                  :1;
5087:              };
5088:              struct {
5089:                  unsigned                        :6;
5090:                  unsigned TX8_92                 :1;
5091:              };
5092:              struct {
5093:                  unsigned TXD82                  :1;
5094:              };
5095:          } TX2STAbits_t;
5096:          extern volatile TX2STAbits_t TX2STAbits @ 0xF72;
5097:          // bitfield macros
5098:          #define _TX2STA_TX9D_POSN                                   0x0
5099:          #define _TX2STA_TX9D_POSITION                               0x0
5100:          #define _TX2STA_TX9D_SIZE                                   0x1
5101:          #define _TX2STA_TX9D_LENGTH                                 0x1
5102:          #define _TX2STA_TX9D_MASK                                   0x1
5103:          #define _TX2STA_TRMT_POSN                                   0x1
5104:          #define _TX2STA_TRMT_POSITION                               0x1
5105:          #define _TX2STA_TRMT_SIZE                                   0x1
5106:          #define _TX2STA_TRMT_LENGTH                                 0x1
5107:          #define _TX2STA_TRMT_MASK                                   0x2
5108:          #define _TX2STA_BRGH_POSN                                   0x2
5109:          #define _TX2STA_BRGH_POSITION                               0x2
5110:          #define _TX2STA_BRGH_SIZE                                   0x1
5111:          #define _TX2STA_BRGH_LENGTH                                 0x1
5112:          #define _TX2STA_BRGH_MASK                                   0x4
5113:          #define _TX2STA_SENDB_POSN                                  0x3
5114:          #define _TX2STA_SENDB_POSITION                              0x3
5115:          #define _TX2STA_SENDB_SIZE                                  0x1
5116:          #define _TX2STA_SENDB_LENGTH                                0x1
5117:          #define _TX2STA_SENDB_MASK                                  0x8
5118:          #define _TX2STA_SYNC_POSN                                   0x4
5119:          #define _TX2STA_SYNC_POSITION                               0x4
5120:          #define _TX2STA_SYNC_SIZE                                   0x1
5121:          #define _TX2STA_SYNC_LENGTH                                 0x1
5122:          #define _TX2STA_SYNC_MASK                                   0x10
5123:          #define _TX2STA_TXEN_POSN                                   0x5
5124:          #define _TX2STA_TXEN_POSITION                               0x5
5125:          #define _TX2STA_TXEN_SIZE                                   0x1
5126:          #define _TX2STA_TXEN_LENGTH                                 0x1
5127:          #define _TX2STA_TXEN_MASK                                   0x20
5128:          #define _TX2STA_TX9_POSN                                    0x6
5129:          #define _TX2STA_TX9_POSITION                                0x6
5130:          #define _TX2STA_TX9_SIZE                                    0x1
5131:          #define _TX2STA_TX9_LENGTH                                  0x1
5132:          #define _TX2STA_TX9_MASK                                    0x40
5133:          #define _TX2STA_CSRC_POSN                                   0x7
5134:          #define _TX2STA_CSRC_POSITION                               0x7
5135:          #define _TX2STA_CSRC_SIZE                                   0x1
5136:          #define _TX2STA_CSRC_LENGTH                                 0x1
5137:          #define _TX2STA_CSRC_MASK                                   0x80
5138:          #define _TX2STA_TX9D2_POSN                                  0x0
5139:          #define _TX2STA_TX9D2_POSITION                              0x0
5140:          #define _TX2STA_TX9D2_SIZE                                  0x1
5141:          #define _TX2STA_TX9D2_LENGTH                                0x1
5142:          #define _TX2STA_TX9D2_MASK                                  0x1
5143:          #define _TX2STA_TRMT2_POSN                                  0x1
5144:          #define _TX2STA_TRMT2_POSITION                              0x1
5145:          #define _TX2STA_TRMT2_SIZE                                  0x1
5146:          #define _TX2STA_TRMT2_LENGTH                                0x1
5147:          #define _TX2STA_TRMT2_MASK                                  0x2
5148:          #define _TX2STA_BRGH2_POSN                                  0x2
5149:          #define _TX2STA_BRGH2_POSITION                              0x2
5150:          #define _TX2STA_BRGH2_SIZE                                  0x1
5151:          #define _TX2STA_BRGH2_LENGTH                                0x1
5152:          #define _TX2STA_BRGH2_MASK                                  0x4
5153:          #define _TX2STA_SENDB2_POSN                                 0x3
5154:          #define _TX2STA_SENDB2_POSITION                             0x3
5155:          #define _TX2STA_SENDB2_SIZE                                 0x1
5156:          #define _TX2STA_SENDB2_LENGTH                               0x1
5157:          #define _TX2STA_SENDB2_MASK                                 0x8
5158:          #define _TX2STA_SYNC2_POSN                                  0x4
5159:          #define _TX2STA_SYNC2_POSITION                              0x4
5160:          #define _TX2STA_SYNC2_SIZE                                  0x1
5161:          #define _TX2STA_SYNC2_LENGTH                                0x1
5162:          #define _TX2STA_SYNC2_MASK                                  0x10
5163:          #define _TX2STA_TXEN2_POSN                                  0x5
5164:          #define _TX2STA_TXEN2_POSITION                              0x5
5165:          #define _TX2STA_TXEN2_SIZE                                  0x1
5166:          #define _TX2STA_TXEN2_LENGTH                                0x1
5167:          #define _TX2STA_TXEN2_MASK                                  0x20
5168:          #define _TX2STA_TX92_POSN                                   0x6
5169:          #define _TX2STA_TX92_POSITION                               0x6
5170:          #define _TX2STA_TX92_SIZE                                   0x1
5171:          #define _TX2STA_TX92_LENGTH                                 0x1
5172:          #define _TX2STA_TX92_MASK                                   0x40
5173:          #define _TX2STA_CSRC2_POSN                                  0x7
5174:          #define _TX2STA_CSRC2_POSITION                              0x7
5175:          #define _TX2STA_CSRC2_SIZE                                  0x1
5176:          #define _TX2STA_CSRC2_LENGTH                                0x1
5177:          #define _TX2STA_CSRC2_MASK                                  0x80
5178:          #define _TX2STA_TX8_92_POSN                                 0x6
5179:          #define _TX2STA_TX8_92_POSITION                             0x6
5180:          #define _TX2STA_TX8_92_SIZE                                 0x1
5181:          #define _TX2STA_TX8_92_LENGTH                               0x1
5182:          #define _TX2STA_TX8_92_MASK                                 0x40
5183:          #define _TX2STA_TXD82_POSN                                  0x0
5184:          #define _TX2STA_TXD82_POSITION                              0x0
5185:          #define _TX2STA_TXD82_SIZE                                  0x1
5186:          #define _TX2STA_TXD82_LENGTH                                0x1
5187:          #define _TX2STA_TXD82_MASK                                  0x1
5188:          
5189:          // Register: TXREG2
5190:          extern volatile unsigned char           TXREG2              @ 0xF73;
5191:          #ifndef _LIB_BUILD
5192:          asm("TXREG2 equ 0F73h");
5193:          #endif
5194:          // aliases
5195:          extern volatile unsigned char           TX2REG              @ 0xF73;
5196:          #ifndef _LIB_BUILD
5197:          asm("TX2REG equ 0F73h");
5198:          #endif
5199:          // bitfield definitions
5200:          typedef union {
5201:              struct {
5202:                  unsigned TX2REG                 :8;
5203:              };
5204:          } TXREG2bits_t;
5205:          extern volatile TXREG2bits_t TXREG2bits @ 0xF73;
5206:          // bitfield macros
5207:          #define _TXREG2_TX2REG_POSN                                 0x0
5208:          #define _TXREG2_TX2REG_POSITION                             0x0
5209:          #define _TXREG2_TX2REG_SIZE                                 0x8
5210:          #define _TXREG2_TX2REG_LENGTH                               0x8
5211:          #define _TXREG2_TX2REG_MASK                                 0xFF
5212:          // alias bitfield definitions
5213:          typedef union {
5214:              struct {
5215:                  unsigned TX2REG                 :8;
5216:              };
5217:          } TX2REGbits_t;
5218:          extern volatile TX2REGbits_t TX2REGbits @ 0xF73;
5219:          // bitfield macros
5220:          #define _TX2REG_TX2REG_POSN                                 0x0
5221:          #define _TX2REG_TX2REG_POSITION                             0x0
5222:          #define _TX2REG_TX2REG_SIZE                                 0x8
5223:          #define _TX2REG_TX2REG_LENGTH                               0x8
5224:          #define _TX2REG_TX2REG_MASK                                 0xFF
5225:          
5226:          // Register: RCREG2
5227:          extern volatile unsigned char           RCREG2              @ 0xF74;
5228:          #ifndef _LIB_BUILD
5229:          asm("RCREG2 equ 0F74h");
5230:          #endif
5231:          // aliases
5232:          extern volatile unsigned char           RC2REG              @ 0xF74;
5233:          #ifndef _LIB_BUILD
5234:          asm("RC2REG equ 0F74h");
5235:          #endif
5236:          // bitfield definitions
5237:          typedef union {
5238:              struct {
5239:                  unsigned RC2REG                 :8;
5240:              };
5241:          } RCREG2bits_t;
5242:          extern volatile RCREG2bits_t RCREG2bits @ 0xF74;
5243:          // bitfield macros
5244:          #define _RCREG2_RC2REG_POSN                                 0x0
5245:          #define _RCREG2_RC2REG_POSITION                             0x0
5246:          #define _RCREG2_RC2REG_SIZE                                 0x8
5247:          #define _RCREG2_RC2REG_LENGTH                               0x8
5248:          #define _RCREG2_RC2REG_MASK                                 0xFF
5249:          // alias bitfield definitions
5250:          typedef union {
5251:              struct {
5252:                  unsigned RC2REG                 :8;
5253:              };
5254:          } RC2REGbits_t;
5255:          extern volatile RC2REGbits_t RC2REGbits @ 0xF74;
5256:          // bitfield macros
5257:          #define _RC2REG_RC2REG_POSN                                 0x0
5258:          #define _RC2REG_RC2REG_POSITION                             0x0
5259:          #define _RC2REG_RC2REG_SIZE                                 0x8
5260:          #define _RC2REG_RC2REG_LENGTH                               0x8
5261:          #define _RC2REG_RC2REG_MASK                                 0xFF
5262:          
5263:          // Register: SPBRG2
5264:          extern volatile unsigned char           SPBRG2              @ 0xF75;
5265:          #ifndef _LIB_BUILD
5266:          asm("SPBRG2 equ 0F75h");
5267:          #endif
5268:          // aliases
5269:          extern volatile unsigned char           SP2BRG              @ 0xF75;
5270:          #ifndef _LIB_BUILD
5271:          asm("SP2BRG equ 0F75h");
5272:          #endif
5273:          // bitfield definitions
5274:          typedef union {
5275:              struct {
5276:                  unsigned SP2BRG                 :8;
5277:              };
5278:          } SPBRG2bits_t;
5279:          extern volatile SPBRG2bits_t SPBRG2bits @ 0xF75;
5280:          // bitfield macros
5281:          #define _SPBRG2_SP2BRG_POSN                                 0x0
5282:          #define _SPBRG2_SP2BRG_POSITION                             0x0
5283:          #define _SPBRG2_SP2BRG_SIZE                                 0x8
5284:          #define _SPBRG2_SP2BRG_LENGTH                               0x8
5285:          #define _SPBRG2_SP2BRG_MASK                                 0xFF
5286:          // alias bitfield definitions
5287:          typedef union {
5288:              struct {
5289:                  unsigned SP2BRG                 :8;
5290:              };
5291:          } SP2BRGbits_t;
5292:          extern volatile SP2BRGbits_t SP2BRGbits @ 0xF75;
5293:          // bitfield macros
5294:          #define _SP2BRG_SP2BRG_POSN                                 0x0
5295:          #define _SP2BRG_SP2BRG_POSITION                             0x0
5296:          #define _SP2BRG_SP2BRG_SIZE                                 0x8
5297:          #define _SP2BRG_SP2BRG_LENGTH                               0x8
5298:          #define _SP2BRG_SP2BRG_MASK                                 0xFF
5299:          
5300:          // Register: SPBRGH2
5301:          extern volatile unsigned char           SPBRGH2             @ 0xF76;
5302:          #ifndef _LIB_BUILD
5303:          asm("SPBRGH2 equ 0F76h");
5304:          #endif
5305:          // aliases
5306:          extern volatile unsigned char           SP2BRGH             @ 0xF76;
5307:          #ifndef _LIB_BUILD
5308:          asm("SP2BRGH equ 0F76h");
5309:          #endif
5310:          // bitfield definitions
5311:          typedef union {
5312:              struct {
5313:                  unsigned SP2BRGH                :8;
5314:              };
5315:          } SPBRGH2bits_t;
5316:          extern volatile SPBRGH2bits_t SPBRGH2bits @ 0xF76;
5317:          // bitfield macros
5318:          #define _SPBRGH2_SP2BRGH_POSN                               0x0
5319:          #define _SPBRGH2_SP2BRGH_POSITION                           0x0
5320:          #define _SPBRGH2_SP2BRGH_SIZE                               0x8
5321:          #define _SPBRGH2_SP2BRGH_LENGTH                             0x8
5322:          #define _SPBRGH2_SP2BRGH_MASK                               0xFF
5323:          // alias bitfield definitions
5324:          typedef union {
5325:              struct {
5326:                  unsigned SP2BRGH                :8;
5327:              };
5328:          } SP2BRGHbits_t;
5329:          extern volatile SP2BRGHbits_t SP2BRGHbits @ 0xF76;
5330:          // bitfield macros
5331:          #define _SP2BRGH_SP2BRGH_POSN                               0x0
5332:          #define _SP2BRGH_SP2BRGH_POSITION                           0x0
5333:          #define _SP2BRGH_SP2BRGH_SIZE                               0x8
5334:          #define _SP2BRGH_SP2BRGH_LENGTH                             0x8
5335:          #define _SP2BRGH_SP2BRGH_MASK                               0xFF
5336:          
5337:          // Register: CM2CON1
5338:          extern volatile unsigned char           CM2CON1             @ 0xF77;
5339:          #ifndef _LIB_BUILD
5340:          asm("CM2CON1 equ 0F77h");
5341:          #endif
5342:          // aliases
5343:          extern volatile unsigned char           CM12CON             @ 0xF77;
5344:          #ifndef _LIB_BUILD
5345:          asm("CM12CON equ 0F77h");
5346:          #endif
5347:          // bitfield definitions
5348:          typedef union {
5349:              struct {
5350:                  unsigned C2SYNC                 :1;
5351:                  unsigned C1SYNC                 :1;
5352:                  unsigned C2HYS                  :1;
5353:                  unsigned C1HYS                  :1;
5354:                  unsigned C2RSEL                 :1;
5355:                  unsigned C1RSEL                 :1;
5356:                  unsigned MC2OUT                 :1;
5357:                  unsigned MC1OUT                 :1;
5358:              };
5359:          } CM2CON1bits_t;
5360:          extern volatile CM2CON1bits_t CM2CON1bits @ 0xF77;
5361:          // bitfield macros
5362:          #define _CM2CON1_C2SYNC_POSN                                0x0
5363:          #define _CM2CON1_C2SYNC_POSITION                            0x0
5364:          #define _CM2CON1_C2SYNC_SIZE                                0x1
5365:          #define _CM2CON1_C2SYNC_LENGTH                              0x1
5366:          #define _CM2CON1_C2SYNC_MASK                                0x1
5367:          #define _CM2CON1_C1SYNC_POSN                                0x1
5368:          #define _CM2CON1_C1SYNC_POSITION                            0x1
5369:          #define _CM2CON1_C1SYNC_SIZE                                0x1
5370:          #define _CM2CON1_C1SYNC_LENGTH                              0x1
5371:          #define _CM2CON1_C1SYNC_MASK                                0x2
5372:          #define _CM2CON1_C2HYS_POSN                                 0x2
5373:          #define _CM2CON1_C2HYS_POSITION                             0x2
5374:          #define _CM2CON1_C2HYS_SIZE                                 0x1
5375:          #define _CM2CON1_C2HYS_LENGTH                               0x1
5376:          #define _CM2CON1_C2HYS_MASK                                 0x4
5377:          #define _CM2CON1_C1HYS_POSN                                 0x3
5378:          #define _CM2CON1_C1HYS_POSITION                             0x3
5379:          #define _CM2CON1_C1HYS_SIZE                                 0x1
5380:          #define _CM2CON1_C1HYS_LENGTH                               0x1
5381:          #define _CM2CON1_C1HYS_MASK                                 0x8
5382:          #define _CM2CON1_C2RSEL_POSN                                0x4
5383:          #define _CM2CON1_C2RSEL_POSITION                            0x4
5384:          #define _CM2CON1_C2RSEL_SIZE                                0x1
5385:          #define _CM2CON1_C2RSEL_LENGTH                              0x1
5386:          #define _CM2CON1_C2RSEL_MASK                                0x10
5387:          #define _CM2CON1_C1RSEL_POSN                                0x5
5388:          #define _CM2CON1_C1RSEL_POSITION                            0x5
5389:          #define _CM2CON1_C1RSEL_SIZE                                0x1
5390:          #define _CM2CON1_C1RSEL_LENGTH                              0x1
5391:          #define _CM2CON1_C1RSEL_MASK                                0x20
5392:          #define _CM2CON1_MC2OUT_POSN                                0x6
5393:          #define _CM2CON1_MC2OUT_POSITION                            0x6
5394:          #define _CM2CON1_MC2OUT_SIZE                                0x1
5395:          #define _CM2CON1_MC2OUT_LENGTH                              0x1
5396:          #define _CM2CON1_MC2OUT_MASK                                0x40
5397:          #define _CM2CON1_MC1OUT_POSN                                0x7
5398:          #define _CM2CON1_MC1OUT_POSITION                            0x7
5399:          #define _CM2CON1_MC1OUT_SIZE                                0x1
5400:          #define _CM2CON1_MC1OUT_LENGTH                              0x1
5401:          #define _CM2CON1_MC1OUT_MASK                                0x80
5402:          // alias bitfield definitions
5403:          typedef union {
5404:              struct {
5405:                  unsigned C2SYNC                 :1;
5406:                  unsigned C1SYNC                 :1;
5407:                  unsigned C2HYS                  :1;
5408:                  unsigned C1HYS                  :1;
5409:                  unsigned C2RSEL                 :1;
5410:                  unsigned C1RSEL                 :1;
5411:                  unsigned MC2OUT                 :1;
5412:                  unsigned MC1OUT                 :1;
5413:              };
5414:          } CM12CONbits_t;
5415:          extern volatile CM12CONbits_t CM12CONbits @ 0xF77;
5416:          // bitfield macros
5417:          #define _CM12CON_C2SYNC_POSN                                0x0
5418:          #define _CM12CON_C2SYNC_POSITION                            0x0
5419:          #define _CM12CON_C2SYNC_SIZE                                0x1
5420:          #define _CM12CON_C2SYNC_LENGTH                              0x1
5421:          #define _CM12CON_C2SYNC_MASK                                0x1
5422:          #define _CM12CON_C1SYNC_POSN                                0x1
5423:          #define _CM12CON_C1SYNC_POSITION                            0x1
5424:          #define _CM12CON_C1SYNC_SIZE                                0x1
5425:          #define _CM12CON_C1SYNC_LENGTH                              0x1
5426:          #define _CM12CON_C1SYNC_MASK                                0x2
5427:          #define _CM12CON_C2HYS_POSN                                 0x2
5428:          #define _CM12CON_C2HYS_POSITION                             0x2
5429:          #define _CM12CON_C2HYS_SIZE                                 0x1
5430:          #define _CM12CON_C2HYS_LENGTH                               0x1
5431:          #define _CM12CON_C2HYS_MASK                                 0x4
5432:          #define _CM12CON_C1HYS_POSN                                 0x3
5433:          #define _CM12CON_C1HYS_POSITION                             0x3
5434:          #define _CM12CON_C1HYS_SIZE                                 0x1
5435:          #define _CM12CON_C1HYS_LENGTH                               0x1
5436:          #define _CM12CON_C1HYS_MASK                                 0x8
5437:          #define _CM12CON_C2RSEL_POSN                                0x4
5438:          #define _CM12CON_C2RSEL_POSITION                            0x4
5439:          #define _CM12CON_C2RSEL_SIZE                                0x1
5440:          #define _CM12CON_C2RSEL_LENGTH                              0x1
5441:          #define _CM12CON_C2RSEL_MASK                                0x10
5442:          #define _CM12CON_C1RSEL_POSN                                0x5
5443:          #define _CM12CON_C1RSEL_POSITION                            0x5
5444:          #define _CM12CON_C1RSEL_SIZE                                0x1
5445:          #define _CM12CON_C1RSEL_LENGTH                              0x1
5446:          #define _CM12CON_C1RSEL_MASK                                0x20
5447:          #define _CM12CON_MC2OUT_POSN                                0x6
5448:          #define _CM12CON_MC2OUT_POSITION                            0x6
5449:          #define _CM12CON_MC2OUT_SIZE                                0x1
5450:          #define _CM12CON_MC2OUT_LENGTH                              0x1
5451:          #define _CM12CON_MC2OUT_MASK                                0x40
5452:          #define _CM12CON_MC1OUT_POSN                                0x7
5453:          #define _CM12CON_MC1OUT_POSITION                            0x7
5454:          #define _CM12CON_MC1OUT_SIZE                                0x1
5455:          #define _CM12CON_MC1OUT_LENGTH                              0x1
5456:          #define _CM12CON_MC1OUT_MASK                                0x80
5457:          
5458:          // Register: CM2CON0
5459:          extern volatile unsigned char           CM2CON0             @ 0xF78;
5460:          #ifndef _LIB_BUILD
5461:          asm("CM2CON0 equ 0F78h");
5462:          #endif
5463:          // aliases
5464:          extern volatile unsigned char           CM2CON              @ 0xF78;
5465:          #ifndef _LIB_BUILD
5466:          asm("CM2CON equ 0F78h");
5467:          #endif
5468:          // bitfield definitions
5469:          typedef union {
5470:              struct {
5471:                  unsigned C2CH                   :2;
5472:                  unsigned C2R                    :1;
5473:                  unsigned C2SP                   :1;
5474:                  unsigned C2POL                  :1;
5475:                  unsigned C2OE                   :1;
5476:                  unsigned C2OUT                  :1;
5477:                  unsigned C2ON                   :1;
5478:              };
5479:              struct {
5480:                  unsigned C2CH0                  :1;
5481:                  unsigned C2CH1                  :1;
5482:              };
5483:              struct {
5484:                  unsigned CCH02                  :1;
5485:              };
5486:              struct {
5487:                  unsigned                        :1;
5488:                  unsigned CCH12                  :1;
5489:              };
5490:              struct {
5491:                  unsigned                        :6;
5492:                  unsigned COE2                   :1;
5493:              };
5494:              struct {
5495:                  unsigned                        :7;
5496:                  unsigned CON2                   :1;
5497:              };
5498:              struct {
5499:                  unsigned                        :5;
5500:                  unsigned CPOL2                  :1;
5501:              };
5502:              struct {
5503:                  unsigned                        :2;
5504:                  unsigned CREF2                  :1;
5505:              };
5506:              struct {
5507:                  unsigned                        :3;
5508:                  unsigned EVPOL02                :1;
5509:              };
5510:              struct {
5511:                  unsigned                        :4;
5512:                  unsigned EVPOL12                :1;
5513:              };
5514:          } CM2CON0bits_t;
5515:          extern volatile CM2CON0bits_t CM2CON0bits @ 0xF78;
5516:          // bitfield macros
5517:          #define _CM2CON0_C2CH_POSN                                  0x0
5518:          #define _CM2CON0_C2CH_POSITION                              0x0
5519:          #define _CM2CON0_C2CH_SIZE                                  0x2
5520:          #define _CM2CON0_C2CH_LENGTH                                0x2
5521:          #define _CM2CON0_C2CH_MASK                                  0x3
5522:          #define _CM2CON0_C2R_POSN                                   0x2
5523:          #define _CM2CON0_C2R_POSITION                               0x2
5524:          #define _CM2CON0_C2R_SIZE                                   0x1
5525:          #define _CM2CON0_C2R_LENGTH                                 0x1
5526:          #define _CM2CON0_C2R_MASK                                   0x4
5527:          #define _CM2CON0_C2SP_POSN                                  0x3
5528:          #define _CM2CON0_C2SP_POSITION                              0x3
5529:          #define _CM2CON0_C2SP_SIZE                                  0x1
5530:          #define _CM2CON0_C2SP_LENGTH                                0x1
5531:          #define _CM2CON0_C2SP_MASK                                  0x8
5532:          #define _CM2CON0_C2POL_POSN                                 0x4
5533:          #define _CM2CON0_C2POL_POSITION                             0x4
5534:          #define _CM2CON0_C2POL_SIZE                                 0x1
5535:          #define _CM2CON0_C2POL_LENGTH                               0x1
5536:          #define _CM2CON0_C2POL_MASK                                 0x10
5537:          #define _CM2CON0_C2OE_POSN                                  0x5
5538:          #define _CM2CON0_C2OE_POSITION                              0x5
5539:          #define _CM2CON0_C2OE_SIZE                                  0x1
5540:          #define _CM2CON0_C2OE_LENGTH                                0x1
5541:          #define _CM2CON0_C2OE_MASK                                  0x20
5542:          #define _CM2CON0_C2OUT_POSN                                 0x6
5543:          #define _CM2CON0_C2OUT_POSITION                             0x6
5544:          #define _CM2CON0_C2OUT_SIZE                                 0x1
5545:          #define _CM2CON0_C2OUT_LENGTH                               0x1
5546:          #define _CM2CON0_C2OUT_MASK                                 0x40
5547:          #define _CM2CON0_C2ON_POSN                                  0x7
5548:          #define _CM2CON0_C2ON_POSITION                              0x7
5549:          #define _CM2CON0_C2ON_SIZE                                  0x1
5550:          #define _CM2CON0_C2ON_LENGTH                                0x1
5551:          #define _CM2CON0_C2ON_MASK                                  0x80
5552:          #define _CM2CON0_C2CH0_POSN                                 0x0
5553:          #define _CM2CON0_C2CH0_POSITION                             0x0
5554:          #define _CM2CON0_C2CH0_SIZE                                 0x1
5555:          #define _CM2CON0_C2CH0_LENGTH                               0x1
5556:          #define _CM2CON0_C2CH0_MASK                                 0x1
5557:          #define _CM2CON0_C2CH1_POSN                                 0x1
5558:          #define _CM2CON0_C2CH1_POSITION                             0x1
5559:          #define _CM2CON0_C2CH1_SIZE                                 0x1
5560:          #define _CM2CON0_C2CH1_LENGTH                               0x1
5561:          #define _CM2CON0_C2CH1_MASK                                 0x2
5562:          #define _CM2CON0_CCH02_POSN                                 0x0
5563:          #define _CM2CON0_CCH02_POSITION                             0x0
5564:          #define _CM2CON0_CCH02_SIZE                                 0x1
5565:          #define _CM2CON0_CCH02_LENGTH                               0x1
5566:          #define _CM2CON0_CCH02_MASK                                 0x1
5567:          #define _CM2CON0_CCH12_POSN                                 0x1
5568:          #define _CM2CON0_CCH12_POSITION                             0x1
5569:          #define _CM2CON0_CCH12_SIZE                                 0x1
5570:          #define _CM2CON0_CCH12_LENGTH                               0x1
5571:          #define _CM2CON0_CCH12_MASK                                 0x2
5572:          #define _CM2CON0_COE2_POSN                                  0x6
5573:          #define _CM2CON0_COE2_POSITION                              0x6
5574:          #define _CM2CON0_COE2_SIZE                                  0x1
5575:          #define _CM2CON0_COE2_LENGTH                                0x1
5576:          #define _CM2CON0_COE2_MASK                                  0x40
5577:          #define _CM2CON0_CON2_POSN                                  0x7
5578:          #define _CM2CON0_CON2_POSITION                              0x7
5579:          #define _CM2CON0_CON2_SIZE                                  0x1
5580:          #define _CM2CON0_CON2_LENGTH                                0x1
5581:          #define _CM2CON0_CON2_MASK                                  0x80
5582:          #define _CM2CON0_CPOL2_POSN                                 0x5
5583:          #define _CM2CON0_CPOL2_POSITION                             0x5
5584:          #define _CM2CON0_CPOL2_SIZE                                 0x1
5585:          #define _CM2CON0_CPOL2_LENGTH                               0x1
5586:          #define _CM2CON0_CPOL2_MASK                                 0x20
5587:          #define _CM2CON0_CREF2_POSN                                 0x2
5588:          #define _CM2CON0_CREF2_POSITION                             0x2
5589:          #define _CM2CON0_CREF2_SIZE                                 0x1
5590:          #define _CM2CON0_CREF2_LENGTH                               0x1
5591:          #define _CM2CON0_CREF2_MASK                                 0x4
5592:          #define _CM2CON0_EVPOL02_POSN                               0x3
5593:          #define _CM2CON0_EVPOL02_POSITION                           0x3
5594:          #define _CM2CON0_EVPOL02_SIZE                               0x1
5595:          #define _CM2CON0_EVPOL02_LENGTH                             0x1
5596:          #define _CM2CON0_EVPOL02_MASK                               0x8
5597:          #define _CM2CON0_EVPOL12_POSN                               0x4
5598:          #define _CM2CON0_EVPOL12_POSITION                           0x4
5599:          #define _CM2CON0_EVPOL12_SIZE                               0x1
5600:          #define _CM2CON0_EVPOL12_LENGTH                             0x1
5601:          #define _CM2CON0_EVPOL12_MASK                               0x10
5602:          // alias bitfield definitions
5603:          typedef union {
5604:              struct {
5605:                  unsigned C2CH                   :2;
5606:                  unsigned C2R                    :1;
5607:                  unsigned C2SP                   :1;
5608:                  unsigned C2POL                  :1;
5609:                  unsigned C2OE                   :1;
5610:                  unsigned C2OUT                  :1;
5611:                  unsigned C2ON                   :1;
5612:              };
5613:              struct {
5614:                  unsigned C2CH0                  :1;
5615:                  unsigned C2CH1                  :1;
5616:              };
5617:              struct {
5618:                  unsigned CCH02                  :1;
5619:              };
5620:              struct {
5621:                  unsigned                        :1;
5622:                  unsigned CCH12                  :1;
5623:              };
5624:              struct {
5625:                  unsigned                        :6;
5626:                  unsigned COE2                   :1;
5627:              };
5628:              struct {
5629:                  unsigned                        :7;
5630:                  unsigned CON2                   :1;
5631:              };
5632:              struct {
5633:                  unsigned                        :5;
5634:                  unsigned CPOL2                  :1;
5635:              };
5636:              struct {
5637:                  unsigned                        :2;
5638:                  unsigned CREF2                  :1;
5639:              };
5640:              struct {
5641:                  unsigned                        :3;
5642:                  unsigned EVPOL02                :1;
5643:              };
5644:              struct {
5645:                  unsigned                        :4;
5646:                  unsigned EVPOL12                :1;
5647:              };
5648:          } CM2CONbits_t;
5649:          extern volatile CM2CONbits_t CM2CONbits @ 0xF78;
5650:          // bitfield macros
5651:          #define _CM2CON_C2CH_POSN                                   0x0
5652:          #define _CM2CON_C2CH_POSITION                               0x0
5653:          #define _CM2CON_C2CH_SIZE                                   0x2
5654:          #define _CM2CON_C2CH_LENGTH                                 0x2
5655:          #define _CM2CON_C2CH_MASK                                   0x3
5656:          #define _CM2CON_C2R_POSN                                    0x2
5657:          #define _CM2CON_C2R_POSITION                                0x2
5658:          #define _CM2CON_C2R_SIZE                                    0x1
5659:          #define _CM2CON_C2R_LENGTH                                  0x1
5660:          #define _CM2CON_C2R_MASK                                    0x4
5661:          #define _CM2CON_C2SP_POSN                                   0x3
5662:          #define _CM2CON_C2SP_POSITION                               0x3
5663:          #define _CM2CON_C2SP_SIZE                                   0x1
5664:          #define _CM2CON_C2SP_LENGTH                                 0x1
5665:          #define _CM2CON_C2SP_MASK                                   0x8
5666:          #define _CM2CON_C2POL_POSN                                  0x4
5667:          #define _CM2CON_C2POL_POSITION                              0x4
5668:          #define _CM2CON_C2POL_SIZE                                  0x1
5669:          #define _CM2CON_C2POL_LENGTH                                0x1
5670:          #define _CM2CON_C2POL_MASK                                  0x10
5671:          #define _CM2CON_C2OE_POSN                                   0x5
5672:          #define _CM2CON_C2OE_POSITION                               0x5
5673:          #define _CM2CON_C2OE_SIZE                                   0x1
5674:          #define _CM2CON_C2OE_LENGTH                                 0x1
5675:          #define _CM2CON_C2OE_MASK                                   0x20
5676:          #define _CM2CON_C2OUT_POSN                                  0x6
5677:          #define _CM2CON_C2OUT_POSITION                              0x6
5678:          #define _CM2CON_C2OUT_SIZE                                  0x1
5679:          #define _CM2CON_C2OUT_LENGTH                                0x1
5680:          #define _CM2CON_C2OUT_MASK                                  0x40
5681:          #define _CM2CON_C2ON_POSN                                   0x7
5682:          #define _CM2CON_C2ON_POSITION                               0x7
5683:          #define _CM2CON_C2ON_SIZE                                   0x1
5684:          #define _CM2CON_C2ON_LENGTH                                 0x1
5685:          #define _CM2CON_C2ON_MASK                                   0x80
5686:          #define _CM2CON_C2CH0_POSN                                  0x0
5687:          #define _CM2CON_C2CH0_POSITION                              0x0
5688:          #define _CM2CON_C2CH0_SIZE                                  0x1
5689:          #define _CM2CON_C2CH0_LENGTH                                0x1
5690:          #define _CM2CON_C2CH0_MASK                                  0x1
5691:          #define _CM2CON_C2CH1_POSN                                  0x1
5692:          #define _CM2CON_C2CH1_POSITION                              0x1
5693:          #define _CM2CON_C2CH1_SIZE                                  0x1
5694:          #define _CM2CON_C2CH1_LENGTH                                0x1
5695:          #define _CM2CON_C2CH1_MASK                                  0x2
5696:          #define _CM2CON_CCH02_POSN                                  0x0
5697:          #define _CM2CON_CCH02_POSITION                              0x0
5698:          #define _CM2CON_CCH02_SIZE                                  0x1
5699:          #define _CM2CON_CCH02_LENGTH                                0x1
5700:          #define _CM2CON_CCH02_MASK                                  0x1
5701:          #define _CM2CON_CCH12_POSN                                  0x1
5702:          #define _CM2CON_CCH12_POSITION                              0x1
5703:          #define _CM2CON_CCH12_SIZE                                  0x1
5704:          #define _CM2CON_CCH12_LENGTH                                0x1
5705:          #define _CM2CON_CCH12_MASK                                  0x2
5706:          #define _CM2CON_COE2_POSN                                   0x6
5707:          #define _CM2CON_COE2_POSITION                               0x6
5708:          #define _CM2CON_COE2_SIZE                                   0x1
5709:          #define _CM2CON_COE2_LENGTH                                 0x1
5710:          #define _CM2CON_COE2_MASK                                   0x40
5711:          #define _CM2CON_CON2_POSN                                   0x7
5712:          #define _CM2CON_CON2_POSITION                               0x7
5713:          #define _CM2CON_CON2_SIZE                                   0x1
5714:          #define _CM2CON_CON2_LENGTH                                 0x1
5715:          #define _CM2CON_CON2_MASK                                   0x80
5716:          #define _CM2CON_CPOL2_POSN                                  0x5
5717:          #define _CM2CON_CPOL2_POSITION                              0x5
5718:          #define _CM2CON_CPOL2_SIZE                                  0x1
5719:          #define _CM2CON_CPOL2_LENGTH                                0x1
5720:          #define _CM2CON_CPOL2_MASK                                  0x20
5721:          #define _CM2CON_CREF2_POSN                                  0x2
5722:          #define _CM2CON_CREF2_POSITION                              0x2
5723:          #define _CM2CON_CREF2_SIZE                                  0x1
5724:          #define _CM2CON_CREF2_LENGTH                                0x1
5725:          #define _CM2CON_CREF2_MASK                                  0x4
5726:          #define _CM2CON_EVPOL02_POSN                                0x3
5727:          #define _CM2CON_EVPOL02_POSITION                            0x3
5728:          #define _CM2CON_EVPOL02_SIZE                                0x1
5729:          #define _CM2CON_EVPOL02_LENGTH                              0x1
5730:          #define _CM2CON_EVPOL02_MASK                                0x8
5731:          #define _CM2CON_EVPOL12_POSN                                0x4
5732:          #define _CM2CON_EVPOL12_POSITION                            0x4
5733:          #define _CM2CON_EVPOL12_SIZE                                0x1
5734:          #define _CM2CON_EVPOL12_LENGTH                              0x1
5735:          #define _CM2CON_EVPOL12_MASK                                0x10
5736:          
5737:          // Register: CM1CON0
5738:          extern volatile unsigned char           CM1CON0             @ 0xF79;
5739:          #ifndef _LIB_BUILD
5740:          asm("CM1CON0 equ 0F79h");
5741:          #endif
5742:          // aliases
5743:          extern volatile unsigned char           CM1CON              @ 0xF79;
5744:          #ifndef _LIB_BUILD
5745:          asm("CM1CON equ 0F79h");
5746:          #endif
5747:          // bitfield definitions
5748:          typedef union {
5749:              struct {
5750:                  unsigned C1CH                   :2;
5751:                  unsigned C1R                    :1;
5752:                  unsigned C1SP                   :1;
5753:                  unsigned C1POL                  :1;
5754:                  unsigned C1OE                   :1;
5755:                  unsigned C1OUT                  :1;
5756:                  unsigned C1ON                   :1;
5757:              };
5758:              struct {
5759:                  unsigned C1CH0                  :1;
5760:                  unsigned C1CH1                  :1;
5761:              };
5762:              struct {
5763:                  unsigned CCH0                   :1;
5764:              };
5765:              struct {
5766:                  unsigned CCH01                  :1;
5767:              };
5768:              struct {
5769:                  unsigned                        :1;
5770:                  unsigned CCH1                   :1;
5771:              };
5772:              struct {
5773:                  unsigned                        :1;
5774:                  unsigned CCH11                  :1;
5775:              };
5776:              struct {
5777:                  unsigned                        :6;
5778:                  unsigned COE                    :1;
5779:              };
5780:              struct {
5781:                  unsigned                        :6;
5782:                  unsigned COE1                   :1;
5783:              };
5784:              struct {
5785:                  unsigned                        :7;
5786:                  unsigned CON                    :1;
5787:              };
5788:              struct {
5789:                  unsigned                        :7;
5790:                  unsigned CON1                   :1;
5791:              };
5792:              struct {
5793:                  unsigned                        :5;
5794:                  unsigned CPOL                   :1;
5795:              };
5796:              struct {
5797:                  unsigned                        :5;
5798:                  unsigned CPOL1                  :1;
5799:              };
5800:              struct {
5801:                  unsigned                        :2;
5802:                  unsigned CREF                   :1;
5803:              };
5804:              struct {
5805:                  unsigned                        :2;
5806:                  unsigned CREF1                  :1;
5807:              };
5808:              struct {
5809:                  unsigned                        :3;
5810:                  unsigned EVPOL0                 :1;
5811:              };
5812:              struct {
5813:                  unsigned                        :3;
5814:                  unsigned EVPOL01                :1;
5815:              };
5816:              struct {
5817:                  unsigned                        :4;
5818:                  unsigned EVPOL1                 :1;
5819:              };
5820:              struct {
5821:                  unsigned                        :4;
5822:                  unsigned EVPOL11                :1;
5823:              };
5824:          } CM1CON0bits_t;
5825:          extern volatile CM1CON0bits_t CM1CON0bits @ 0xF79;
5826:          // bitfield macros
5827:          #define _CM1CON0_C1CH_POSN                                  0x0
5828:          #define _CM1CON0_C1CH_POSITION                              0x0
5829:          #define _CM1CON0_C1CH_SIZE                                  0x2
5830:          #define _CM1CON0_C1CH_LENGTH                                0x2
5831:          #define _CM1CON0_C1CH_MASK                                  0x3
5832:          #define _CM1CON0_C1R_POSN                                   0x2
5833:          #define _CM1CON0_C1R_POSITION                               0x2
5834:          #define _CM1CON0_C1R_SIZE                                   0x1
5835:          #define _CM1CON0_C1R_LENGTH                                 0x1
5836:          #define _CM1CON0_C1R_MASK                                   0x4
5837:          #define _CM1CON0_C1SP_POSN                                  0x3
5838:          #define _CM1CON0_C1SP_POSITION                              0x3
5839:          #define _CM1CON0_C1SP_SIZE                                  0x1
5840:          #define _CM1CON0_C1SP_LENGTH                                0x1
5841:          #define _CM1CON0_C1SP_MASK                                  0x8
5842:          #define _CM1CON0_C1POL_POSN                                 0x4
5843:          #define _CM1CON0_C1POL_POSITION                             0x4
5844:          #define _CM1CON0_C1POL_SIZE                                 0x1
5845:          #define _CM1CON0_C1POL_LENGTH                               0x1
5846:          #define _CM1CON0_C1POL_MASK                                 0x10
5847:          #define _CM1CON0_C1OE_POSN                                  0x5
5848:          #define _CM1CON0_C1OE_POSITION                              0x5
5849:          #define _CM1CON0_C1OE_SIZE                                  0x1
5850:          #define _CM1CON0_C1OE_LENGTH                                0x1
5851:          #define _CM1CON0_C1OE_MASK                                  0x20
5852:          #define _CM1CON0_C1OUT_POSN                                 0x6
5853:          #define _CM1CON0_C1OUT_POSITION                             0x6
5854:          #define _CM1CON0_C1OUT_SIZE                                 0x1
5855:          #define _CM1CON0_C1OUT_LENGTH                               0x1
5856:          #define _CM1CON0_C1OUT_MASK                                 0x40
5857:          #define _CM1CON0_C1ON_POSN                                  0x7
5858:          #define _CM1CON0_C1ON_POSITION                              0x7
5859:          #define _CM1CON0_C1ON_SIZE                                  0x1
5860:          #define _CM1CON0_C1ON_LENGTH                                0x1
5861:          #define _CM1CON0_C1ON_MASK                                  0x80
5862:          #define _CM1CON0_C1CH0_POSN                                 0x0
5863:          #define _CM1CON0_C1CH0_POSITION                             0x0
5864:          #define _CM1CON0_C1CH0_SIZE                                 0x1
5865:          #define _CM1CON0_C1CH0_LENGTH                               0x1
5866:          #define _CM1CON0_C1CH0_MASK                                 0x1
5867:          #define _CM1CON0_C1CH1_POSN                                 0x1
5868:          #define _CM1CON0_C1CH1_POSITION                             0x1
5869:          #define _CM1CON0_C1CH1_SIZE                                 0x1
5870:          #define _CM1CON0_C1CH1_LENGTH                               0x1
5871:          #define _CM1CON0_C1CH1_MASK                                 0x2
5872:          #define _CM1CON0_CCH0_POSN                                  0x0
5873:          #define _CM1CON0_CCH0_POSITION                              0x0
5874:          #define _CM1CON0_CCH0_SIZE                                  0x1
5875:          #define _CM1CON0_CCH0_LENGTH                                0x1
5876:          #define _CM1CON0_CCH0_MASK                                  0x1
5877:          #define _CM1CON0_CCH01_POSN                                 0x0
5878:          #define _CM1CON0_CCH01_POSITION                             0x0
5879:          #define _CM1CON0_CCH01_SIZE                                 0x1
5880:          #define _CM1CON0_CCH01_LENGTH                               0x1
5881:          #define _CM1CON0_CCH01_MASK                                 0x1
5882:          #define _CM1CON0_CCH1_POSN                                  0x1
5883:          #define _CM1CON0_CCH1_POSITION                              0x1
5884:          #define _CM1CON0_CCH1_SIZE                                  0x1
5885:          #define _CM1CON0_CCH1_LENGTH                                0x1
5886:          #define _CM1CON0_CCH1_MASK                                  0x2
5887:          #define _CM1CON0_CCH11_POSN                                 0x1
5888:          #define _CM1CON0_CCH11_POSITION                             0x1
5889:          #define _CM1CON0_CCH11_SIZE                                 0x1
5890:          #define _CM1CON0_CCH11_LENGTH                               0x1
5891:          #define _CM1CON0_CCH11_MASK                                 0x2
5892:          #define _CM1CON0_COE_POSN                                   0x6
5893:          #define _CM1CON0_COE_POSITION                               0x6
5894:          #define _CM1CON0_COE_SIZE                                   0x1
5895:          #define _CM1CON0_COE_LENGTH                                 0x1
5896:          #define _CM1CON0_COE_MASK                                   0x40
5897:          #define _CM1CON0_COE1_POSN                                  0x6
5898:          #define _CM1CON0_COE1_POSITION                              0x6
5899:          #define _CM1CON0_COE1_SIZE                                  0x1
5900:          #define _CM1CON0_COE1_LENGTH                                0x1
5901:          #define _CM1CON0_COE1_MASK                                  0x40
5902:          #define _CM1CON0_CON_POSN                                   0x7
5903:          #define _CM1CON0_CON_POSITION                               0x7
5904:          #define _CM1CON0_CON_SIZE                                   0x1
5905:          #define _CM1CON0_CON_LENGTH                                 0x1
5906:          #define _CM1CON0_CON_MASK                                   0x80
5907:          #define _CM1CON0_CON1_POSN                                  0x7
5908:          #define _CM1CON0_CON1_POSITION                              0x7
5909:          #define _CM1CON0_CON1_SIZE                                  0x1
5910:          #define _CM1CON0_CON1_LENGTH                                0x1
5911:          #define _CM1CON0_CON1_MASK                                  0x80
5912:          #define _CM1CON0_CPOL_POSN                                  0x5
5913:          #define _CM1CON0_CPOL_POSITION                              0x5
5914:          #define _CM1CON0_CPOL_SIZE                                  0x1
5915:          #define _CM1CON0_CPOL_LENGTH                                0x1
5916:          #define _CM1CON0_CPOL_MASK                                  0x20
5917:          #define _CM1CON0_CPOL1_POSN                                 0x5
5918:          #define _CM1CON0_CPOL1_POSITION                             0x5
5919:          #define _CM1CON0_CPOL1_SIZE                                 0x1
5920:          #define _CM1CON0_CPOL1_LENGTH                               0x1
5921:          #define _CM1CON0_CPOL1_MASK                                 0x20
5922:          #define _CM1CON0_CREF_POSN                                  0x2
5923:          #define _CM1CON0_CREF_POSITION                              0x2
5924:          #define _CM1CON0_CREF_SIZE                                  0x1
5925:          #define _CM1CON0_CREF_LENGTH                                0x1
5926:          #define _CM1CON0_CREF_MASK                                  0x4
5927:          #define _CM1CON0_CREF1_POSN                                 0x2
5928:          #define _CM1CON0_CREF1_POSITION                             0x2
5929:          #define _CM1CON0_CREF1_SIZE                                 0x1
5930:          #define _CM1CON0_CREF1_LENGTH                               0x1
5931:          #define _CM1CON0_CREF1_MASK                                 0x4
5932:          #define _CM1CON0_EVPOL0_POSN                                0x3
5933:          #define _CM1CON0_EVPOL0_POSITION                            0x3
5934:          #define _CM1CON0_EVPOL0_SIZE                                0x1
5935:          #define _CM1CON0_EVPOL0_LENGTH                              0x1
5936:          #define _CM1CON0_EVPOL0_MASK                                0x8
5937:          #define _CM1CON0_EVPOL01_POSN                               0x3
5938:          #define _CM1CON0_EVPOL01_POSITION                           0x3
5939:          #define _CM1CON0_EVPOL01_SIZE                               0x1
5940:          #define _CM1CON0_EVPOL01_LENGTH                             0x1
5941:          #define _CM1CON0_EVPOL01_MASK                               0x8
5942:          #define _CM1CON0_EVPOL1_POSN                                0x4
5943:          #define _CM1CON0_EVPOL1_POSITION                            0x4
5944:          #define _CM1CON0_EVPOL1_SIZE                                0x1
5945:          #define _CM1CON0_EVPOL1_LENGTH                              0x1
5946:          #define _CM1CON0_EVPOL1_MASK                                0x10
5947:          #define _CM1CON0_EVPOL11_POSN                               0x4
5948:          #define _CM1CON0_EVPOL11_POSITION                           0x4
5949:          #define _CM1CON0_EVPOL11_SIZE                               0x1
5950:          #define _CM1CON0_EVPOL11_LENGTH                             0x1
5951:          #define _CM1CON0_EVPOL11_MASK                               0x10
5952:          // alias bitfield definitions
5953:          typedef union {
5954:              struct {
5955:                  unsigned C1CH                   :2;
5956:                  unsigned C1R                    :1;
5957:                  unsigned C1SP                   :1;
5958:                  unsigned C1POL                  :1;
5959:                  unsigned C1OE                   :1;
5960:                  unsigned C1OUT                  :1;
5961:                  unsigned C1ON                   :1;
5962:              };
5963:              struct {
5964:                  unsigned C1CH0                  :1;
5965:                  unsigned C1CH1                  :1;
5966:              };
5967:              struct {
5968:                  unsigned CCH0                   :1;
5969:              };
5970:              struct {
5971:                  unsigned CCH01                  :1;
5972:              };
5973:              struct {
5974:                  unsigned                        :1;
5975:                  unsigned CCH1                   :1;
5976:              };
5977:              struct {
5978:                  unsigned                        :1;
5979:                  unsigned CCH11                  :1;
5980:              };
5981:              struct {
5982:                  unsigned                        :6;
5983:                  unsigned COE                    :1;
5984:              };
5985:              struct {
5986:                  unsigned                        :6;
5987:                  unsigned COE1                   :1;
5988:              };
5989:              struct {
5990:                  unsigned                        :7;
5991:                  unsigned CON                    :1;
5992:              };
5993:              struct {
5994:                  unsigned                        :7;
5995:                  unsigned CON1                   :1;
5996:              };
5997:              struct {
5998:                  unsigned                        :5;
5999:                  unsigned CPOL                   :1;
6000:              };
6001:              struct {
6002:                  unsigned                        :5;
6003:                  unsigned CPOL1                  :1;
6004:              };
6005:              struct {
6006:                  unsigned                        :2;
6007:                  unsigned CREF                   :1;
6008:              };
6009:              struct {
6010:                  unsigned                        :2;
6011:                  unsigned CREF1                  :1;
6012:              };
6013:              struct {
6014:                  unsigned                        :3;
6015:                  unsigned EVPOL0                 :1;
6016:              };
6017:              struct {
6018:                  unsigned                        :3;
6019:                  unsigned EVPOL01                :1;
6020:              };
6021:              struct {
6022:                  unsigned                        :4;
6023:                  unsigned EVPOL1                 :1;
6024:              };
6025:              struct {
6026:                  unsigned                        :4;
6027:                  unsigned EVPOL11                :1;
6028:              };
6029:          } CM1CONbits_t;
6030:          extern volatile CM1CONbits_t CM1CONbits @ 0xF79;
6031:          // bitfield macros
6032:          #define _CM1CON_C1CH_POSN                                   0x0
6033:          #define _CM1CON_C1CH_POSITION                               0x0
6034:          #define _CM1CON_C1CH_SIZE                                   0x2
6035:          #define _CM1CON_C1CH_LENGTH                                 0x2
6036:          #define _CM1CON_C1CH_MASK                                   0x3
6037:          #define _CM1CON_C1R_POSN                                    0x2
6038:          #define _CM1CON_C1R_POSITION                                0x2
6039:          #define _CM1CON_C1R_SIZE                                    0x1
6040:          #define _CM1CON_C1R_LENGTH                                  0x1
6041:          #define _CM1CON_C1R_MASK                                    0x4
6042:          #define _CM1CON_C1SP_POSN                                   0x3
6043:          #define _CM1CON_C1SP_POSITION                               0x3
6044:          #define _CM1CON_C1SP_SIZE                                   0x1
6045:          #define _CM1CON_C1SP_LENGTH                                 0x1
6046:          #define _CM1CON_C1SP_MASK                                   0x8
6047:          #define _CM1CON_C1POL_POSN                                  0x4
6048:          #define _CM1CON_C1POL_POSITION                              0x4
6049:          #define _CM1CON_C1POL_SIZE                                  0x1
6050:          #define _CM1CON_C1POL_LENGTH                                0x1
6051:          #define _CM1CON_C1POL_MASK                                  0x10
6052:          #define _CM1CON_C1OE_POSN                                   0x5
6053:          #define _CM1CON_C1OE_POSITION                               0x5
6054:          #define _CM1CON_C1OE_SIZE                                   0x1
6055:          #define _CM1CON_C1OE_LENGTH                                 0x1
6056:          #define _CM1CON_C1OE_MASK                                   0x20
6057:          #define _CM1CON_C1OUT_POSN                                  0x6
6058:          #define _CM1CON_C1OUT_POSITION                              0x6
6059:          #define _CM1CON_C1OUT_SIZE                                  0x1
6060:          #define _CM1CON_C1OUT_LENGTH                                0x1
6061:          #define _CM1CON_C1OUT_MASK                                  0x40
6062:          #define _CM1CON_C1ON_POSN                                   0x7
6063:          #define _CM1CON_C1ON_POSITION                               0x7
6064:          #define _CM1CON_C1ON_SIZE                                   0x1
6065:          #define _CM1CON_C1ON_LENGTH                                 0x1
6066:          #define _CM1CON_C1ON_MASK                                   0x80
6067:          #define _CM1CON_C1CH0_POSN                                  0x0
6068:          #define _CM1CON_C1CH0_POSITION                              0x0
6069:          #define _CM1CON_C1CH0_SIZE                                  0x1
6070:          #define _CM1CON_C1CH0_LENGTH                                0x1
6071:          #define _CM1CON_C1CH0_MASK                                  0x1
6072:          #define _CM1CON_C1CH1_POSN                                  0x1
6073:          #define _CM1CON_C1CH1_POSITION                              0x1
6074:          #define _CM1CON_C1CH1_SIZE                                  0x1
6075:          #define _CM1CON_C1CH1_LENGTH                                0x1
6076:          #define _CM1CON_C1CH1_MASK                                  0x2
6077:          #define _CM1CON_CCH0_POSN                                   0x0
6078:          #define _CM1CON_CCH0_POSITION                               0x0
6079:          #define _CM1CON_CCH0_SIZE                                   0x1
6080:          #define _CM1CON_CCH0_LENGTH                                 0x1
6081:          #define _CM1CON_CCH0_MASK                                   0x1
6082:          #define _CM1CON_CCH01_POSN                                  0x0
6083:          #define _CM1CON_CCH01_POSITION                              0x0
6084:          #define _CM1CON_CCH01_SIZE                                  0x1
6085:          #define _CM1CON_CCH01_LENGTH                                0x1
6086:          #define _CM1CON_CCH01_MASK                                  0x1
6087:          #define _CM1CON_CCH1_POSN                                   0x1
6088:          #define _CM1CON_CCH1_POSITION                               0x1
6089:          #define _CM1CON_CCH1_SIZE                                   0x1
6090:          #define _CM1CON_CCH1_LENGTH                                 0x1
6091:          #define _CM1CON_CCH1_MASK                                   0x2
6092:          #define _CM1CON_CCH11_POSN                                  0x1
6093:          #define _CM1CON_CCH11_POSITION                              0x1
6094:          #define _CM1CON_CCH11_SIZE                                  0x1
6095:          #define _CM1CON_CCH11_LENGTH                                0x1
6096:          #define _CM1CON_CCH11_MASK                                  0x2
6097:          #define _CM1CON_COE_POSN                                    0x6
6098:          #define _CM1CON_COE_POSITION                                0x6
6099:          #define _CM1CON_COE_SIZE                                    0x1
6100:          #define _CM1CON_COE_LENGTH                                  0x1
6101:          #define _CM1CON_COE_MASK                                    0x40
6102:          #define _CM1CON_COE1_POSN                                   0x6
6103:          #define _CM1CON_COE1_POSITION                               0x6
6104:          #define _CM1CON_COE1_SIZE                                   0x1
6105:          #define _CM1CON_COE1_LENGTH                                 0x1
6106:          #define _CM1CON_COE1_MASK                                   0x40
6107:          #define _CM1CON_CON_POSN                                    0x7
6108:          #define _CM1CON_CON_POSITION                                0x7
6109:          #define _CM1CON_CON_SIZE                                    0x1
6110:          #define _CM1CON_CON_LENGTH                                  0x1
6111:          #define _CM1CON_CON_MASK                                    0x80
6112:          #define _CM1CON_CON1_POSN                                   0x7
6113:          #define _CM1CON_CON1_POSITION                               0x7
6114:          #define _CM1CON_CON1_SIZE                                   0x1
6115:          #define _CM1CON_CON1_LENGTH                                 0x1
6116:          #define _CM1CON_CON1_MASK                                   0x80
6117:          #define _CM1CON_CPOL_POSN                                   0x5
6118:          #define _CM1CON_CPOL_POSITION                               0x5
6119:          #define _CM1CON_CPOL_SIZE                                   0x1
6120:          #define _CM1CON_CPOL_LENGTH                                 0x1
6121:          #define _CM1CON_CPOL_MASK                                   0x20
6122:          #define _CM1CON_CPOL1_POSN                                  0x5
6123:          #define _CM1CON_CPOL1_POSITION                              0x5
6124:          #define _CM1CON_CPOL1_SIZE                                  0x1
6125:          #define _CM1CON_CPOL1_LENGTH                                0x1
6126:          #define _CM1CON_CPOL1_MASK                                  0x20
6127:          #define _CM1CON_CREF_POSN                                   0x2
6128:          #define _CM1CON_CREF_POSITION                               0x2
6129:          #define _CM1CON_CREF_SIZE                                   0x1
6130:          #define _CM1CON_CREF_LENGTH                                 0x1
6131:          #define _CM1CON_CREF_MASK                                   0x4
6132:          #define _CM1CON_CREF1_POSN                                  0x2
6133:          #define _CM1CON_CREF1_POSITION                              0x2
6134:          #define _CM1CON_CREF1_SIZE                                  0x1
6135:          #define _CM1CON_CREF1_LENGTH                                0x1
6136:          #define _CM1CON_CREF1_MASK                                  0x4
6137:          #define _CM1CON_EVPOL0_POSN                                 0x3
6138:          #define _CM1CON_EVPOL0_POSITION                             0x3
6139:          #define _CM1CON_EVPOL0_SIZE                                 0x1
6140:          #define _CM1CON_EVPOL0_LENGTH                               0x1
6141:          #define _CM1CON_EVPOL0_MASK                                 0x8
6142:          #define _CM1CON_EVPOL01_POSN                                0x3
6143:          #define _CM1CON_EVPOL01_POSITION                            0x3
6144:          #define _CM1CON_EVPOL01_SIZE                                0x1
6145:          #define _CM1CON_EVPOL01_LENGTH                              0x1
6146:          #define _CM1CON_EVPOL01_MASK                                0x8
6147:          #define _CM1CON_EVPOL1_POSN                                 0x4
6148:          #define _CM1CON_EVPOL1_POSITION                             0x4
6149:          #define _CM1CON_EVPOL1_SIZE                                 0x1
6150:          #define _CM1CON_EVPOL1_LENGTH                               0x1
6151:          #define _CM1CON_EVPOL1_MASK                                 0x10
6152:          #define _CM1CON_EVPOL11_POSN                                0x4
6153:          #define _CM1CON_EVPOL11_POSITION                            0x4
6154:          #define _CM1CON_EVPOL11_SIZE                                0x1
6155:          #define _CM1CON_EVPOL11_LENGTH                              0x1
6156:          #define _CM1CON_EVPOL11_MASK                                0x10
6157:          
6158:          // Register: PIE4
6159:          extern volatile unsigned char           PIE4                @ 0xF7A;
6160:          #ifndef _LIB_BUILD
6161:          asm("PIE4 equ 0F7Ah");
6162:          #endif
6163:          // bitfield definitions
6164:          typedef union {
6165:              struct {
6166:                  unsigned CCP3IE                 :1;
6167:                  unsigned CCP4IE                 :1;
6168:                  unsigned CCP5IE                 :1;
6169:              };
6170:          } PIE4bits_t;
6171:          extern volatile PIE4bits_t PIE4bits @ 0xF7A;
6172:          // bitfield macros
6173:          #define _PIE4_CCP3IE_POSN                                   0x0
6174:          #define _PIE4_CCP3IE_POSITION                               0x0
6175:          #define _PIE4_CCP3IE_SIZE                                   0x1
6176:          #define _PIE4_CCP3IE_LENGTH                                 0x1
6177:          #define _PIE4_CCP3IE_MASK                                   0x1
6178:          #define _PIE4_CCP4IE_POSN                                   0x1
6179:          #define _PIE4_CCP4IE_POSITION                               0x1
6180:          #define _PIE4_CCP4IE_SIZE                                   0x1
6181:          #define _PIE4_CCP4IE_LENGTH                                 0x1
6182:          #define _PIE4_CCP4IE_MASK                                   0x2
6183:          #define _PIE4_CCP5IE_POSN                                   0x2
6184:          #define _PIE4_CCP5IE_POSITION                               0x2
6185:          #define _PIE4_CCP5IE_SIZE                                   0x1
6186:          #define _PIE4_CCP5IE_LENGTH                                 0x1
6187:          #define _PIE4_CCP5IE_MASK                                   0x4
6188:          
6189:          // Register: PIR4
6190:          extern volatile unsigned char           PIR4                @ 0xF7B;
6191:          #ifndef _LIB_BUILD
6192:          asm("PIR4 equ 0F7Bh");
6193:          #endif
6194:          // bitfield definitions
6195:          typedef union {
6196:              struct {
6197:                  unsigned CCP3IF                 :1;
6198:                  unsigned CCP4IF                 :1;
6199:                  unsigned CCP5IF                 :1;
6200:              };
6201:          } PIR4bits_t;
6202:          extern volatile PIR4bits_t PIR4bits @ 0xF7B;
6203:          // bitfield macros
6204:          #define _PIR4_CCP3IF_POSN                                   0x0
6205:          #define _PIR4_CCP3IF_POSITION                               0x0
6206:          #define _PIR4_CCP3IF_SIZE                                   0x1
6207:          #define _PIR4_CCP3IF_LENGTH                                 0x1
6208:          #define _PIR4_CCP3IF_MASK                                   0x1
6209:          #define _PIR4_CCP4IF_POSN                                   0x1
6210:          #define _PIR4_CCP4IF_POSITION                               0x1
6211:          #define _PIR4_CCP4IF_SIZE                                   0x1
6212:          #define _PIR4_CCP4IF_LENGTH                                 0x1
6213:          #define _PIR4_CCP4IF_MASK                                   0x2
6214:          #define _PIR4_CCP5IF_POSN                                   0x2
6215:          #define _PIR4_CCP5IF_POSITION                               0x2
6216:          #define _PIR4_CCP5IF_SIZE                                   0x1
6217:          #define _PIR4_CCP5IF_LENGTH                                 0x1
6218:          #define _PIR4_CCP5IF_MASK                                   0x4
6219:          
6220:          // Register: IPR4
6221:          extern volatile unsigned char           IPR4                @ 0xF7C;
6222:          #ifndef _LIB_BUILD
6223:          asm("IPR4 equ 0F7Ch");
6224:          #endif
6225:          // bitfield definitions
6226:          typedef union {
6227:              struct {
6228:                  unsigned CCP3IP                 :1;
6229:                  unsigned CCP4IP                 :1;
6230:                  unsigned CCP5IP                 :1;
6231:              };
6232:              struct {
6233:                  unsigned CCIP3IP                :1;
6234:              };
6235:          } IPR4bits_t;
6236:          extern volatile IPR4bits_t IPR4bits @ 0xF7C;
6237:          // bitfield macros
6238:          #define _IPR4_CCP3IP_POSN                                   0x0
6239:          #define _IPR4_CCP3IP_POSITION                               0x0
6240:          #define _IPR4_CCP3IP_SIZE                                   0x1
6241:          #define _IPR4_CCP3IP_LENGTH                                 0x1
6242:          #define _IPR4_CCP3IP_MASK                                   0x1
6243:          #define _IPR4_CCP4IP_POSN                                   0x1
6244:          #define _IPR4_CCP4IP_POSITION                               0x1
6245:          #define _IPR4_CCP4IP_SIZE                                   0x1
6246:          #define _IPR4_CCP4IP_LENGTH                                 0x1
6247:          #define _IPR4_CCP4IP_MASK                                   0x2
6248:          #define _IPR4_CCP5IP_POSN                                   0x2
6249:          #define _IPR4_CCP5IP_POSITION                               0x2
6250:          #define _IPR4_CCP5IP_SIZE                                   0x1
6251:          #define _IPR4_CCP5IP_LENGTH                                 0x1
6252:          #define _IPR4_CCP5IP_MASK                                   0x4
6253:          #define _IPR4_CCIP3IP_POSN                                  0x0
6254:          #define _IPR4_CCIP3IP_POSITION                              0x0
6255:          #define _IPR4_CCIP3IP_SIZE                                  0x1
6256:          #define _IPR4_CCIP3IP_LENGTH                                0x1
6257:          #define _IPR4_CCIP3IP_MASK                                  0x1
6258:          
6259:          // Register: PIE5
6260:          extern volatile unsigned char           PIE5                @ 0xF7D;
6261:          #ifndef _LIB_BUILD
6262:          asm("PIE5 equ 0F7Dh");
6263:          #endif
6264:          // bitfield definitions
6265:          typedef union {
6266:              struct {
6267:                  unsigned TMR4IE                 :1;
6268:                  unsigned TMR5IE                 :1;
6269:                  unsigned TMR6IE                 :1;
6270:              };
6271:          } PIE5bits_t;
6272:          extern volatile PIE5bits_t PIE5bits @ 0xF7D;
6273:          // bitfield macros
6274:          #define _PIE5_TMR4IE_POSN                                   0x0
6275:          #define _PIE5_TMR4IE_POSITION                               0x0
6276:          #define _PIE5_TMR4IE_SIZE                                   0x1
6277:          #define _PIE5_TMR4IE_LENGTH                                 0x1
6278:          #define _PIE5_TMR4IE_MASK                                   0x1
6279:          #define _PIE5_TMR5IE_POSN                                   0x1
6280:          #define _PIE5_TMR5IE_POSITION                               0x1
6281:          #define _PIE5_TMR5IE_SIZE                                   0x1
6282:          #define _PIE5_TMR5IE_LENGTH                                 0x1
6283:          #define _PIE5_TMR5IE_MASK                                   0x2
6284:          #define _PIE5_TMR6IE_POSN                                   0x2
6285:          #define _PIE5_TMR6IE_POSITION                               0x2
6286:          #define _PIE5_TMR6IE_SIZE                                   0x1
6287:          #define _PIE5_TMR6IE_LENGTH                                 0x1
6288:          #define _PIE5_TMR6IE_MASK                                   0x4
6289:          
6290:          // Register: PIR5
6291:          extern volatile unsigned char           PIR5                @ 0xF7E;
6292:          #ifndef _LIB_BUILD
6293:          asm("PIR5 equ 0F7Eh");
6294:          #endif
6295:          // bitfield definitions
6296:          typedef union {
6297:              struct {
6298:                  unsigned TMR4IF                 :1;
6299:                  unsigned TMR5IF                 :1;
6300:                  unsigned TMR6IF                 :1;
6301:              };
6302:          } PIR5bits_t;
6303:          extern volatile PIR5bits_t PIR5bits @ 0xF7E;
6304:          // bitfield macros
6305:          #define _PIR5_TMR4IF_POSN                                   0x0
6306:          #define _PIR5_TMR4IF_POSITION                               0x0
6307:          #define _PIR5_TMR4IF_SIZE                                   0x1
6308:          #define _PIR5_TMR4IF_LENGTH                                 0x1
6309:          #define _PIR5_TMR4IF_MASK                                   0x1
6310:          #define _PIR5_TMR5IF_POSN                                   0x1
6311:          #define _PIR5_TMR5IF_POSITION                               0x1
6312:          #define _PIR5_TMR5IF_SIZE                                   0x1
6313:          #define _PIR5_TMR5IF_LENGTH                                 0x1
6314:          #define _PIR5_TMR5IF_MASK                                   0x2
6315:          #define _PIR5_TMR6IF_POSN                                   0x2
6316:          #define _PIR5_TMR6IF_POSITION                               0x2
6317:          #define _PIR5_TMR6IF_SIZE                                   0x1
6318:          #define _PIR5_TMR6IF_LENGTH                                 0x1
6319:          #define _PIR5_TMR6IF_MASK                                   0x4
6320:          
6321:          // Register: IPR5
6322:          extern volatile unsigned char           IPR5                @ 0xF7F;
6323:          #ifndef _LIB_BUILD
6324:          asm("IPR5 equ 0F7Fh");
6325:          #endif
6326:          // bitfield definitions
6327:          typedef union {
6328:              struct {
6329:                  unsigned TMR4IP                 :1;
6330:                  unsigned TMR5IP                 :1;
6331:                  unsigned TMR6IP                 :1;
6332:              };
6333:              struct {
6334:                  unsigned CCH05                  :1;
6335:              };
6336:              struct {
6337:                  unsigned                        :1;
6338:                  unsigned CCH15                  :1;
6339:              };
6340:          } IPR5bits_t;
6341:          extern volatile IPR5bits_t IPR5bits @ 0xF7F;
6342:          // bitfield macros
6343:          #define _IPR5_TMR4IP_POSN                                   0x0
6344:          #define _IPR5_TMR4IP_POSITION                               0x0
6345:          #define _IPR5_TMR4IP_SIZE                                   0x1
6346:          #define _IPR5_TMR4IP_LENGTH                                 0x1
6347:          #define _IPR5_TMR4IP_MASK                                   0x1
6348:          #define _IPR5_TMR5IP_POSN                                   0x1
6349:          #define _IPR5_TMR5IP_POSITION                               0x1
6350:          #define _IPR5_TMR5IP_SIZE                                   0x1
6351:          #define _IPR5_TMR5IP_LENGTH                                 0x1
6352:          #define _IPR5_TMR5IP_MASK                                   0x2
6353:          #define _IPR5_TMR6IP_POSN                                   0x2
6354:          #define _IPR5_TMR6IP_POSITION                               0x2
6355:          #define _IPR5_TMR6IP_SIZE                                   0x1
6356:          #define _IPR5_TMR6IP_LENGTH                                 0x1
6357:          #define _IPR5_TMR6IP_MASK                                   0x4
6358:          #define _IPR5_CCH05_POSN                                    0x0
6359:          #define _IPR5_CCH05_POSITION                                0x0
6360:          #define _IPR5_CCH05_SIZE                                    0x1
6361:          #define _IPR5_CCH05_LENGTH                                  0x1
6362:          #define _IPR5_CCH05_MASK                                    0x1
6363:          #define _IPR5_CCH15_POSN                                    0x1
6364:          #define _IPR5_CCH15_POSITION                                0x1
6365:          #define _IPR5_CCH15_SIZE                                    0x1
6366:          #define _IPR5_CCH15_LENGTH                                  0x1
6367:          #define _IPR5_CCH15_MASK                                    0x2
6368:          
6369:          // Register: PORTA
6370:          extern volatile unsigned char           PORTA               @ 0xF80;
6371:          #ifndef _LIB_BUILD
6372:          asm("PORTA equ 0F80h");
6373:          #endif
6374:          // bitfield definitions
6375:          typedef union {
6376:              struct {
6377:                  unsigned RA0                    :1;
6378:                  unsigned RA1                    :1;
6379:                  unsigned RA2                    :1;
6380:                  unsigned RA3                    :1;
6381:                  unsigned RA4                    :1;
6382:                  unsigned RA5                    :1;
6383:                  unsigned RA6                    :1;
6384:                  unsigned RA7                    :1;
6385:              };
6386:              struct {
6387:                  unsigned AN0                    :1;
6388:                  unsigned AN1                    :1;
6389:                  unsigned AN2                    :1;
6390:                  unsigned AN3                    :1;
6391:                  unsigned                        :1;
6392:                  unsigned AN4                    :1;
6393:              };
6394:              struct {
6395:                  unsigned C12IN0M                :1;
6396:                  unsigned C12IN1M                :1;
6397:                  unsigned C2INP                  :1;
6398:                  unsigned C1INP                  :1;
6399:                  unsigned C1OUT                  :1;
6400:                  unsigned C2OUT                  :1;
6401:              };
6402:              struct {
6403:                  unsigned C12IN0N                :1;
6404:                  unsigned C12IN1N                :1;
6405:                  unsigned VREFM                  :1;
6406:                  unsigned VREFP                  :1;
6407:                  unsigned T0CKI                  :1;
6408:                  unsigned SS                     :1;
6409:              };
6410:              struct {
6411:                  unsigned                        :5;
6412:                  unsigned NOT_SS                 :1;
6413:              };
6414:              struct {
6415:                  unsigned                        :2;
6416:                  unsigned VREFN                  :1;
6417:                  unsigned                        :1;
6418:                  unsigned SRQ                    :1;
6419:                  unsigned nSS                    :1;
6420:              };
6421:              struct {
6422:                  unsigned                        :2;
6423:                  unsigned CVREF                  :1;
6424:                  unsigned                        :2;
6425:                  unsigned LVDIN                  :1;
6426:              };
6427:              struct {
6428:                  unsigned                        :2;
6429:                  unsigned DACOUT                 :1;
6430:                  unsigned                        :2;
6431:                  unsigned HLVDIN                 :1;
6432:              };
6433:              struct {
6434:                  unsigned                        :5;
6435:                  unsigned SS1                    :1;
6436:              };
6437:              struct {
6438:                  unsigned                        :5;
6439:                  unsigned NOT_SS1                :1;
6440:              };
6441:              struct {
6442:                  unsigned                        :5;
6443:                  unsigned nSS1                   :1;
6444:              };
6445:              struct {
6446:                  unsigned                        :5;
6447:                  unsigned SRNQ                   :1;
6448:              };
6449:              struct {
6450:                  unsigned                        :7;
6451:                  unsigned RJPU                   :1;
6452:              };
6453:              struct {
6454:                  unsigned ULPWUIN                :1;
6455:              };
6456:          } PORTAbits_t;
6457:          extern volatile PORTAbits_t PORTAbits @ 0xF80;
6458:          // bitfield macros
6459:          #define _PORTA_RA0_POSN                                     0x0
6460:          #define _PORTA_RA0_POSITION                                 0x0
6461:          #define _PORTA_RA0_SIZE                                     0x1
6462:          #define _PORTA_RA0_LENGTH                                   0x1
6463:          #define _PORTA_RA0_MASK                                     0x1
6464:          #define _PORTA_RA1_POSN                                     0x1
6465:          #define _PORTA_RA1_POSITION                                 0x1
6466:          #define _PORTA_RA1_SIZE                                     0x1
6467:          #define _PORTA_RA1_LENGTH                                   0x1
6468:          #define _PORTA_RA1_MASK                                     0x2
6469:          #define _PORTA_RA2_POSN                                     0x2
6470:          #define _PORTA_RA2_POSITION                                 0x2
6471:          #define _PORTA_RA2_SIZE                                     0x1
6472:          #define _PORTA_RA2_LENGTH                                   0x1
6473:          #define _PORTA_RA2_MASK                                     0x4
6474:          #define _PORTA_RA3_POSN                                     0x3
6475:          #define _PORTA_RA3_POSITION                                 0x3
6476:          #define _PORTA_RA3_SIZE                                     0x1
6477:          #define _PORTA_RA3_LENGTH                                   0x1
6478:          #define _PORTA_RA3_MASK                                     0x8
6479:          #define _PORTA_RA4_POSN                                     0x4
6480:          #define _PORTA_RA4_POSITION                                 0x4
6481:          #define _PORTA_RA4_SIZE                                     0x1
6482:          #define _PORTA_RA4_LENGTH                                   0x1
6483:          #define _PORTA_RA4_MASK                                     0x10
6484:          #define _PORTA_RA5_POSN                                     0x5
6485:          #define _PORTA_RA5_POSITION                                 0x5
6486:          #define _PORTA_RA5_SIZE                                     0x1
6487:          #define _PORTA_RA5_LENGTH                                   0x1
6488:          #define _PORTA_RA5_MASK                                     0x20
6489:          #define _PORTA_RA6_POSN                                     0x6
6490:          #define _PORTA_RA6_POSITION                                 0x6
6491:          #define _PORTA_RA6_SIZE                                     0x1
6492:          #define _PORTA_RA6_LENGTH                                   0x1
6493:          #define _PORTA_RA6_MASK                                     0x40
6494:          #define _PORTA_RA7_POSN                                     0x7
6495:          #define _PORTA_RA7_POSITION                                 0x7
6496:          #define _PORTA_RA7_SIZE                                     0x1
6497:          #define _PORTA_RA7_LENGTH                                   0x1
6498:          #define _PORTA_RA7_MASK                                     0x80
6499:          #define _PORTA_AN0_POSN                                     0x0
6500:          #define _PORTA_AN0_POSITION                                 0x0
6501:          #define _PORTA_AN0_SIZE                                     0x1
6502:          #define _PORTA_AN0_LENGTH                                   0x1
6503:          #define _PORTA_AN0_MASK                                     0x1
6504:          #define _PORTA_AN1_POSN                                     0x1
6505:          #define _PORTA_AN1_POSITION                                 0x1
6506:          #define _PORTA_AN1_SIZE                                     0x1
6507:          #define _PORTA_AN1_LENGTH                                   0x1
6508:          #define _PORTA_AN1_MASK                                     0x2
6509:          #define _PORTA_AN2_POSN                                     0x2
6510:          #define _PORTA_AN2_POSITION                                 0x2
6511:          #define _PORTA_AN2_SIZE                                     0x1
6512:          #define _PORTA_AN2_LENGTH                                   0x1
6513:          #define _PORTA_AN2_MASK                                     0x4
6514:          #define _PORTA_AN3_POSN                                     0x3
6515:          #define _PORTA_AN3_POSITION                                 0x3
6516:          #define _PORTA_AN3_SIZE                                     0x1
6517:          #define _PORTA_AN3_LENGTH                                   0x1
6518:          #define _PORTA_AN3_MASK                                     0x8
6519:          #define _PORTA_AN4_POSN                                     0x5
6520:          #define _PORTA_AN4_POSITION                                 0x5
6521:          #define _PORTA_AN4_SIZE                                     0x1
6522:          #define _PORTA_AN4_LENGTH                                   0x1
6523:          #define _PORTA_AN4_MASK                                     0x20
6524:          #define _PORTA_C12IN0M_POSN                                 0x0
6525:          #define _PORTA_C12IN0M_POSITION                             0x0
6526:          #define _PORTA_C12IN0M_SIZE                                 0x1
6527:          #define _PORTA_C12IN0M_LENGTH                               0x1
6528:          #define _PORTA_C12IN0M_MASK                                 0x1
6529:          #define _PORTA_C12IN1M_POSN                                 0x1
6530:          #define _PORTA_C12IN1M_POSITION                             0x1
6531:          #define _PORTA_C12IN1M_SIZE                                 0x1
6532:          #define _PORTA_C12IN1M_LENGTH                               0x1
6533:          #define _PORTA_C12IN1M_MASK                                 0x2
6534:          #define _PORTA_C2INP_POSN                                   0x2
6535:          #define _PORTA_C2INP_POSITION                               0x2
6536:          #define _PORTA_C2INP_SIZE                                   0x1
6537:          #define _PORTA_C2INP_LENGTH                                 0x1
6538:          #define _PORTA_C2INP_MASK                                   0x4
6539:          #define _PORTA_C1INP_POSN                                   0x3
6540:          #define _PORTA_C1INP_POSITION                               0x3
6541:          #define _PORTA_C1INP_SIZE                                   0x1
6542:          #define _PORTA_C1INP_LENGTH                                 0x1
6543:          #define _PORTA_C1INP_MASK                                   0x8
6544:          #define _PORTA_C1OUT_POSN                                   0x4
6545:          #define _PORTA_C1OUT_POSITION                               0x4
6546:          #define _PORTA_C1OUT_SIZE                                   0x1
6547:          #define _PORTA_C1OUT_LENGTH                                 0x1
6548:          #define _PORTA_C1OUT_MASK                                   0x10
6549:          #define _PORTA_C2OUT_POSN                                   0x5
6550:          #define _PORTA_C2OUT_POSITION                               0x5
6551:          #define _PORTA_C2OUT_SIZE                                   0x1
6552:          #define _PORTA_C2OUT_LENGTH                                 0x1
6553:          #define _PORTA_C2OUT_MASK                                   0x20
6554:          #define _PORTA_C12IN0N_POSN                                 0x0
6555:          #define _PORTA_C12IN0N_POSITION                             0x0
6556:          #define _PORTA_C12IN0N_SIZE                                 0x1
6557:          #define _PORTA_C12IN0N_LENGTH                               0x1
6558:          #define _PORTA_C12IN0N_MASK                                 0x1
6559:          #define _PORTA_C12IN1N_POSN                                 0x1
6560:          #define _PORTA_C12IN1N_POSITION                             0x1
6561:          #define _PORTA_C12IN1N_SIZE                                 0x1
6562:          #define _PORTA_C12IN1N_LENGTH                               0x1
6563:          #define _PORTA_C12IN1N_MASK                                 0x2
6564:          #define _PORTA_VREFM_POSN                                   0x2
6565:          #define _PORTA_VREFM_POSITION                               0x2
6566:          #define _PORTA_VREFM_SIZE                                   0x1
6567:          #define _PORTA_VREFM_LENGTH                                 0x1
6568:          #define _PORTA_VREFM_MASK                                   0x4
6569:          #define _PORTA_VREFP_POSN                                   0x3
6570:          #define _PORTA_VREFP_POSITION                               0x3
6571:          #define _PORTA_VREFP_SIZE                                   0x1
6572:          #define _PORTA_VREFP_LENGTH                                 0x1
6573:          #define _PORTA_VREFP_MASK                                   0x8
6574:          #define _PORTA_T0CKI_POSN                                   0x4
6575:          #define _PORTA_T0CKI_POSITION                               0x4
6576:          #define _PORTA_T0CKI_SIZE                                   0x1
6577:          #define _PORTA_T0CKI_LENGTH                                 0x1
6578:          #define _PORTA_T0CKI_MASK                                   0x10
6579:          #define _PORTA_SS_POSN                                      0x5
6580:          #define _PORTA_SS_POSITION                                  0x5
6581:          #define _PORTA_SS_SIZE                                      0x1
6582:          #define _PORTA_SS_LENGTH                                    0x1
6583:          #define _PORTA_SS_MASK                                      0x20
6584:          #define _PORTA_NOT_SS_POSN                                  0x5
6585:          #define _PORTA_NOT_SS_POSITION                              0x5
6586:          #define _PORTA_NOT_SS_SIZE                                  0x1
6587:          #define _PORTA_NOT_SS_LENGTH                                0x1
6588:          #define _PORTA_NOT_SS_MASK                                  0x20
6589:          #define _PORTA_VREFN_POSN                                   0x2
6590:          #define _PORTA_VREFN_POSITION                               0x2
6591:          #define _PORTA_VREFN_SIZE                                   0x1
6592:          #define _PORTA_VREFN_LENGTH                                 0x1
6593:          #define _PORTA_VREFN_MASK                                   0x4
6594:          #define _PORTA_SRQ_POSN                                     0x4
6595:          #define _PORTA_SRQ_POSITION                                 0x4
6596:          #define _PORTA_SRQ_SIZE                                     0x1
6597:          #define _PORTA_SRQ_LENGTH                                   0x1
6598:          #define _PORTA_SRQ_MASK                                     0x10
6599:          #define _PORTA_nSS_POSN                                     0x5
6600:          #define _PORTA_nSS_POSITION                                 0x5
6601:          #define _PORTA_nSS_SIZE                                     0x1
6602:          #define _PORTA_nSS_LENGTH                                   0x1
6603:          #define _PORTA_nSS_MASK                                     0x20
6604:          #define _PORTA_CVREF_POSN                                   0x2
6605:          #define _PORTA_CVREF_POSITION                               0x2
6606:          #define _PORTA_CVREF_SIZE                                   0x1
6607:          #define _PORTA_CVREF_LENGTH                                 0x1
6608:          #define _PORTA_CVREF_MASK                                   0x4
6609:          #define _PORTA_LVDIN_POSN                                   0x5
6610:          #define _PORTA_LVDIN_POSITION                               0x5
6611:          #define _PORTA_LVDIN_SIZE                                   0x1
6612:          #define _PORTA_LVDIN_LENGTH                                 0x1
6613:          #define _PORTA_LVDIN_MASK                                   0x20
6614:          #define _PORTA_DACOUT_POSN                                  0x2
6615:          #define _PORTA_DACOUT_POSITION                              0x2
6616:          #define _PORTA_DACOUT_SIZE                                  0x1
6617:          #define _PORTA_DACOUT_LENGTH                                0x1
6618:          #define _PORTA_DACOUT_MASK                                  0x4
6619:          #define _PORTA_HLVDIN_POSN                                  0x5
6620:          #define _PORTA_HLVDIN_POSITION                              0x5
6621:          #define _PORTA_HLVDIN_SIZE                                  0x1
6622:          #define _PORTA_HLVDIN_LENGTH                                0x1
6623:          #define _PORTA_HLVDIN_MASK                                  0x20
6624:          #define _PORTA_SS1_POSN                                     0x5
6625:          #define _PORTA_SS1_POSITION                                 0x5
6626:          #define _PORTA_SS1_SIZE                                     0x1
6627:          #define _PORTA_SS1_LENGTH                                   0x1
6628:          #define _PORTA_SS1_MASK                                     0x20
6629:          #define _PORTA_NOT_SS1_POSN                                 0x5
6630:          #define _PORTA_NOT_SS1_POSITION                             0x5
6631:          #define _PORTA_NOT_SS1_SIZE                                 0x1
6632:          #define _PORTA_NOT_SS1_LENGTH                               0x1
6633:          #define _PORTA_NOT_SS1_MASK                                 0x20
6634:          #define _PORTA_nSS1_POSN                                    0x5
6635:          #define _PORTA_nSS1_POSITION                                0x5
6636:          #define _PORTA_nSS1_SIZE                                    0x1
6637:          #define _PORTA_nSS1_LENGTH                                  0x1
6638:          #define _PORTA_nSS1_MASK                                    0x20
6639:          #define _PORTA_SRNQ_POSN                                    0x5
6640:          #define _PORTA_SRNQ_POSITION                                0x5
6641:          #define _PORTA_SRNQ_SIZE                                    0x1
6642:          #define _PORTA_SRNQ_LENGTH                                  0x1
6643:          #define _PORTA_SRNQ_MASK                                    0x20
6644:          #define _PORTA_RJPU_POSN                                    0x7
6645:          #define _PORTA_RJPU_POSITION                                0x7
6646:          #define _PORTA_RJPU_SIZE                                    0x1
6647:          #define _PORTA_RJPU_LENGTH                                  0x1
6648:          #define _PORTA_RJPU_MASK                                    0x80
6649:          #define _PORTA_ULPWUIN_POSN                                 0x0
6650:          #define _PORTA_ULPWUIN_POSITION                             0x0
6651:          #define _PORTA_ULPWUIN_SIZE                                 0x1
6652:          #define _PORTA_ULPWUIN_LENGTH                               0x1
6653:          #define _PORTA_ULPWUIN_MASK                                 0x1
6654:          
6655:          // Register: PORTB
6656:          extern volatile unsigned char           PORTB               @ 0xF81;
6657:          #ifndef _LIB_BUILD
6658:          asm("PORTB equ 0F81h");
6659:          #endif
6660:          // bitfield definitions
6661:          typedef union {
6662:              struct {
6663:                  unsigned RB0                    :1;
6664:                  unsigned RB1                    :1;
6665:                  unsigned RB2                    :1;
6666:                  unsigned RB3                    :1;
6667:                  unsigned RB4                    :1;
6668:                  unsigned RB5                    :1;
6669:                  unsigned RB6                    :1;
6670:                  unsigned RB7                    :1;
6671:              };
6672:              struct {
6673:                  unsigned INT0                   :1;
6674:                  unsigned INT1                   :1;
6675:                  unsigned INT2                   :1;
6676:                  unsigned CCP2                   :1;
6677:                  unsigned KBI0                   :1;
6678:                  unsigned KBI1                   :1;
6679:                  unsigned KBI2                   :1;
6680:                  unsigned KBI3                   :1;
6681:              };
6682:              struct {
6683:                  unsigned AN12                   :1;
6684:                  unsigned AN10                   :1;
6685:                  unsigned AN8                    :1;
6686:                  unsigned AN9                    :1;
6687:                  unsigned AN11                   :1;
6688:                  unsigned AN13                   :1;
6689:                  unsigned PGC                    :1;
6690:                  unsigned PGD                    :1;
6691:              };
6692:              struct {
6693:                  unsigned FLT0                   :1;
6694:                  unsigned C12IN3M                :1;
6695:                  unsigned                        :1;
6696:                  unsigned C12IN2M                :1;
6697:                  unsigned T5G                    :1;
6698:                  unsigned T1G                    :1;
6699:              };
6700:              struct {
6701:                  unsigned SRI                    :1;
6702:                  unsigned C12IN3N                :1;
6703:                  unsigned                        :1;
6704:                  unsigned C12IN2N                :1;
6705:                  unsigned                        :1;
6706:                  unsigned CCP3                   :1;
6707:              };
6708:              struct {
6709:                  unsigned                        :2;
6710:                  unsigned CTED1                  :1;
6711:                  unsigned CTED2                  :1;
6712:                  unsigned                        :1;
6713:                  unsigned T3CKI                  :1;
6714:              };
6715:              struct {
6716:                  unsigned                        :3;
6717:                  unsigned P2A                    :1;
6718:                  unsigned                        :1;
6719:                  unsigned P3A                    :1;
6720:              };
6721:              struct {
6722:                  unsigned                        :3;
6723:                  unsigned CCP2_PA2               :1;
6724:              };
6725:          } PORTBbits_t;
6726:          extern volatile PORTBbits_t PORTBbits @ 0xF81;
6727:          // bitfield macros
6728:          #define _PORTB_RB0_POSN                                     0x0
6729:          #define _PORTB_RB0_POSITION                                 0x0
6730:          #define _PORTB_RB0_SIZE                                     0x1
6731:          #define _PORTB_RB0_LENGTH                                   0x1
6732:          #define _PORTB_RB0_MASK                                     0x1
6733:          #define _PORTB_RB1_POSN                                     0x1
6734:          #define _PORTB_RB1_POSITION                                 0x1
6735:          #define _PORTB_RB1_SIZE                                     0x1
6736:          #define _PORTB_RB1_LENGTH                                   0x1
6737:          #define _PORTB_RB1_MASK                                     0x2
6738:          #define _PORTB_RB2_POSN                                     0x2
6739:          #define _PORTB_RB2_POSITION                                 0x2
6740:          #define _PORTB_RB2_SIZE                                     0x1
6741:          #define _PORTB_RB2_LENGTH                                   0x1
6742:          #define _PORTB_RB2_MASK                                     0x4
6743:          #define _PORTB_RB3_POSN                                     0x3
6744:          #define _PORTB_RB3_POSITION                                 0x3
6745:          #define _PORTB_RB3_SIZE                                     0x1
6746:          #define _PORTB_RB3_LENGTH                                   0x1
6747:          #define _PORTB_RB3_MASK                                     0x8
6748:          #define _PORTB_RB4_POSN                                     0x4
6749:          #define _PORTB_RB4_POSITION                                 0x4
6750:          #define _PORTB_RB4_SIZE                                     0x1
6751:          #define _PORTB_RB4_LENGTH                                   0x1
6752:          #define _PORTB_RB4_MASK                                     0x10
6753:          #define _PORTB_RB5_POSN                                     0x5
6754:          #define _PORTB_RB5_POSITION                                 0x5
6755:          #define _PORTB_RB5_SIZE                                     0x1
6756:          #define _PORTB_RB5_LENGTH                                   0x1
6757:          #define _PORTB_RB5_MASK                                     0x20
6758:          #define _PORTB_RB6_POSN                                     0x6
6759:          #define _PORTB_RB6_POSITION                                 0x6
6760:          #define _PORTB_RB6_SIZE                                     0x1
6761:          #define _PORTB_RB6_LENGTH                                   0x1
6762:          #define _PORTB_RB6_MASK                                     0x40
6763:          #define _PORTB_RB7_POSN                                     0x7
6764:          #define _PORTB_RB7_POSITION                                 0x7
6765:          #define _PORTB_RB7_SIZE                                     0x1
6766:          #define _PORTB_RB7_LENGTH                                   0x1
6767:          #define _PORTB_RB7_MASK                                     0x80
6768:          #define _PORTB_INT0_POSN                                    0x0
6769:          #define _PORTB_INT0_POSITION                                0x0
6770:          #define _PORTB_INT0_SIZE                                    0x1
6771:          #define _PORTB_INT0_LENGTH                                  0x1
6772:          #define _PORTB_INT0_MASK                                    0x1
6773:          #define _PORTB_INT1_POSN                                    0x1
6774:          #define _PORTB_INT1_POSITION                                0x1
6775:          #define _PORTB_INT1_SIZE                                    0x1
6776:          #define _PORTB_INT1_LENGTH                                  0x1
6777:          #define _PORTB_INT1_MASK                                    0x2
6778:          #define _PORTB_INT2_POSN                                    0x2
6779:          #define _PORTB_INT2_POSITION                                0x2
6780:          #define _PORTB_INT2_SIZE                                    0x1
6781:          #define _PORTB_INT2_LENGTH                                  0x1
6782:          #define _PORTB_INT2_MASK                                    0x4
6783:          #define _PORTB_CCP2_POSN                                    0x3
6784:          #define _PORTB_CCP2_POSITION                                0x3
6785:          #define _PORTB_CCP2_SIZE                                    0x1
6786:          #define _PORTB_CCP2_LENGTH                                  0x1
6787:          #define _PORTB_CCP2_MASK                                    0x8
6788:          #define _PORTB_KBI0_POSN                                    0x4
6789:          #define _PORTB_KBI0_POSITION                                0x4
6790:          #define _PORTB_KBI0_SIZE                                    0x1
6791:          #define _PORTB_KBI0_LENGTH                                  0x1
6792:          #define _PORTB_KBI0_MASK                                    0x10
6793:          #define _PORTB_KBI1_POSN                                    0x5
6794:          #define _PORTB_KBI1_POSITION                                0x5
6795:          #define _PORTB_KBI1_SIZE                                    0x1
6796:          #define _PORTB_KBI1_LENGTH                                  0x1
6797:          #define _PORTB_KBI1_MASK                                    0x20
6798:          #define _PORTB_KBI2_POSN                                    0x6
6799:          #define _PORTB_KBI2_POSITION                                0x6
6800:          #define _PORTB_KBI2_SIZE                                    0x1
6801:          #define _PORTB_KBI2_LENGTH                                  0x1
6802:          #define _PORTB_KBI2_MASK                                    0x40
6803:          #define _PORTB_KBI3_POSN                                    0x7
6804:          #define _PORTB_KBI3_POSITION                                0x7
6805:          #define _PORTB_KBI3_SIZE                                    0x1
6806:          #define _PORTB_KBI3_LENGTH                                  0x1
6807:          #define _PORTB_KBI3_MASK                                    0x80
6808:          #define _PORTB_AN12_POSN                                    0x0
6809:          #define _PORTB_AN12_POSITION                                0x0
6810:          #define _PORTB_AN12_SIZE                                    0x1
6811:          #define _PORTB_AN12_LENGTH                                  0x1
6812:          #define _PORTB_AN12_MASK                                    0x1
6813:          #define _PORTB_AN10_POSN                                    0x1
6814:          #define _PORTB_AN10_POSITION                                0x1
6815:          #define _PORTB_AN10_SIZE                                    0x1
6816:          #define _PORTB_AN10_LENGTH                                  0x1
6817:          #define _PORTB_AN10_MASK                                    0x2
6818:          #define _PORTB_AN8_POSN                                     0x2
6819:          #define _PORTB_AN8_POSITION                                 0x2
6820:          #define _PORTB_AN8_SIZE                                     0x1
6821:          #define _PORTB_AN8_LENGTH                                   0x1
6822:          #define _PORTB_AN8_MASK                                     0x4
6823:          #define _PORTB_AN9_POSN                                     0x3
6824:          #define _PORTB_AN9_POSITION                                 0x3
6825:          #define _PORTB_AN9_SIZE                                     0x1
6826:          #define _PORTB_AN9_LENGTH                                   0x1
6827:          #define _PORTB_AN9_MASK                                     0x8
6828:          #define _PORTB_AN11_POSN                                    0x4
6829:          #define _PORTB_AN11_POSITION                                0x4
6830:          #define _PORTB_AN11_SIZE                                    0x1
6831:          #define _PORTB_AN11_LENGTH                                  0x1
6832:          #define _PORTB_AN11_MASK                                    0x10
6833:          #define _PORTB_AN13_POSN                                    0x5
6834:          #define _PORTB_AN13_POSITION                                0x5
6835:          #define _PORTB_AN13_SIZE                                    0x1
6836:          #define _PORTB_AN13_LENGTH                                  0x1
6837:          #define _PORTB_AN13_MASK                                    0x20
6838:          #define _PORTB_PGC_POSN                                     0x6
6839:          #define _PORTB_PGC_POSITION                                 0x6
6840:          #define _PORTB_PGC_SIZE                                     0x1
6841:          #define _PORTB_PGC_LENGTH                                   0x1
6842:          #define _PORTB_PGC_MASK                                     0x40
6843:          #define _PORTB_PGD_POSN                                     0x7
6844:          #define _PORTB_PGD_POSITION                                 0x7
6845:          #define _PORTB_PGD_SIZE                                     0x1
6846:          #define _PORTB_PGD_LENGTH                                   0x1
6847:          #define _PORTB_PGD_MASK                                     0x80
6848:          #define _PORTB_FLT0_POSN                                    0x0
6849:          #define _PORTB_FLT0_POSITION                                0x0
6850:          #define _PORTB_FLT0_SIZE                                    0x1
6851:          #define _PORTB_FLT0_LENGTH                                  0x1
6852:          #define _PORTB_FLT0_MASK                                    0x1
6853:          #define _PORTB_C12IN3M_POSN                                 0x1
6854:          #define _PORTB_C12IN3M_POSITION                             0x1
6855:          #define _PORTB_C12IN3M_SIZE                                 0x1
6856:          #define _PORTB_C12IN3M_LENGTH                               0x1
6857:          #define _PORTB_C12IN3M_MASK                                 0x2
6858:          #define _PORTB_C12IN2M_POSN                                 0x3
6859:          #define _PORTB_C12IN2M_POSITION                             0x3
6860:          #define _PORTB_C12IN2M_SIZE                                 0x1
6861:          #define _PORTB_C12IN2M_LENGTH                               0x1
6862:          #define _PORTB_C12IN2M_MASK                                 0x8
6863:          #define _PORTB_T5G_POSN                                     0x4
6864:          #define _PORTB_T5G_POSITION                                 0x4
6865:          #define _PORTB_T5G_SIZE                                     0x1
6866:          #define _PORTB_T5G_LENGTH                                   0x1
6867:          #define _PORTB_T5G_MASK                                     0x10
6868:          #define _PORTB_T1G_POSN                                     0x5
6869:          #define _PORTB_T1G_POSITION                                 0x5
6870:          #define _PORTB_T1G_SIZE                                     0x1
6871:          #define _PORTB_T1G_LENGTH                                   0x1
6872:          #define _PORTB_T1G_MASK                                     0x20
6873:          #define _PORTB_SRI_POSN                                     0x0
6874:          #define _PORTB_SRI_POSITION                                 0x0
6875:          #define _PORTB_SRI_SIZE                                     0x1
6876:          #define _PORTB_SRI_LENGTH                                   0x1
6877:          #define _PORTB_SRI_MASK                                     0x1
6878:          #define _PORTB_C12IN3N_POSN                                 0x1
6879:          #define _PORTB_C12IN3N_POSITION                             0x1
6880:          #define _PORTB_C12IN3N_SIZE                                 0x1
6881:          #define _PORTB_C12IN3N_LENGTH                               0x1
6882:          #define _PORTB_C12IN3N_MASK                                 0x2
6883:          #define _PORTB_C12IN2N_POSN                                 0x3
6884:          #define _PORTB_C12IN2N_POSITION                             0x3
6885:          #define _PORTB_C12IN2N_SIZE                                 0x1
6886:          #define _PORTB_C12IN2N_LENGTH                               0x1
6887:          #define _PORTB_C12IN2N_MASK                                 0x8
6888:          #define _PORTB_CCP3_POSN                                    0x5
6889:          #define _PORTB_CCP3_POSITION                                0x5
6890:          #define _PORTB_CCP3_SIZE                                    0x1
6891:          #define _PORTB_CCP3_LENGTH                                  0x1
6892:          #define _PORTB_CCP3_MASK                                    0x20
6893:          #define _PORTB_CTED1_POSN                                   0x2
6894:          #define _PORTB_CTED1_POSITION                               0x2
6895:          #define _PORTB_CTED1_SIZE                                   0x1
6896:          #define _PORTB_CTED1_LENGTH                                 0x1
6897:          #define _PORTB_CTED1_MASK                                   0x4
6898:          #define _PORTB_CTED2_POSN                                   0x3
6899:          #define _PORTB_CTED2_POSITION                               0x3
6900:          #define _PORTB_CTED2_SIZE                                   0x1
6901:          #define _PORTB_CTED2_LENGTH                                 0x1
6902:          #define _PORTB_CTED2_MASK                                   0x8
6903:          #define _PORTB_T3CKI_POSN                                   0x5
6904:          #define _PORTB_T3CKI_POSITION                               0x5
6905:          #define _PORTB_T3CKI_SIZE                                   0x1
6906:          #define _PORTB_T3CKI_LENGTH                                 0x1
6907:          #define _PORTB_T3CKI_MASK                                   0x20
6908:          #define _PORTB_P2A_POSN                                     0x3
6909:          #define _PORTB_P2A_POSITION                                 0x3
6910:          #define _PORTB_P2A_SIZE                                     0x1
6911:          #define _PORTB_P2A_LENGTH                                   0x1
6912:          #define _PORTB_P2A_MASK                                     0x8
6913:          #define _PORTB_P3A_POSN                                     0x5
6914:          #define _PORTB_P3A_POSITION                                 0x5
6915:          #define _PORTB_P3A_SIZE                                     0x1
6916:          #define _PORTB_P3A_LENGTH                                   0x1
6917:          #define _PORTB_P3A_MASK                                     0x20
6918:          #define _PORTB_CCP2_PA2_POSN                                0x3
6919:          #define _PORTB_CCP2_PA2_POSITION                            0x3
6920:          #define _PORTB_CCP2_PA2_SIZE                                0x1
6921:          #define _PORTB_CCP2_PA2_LENGTH                              0x1
6922:          #define _PORTB_CCP2_PA2_MASK                                0x8
6923:          
6924:          // Register: PORTC
6925:          extern volatile unsigned char           PORTC               @ 0xF82;
6926:          #ifndef _LIB_BUILD
6927:          asm("PORTC equ 0F82h");
6928:          #endif
6929:          // bitfield definitions
6930:          typedef union {
6931:              struct {
6932:                  unsigned RC0                    :1;
6933:                  unsigned RC1                    :1;
6934:                  unsigned RC2                    :1;
6935:                  unsigned RC3                    :1;
6936:                  unsigned RC4                    :1;
6937:                  unsigned RC5                    :1;
6938:                  unsigned RC6                    :1;
6939:                  unsigned RC7                    :1;
6940:              };
6941:              struct {
6942:                  unsigned T1OSO                  :1;
6943:                  unsigned T1OSI                  :1;
6944:                  unsigned T5CKI                  :1;
6945:                  unsigned SCK                    :1;
6946:                  unsigned SDI                    :1;
6947:                  unsigned SDO                    :1;
6948:                  unsigned TX                     :1;
6949:                  unsigned RX                     :1;
6950:              };
6951:              struct {
6952:                  unsigned P2B                    :1;
6953:                  unsigned P2A                    :1;
6954:                  unsigned P1A                    :1;
6955:                  unsigned SCL                    :1;
6956:                  unsigned SDA                    :1;
6957:                  unsigned                        :1;
6958:                  unsigned CK                     :1;
6959:                  unsigned DT                     :1;
6960:              };
6961:              struct {
6962:                  unsigned T1CKI                  :1;
6963:                  unsigned CCP2                   :1;
6964:                  unsigned CCP1                   :1;
6965:                  unsigned SCK1                   :1;
6966:                  unsigned SDI1                   :1;
6967:                  unsigned SDO1                   :1;
6968:                  unsigned TX1                    :1;
6969:                  unsigned RX1                    :1;
6970:              };
6971:              struct {
6972:                  unsigned T3CKI                  :1;
6973:                  unsigned                        :1;
6974:                  unsigned CTPLS                  :1;
6975:                  unsigned SCL1                   :1;
6976:                  unsigned SDA1                   :1;
6977:                  unsigned                        :1;
6978:                  unsigned CK1                    :1;
6979:                  unsigned DT1                    :1;
6980:              };
6981:              struct {
6982:                  unsigned T3G                    :1;
6983:                  unsigned                        :1;
6984:                  unsigned AN14                   :1;
6985:                  unsigned AN15                   :1;
6986:                  unsigned AN16                   :1;
6987:                  unsigned AN17                   :1;
6988:                  unsigned AN18                   :1;
6989:                  unsigned AN19                   :1;
6990:              };
6991:              struct {
6992:                  unsigned                        :2;
6993:                  unsigned PA1                    :1;
6994:              };
6995:              struct {
6996:                  unsigned                        :1;
6997:                  unsigned PA2                    :1;
6998:              };
6999:          } PORTCbits_t;
7000:          extern volatile PORTCbits_t PORTCbits @ 0xF82;
7001:          // bitfield macros
7002:          #define _PORTC_RC0_POSN                                     0x0
7003:          #define _PORTC_RC0_POSITION                                 0x0
7004:          #define _PORTC_RC0_SIZE                                     0x1
7005:          #define _PORTC_RC0_LENGTH                                   0x1
7006:          #define _PORTC_RC0_MASK                                     0x1
7007:          #define _PORTC_RC1_POSN                                     0x1
7008:          #define _PORTC_RC1_POSITION                                 0x1
7009:          #define _PORTC_RC1_SIZE                                     0x1
7010:          #define _PORTC_RC1_LENGTH                                   0x1
7011:          #define _PORTC_RC1_MASK                                     0x2
7012:          #define _PORTC_RC2_POSN                                     0x2
7013:          #define _PORTC_RC2_POSITION                                 0x2
7014:          #define _PORTC_RC2_SIZE                                     0x1
7015:          #define _PORTC_RC2_LENGTH                                   0x1
7016:          #define _PORTC_RC2_MASK                                     0x4
7017:          #define _PORTC_RC3_POSN                                     0x3
7018:          #define _PORTC_RC3_POSITION                                 0x3
7019:          #define _PORTC_RC3_SIZE                                     0x1
7020:          #define _PORTC_RC3_LENGTH                                   0x1
7021:          #define _PORTC_RC3_MASK                                     0x8
7022:          #define _PORTC_RC4_POSN                                     0x4
7023:          #define _PORTC_RC4_POSITION                                 0x4
7024:          #define _PORTC_RC4_SIZE                                     0x1
7025:          #define _PORTC_RC4_LENGTH                                   0x1
7026:          #define _PORTC_RC4_MASK                                     0x10
7027:          #define _PORTC_RC5_POSN                                     0x5
7028:          #define _PORTC_RC5_POSITION                                 0x5
7029:          #define _PORTC_RC5_SIZE                                     0x1
7030:          #define _PORTC_RC5_LENGTH                                   0x1
7031:          #define _PORTC_RC5_MASK                                     0x20
7032:          #define _PORTC_RC6_POSN                                     0x6
7033:          #define _PORTC_RC6_POSITION                                 0x6
7034:          #define _PORTC_RC6_SIZE                                     0x1
7035:          #define _PORTC_RC6_LENGTH                                   0x1
7036:          #define _PORTC_RC6_MASK                                     0x40
7037:          #define _PORTC_RC7_POSN                                     0x7
7038:          #define _PORTC_RC7_POSITION                                 0x7
7039:          #define _PORTC_RC7_SIZE                                     0x1
7040:          #define _PORTC_RC7_LENGTH                                   0x1
7041:          #define _PORTC_RC7_MASK                                     0x80
7042:          #define _PORTC_T1OSO_POSN                                   0x0
7043:          #define _PORTC_T1OSO_POSITION                               0x0
7044:          #define _PORTC_T1OSO_SIZE                                   0x1
7045:          #define _PORTC_T1OSO_LENGTH                                 0x1
7046:          #define _PORTC_T1OSO_MASK                                   0x1
7047:          #define _PORTC_T1OSI_POSN                                   0x1
7048:          #define _PORTC_T1OSI_POSITION                               0x1
7049:          #define _PORTC_T1OSI_SIZE                                   0x1
7050:          #define _PORTC_T1OSI_LENGTH                                 0x1
7051:          #define _PORTC_T1OSI_MASK                                   0x2
7052:          #define _PORTC_T5CKI_POSN                                   0x2
7053:          #define _PORTC_T5CKI_POSITION                               0x2
7054:          #define _PORTC_T5CKI_SIZE                                   0x1
7055:          #define _PORTC_T5CKI_LENGTH                                 0x1
7056:          #define _PORTC_T5CKI_MASK                                   0x4
7057:          #define _PORTC_SCK_POSN                                     0x3
7058:          #define _PORTC_SCK_POSITION                                 0x3
7059:          #define _PORTC_SCK_SIZE                                     0x1
7060:          #define _PORTC_SCK_LENGTH                                   0x1
7061:          #define _PORTC_SCK_MASK                                     0x8
7062:          #define _PORTC_SDI_POSN                                     0x4
7063:          #define _PORTC_SDI_POSITION                                 0x4
7064:          #define _PORTC_SDI_SIZE                                     0x1
7065:          #define _PORTC_SDI_LENGTH                                   0x1
7066:          #define _PORTC_SDI_MASK                                     0x10
7067:          #define _PORTC_SDO_POSN                                     0x5
7068:          #define _PORTC_SDO_POSITION                                 0x5
7069:          #define _PORTC_SDO_SIZE                                     0x1
7070:          #define _PORTC_SDO_LENGTH                                   0x1
7071:          #define _PORTC_SDO_MASK                                     0x20
7072:          #define _PORTC_TX_POSN                                      0x6
7073:          #define _PORTC_TX_POSITION                                  0x6
7074:          #define _PORTC_TX_SIZE                                      0x1
7075:          #define _PORTC_TX_LENGTH                                    0x1
7076:          #define _PORTC_TX_MASK                                      0x40
7077:          #define _PORTC_RX_POSN                                      0x7
7078:          #define _PORTC_RX_POSITION                                  0x7
7079:          #define _PORTC_RX_SIZE                                      0x1
7080:          #define _PORTC_RX_LENGTH                                    0x1
7081:          #define _PORTC_RX_MASK                                      0x80
7082:          #define _PORTC_P2B_POSN                                     0x0
7083:          #define _PORTC_P2B_POSITION                                 0x0
7084:          #define _PORTC_P2B_SIZE                                     0x1
7085:          #define _PORTC_P2B_LENGTH                                   0x1
7086:          #define _PORTC_P2B_MASK                                     0x1
7087:          #define _PORTC_P2A_POSN                                     0x1
7088:          #define _PORTC_P2A_POSITION                                 0x1
7089:          #define _PORTC_P2A_SIZE                                     0x1
7090:          #define _PORTC_P2A_LENGTH                                   0x1
7091:          #define _PORTC_P2A_MASK                                     0x2
7092:          #define _PORTC_P1A_POSN                                     0x2
7093:          #define _PORTC_P1A_POSITION                                 0x2
7094:          #define _PORTC_P1A_SIZE                                     0x1
7095:          #define _PORTC_P1A_LENGTH                                   0x1
7096:          #define _PORTC_P1A_MASK                                     0x4
7097:          #define _PORTC_SCL_POSN                                     0x3
7098:          #define _PORTC_SCL_POSITION                                 0x3
7099:          #define _PORTC_SCL_SIZE                                     0x1
7100:          #define _PORTC_SCL_LENGTH                                   0x1
7101:          #define _PORTC_SCL_MASK                                     0x8
7102:          #define _PORTC_SDA_POSN                                     0x4
7103:          #define _PORTC_SDA_POSITION                                 0x4
7104:          #define _PORTC_SDA_SIZE                                     0x1
7105:          #define _PORTC_SDA_LENGTH                                   0x1
7106:          #define _PORTC_SDA_MASK                                     0x10
7107:          #define _PORTC_CK_POSN                                      0x6
7108:          #define _PORTC_CK_POSITION                                  0x6
7109:          #define _PORTC_CK_SIZE                                      0x1
7110:          #define _PORTC_CK_LENGTH                                    0x1
7111:          #define _PORTC_CK_MASK                                      0x40
7112:          #define _PORTC_DT_POSN                                      0x7
7113:          #define _PORTC_DT_POSITION                                  0x7
7114:          #define _PORTC_DT_SIZE                                      0x1
7115:          #define _PORTC_DT_LENGTH                                    0x1
7116:          #define _PORTC_DT_MASK                                      0x80
7117:          #define _PORTC_T1CKI_POSN                                   0x0
7118:          #define _PORTC_T1CKI_POSITION                               0x0
7119:          #define _PORTC_T1CKI_SIZE                                   0x1
7120:          #define _PORTC_T1CKI_LENGTH                                 0x1
7121:          #define _PORTC_T1CKI_MASK                                   0x1
7122:          #define _PORTC_CCP2_POSN                                    0x1
7123:          #define _PORTC_CCP2_POSITION                                0x1
7124:          #define _PORTC_CCP2_SIZE                                    0x1
7125:          #define _PORTC_CCP2_LENGTH                                  0x1
7126:          #define _PORTC_CCP2_MASK                                    0x2
7127:          #define _PORTC_CCP1_POSN                                    0x2
7128:          #define _PORTC_CCP1_POSITION                                0x2
7129:          #define _PORTC_CCP1_SIZE                                    0x1
7130:          #define _PORTC_CCP1_LENGTH                                  0x1
7131:          #define _PORTC_CCP1_MASK                                    0x4
7132:          #define _PORTC_SCK1_POSN                                    0x3
7133:          #define _PORTC_SCK1_POSITION                                0x3
7134:          #define _PORTC_SCK1_SIZE                                    0x1
7135:          #define _PORTC_SCK1_LENGTH                                  0x1
7136:          #define _PORTC_SCK1_MASK                                    0x8
7137:          #define _PORTC_SDI1_POSN                                    0x4
7138:          #define _PORTC_SDI1_POSITION                                0x4
7139:          #define _PORTC_SDI1_SIZE                                    0x1
7140:          #define _PORTC_SDI1_LENGTH                                  0x1
7141:          #define _PORTC_SDI1_MASK                                    0x10
7142:          #define _PORTC_SDO1_POSN                                    0x5
7143:          #define _PORTC_SDO1_POSITION                                0x5
7144:          #define _PORTC_SDO1_SIZE                                    0x1
7145:          #define _PORTC_SDO1_LENGTH                                  0x1
7146:          #define _PORTC_SDO1_MASK                                    0x20
7147:          #define _PORTC_TX1_POSN                                     0x6
7148:          #define _PORTC_TX1_POSITION                                 0x6
7149:          #define _PORTC_TX1_SIZE                                     0x1
7150:          #define _PORTC_TX1_LENGTH                                   0x1
7151:          #define _PORTC_TX1_MASK                                     0x40
7152:          #define _PORTC_RX1_POSN                                     0x7
7153:          #define _PORTC_RX1_POSITION                                 0x7
7154:          #define _PORTC_RX1_SIZE                                     0x1
7155:          #define _PORTC_RX1_LENGTH                                   0x1
7156:          #define _PORTC_RX1_MASK                                     0x80
7157:          #define _PORTC_T3CKI_POSN                                   0x0
7158:          #define _PORTC_T3CKI_POSITION                               0x0
7159:          #define _PORTC_T3CKI_SIZE                                   0x1
7160:          #define _PORTC_T3CKI_LENGTH                                 0x1
7161:          #define _PORTC_T3CKI_MASK                                   0x1
7162:          #define _PORTC_CTPLS_POSN                                   0x2
7163:          #define _PORTC_CTPLS_POSITION                               0x2
7164:          #define _PORTC_CTPLS_SIZE                                   0x1
7165:          #define _PORTC_CTPLS_LENGTH                                 0x1
7166:          #define _PORTC_CTPLS_MASK                                   0x4
7167:          #define _PORTC_SCL1_POSN                                    0x3
7168:          #define _PORTC_SCL1_POSITION                                0x3
7169:          #define _PORTC_SCL1_SIZE                                    0x1
7170:          #define _PORTC_SCL1_LENGTH                                  0x1
7171:          #define _PORTC_SCL1_MASK                                    0x8
7172:          #define _PORTC_SDA1_POSN                                    0x4
7173:          #define _PORTC_SDA1_POSITION                                0x4
7174:          #define _PORTC_SDA1_SIZE                                    0x1
7175:          #define _PORTC_SDA1_LENGTH                                  0x1
7176:          #define _PORTC_SDA1_MASK                                    0x10
7177:          #define _PORTC_CK1_POSN                                     0x6
7178:          #define _PORTC_CK1_POSITION                                 0x6
7179:          #define _PORTC_CK1_SIZE                                     0x1
7180:          #define _PORTC_CK1_LENGTH                                   0x1
7181:          #define _PORTC_CK1_MASK                                     0x40
7182:          #define _PORTC_DT1_POSN                                     0x7
7183:          #define _PORTC_DT1_POSITION                                 0x7
7184:          #define _PORTC_DT1_SIZE                                     0x1
7185:          #define _PORTC_DT1_LENGTH                                   0x1
7186:          #define _PORTC_DT1_MASK                                     0x80
7187:          #define _PORTC_T3G_POSN                                     0x0
7188:          #define _PORTC_T3G_POSITION                                 0x0
7189:          #define _PORTC_T3G_SIZE                                     0x1
7190:          #define _PORTC_T3G_LENGTH                                   0x1
7191:          #define _PORTC_T3G_MASK                                     0x1
7192:          #define _PORTC_AN14_POSN                                    0x2
7193:          #define _PORTC_AN14_POSITION                                0x2
7194:          #define _PORTC_AN14_SIZE                                    0x1
7195:          #define _PORTC_AN14_LENGTH                                  0x1
7196:          #define _PORTC_AN14_MASK                                    0x4
7197:          #define _PORTC_AN15_POSN                                    0x3
7198:          #define _PORTC_AN15_POSITION                                0x3
7199:          #define _PORTC_AN15_SIZE                                    0x1
7200:          #define _PORTC_AN15_LENGTH                                  0x1
7201:          #define _PORTC_AN15_MASK                                    0x8
7202:          #define _PORTC_AN16_POSN                                    0x4
7203:          #define _PORTC_AN16_POSITION                                0x4
7204:          #define _PORTC_AN16_SIZE                                    0x1
7205:          #define _PORTC_AN16_LENGTH                                  0x1
7206:          #define _PORTC_AN16_MASK                                    0x10
7207:          #define _PORTC_AN17_POSN                                    0x5
7208:          #define _PORTC_AN17_POSITION                                0x5
7209:          #define _PORTC_AN17_SIZE                                    0x1
7210:          #define _PORTC_AN17_LENGTH                                  0x1
7211:          #define _PORTC_AN17_MASK                                    0x20
7212:          #define _PORTC_AN18_POSN                                    0x6
7213:          #define _PORTC_AN18_POSITION                                0x6
7214:          #define _PORTC_AN18_SIZE                                    0x1
7215:          #define _PORTC_AN18_LENGTH                                  0x1
7216:          #define _PORTC_AN18_MASK                                    0x40
7217:          #define _PORTC_AN19_POSN                                    0x7
7218:          #define _PORTC_AN19_POSITION                                0x7
7219:          #define _PORTC_AN19_SIZE                                    0x1
7220:          #define _PORTC_AN19_LENGTH                                  0x1
7221:          #define _PORTC_AN19_MASK                                    0x80
7222:          #define _PORTC_PA1_POSN                                     0x2
7223:          #define _PORTC_PA1_POSITION                                 0x2
7224:          #define _PORTC_PA1_SIZE                                     0x1
7225:          #define _PORTC_PA1_LENGTH                                   0x1
7226:          #define _PORTC_PA1_MASK                                     0x4
7227:          #define _PORTC_PA2_POSN                                     0x1
7228:          #define _PORTC_PA2_POSITION                                 0x1
7229:          #define _PORTC_PA2_SIZE                                     0x1
7230:          #define _PORTC_PA2_LENGTH                                   0x1
7231:          #define _PORTC_PA2_MASK                                     0x2
7232:          
7233:          // Register: PORTD
7234:          extern volatile unsigned char           PORTD               @ 0xF83;
7235:          #ifndef _LIB_BUILD
7236:          asm("PORTD equ 0F83h");
7237:          #endif
7238:          // bitfield definitions
7239:          typedef union {
7240:              struct {
7241:                  unsigned RD0                    :1;
7242:                  unsigned RD1                    :1;
7243:                  unsigned RD2                    :1;
7244:                  unsigned RD3                    :1;
7245:                  unsigned RD4                    :1;
7246:                  unsigned RD5                    :1;
7247:                  unsigned RD6                    :1;
7248:                  unsigned RD7                    :1;
7249:              };
7250:              struct {
7251:                  unsigned                        :2;
7252:                  unsigned P2B                    :1;
7253:                  unsigned P2C                    :1;
7254:                  unsigned P2D                    :1;
7255:                  unsigned P1B                    :1;
7256:                  unsigned P1C                    :1;
7257:                  unsigned P1D                    :1;
7258:              };
7259:              struct {
7260:                  unsigned                        :1;
7261:                  unsigned CCP4                   :1;
7262:                  unsigned                        :4;
7263:                  unsigned TX2                    :1;
7264:                  unsigned RX2                    :1;
7265:              };
7266:              struct {
7267:                  unsigned                        :3;
7268:                  unsigned NOT_SS2                :1;
7269:              };
7270:              struct {
7271:                  unsigned SCK2                   :1;
7272:                  unsigned SDI2                   :1;
7273:                  unsigned                        :1;
7274:                  unsigned nSS2                   :1;
7275:                  unsigned SDO2                   :1;
7276:                  unsigned                        :1;
7277:                  unsigned CK2                    :1;
7278:                  unsigned DT2                    :1;
7279:              };
7280:              struct {
7281:                  unsigned SCL2                   :1;
7282:                  unsigned SDA2                   :1;
7283:                  unsigned                        :1;
7284:                  unsigned SS2                    :1;
7285:              };
7286:              struct {
7287:                  unsigned AN20                   :1;
7288:                  unsigned AN21                   :1;
7289:                  unsigned AN22                   :1;
7290:                  unsigned AN23                   :1;
7291:                  unsigned AN24                   :1;
7292:                  unsigned AN25                   :1;
7293:                  unsigned AN26                   :1;
7294:                  unsigned AN27                   :1;
7295:              };
7296:          } PORTDbits_t;
7297:          extern volatile PORTDbits_t PORTDbits @ 0xF83;
7298:          // bitfield macros
7299:          #define _PORTD_RD0_POSN                                     0x0
7300:          #define _PORTD_RD0_POSITION                                 0x0
7301:          #define _PORTD_RD0_SIZE                                     0x1
7302:          #define _PORTD_RD0_LENGTH                                   0x1
7303:          #define _PORTD_RD0_MASK                                     0x1
7304:          #define _PORTD_RD1_POSN                                     0x1
7305:          #define _PORTD_RD1_POSITION                                 0x1
7306:          #define _PORTD_RD1_SIZE                                     0x1
7307:          #define _PORTD_RD1_LENGTH                                   0x1
7308:          #define _PORTD_RD1_MASK                                     0x2
7309:          #define _PORTD_RD2_POSN                                     0x2
7310:          #define _PORTD_RD2_POSITION                                 0x2
7311:          #define _PORTD_RD2_SIZE                                     0x1
7312:          #define _PORTD_RD2_LENGTH                                   0x1
7313:          #define _PORTD_RD2_MASK                                     0x4
7314:          #define _PORTD_RD3_POSN                                     0x3
7315:          #define _PORTD_RD3_POSITION                                 0x3
7316:          #define _PORTD_RD3_SIZE                                     0x1
7317:          #define _PORTD_RD3_LENGTH                                   0x1
7318:          #define _PORTD_RD3_MASK                                     0x8
7319:          #define _PORTD_RD4_POSN                                     0x4
7320:          #define _PORTD_RD4_POSITION                                 0x4
7321:          #define _PORTD_RD4_SIZE                                     0x1
7322:          #define _PORTD_RD4_LENGTH                                   0x1
7323:          #define _PORTD_RD4_MASK                                     0x10
7324:          #define _PORTD_RD5_POSN                                     0x5
7325:          #define _PORTD_RD5_POSITION                                 0x5
7326:          #define _PORTD_RD5_SIZE                                     0x1
7327:          #define _PORTD_RD5_LENGTH                                   0x1
7328:          #define _PORTD_RD5_MASK                                     0x20
7329:          #define _PORTD_RD6_POSN                                     0x6
7330:          #define _PORTD_RD6_POSITION                                 0x6
7331:          #define _PORTD_RD6_SIZE                                     0x1
7332:          #define _PORTD_RD6_LENGTH                                   0x1
7333:          #define _PORTD_RD6_MASK                                     0x40
7334:          #define _PORTD_RD7_POSN                                     0x7
7335:          #define _PORTD_RD7_POSITION                                 0x7
7336:          #define _PORTD_RD7_SIZE                                     0x1
7337:          #define _PORTD_RD7_LENGTH                                   0x1
7338:          #define _PORTD_RD7_MASK                                     0x80
7339:          #define _PORTD_P2B_POSN                                     0x2
7340:          #define _PORTD_P2B_POSITION                                 0x2
7341:          #define _PORTD_P2B_SIZE                                     0x1
7342:          #define _PORTD_P2B_LENGTH                                   0x1
7343:          #define _PORTD_P2B_MASK                                     0x4
7344:          #define _PORTD_P2C_POSN                                     0x3
7345:          #define _PORTD_P2C_POSITION                                 0x3
7346:          #define _PORTD_P2C_SIZE                                     0x1
7347:          #define _PORTD_P2C_LENGTH                                   0x1
7348:          #define _PORTD_P2C_MASK                                     0x8
7349:          #define _PORTD_P2D_POSN                                     0x4
7350:          #define _PORTD_P2D_POSITION                                 0x4
7351:          #define _PORTD_P2D_SIZE                                     0x1
7352:          #define _PORTD_P2D_LENGTH                                   0x1
7353:          #define _PORTD_P2D_MASK                                     0x10
7354:          #define _PORTD_P1B_POSN                                     0x5
7355:          #define _PORTD_P1B_POSITION                                 0x5
7356:          #define _PORTD_P1B_SIZE                                     0x1
7357:          #define _PORTD_P1B_LENGTH                                   0x1
7358:          #define _PORTD_P1B_MASK                                     0x20
7359:          #define _PORTD_P1C_POSN                                     0x6
7360:          #define _PORTD_P1C_POSITION                                 0x6
7361:          #define _PORTD_P1C_SIZE                                     0x1
7362:          #define _PORTD_P1C_LENGTH                                   0x1
7363:          #define _PORTD_P1C_MASK                                     0x40
7364:          #define _PORTD_P1D_POSN                                     0x7
7365:          #define _PORTD_P1D_POSITION                                 0x7
7366:          #define _PORTD_P1D_SIZE                                     0x1
7367:          #define _PORTD_P1D_LENGTH                                   0x1
7368:          #define _PORTD_P1D_MASK                                     0x80
7369:          #define _PORTD_CCP4_POSN                                    0x1
7370:          #define _PORTD_CCP4_POSITION                                0x1
7371:          #define _PORTD_CCP4_SIZE                                    0x1
7372:          #define _PORTD_CCP4_LENGTH                                  0x1
7373:          #define _PORTD_CCP4_MASK                                    0x2
7374:          #define _PORTD_TX2_POSN                                     0x6
7375:          #define _PORTD_TX2_POSITION                                 0x6
7376:          #define _PORTD_TX2_SIZE                                     0x1
7377:          #define _PORTD_TX2_LENGTH                                   0x1
7378:          #define _PORTD_TX2_MASK                                     0x40
7379:          #define _PORTD_RX2_POSN                                     0x7
7380:          #define _PORTD_RX2_POSITION                                 0x7
7381:          #define _PORTD_RX2_SIZE                                     0x1
7382:          #define _PORTD_RX2_LENGTH                                   0x1
7383:          #define _PORTD_RX2_MASK                                     0x80
7384:          #define _PORTD_NOT_SS2_POSN                                 0x3
7385:          #define _PORTD_NOT_SS2_POSITION                             0x3
7386:          #define _PORTD_NOT_SS2_SIZE                                 0x1
7387:          #define _PORTD_NOT_SS2_LENGTH                               0x1
7388:          #define _PORTD_NOT_SS2_MASK                                 0x8
7389:          #define _PORTD_SCK2_POSN                                    0x0
7390:          #define _PORTD_SCK2_POSITION                                0x0
7391:          #define _PORTD_SCK2_SIZE                                    0x1
7392:          #define _PORTD_SCK2_LENGTH                                  0x1
7393:          #define _PORTD_SCK2_MASK                                    0x1
7394:          #define _PORTD_SDI2_POSN                                    0x1
7395:          #define _PORTD_SDI2_POSITION                                0x1
7396:          #define _PORTD_SDI2_SIZE                                    0x1
7397:          #define _PORTD_SDI2_LENGTH                                  0x1
7398:          #define _PORTD_SDI2_MASK                                    0x2
7399:          #define _PORTD_nSS2_POSN                                    0x3
7400:          #define _PORTD_nSS2_POSITION                                0x3
7401:          #define _PORTD_nSS2_SIZE                                    0x1
7402:          #define _PORTD_nSS2_LENGTH                                  0x1
7403:          #define _PORTD_nSS2_MASK                                    0x8
7404:          #define _PORTD_SDO2_POSN                                    0x4
7405:          #define _PORTD_SDO2_POSITION                                0x4
7406:          #define _PORTD_SDO2_SIZE                                    0x1
7407:          #define _PORTD_SDO2_LENGTH                                  0x1
7408:          #define _PORTD_SDO2_MASK                                    0x10
7409:          #define _PORTD_CK2_POSN                                     0x6
7410:          #define _PORTD_CK2_POSITION                                 0x6
7411:          #define _PORTD_CK2_SIZE                                     0x1
7412:          #define _PORTD_CK2_LENGTH                                   0x1
7413:          #define _PORTD_CK2_MASK                                     0x40
7414:          #define _PORTD_DT2_POSN                                     0x7
7415:          #define _PORTD_DT2_POSITION                                 0x7
7416:          #define _PORTD_DT2_SIZE                                     0x1
7417:          #define _PORTD_DT2_LENGTH                                   0x1
7418:          #define _PORTD_DT2_MASK                                     0x80
7419:          #define _PORTD_SCL2_POSN                                    0x0
7420:          #define _PORTD_SCL2_POSITION                                0x0
7421:          #define _PORTD_SCL2_SIZE                                    0x1
7422:          #define _PORTD_SCL2_LENGTH                                  0x1
7423:          #define _PORTD_SCL2_MASK                                    0x1
7424:          #define _PORTD_SDA2_POSN                                    0x1
7425:          #define _PORTD_SDA2_POSITION                                0x1
7426:          #define _PORTD_SDA2_SIZE                                    0x1
7427:          #define _PORTD_SDA2_LENGTH                                  0x1
7428:          #define _PORTD_SDA2_MASK                                    0x2
7429:          #define _PORTD_SS2_POSN                                     0x3
7430:          #define _PORTD_SS2_POSITION                                 0x3
7431:          #define _PORTD_SS2_SIZE                                     0x1
7432:          #define _PORTD_SS2_LENGTH                                   0x1
7433:          #define _PORTD_SS2_MASK                                     0x8
7434:          #define _PORTD_AN20_POSN                                    0x0
7435:          #define _PORTD_AN20_POSITION                                0x0
7436:          #define _PORTD_AN20_SIZE                                    0x1
7437:          #define _PORTD_AN20_LENGTH                                  0x1
7438:          #define _PORTD_AN20_MASK                                    0x1
7439:          #define _PORTD_AN21_POSN                                    0x1
7440:          #define _PORTD_AN21_POSITION                                0x1
7441:          #define _PORTD_AN21_SIZE                                    0x1
7442:          #define _PORTD_AN21_LENGTH                                  0x1
7443:          #define _PORTD_AN21_MASK                                    0x2
7444:          #define _PORTD_AN22_POSN                                    0x2
7445:          #define _PORTD_AN22_POSITION                                0x2
7446:          #define _PORTD_AN22_SIZE                                    0x1
7447:          #define _PORTD_AN22_LENGTH                                  0x1
7448:          #define _PORTD_AN22_MASK                                    0x4
7449:          #define _PORTD_AN23_POSN                                    0x3
7450:          #define _PORTD_AN23_POSITION                                0x3
7451:          #define _PORTD_AN23_SIZE                                    0x1
7452:          #define _PORTD_AN23_LENGTH                                  0x1
7453:          #define _PORTD_AN23_MASK                                    0x8
7454:          #define _PORTD_AN24_POSN                                    0x4
7455:          #define _PORTD_AN24_POSITION                                0x4
7456:          #define _PORTD_AN24_SIZE                                    0x1
7457:          #define _PORTD_AN24_LENGTH                                  0x1
7458:          #define _PORTD_AN24_MASK                                    0x10
7459:          #define _PORTD_AN25_POSN                                    0x5
7460:          #define _PORTD_AN25_POSITION                                0x5
7461:          #define _PORTD_AN25_SIZE                                    0x1
7462:          #define _PORTD_AN25_LENGTH                                  0x1
7463:          #define _PORTD_AN25_MASK                                    0x20
7464:          #define _PORTD_AN26_POSN                                    0x6
7465:          #define _PORTD_AN26_POSITION                                0x6
7466:          #define _PORTD_AN26_SIZE                                    0x1
7467:          #define _PORTD_AN26_LENGTH                                  0x1
7468:          #define _PORTD_AN26_MASK                                    0x40
7469:          #define _PORTD_AN27_POSN                                    0x7
7470:          #define _PORTD_AN27_POSITION                                0x7
7471:          #define _PORTD_AN27_SIZE                                    0x1
7472:          #define _PORTD_AN27_LENGTH                                  0x1
7473:          #define _PORTD_AN27_MASK                                    0x80
7474:          
7475:          // Register: PORTE
7476:          extern volatile unsigned char           PORTE               @ 0xF84;
7477:          #ifndef _LIB_BUILD
7478:          asm("PORTE equ 0F84h");
7479:          #endif
7480:          // bitfield definitions
7481:          typedef union {
7482:              struct {
7483:                  unsigned RE0                    :1;
7484:                  unsigned RE1                    :1;
7485:                  unsigned RE2                    :1;
7486:                  unsigned RE3                    :1;
7487:              };
7488:              struct {
7489:                  unsigned AN5                    :1;
7490:                  unsigned AN6                    :1;
7491:                  unsigned AN7                    :1;
7492:                  unsigned MCLR                   :1;
7493:              };
7494:              struct {
7495:                  unsigned                        :3;
7496:                  unsigned NOT_MCLR               :1;
7497:              };
7498:              struct {
7499:                  unsigned P3A                    :1;
7500:                  unsigned P3B                    :1;
7501:                  unsigned CCP5                   :1;
7502:                  unsigned nMCLR                  :1;
7503:              };
7504:              struct {
7505:                  unsigned CCP3                   :1;
7506:                  unsigned                        :2;
7507:                  unsigned VPP                    :1;
7508:              };
7509:              struct {
7510:                  unsigned                        :2;
7511:                  unsigned CCP10                  :1;
7512:              };
7513:              struct {
7514:                  unsigned                        :7;
7515:                  unsigned CCP2E                  :1;
7516:              };
7517:              struct {
7518:                  unsigned                        :6;
7519:                  unsigned CCP6E                  :1;
7520:              };
7521:              struct {
7522:                  unsigned                        :5;
7523:                  unsigned CCP7E                  :1;
7524:              };
7525:              struct {
7526:                  unsigned                        :4;
7527:                  unsigned CCP8E                  :1;
7528:              };
7529:              struct {
7530:                  unsigned                        :3;
7531:                  unsigned CCP9E                  :1;
7532:              };
7533:              struct {
7534:                  unsigned                        :2;
7535:                  unsigned CS                     :1;
7536:              };
7537:              struct {
7538:                  unsigned                        :7;
7539:                  unsigned PA2E                   :1;
7540:              };
7541:              struct {
7542:                  unsigned                        :6;
7543:                  unsigned PB1E                   :1;
7544:              };
7545:              struct {
7546:                  unsigned                        :2;
7547:                  unsigned PB2                    :1;
7548:              };
7549:              struct {
7550:                  unsigned                        :4;
7551:                  unsigned PB3E                   :1;
7552:              };
7553:              struct {
7554:                  unsigned                        :5;
7555:                  unsigned PC1E                   :1;
7556:              };
7557:              struct {
7558:                  unsigned                        :1;
7559:                  unsigned PC2                    :1;
7560:              };
7561:              struct {
7562:                  unsigned                        :3;
7563:                  unsigned PC3E                   :1;
7564:              };
7565:              struct {
7566:                  unsigned PD2                    :1;
7567:              };
7568:              struct {
7569:                  unsigned RDE                    :1;
7570:              };
7571:              struct {
7572:                  unsigned                        :4;
7573:                  unsigned RE4                    :1;
7574:              };
7575:              struct {
7576:                  unsigned                        :5;
7577:                  unsigned RE5                    :1;
7578:              };
7579:              struct {
7580:                  unsigned                        :6;
7581:                  unsigned RE6                    :1;
7582:              };
7583:              struct {
7584:                  unsigned                        :7;
7585:                  unsigned RE7                    :1;
7586:              };
7587:              struct {
7588:                  unsigned                        :1;
7589:                  unsigned WRE                    :1;
7590:              };
7591:          } PORTEbits_t;
7592:          extern volatile PORTEbits_t PORTEbits @ 0xF84;
7593:          // bitfield macros
7594:          #define _PORTE_RE0_POSN                                     0x0
7595:          #define _PORTE_RE0_POSITION                                 0x0
7596:          #define _PORTE_RE0_SIZE                                     0x1
7597:          #define _PORTE_RE0_LENGTH                                   0x1
7598:          #define _PORTE_RE0_MASK                                     0x1
7599:          #define _PORTE_RE1_POSN                                     0x1
7600:          #define _PORTE_RE1_POSITION                                 0x1
7601:          #define _PORTE_RE1_SIZE                                     0x1
7602:          #define _PORTE_RE1_LENGTH                                   0x1
7603:          #define _PORTE_RE1_MASK                                     0x2
7604:          #define _PORTE_RE2_POSN                                     0x2
7605:          #define _PORTE_RE2_POSITION                                 0x2
7606:          #define _PORTE_RE2_SIZE                                     0x1
7607:          #define _PORTE_RE2_LENGTH                                   0x1
7608:          #define _PORTE_RE2_MASK                                     0x4
7609:          #define _PORTE_RE3_POSN                                     0x3
7610:          #define _PORTE_RE3_POSITION                                 0x3
7611:          #define _PORTE_RE3_SIZE                                     0x1
7612:          #define _PORTE_RE3_LENGTH                                   0x1
7613:          #define _PORTE_RE3_MASK                                     0x8
7614:          #define _PORTE_AN5_POSN                                     0x0
7615:          #define _PORTE_AN5_POSITION                                 0x0
7616:          #define _PORTE_AN5_SIZE                                     0x1
7617:          #define _PORTE_AN5_LENGTH                                   0x1
7618:          #define _PORTE_AN5_MASK                                     0x1
7619:          #define _PORTE_AN6_POSN                                     0x1
7620:          #define _PORTE_AN6_POSITION                                 0x1
7621:          #define _PORTE_AN6_SIZE                                     0x1
7622:          #define _PORTE_AN6_LENGTH                                   0x1
7623:          #define _PORTE_AN6_MASK                                     0x2
7624:          #define _PORTE_AN7_POSN                                     0x2
7625:          #define _PORTE_AN7_POSITION                                 0x2
7626:          #define _PORTE_AN7_SIZE                                     0x1
7627:          #define _PORTE_AN7_LENGTH                                   0x1
7628:          #define _PORTE_AN7_MASK                                     0x4
7629:          #define _PORTE_MCLR_POSN                                    0x3
7630:          #define _PORTE_MCLR_POSITION                                0x3
7631:          #define _PORTE_MCLR_SIZE                                    0x1
7632:          #define _PORTE_MCLR_LENGTH                                  0x1
7633:          #define _PORTE_MCLR_MASK                                    0x8
7634:          #define _PORTE_NOT_MCLR_POSN                                0x3
7635:          #define _PORTE_NOT_MCLR_POSITION                            0x3
7636:          #define _PORTE_NOT_MCLR_SIZE                                0x1
7637:          #define _PORTE_NOT_MCLR_LENGTH                              0x1
7638:          #define _PORTE_NOT_MCLR_MASK                                0x8
7639:          #define _PORTE_P3A_POSN                                     0x0
7640:          #define _PORTE_P3A_POSITION                                 0x0
7641:          #define _PORTE_P3A_SIZE                                     0x1
7642:          #define _PORTE_P3A_LENGTH                                   0x1
7643:          #define _PORTE_P3A_MASK                                     0x1
7644:          #define _PORTE_P3B_POSN                                     0x1
7645:          #define _PORTE_P3B_POSITION                                 0x1
7646:          #define _PORTE_P3B_SIZE                                     0x1
7647:          #define _PORTE_P3B_LENGTH                                   0x1
7648:          #define _PORTE_P3B_MASK                                     0x2
7649:          #define _PORTE_CCP5_POSN                                    0x2
7650:          #define _PORTE_CCP5_POSITION                                0x2
7651:          #define _PORTE_CCP5_SIZE                                    0x1
7652:          #define _PORTE_CCP5_LENGTH                                  0x1
7653:          #define _PORTE_CCP5_MASK                                    0x4
7654:          #define _PORTE_nMCLR_POSN                                   0x3
7655:          #define _PORTE_nMCLR_POSITION                               0x3
7656:          #define _PORTE_nMCLR_SIZE                                   0x1
7657:          #define _PORTE_nMCLR_LENGTH                                 0x1
7658:          #define _PORTE_nMCLR_MASK                                   0x8
7659:          #define _PORTE_CCP3_POSN                                    0x0
7660:          #define _PORTE_CCP3_POSITION                                0x0
7661:          #define _PORTE_CCP3_SIZE                                    0x1
7662:          #define _PORTE_CCP3_LENGTH                                  0x1
7663:          #define _PORTE_CCP3_MASK                                    0x1
7664:          #define _PORTE_VPP_POSN                                     0x3
7665:          #define _PORTE_VPP_POSITION                                 0x3
7666:          #define _PORTE_VPP_SIZE                                     0x1
7667:          #define _PORTE_VPP_LENGTH                                   0x1
7668:          #define _PORTE_VPP_MASK                                     0x8
7669:          #define _PORTE_CCP10_POSN                                   0x2
7670:          #define _PORTE_CCP10_POSITION                               0x2
7671:          #define _PORTE_CCP10_SIZE                                   0x1
7672:          #define _PORTE_CCP10_LENGTH                                 0x1
7673:          #define _PORTE_CCP10_MASK                                   0x4
7674:          #define _PORTE_CCP2E_POSN                                   0x7
7675:          #define _PORTE_CCP2E_POSITION                               0x7
7676:          #define _PORTE_CCP2E_SIZE                                   0x1
7677:          #define _PORTE_CCP2E_LENGTH                                 0x1
7678:          #define _PORTE_CCP2E_MASK                                   0x80
7679:          #define _PORTE_CCP6E_POSN                                   0x6
7680:          #define _PORTE_CCP6E_POSITION                               0x6
7681:          #define _PORTE_CCP6E_SIZE                                   0x1
7682:          #define _PORTE_CCP6E_LENGTH                                 0x1
7683:          #define _PORTE_CCP6E_MASK                                   0x40
7684:          #define _PORTE_CCP7E_POSN                                   0x5
7685:          #define _PORTE_CCP7E_POSITION                               0x5
7686:          #define _PORTE_CCP7E_SIZE                                   0x1
7687:          #define _PORTE_CCP7E_LENGTH                                 0x1
7688:          #define _PORTE_CCP7E_MASK                                   0x20
7689:          #define _PORTE_CCP8E_POSN                                   0x4
7690:          #define _PORTE_CCP8E_POSITION                               0x4
7691:          #define _PORTE_CCP8E_SIZE                                   0x1
7692:          #define _PORTE_CCP8E_LENGTH                                 0x1
7693:          #define _PORTE_CCP8E_MASK                                   0x10
7694:          #define _PORTE_CCP9E_POSN                                   0x3
7695:          #define _PORTE_CCP9E_POSITION                               0x3
7696:          #define _PORTE_CCP9E_SIZE                                   0x1
7697:          #define _PORTE_CCP9E_LENGTH                                 0x1
7698:          #define _PORTE_CCP9E_MASK                                   0x8
7699:          #define _PORTE_CS_POSN                                      0x2
7700:          #define _PORTE_CS_POSITION                                  0x2
7701:          #define _PORTE_CS_SIZE                                      0x1
7702:          #define _PORTE_CS_LENGTH                                    0x1
7703:          #define _PORTE_CS_MASK                                      0x4
7704:          #define _PORTE_PA2E_POSN                                    0x7
7705:          #define _PORTE_PA2E_POSITION                                0x7
7706:          #define _PORTE_PA2E_SIZE                                    0x1
7707:          #define _PORTE_PA2E_LENGTH                                  0x1
7708:          #define _PORTE_PA2E_MASK                                    0x80
7709:          #define _PORTE_PB1E_POSN                                    0x6
7710:          #define _PORTE_PB1E_POSITION                                0x6
7711:          #define _PORTE_PB1E_SIZE                                    0x1
7712:          #define _PORTE_PB1E_LENGTH                                  0x1
7713:          #define _PORTE_PB1E_MASK                                    0x40
7714:          #define _PORTE_PB2_POSN                                     0x2
7715:          #define _PORTE_PB2_POSITION                                 0x2
7716:          #define _PORTE_PB2_SIZE                                     0x1
7717:          #define _PORTE_PB2_LENGTH                                   0x1
7718:          #define _PORTE_PB2_MASK                                     0x4
7719:          #define _PORTE_PB3E_POSN                                    0x4
7720:          #define _PORTE_PB3E_POSITION                                0x4
7721:          #define _PORTE_PB3E_SIZE                                    0x1
7722:          #define _PORTE_PB3E_LENGTH                                  0x1
7723:          #define _PORTE_PB3E_MASK                                    0x10
7724:          #define _PORTE_PC1E_POSN                                    0x5
7725:          #define _PORTE_PC1E_POSITION                                0x5
7726:          #define _PORTE_PC1E_SIZE                                    0x1
7727:          #define _PORTE_PC1E_LENGTH                                  0x1
7728:          #define _PORTE_PC1E_MASK                                    0x20
7729:          #define _PORTE_PC2_POSN                                     0x1
7730:          #define _PORTE_PC2_POSITION                                 0x1
7731:          #define _PORTE_PC2_SIZE                                     0x1
7732:          #define _PORTE_PC2_LENGTH                                   0x1
7733:          #define _PORTE_PC2_MASK                                     0x2
7734:          #define _PORTE_PC3E_POSN                                    0x3
7735:          #define _PORTE_PC3E_POSITION                                0x3
7736:          #define _PORTE_PC3E_SIZE                                    0x1
7737:          #define _PORTE_PC3E_LENGTH                                  0x1
7738:          #define _PORTE_PC3E_MASK                                    0x8
7739:          #define _PORTE_PD2_POSN                                     0x0
7740:          #define _PORTE_PD2_POSITION                                 0x0
7741:          #define _PORTE_PD2_SIZE                                     0x1
7742:          #define _PORTE_PD2_LENGTH                                   0x1
7743:          #define _PORTE_PD2_MASK                                     0x1
7744:          #define _PORTE_RDE_POSN                                     0x0
7745:          #define _PORTE_RDE_POSITION                                 0x0
7746:          #define _PORTE_RDE_SIZE                                     0x1
7747:          #define _PORTE_RDE_LENGTH                                   0x1
7748:          #define _PORTE_RDE_MASK                                     0x1
7749:          #define _PORTE_RE4_POSN                                     0x4
7750:          #define _PORTE_RE4_POSITION                                 0x4
7751:          #define _PORTE_RE4_SIZE                                     0x1
7752:          #define _PORTE_RE4_LENGTH                                   0x1
7753:          #define _PORTE_RE4_MASK                                     0x10
7754:          #define _PORTE_RE5_POSN                                     0x5
7755:          #define _PORTE_RE5_POSITION                                 0x5
7756:          #define _PORTE_RE5_SIZE                                     0x1
7757:          #define _PORTE_RE5_LENGTH                                   0x1
7758:          #define _PORTE_RE5_MASK                                     0x20
7759:          #define _PORTE_RE6_POSN                                     0x6
7760:          #define _PORTE_RE6_POSITION                                 0x6
7761:          #define _PORTE_RE6_SIZE                                     0x1
7762:          #define _PORTE_RE6_LENGTH                                   0x1
7763:          #define _PORTE_RE6_MASK                                     0x40
7764:          #define _PORTE_RE7_POSN                                     0x7
7765:          #define _PORTE_RE7_POSITION                                 0x7
7766:          #define _PORTE_RE7_SIZE                                     0x1
7767:          #define _PORTE_RE7_LENGTH                                   0x1
7768:          #define _PORTE_RE7_MASK                                     0x80
7769:          #define _PORTE_WRE_POSN                                     0x1
7770:          #define _PORTE_WRE_POSITION                                 0x1
7771:          #define _PORTE_WRE_SIZE                                     0x1
7772:          #define _PORTE_WRE_LENGTH                                   0x1
7773:          #define _PORTE_WRE_MASK                                     0x2
7774:          
7775:          // Register: LATA
7776:          extern volatile unsigned char           LATA                @ 0xF89;
7777:          #ifndef _LIB_BUILD
7778:          asm("LATA equ 0F89h");
7779:          #endif
7780:          // bitfield definitions
7781:          typedef union {
7782:              struct {
7783:                  unsigned LATA0                  :1;
7784:                  unsigned LATA1                  :1;
7785:                  unsigned LATA2                  :1;
7786:                  unsigned LATA3                  :1;
7787:                  unsigned LATA4                  :1;
7788:                  unsigned LATA5                  :1;
7789:                  unsigned LATA6                  :1;
7790:                  unsigned LATA7                  :1;
7791:              };
7792:              struct {
7793:                  unsigned LA0                    :1;
7794:              };
7795:              struct {
7796:                  unsigned                        :1;
7797:                  unsigned LA1                    :1;
7798:              };
7799:              struct {
7800:                  unsigned                        :2;
7801:                  unsigned LA2                    :1;
7802:              };
7803:              struct {
7804:                  unsigned                        :3;
7805:                  unsigned LA3                    :1;
7806:              };
7807:              struct {
7808:                  unsigned                        :4;
7809:                  unsigned LA4                    :1;
7810:              };
7811:              struct {
7812:                  unsigned                        :5;
7813:                  unsigned LA5                    :1;
7814:              };
7815:              struct {
7816:                  unsigned                        :6;
7817:                  unsigned LA6                    :1;
7818:              };
7819:              struct {
7820:                  unsigned                        :7;
7821:                  unsigned LA7                    :1;
7822:              };
7823:          } LATAbits_t;
7824:          extern volatile LATAbits_t LATAbits @ 0xF89;
7825:          // bitfield macros
7826:          #define _LATA_LATA0_POSN                                    0x0
7827:          #define _LATA_LATA0_POSITION                                0x0
7828:          #define _LATA_LATA0_SIZE                                    0x1
7829:          #define _LATA_LATA0_LENGTH                                  0x1
7830:          #define _LATA_LATA0_MASK                                    0x1
7831:          #define _LATA_LATA1_POSN                                    0x1
7832:          #define _LATA_LATA1_POSITION                                0x1
7833:          #define _LATA_LATA1_SIZE                                    0x1
7834:          #define _LATA_LATA1_LENGTH                                  0x1
7835:          #define _LATA_LATA1_MASK                                    0x2
7836:          #define _LATA_LATA2_POSN                                    0x2
7837:          #define _LATA_LATA2_POSITION                                0x2
7838:          #define _LATA_LATA2_SIZE                                    0x1
7839:          #define _LATA_LATA2_LENGTH                                  0x1
7840:          #define _LATA_LATA2_MASK                                    0x4
7841:          #define _LATA_LATA3_POSN                                    0x3
7842:          #define _LATA_LATA3_POSITION                                0x3
7843:          #define _LATA_LATA3_SIZE                                    0x1
7844:          #define _LATA_LATA3_LENGTH                                  0x1
7845:          #define _LATA_LATA3_MASK                                    0x8
7846:          #define _LATA_LATA4_POSN                                    0x4
7847:          #define _LATA_LATA4_POSITION                                0x4
7848:          #define _LATA_LATA4_SIZE                                    0x1
7849:          #define _LATA_LATA4_LENGTH                                  0x1
7850:          #define _LATA_LATA4_MASK                                    0x10
7851:          #define _LATA_LATA5_POSN                                    0x5
7852:          #define _LATA_LATA5_POSITION                                0x5
7853:          #define _LATA_LATA5_SIZE                                    0x1
7854:          #define _LATA_LATA5_LENGTH                                  0x1
7855:          #define _LATA_LATA5_MASK                                    0x20
7856:          #define _LATA_LATA6_POSN                                    0x6
7857:          #define _LATA_LATA6_POSITION                                0x6
7858:          #define _LATA_LATA6_SIZE                                    0x1
7859:          #define _LATA_LATA6_LENGTH                                  0x1
7860:          #define _LATA_LATA6_MASK                                    0x40
7861:          #define _LATA_LATA7_POSN                                    0x7
7862:          #define _LATA_LATA7_POSITION                                0x7
7863:          #define _LATA_LATA7_SIZE                                    0x1
7864:          #define _LATA_LATA7_LENGTH                                  0x1
7865:          #define _LATA_LATA7_MASK                                    0x80
7866:          #define _LATA_LA0_POSN                                      0x0
7867:          #define _LATA_LA0_POSITION                                  0x0
7868:          #define _LATA_LA0_SIZE                                      0x1
7869:          #define _LATA_LA0_LENGTH                                    0x1
7870:          #define _LATA_LA0_MASK                                      0x1
7871:          #define _LATA_LA1_POSN                                      0x1
7872:          #define _LATA_LA1_POSITION                                  0x1
7873:          #define _LATA_LA1_SIZE                                      0x1
7874:          #define _LATA_LA1_LENGTH                                    0x1
7875:          #define _LATA_LA1_MASK                                      0x2
7876:          #define _LATA_LA2_POSN                                      0x2
7877:          #define _LATA_LA2_POSITION                                  0x2
7878:          #define _LATA_LA2_SIZE                                      0x1
7879:          #define _LATA_LA2_LENGTH                                    0x1
7880:          #define _LATA_LA2_MASK                                      0x4
7881:          #define _LATA_LA3_POSN                                      0x3
7882:          #define _LATA_LA3_POSITION                                  0x3
7883:          #define _LATA_LA3_SIZE                                      0x1
7884:          #define _LATA_LA3_LENGTH                                    0x1
7885:          #define _LATA_LA3_MASK                                      0x8
7886:          #define _LATA_LA4_POSN                                      0x4
7887:          #define _LATA_LA4_POSITION                                  0x4
7888:          #define _LATA_LA4_SIZE                                      0x1
7889:          #define _LATA_LA4_LENGTH                                    0x1
7890:          #define _LATA_LA4_MASK                                      0x10
7891:          #define _LATA_LA5_POSN                                      0x5
7892:          #define _LATA_LA5_POSITION                                  0x5
7893:          #define _LATA_LA5_SIZE                                      0x1
7894:          #define _LATA_LA5_LENGTH                                    0x1
7895:          #define _LATA_LA5_MASK                                      0x20
7896:          #define _LATA_LA6_POSN                                      0x6
7897:          #define _LATA_LA6_POSITION                                  0x6
7898:          #define _LATA_LA6_SIZE                                      0x1
7899:          #define _LATA_LA6_LENGTH                                    0x1
7900:          #define _LATA_LA6_MASK                                      0x40
7901:          #define _LATA_LA7_POSN                                      0x7
7902:          #define _LATA_LA7_POSITION                                  0x7
7903:          #define _LATA_LA7_SIZE                                      0x1
7904:          #define _LATA_LA7_LENGTH                                    0x1
7905:          #define _LATA_LA7_MASK                                      0x80
7906:          
7907:          // Register: LATB
7908:          extern volatile unsigned char           LATB                @ 0xF8A;
7909:          #ifndef _LIB_BUILD
7910:          asm("LATB equ 0F8Ah");
7911:          #endif
7912:          // bitfield definitions
7913:          typedef union {
7914:              struct {
7915:                  unsigned LATB0                  :1;
7916:                  unsigned LATB1                  :1;
7917:                  unsigned LATB2                  :1;
7918:                  unsigned LATB3                  :1;
7919:                  unsigned LATB4                  :1;
7920:                  unsigned LATB5                  :1;
7921:                  unsigned LATB6                  :1;
7922:                  unsigned LATB7                  :1;
7923:              };
7924:              struct {
7925:                  unsigned LB0                    :1;
7926:              };
7927:              struct {
7928:                  unsigned                        :1;
7929:                  unsigned LB1                    :1;
7930:              };
7931:              struct {
7932:                  unsigned                        :2;
7933:                  unsigned LB2                    :1;
7934:              };
7935:              struct {
7936:                  unsigned                        :3;
7937:                  unsigned LB3                    :1;
7938:              };
7939:              struct {
7940:                  unsigned                        :4;
7941:                  unsigned LB4                    :1;
7942:              };
7943:              struct {
7944:                  unsigned                        :5;
7945:                  unsigned LB5                    :1;
7946:              };
7947:              struct {
7948:                  unsigned                        :6;
7949:                  unsigned LB6                    :1;
7950:              };
7951:              struct {
7952:                  unsigned                        :7;
7953:                  unsigned LB7                    :1;
7954:              };
7955:          } LATBbits_t;
7956:          extern volatile LATBbits_t LATBbits @ 0xF8A;
7957:          // bitfield macros
7958:          #define _LATB_LATB0_POSN                                    0x0
7959:          #define _LATB_LATB0_POSITION                                0x0
7960:          #define _LATB_LATB0_SIZE                                    0x1
7961:          #define _LATB_LATB0_LENGTH                                  0x1
7962:          #define _LATB_LATB0_MASK                                    0x1
7963:          #define _LATB_LATB1_POSN                                    0x1
7964:          #define _LATB_LATB1_POSITION                                0x1
7965:          #define _LATB_LATB1_SIZE                                    0x1
7966:          #define _LATB_LATB1_LENGTH                                  0x1
7967:          #define _LATB_LATB1_MASK                                    0x2
7968:          #define _LATB_LATB2_POSN                                    0x2
7969:          #define _LATB_LATB2_POSITION                                0x2
7970:          #define _LATB_LATB2_SIZE                                    0x1
7971:          #define _LATB_LATB2_LENGTH                                  0x1
7972:          #define _LATB_LATB2_MASK                                    0x4
7973:          #define _LATB_LATB3_POSN                                    0x3
7974:          #define _LATB_LATB3_POSITION                                0x3
7975:          #define _LATB_LATB3_SIZE                                    0x1
7976:          #define _LATB_LATB3_LENGTH                                  0x1
7977:          #define _LATB_LATB3_MASK                                    0x8
7978:          #define _LATB_LATB4_POSN                                    0x4
7979:          #define _LATB_LATB4_POSITION                                0x4
7980:          #define _LATB_LATB4_SIZE                                    0x1
7981:          #define _LATB_LATB4_LENGTH                                  0x1
7982:          #define _LATB_LATB4_MASK                                    0x10
7983:          #define _LATB_LATB5_POSN                                    0x5
7984:          #define _LATB_LATB5_POSITION                                0x5
7985:          #define _LATB_LATB5_SIZE                                    0x1
7986:          #define _LATB_LATB5_LENGTH                                  0x1
7987:          #define _LATB_LATB5_MASK                                    0x20
7988:          #define _LATB_LATB6_POSN                                    0x6
7989:          #define _LATB_LATB6_POSITION                                0x6
7990:          #define _LATB_LATB6_SIZE                                    0x1
7991:          #define _LATB_LATB6_LENGTH                                  0x1
7992:          #define _LATB_LATB6_MASK                                    0x40
7993:          #define _LATB_LATB7_POSN                                    0x7
7994:          #define _LATB_LATB7_POSITION                                0x7
7995:          #define _LATB_LATB7_SIZE                                    0x1
7996:          #define _LATB_LATB7_LENGTH                                  0x1
7997:          #define _LATB_LATB7_MASK                                    0x80
7998:          #define _LATB_LB0_POSN                                      0x0
7999:          #define _LATB_LB0_POSITION                                  0x0
8000:          #define _LATB_LB0_SIZE                                      0x1
8001:          #define _LATB_LB0_LENGTH                                    0x1
8002:          #define _LATB_LB0_MASK                                      0x1
8003:          #define _LATB_LB1_POSN                                      0x1
8004:          #define _LATB_LB1_POSITION                                  0x1
8005:          #define _LATB_LB1_SIZE                                      0x1
8006:          #define _LATB_LB1_LENGTH                                    0x1
8007:          #define _LATB_LB1_MASK                                      0x2
8008:          #define _LATB_LB2_POSN                                      0x2
8009:          #define _LATB_LB2_POSITION                                  0x2
8010:          #define _LATB_LB2_SIZE                                      0x1
8011:          #define _LATB_LB2_LENGTH                                    0x1
8012:          #define _LATB_LB2_MASK                                      0x4
8013:          #define _LATB_LB3_POSN                                      0x3
8014:          #define _LATB_LB3_POSITION                                  0x3
8015:          #define _LATB_LB3_SIZE                                      0x1
8016:          #define _LATB_LB3_LENGTH                                    0x1
8017:          #define _LATB_LB3_MASK                                      0x8
8018:          #define _LATB_LB4_POSN                                      0x4
8019:          #define _LATB_LB4_POSITION                                  0x4
8020:          #define _LATB_LB4_SIZE                                      0x1
8021:          #define _LATB_LB4_LENGTH                                    0x1
8022:          #define _LATB_LB4_MASK                                      0x10
8023:          #define _LATB_LB5_POSN                                      0x5
8024:          #define _LATB_LB5_POSITION                                  0x5
8025:          #define _LATB_LB5_SIZE                                      0x1
8026:          #define _LATB_LB5_LENGTH                                    0x1
8027:          #define _LATB_LB5_MASK                                      0x20
8028:          #define _LATB_LB6_POSN                                      0x6
8029:          #define _LATB_LB6_POSITION                                  0x6
8030:          #define _LATB_LB6_SIZE                                      0x1
8031:          #define _LATB_LB6_LENGTH                                    0x1
8032:          #define _LATB_LB6_MASK                                      0x40
8033:          #define _LATB_LB7_POSN                                      0x7
8034:          #define _LATB_LB7_POSITION                                  0x7
8035:          #define _LATB_LB7_SIZE                                      0x1
8036:          #define _LATB_LB7_LENGTH                                    0x1
8037:          #define _LATB_LB7_MASK                                      0x80
8038:          
8039:          // Register: LATC
8040:          extern volatile unsigned char           LATC                @ 0xF8B;
8041:          #ifndef _LIB_BUILD
8042:          asm("LATC equ 0F8Bh");
8043:          #endif
8044:          // bitfield definitions
8045:          typedef union {
8046:              struct {
8047:                  unsigned LATC0                  :1;
8048:                  unsigned LATC1                  :1;
8049:                  unsigned LATC2                  :1;
8050:                  unsigned LATC3                  :1;
8051:                  unsigned LATC4                  :1;
8052:                  unsigned LATC5                  :1;
8053:                  unsigned LATC6                  :1;
8054:                  unsigned LATC7                  :1;
8055:              };
8056:              struct {
8057:                  unsigned LC0                    :1;
8058:              };
8059:              struct {
8060:                  unsigned                        :1;
8061:                  unsigned LC1                    :1;
8062:              };
8063:              struct {
8064:                  unsigned                        :2;
8065:                  unsigned LC2                    :1;
8066:              };
8067:              struct {
8068:                  unsigned                        :3;
8069:                  unsigned LC3                    :1;
8070:              };
8071:              struct {
8072:                  unsigned                        :4;
8073:                  unsigned LC4                    :1;
8074:              };
8075:              struct {
8076:                  unsigned                        :5;
8077:                  unsigned LC5                    :1;
8078:              };
8079:              struct {
8080:                  unsigned                        :6;
8081:                  unsigned LC6                    :1;
8082:              };
8083:              struct {
8084:                  unsigned                        :7;
8085:                  unsigned LC7                    :1;
8086:              };
8087:          } LATCbits_t;
8088:          extern volatile LATCbits_t LATCbits @ 0xF8B;
8089:          // bitfield macros
8090:          #define _LATC_LATC0_POSN                                    0x0
8091:          #define _LATC_LATC0_POSITION                                0x0
8092:          #define _LATC_LATC0_SIZE                                    0x1
8093:          #define _LATC_LATC0_LENGTH                                  0x1
8094:          #define _LATC_LATC0_MASK                                    0x1
8095:          #define _LATC_LATC1_POSN                                    0x1
8096:          #define _LATC_LATC1_POSITION                                0x1
8097:          #define _LATC_LATC1_SIZE                                    0x1
8098:          #define _LATC_LATC1_LENGTH                                  0x1
8099:          #define _LATC_LATC1_MASK                                    0x2
8100:          #define _LATC_LATC2_POSN                                    0x2
8101:          #define _LATC_LATC2_POSITION                                0x2
8102:          #define _LATC_LATC2_SIZE                                    0x1
8103:          #define _LATC_LATC2_LENGTH                                  0x1
8104:          #define _LATC_LATC2_MASK                                    0x4
8105:          #define _LATC_LATC3_POSN                                    0x3
8106:          #define _LATC_LATC3_POSITION                                0x3
8107:          #define _LATC_LATC3_SIZE                                    0x1
8108:          #define _LATC_LATC3_LENGTH                                  0x1
8109:          #define _LATC_LATC3_MASK                                    0x8
8110:          #define _LATC_LATC4_POSN                                    0x4
8111:          #define _LATC_LATC4_POSITION                                0x4
8112:          #define _LATC_LATC4_SIZE                                    0x1
8113:          #define _LATC_LATC4_LENGTH                                  0x1
8114:          #define _LATC_LATC4_MASK                                    0x10
8115:          #define _LATC_LATC5_POSN                                    0x5
8116:          #define _LATC_LATC5_POSITION                                0x5
8117:          #define _LATC_LATC5_SIZE                                    0x1
8118:          #define _LATC_LATC5_LENGTH                                  0x1
8119:          #define _LATC_LATC5_MASK                                    0x20
8120:          #define _LATC_LATC6_POSN                                    0x6
8121:          #define _LATC_LATC6_POSITION                                0x6
8122:          #define _LATC_LATC6_SIZE                                    0x1
8123:          #define _LATC_LATC6_LENGTH                                  0x1
8124:          #define _LATC_LATC6_MASK                                    0x40
8125:          #define _LATC_LATC7_POSN                                    0x7
8126:          #define _LATC_LATC7_POSITION                                0x7
8127:          #define _LATC_LATC7_SIZE                                    0x1
8128:          #define _LATC_LATC7_LENGTH                                  0x1
8129:          #define _LATC_LATC7_MASK                                    0x80
8130:          #define _LATC_LC0_POSN                                      0x0
8131:          #define _LATC_LC0_POSITION                                  0x0
8132:          #define _LATC_LC0_SIZE                                      0x1
8133:          #define _LATC_LC0_LENGTH                                    0x1
8134:          #define _LATC_LC0_MASK                                      0x1
8135:          #define _LATC_LC1_POSN                                      0x1
8136:          #define _LATC_LC1_POSITION                                  0x1
8137:          #define _LATC_LC1_SIZE                                      0x1
8138:          #define _LATC_LC1_LENGTH                                    0x1
8139:          #define _LATC_LC1_MASK                                      0x2
8140:          #define _LATC_LC2_POSN                                      0x2
8141:          #define _LATC_LC2_POSITION                                  0x2
8142:          #define _LATC_LC2_SIZE                                      0x1
8143:          #define _LATC_LC2_LENGTH                                    0x1
8144:          #define _LATC_LC2_MASK                                      0x4
8145:          #define _LATC_LC3_POSN                                      0x3
8146:          #define _LATC_LC3_POSITION                                  0x3
8147:          #define _LATC_LC3_SIZE                                      0x1
8148:          #define _LATC_LC3_LENGTH                                    0x1
8149:          #define _LATC_LC3_MASK                                      0x8
8150:          #define _LATC_LC4_POSN                                      0x4
8151:          #define _LATC_LC4_POSITION                                  0x4
8152:          #define _LATC_LC4_SIZE                                      0x1
8153:          #define _LATC_LC4_LENGTH                                    0x1
8154:          #define _LATC_LC4_MASK                                      0x10
8155:          #define _LATC_LC5_POSN                                      0x5
8156:          #define _LATC_LC5_POSITION                                  0x5
8157:          #define _LATC_LC5_SIZE                                      0x1
8158:          #define _LATC_LC5_LENGTH                                    0x1
8159:          #define _LATC_LC5_MASK                                      0x20
8160:          #define _LATC_LC6_POSN                                      0x6
8161:          #define _LATC_LC6_POSITION                                  0x6
8162:          #define _LATC_LC6_SIZE                                      0x1
8163:          #define _LATC_LC6_LENGTH                                    0x1
8164:          #define _LATC_LC6_MASK                                      0x40
8165:          #define _LATC_LC7_POSN                                      0x7
8166:          #define _LATC_LC7_POSITION                                  0x7
8167:          #define _LATC_LC7_SIZE                                      0x1
8168:          #define _LATC_LC7_LENGTH                                    0x1
8169:          #define _LATC_LC7_MASK                                      0x80
8170:          
8171:          // Register: LATD
8172:          extern volatile unsigned char           LATD                @ 0xF8C;
8173:          #ifndef _LIB_BUILD
8174:          asm("LATD equ 0F8Ch");
8175:          #endif
8176:          // bitfield definitions
8177:          typedef union {
8178:              struct {
8179:                  unsigned LATD0                  :1;
8180:                  unsigned LATD1                  :1;
8181:                  unsigned LATD2                  :1;
8182:                  unsigned LATD3                  :1;
8183:                  unsigned LATD4                  :1;
8184:                  unsigned LATD5                  :1;
8185:                  unsigned LATD6                  :1;
8186:                  unsigned LATD7                  :1;
8187:              };
8188:              struct {
8189:                  unsigned LD0                    :1;
8190:              };
8191:              struct {
8192:                  unsigned                        :1;
8193:                  unsigned LD1                    :1;
8194:              };
8195:              struct {
8196:                  unsigned                        :2;
8197:                  unsigned LD2                    :1;
8198:              };
8199:              struct {
8200:                  unsigned                        :3;
8201:                  unsigned LD3                    :1;
8202:              };
8203:              struct {
8204:                  unsigned                        :4;
8205:                  unsigned LD4                    :1;
8206:              };
8207:              struct {
8208:                  unsigned                        :5;
8209:                  unsigned LD5                    :1;
8210:              };
8211:              struct {
8212:                  unsigned                        :6;
8213:                  unsigned LD6                    :1;
8214:              };
8215:              struct {
8216:                  unsigned                        :7;
8217:                  unsigned LD7                    :1;
8218:              };
8219:          } LATDbits_t;
8220:          extern volatile LATDbits_t LATDbits @ 0xF8C;
8221:          // bitfield macros
8222:          #define _LATD_LATD0_POSN                                    0x0
8223:          #define _LATD_LATD0_POSITION                                0x0
8224:          #define _LATD_LATD0_SIZE                                    0x1
8225:          #define _LATD_LATD0_LENGTH                                  0x1
8226:          #define _LATD_LATD0_MASK                                    0x1
8227:          #define _LATD_LATD1_POSN                                    0x1
8228:          #define _LATD_LATD1_POSITION                                0x1
8229:          #define _LATD_LATD1_SIZE                                    0x1
8230:          #define _LATD_LATD1_LENGTH                                  0x1
8231:          #define _LATD_LATD1_MASK                                    0x2
8232:          #define _LATD_LATD2_POSN                                    0x2
8233:          #define _LATD_LATD2_POSITION                                0x2
8234:          #define _LATD_LATD2_SIZE                                    0x1
8235:          #define _LATD_LATD2_LENGTH                                  0x1
8236:          #define _LATD_LATD2_MASK                                    0x4
8237:          #define _LATD_LATD3_POSN                                    0x3
8238:          #define _LATD_LATD3_POSITION                                0x3
8239:          #define _LATD_LATD3_SIZE                                    0x1
8240:          #define _LATD_LATD3_LENGTH                                  0x1
8241:          #define _LATD_LATD3_MASK                                    0x8
8242:          #define _LATD_LATD4_POSN                                    0x4
8243:          #define _LATD_LATD4_POSITION                                0x4
8244:          #define _LATD_LATD4_SIZE                                    0x1
8245:          #define _LATD_LATD4_LENGTH                                  0x1
8246:          #define _LATD_LATD4_MASK                                    0x10
8247:          #define _LATD_LATD5_POSN                                    0x5
8248:          #define _LATD_LATD5_POSITION                                0x5
8249:          #define _LATD_LATD5_SIZE                                    0x1
8250:          #define _LATD_LATD5_LENGTH                                  0x1
8251:          #define _LATD_LATD5_MASK                                    0x20
8252:          #define _LATD_LATD6_POSN                                    0x6
8253:          #define _LATD_LATD6_POSITION                                0x6
8254:          #define _LATD_LATD6_SIZE                                    0x1
8255:          #define _LATD_LATD6_LENGTH                                  0x1
8256:          #define _LATD_LATD6_MASK                                    0x40
8257:          #define _LATD_LATD7_POSN                                    0x7
8258:          #define _LATD_LATD7_POSITION                                0x7
8259:          #define _LATD_LATD7_SIZE                                    0x1
8260:          #define _LATD_LATD7_LENGTH                                  0x1
8261:          #define _LATD_LATD7_MASK                                    0x80
8262:          #define _LATD_LD0_POSN                                      0x0
8263:          #define _LATD_LD0_POSITION                                  0x0
8264:          #define _LATD_LD0_SIZE                                      0x1
8265:          #define _LATD_LD0_LENGTH                                    0x1
8266:          #define _LATD_LD0_MASK                                      0x1
8267:          #define _LATD_LD1_POSN                                      0x1
8268:          #define _LATD_LD1_POSITION                                  0x1
8269:          #define _LATD_LD1_SIZE                                      0x1
8270:          #define _LATD_LD1_LENGTH                                    0x1
8271:          #define _LATD_LD1_MASK                                      0x2
8272:          #define _LATD_LD2_POSN                                      0x2
8273:          #define _LATD_LD2_POSITION                                  0x2
8274:          #define _LATD_LD2_SIZE                                      0x1
8275:          #define _LATD_LD2_LENGTH                                    0x1
8276:          #define _LATD_LD2_MASK                                      0x4
8277:          #define _LATD_LD3_POSN                                      0x3
8278:          #define _LATD_LD3_POSITION                                  0x3
8279:          #define _LATD_LD3_SIZE                                      0x1
8280:          #define _LATD_LD3_LENGTH                                    0x1
8281:          #define _LATD_LD3_MASK                                      0x8
8282:          #define _LATD_LD4_POSN                                      0x4
8283:          #define _LATD_LD4_POSITION                                  0x4
8284:          #define _LATD_LD4_SIZE                                      0x1
8285:          #define _LATD_LD4_LENGTH                                    0x1
8286:          #define _LATD_LD4_MASK                                      0x10
8287:          #define _LATD_LD5_POSN                                      0x5
8288:          #define _LATD_LD5_POSITION                                  0x5
8289:          #define _LATD_LD5_SIZE                                      0x1
8290:          #define _LATD_LD5_LENGTH                                    0x1
8291:          #define _LATD_LD5_MASK                                      0x20
8292:          #define _LATD_LD6_POSN                                      0x6
8293:          #define _LATD_LD6_POSITION                                  0x6
8294:          #define _LATD_LD6_SIZE                                      0x1
8295:          #define _LATD_LD6_LENGTH                                    0x1
8296:          #define _LATD_LD6_MASK                                      0x40
8297:          #define _LATD_LD7_POSN                                      0x7
8298:          #define _LATD_LD7_POSITION                                  0x7
8299:          #define _LATD_LD7_SIZE                                      0x1
8300:          #define _LATD_LD7_LENGTH                                    0x1
8301:          #define _LATD_LD7_MASK                                      0x80
8302:          
8303:          // Register: LATE
8304:          extern volatile unsigned char           LATE                @ 0xF8D;
8305:          #ifndef _LIB_BUILD
8306:          asm("LATE equ 0F8Dh");
8307:          #endif
8308:          // bitfield definitions
8309:          typedef union {
8310:              struct {
8311:                  unsigned LATE0                  :1;
8312:                  unsigned LATE1                  :1;
8313:                  unsigned LATE2                  :1;
8314:              };
8315:              struct {
8316:                  unsigned LE0                    :1;
8317:              };
8318:              struct {
8319:                  unsigned                        :1;
8320:                  unsigned LE1                    :1;
8321:              };
8322:              struct {
8323:                  unsigned                        :2;
8324:                  unsigned LE2                    :1;
8325:              };
8326:              struct {
8327:                  unsigned                        :3;
8328:                  unsigned LE3                    :1;
8329:              };
8330:              struct {
8331:                  unsigned                        :4;
8332:                  unsigned LE4                    :1;
8333:              };
8334:              struct {
8335:                  unsigned                        :5;
8336:                  unsigned LE5                    :1;
8337:              };
8338:              struct {
8339:                  unsigned                        :6;
8340:                  unsigned LE6                    :1;
8341:              };
8342:              struct {
8343:                  unsigned                        :7;
8344:                  unsigned LE7                    :1;
8345:              };
8346:          } LATEbits_t;
8347:          extern volatile LATEbits_t LATEbits @ 0xF8D;
8348:          // bitfield macros
8349:          #define _LATE_LATE0_POSN                                    0x0
8350:          #define _LATE_LATE0_POSITION                                0x0
8351:          #define _LATE_LATE0_SIZE                                    0x1
8352:          #define _LATE_LATE0_LENGTH                                  0x1
8353:          #define _LATE_LATE0_MASK                                    0x1
8354:          #define _LATE_LATE1_POSN                                    0x1
8355:          #define _LATE_LATE1_POSITION                                0x1
8356:          #define _LATE_LATE1_SIZE                                    0x1
8357:          #define _LATE_LATE1_LENGTH                                  0x1
8358:          #define _LATE_LATE1_MASK                                    0x2
8359:          #define _LATE_LATE2_POSN                                    0x2
8360:          #define _LATE_LATE2_POSITION                                0x2
8361:          #define _LATE_LATE2_SIZE                                    0x1
8362:          #define _LATE_LATE2_LENGTH                                  0x1
8363:          #define _LATE_LATE2_MASK                                    0x4
8364:          #define _LATE_LE0_POSN                                      0x0
8365:          #define _LATE_LE0_POSITION                                  0x0
8366:          #define _LATE_LE0_SIZE                                      0x1
8367:          #define _LATE_LE0_LENGTH                                    0x1
8368:          #define _LATE_LE0_MASK                                      0x1
8369:          #define _LATE_LE1_POSN                                      0x1
8370:          #define _LATE_LE1_POSITION                                  0x1
8371:          #define _LATE_LE1_SIZE                                      0x1
8372:          #define _LATE_LE1_LENGTH                                    0x1
8373:          #define _LATE_LE1_MASK                                      0x2
8374:          #define _LATE_LE2_POSN                                      0x2
8375:          #define _LATE_LE2_POSITION                                  0x2
8376:          #define _LATE_LE2_SIZE                                      0x1
8377:          #define _LATE_LE2_LENGTH                                    0x1
8378:          #define _LATE_LE2_MASK                                      0x4
8379:          #define _LATE_LE3_POSN                                      0x3
8380:          #define _LATE_LE3_POSITION                                  0x3
8381:          #define _LATE_LE3_SIZE                                      0x1
8382:          #define _LATE_LE3_LENGTH                                    0x1
8383:          #define _LATE_LE3_MASK                                      0x8
8384:          #define _LATE_LE4_POSN                                      0x4
8385:          #define _LATE_LE4_POSITION                                  0x4
8386:          #define _LATE_LE4_SIZE                                      0x1
8387:          #define _LATE_LE4_LENGTH                                    0x1
8388:          #define _LATE_LE4_MASK                                      0x10
8389:          #define _LATE_LE5_POSN                                      0x5
8390:          #define _LATE_LE5_POSITION                                  0x5
8391:          #define _LATE_LE5_SIZE                                      0x1
8392:          #define _LATE_LE5_LENGTH                                    0x1
8393:          #define _LATE_LE5_MASK                                      0x20
8394:          #define _LATE_LE6_POSN                                      0x6
8395:          #define _LATE_LE6_POSITION                                  0x6
8396:          #define _LATE_LE6_SIZE                                      0x1
8397:          #define _LATE_LE6_LENGTH                                    0x1
8398:          #define _LATE_LE6_MASK                                      0x40
8399:          #define _LATE_LE7_POSN                                      0x7
8400:          #define _LATE_LE7_POSITION                                  0x7
8401:          #define _LATE_LE7_SIZE                                      0x1
8402:          #define _LATE_LE7_LENGTH                                    0x1
8403:          #define _LATE_LE7_MASK                                      0x80
8404:          
8405:          // Register: TRISA
8406:          extern volatile unsigned char           TRISA               @ 0xF92;
8407:          #ifndef _LIB_BUILD
8408:          asm("TRISA equ 0F92h");
8409:          #endif
8410:          // aliases
8411:          extern volatile unsigned char           DDRA                @ 0xF92;
8412:          #ifndef _LIB_BUILD
8413:          asm("DDRA equ 0F92h");
8414:          #endif
8415:          // bitfield definitions
8416:          typedef union {
8417:              struct {
8418:                  unsigned TRISA0                 :1;
8419:                  unsigned TRISA1                 :1;
8420:                  unsigned TRISA2                 :1;
8421:                  unsigned TRISA3                 :1;
8422:                  unsigned TRISA4                 :1;
8423:                  unsigned TRISA5                 :1;
8424:                  unsigned TRISA6                 :1;
8425:                  unsigned TRISA7                 :1;
8426:              };
8427:              struct {
8428:                  unsigned RA0                    :1;
8429:                  unsigned RA1                    :1;
8430:                  unsigned RA2                    :1;
8431:                  unsigned RA3                    :1;
8432:                  unsigned RA4                    :1;
8433:                  unsigned RA5                    :1;
8434:                  unsigned RA6                    :1;
8435:                  unsigned RA7                    :1;
8436:              };
8437:          } TRISAbits_t;
8438:          extern volatile TRISAbits_t TRISAbits @ 0xF92;
8439:          // bitfield macros
8440:          #define _TRISA_TRISA0_POSN                                  0x0
8441:          #define _TRISA_TRISA0_POSITION                              0x0
8442:          #define _TRISA_TRISA0_SIZE                                  0x1
8443:          #define _TRISA_TRISA0_LENGTH                                0x1
8444:          #define _TRISA_TRISA0_MASK                                  0x1
8445:          #define _TRISA_TRISA1_POSN                                  0x1
8446:          #define _TRISA_TRISA1_POSITION                              0x1
8447:          #define _TRISA_TRISA1_SIZE                                  0x1
8448:          #define _TRISA_TRISA1_LENGTH                                0x1
8449:          #define _TRISA_TRISA1_MASK                                  0x2
8450:          #define _TRISA_TRISA2_POSN                                  0x2
8451:          #define _TRISA_TRISA2_POSITION                              0x2
8452:          #define _TRISA_TRISA2_SIZE                                  0x1
8453:          #define _TRISA_TRISA2_LENGTH                                0x1
8454:          #define _TRISA_TRISA2_MASK                                  0x4
8455:          #define _TRISA_TRISA3_POSN                                  0x3
8456:          #define _TRISA_TRISA3_POSITION                              0x3
8457:          #define _TRISA_TRISA3_SIZE                                  0x1
8458:          #define _TRISA_TRISA3_LENGTH                                0x1
8459:          #define _TRISA_TRISA3_MASK                                  0x8
8460:          #define _TRISA_TRISA4_POSN                                  0x4
8461:          #define _TRISA_TRISA4_POSITION                              0x4
8462:          #define _TRISA_TRISA4_SIZE                                  0x1
8463:          #define _TRISA_TRISA4_LENGTH                                0x1
8464:          #define _TRISA_TRISA4_MASK                                  0x10
8465:          #define _TRISA_TRISA5_POSN                                  0x5
8466:          #define _TRISA_TRISA5_POSITION                              0x5
8467:          #define _TRISA_TRISA5_SIZE                                  0x1
8468:          #define _TRISA_TRISA5_LENGTH                                0x1
8469:          #define _TRISA_TRISA5_MASK                                  0x20
8470:          #define _TRISA_TRISA6_POSN                                  0x6
8471:          #define _TRISA_TRISA6_POSITION                              0x6
8472:          #define _TRISA_TRISA6_SIZE                                  0x1
8473:          #define _TRISA_TRISA6_LENGTH                                0x1
8474:          #define _TRISA_TRISA6_MASK                                  0x40
8475:          #define _TRISA_TRISA7_POSN                                  0x7
8476:          #define _TRISA_TRISA7_POSITION                              0x7
8477:          #define _TRISA_TRISA7_SIZE                                  0x1
8478:          #define _TRISA_TRISA7_LENGTH                                0x1
8479:          #define _TRISA_TRISA7_MASK                                  0x80
8480:          #define _TRISA_RA0_POSN                                     0x0
8481:          #define _TRISA_RA0_POSITION                                 0x0
8482:          #define _TRISA_RA0_SIZE                                     0x1
8483:          #define _TRISA_RA0_LENGTH                                   0x1
8484:          #define _TRISA_RA0_MASK                                     0x1
8485:          #define _TRISA_RA1_POSN                                     0x1
8486:          #define _TRISA_RA1_POSITION                                 0x1
8487:          #define _TRISA_RA1_SIZE                                     0x1
8488:          #define _TRISA_RA1_LENGTH                                   0x1
8489:          #define _TRISA_RA1_MASK                                     0x2
8490:          #define _TRISA_RA2_POSN                                     0x2
8491:          #define _TRISA_RA2_POSITION                                 0x2
8492:          #define _TRISA_RA2_SIZE                                     0x1
8493:          #define _TRISA_RA2_LENGTH                                   0x1
8494:          #define _TRISA_RA2_MASK                                     0x4
8495:          #define _TRISA_RA3_POSN                                     0x3
8496:          #define _TRISA_RA3_POSITION                                 0x3
8497:          #define _TRISA_RA3_SIZE                                     0x1
8498:          #define _TRISA_RA3_LENGTH                                   0x1
8499:          #define _TRISA_RA3_MASK                                     0x8
8500:          #define _TRISA_RA4_POSN                                     0x4
8501:          #define _TRISA_RA4_POSITION                                 0x4
8502:          #define _TRISA_RA4_SIZE                                     0x1
8503:          #define _TRISA_RA4_LENGTH                                   0x1
8504:          #define _TRISA_RA4_MASK                                     0x10
8505:          #define _TRISA_RA5_POSN                                     0x5
8506:          #define _TRISA_RA5_POSITION                                 0x5
8507:          #define _TRISA_RA5_SIZE                                     0x1
8508:          #define _TRISA_RA5_LENGTH                                   0x1
8509:          #define _TRISA_RA5_MASK                                     0x20
8510:          #define _TRISA_RA6_POSN                                     0x6
8511:          #define _TRISA_RA6_POSITION                                 0x6
8512:          #define _TRISA_RA6_SIZE                                     0x1
8513:          #define _TRISA_RA6_LENGTH                                   0x1
8514:          #define _TRISA_RA6_MASK                                     0x40
8515:          #define _TRISA_RA7_POSN                                     0x7
8516:          #define _TRISA_RA7_POSITION                                 0x7
8517:          #define _TRISA_RA7_SIZE                                     0x1
8518:          #define _TRISA_RA7_LENGTH                                   0x1
8519:          #define _TRISA_RA7_MASK                                     0x80
8520:          // alias bitfield definitions
8521:          typedef union {
8522:              struct {
8523:                  unsigned TRISA0                 :1;
8524:                  unsigned TRISA1                 :1;
8525:                  unsigned TRISA2                 :1;
8526:                  unsigned TRISA3                 :1;
8527:                  unsigned TRISA4                 :1;
8528:                  unsigned TRISA5                 :1;
8529:                  unsigned TRISA6                 :1;
8530:                  unsigned TRISA7                 :1;
8531:              };
8532:              struct {
8533:                  unsigned RA0                    :1;
8534:                  unsigned RA1                    :1;
8535:                  unsigned RA2                    :1;
8536:                  unsigned RA3                    :1;
8537:                  unsigned RA4                    :1;
8538:                  unsigned RA5                    :1;
8539:                  unsigned RA6                    :1;
8540:                  unsigned RA7                    :1;
8541:              };
8542:          } DDRAbits_t;
8543:          extern volatile DDRAbits_t DDRAbits @ 0xF92;
8544:          // bitfield macros
8545:          #define _DDRA_TRISA0_POSN                                   0x0
8546:          #define _DDRA_TRISA0_POSITION                               0x0
8547:          #define _DDRA_TRISA0_SIZE                                   0x1
8548:          #define _DDRA_TRISA0_LENGTH                                 0x1
8549:          #define _DDRA_TRISA0_MASK                                   0x1
8550:          #define _DDRA_TRISA1_POSN                                   0x1
8551:          #define _DDRA_TRISA1_POSITION                               0x1
8552:          #define _DDRA_TRISA1_SIZE                                   0x1
8553:          #define _DDRA_TRISA1_LENGTH                                 0x1
8554:          #define _DDRA_TRISA1_MASK                                   0x2
8555:          #define _DDRA_TRISA2_POSN                                   0x2
8556:          #define _DDRA_TRISA2_POSITION                               0x2
8557:          #define _DDRA_TRISA2_SIZE                                   0x1
8558:          #define _DDRA_TRISA2_LENGTH                                 0x1
8559:          #define _DDRA_TRISA2_MASK                                   0x4
8560:          #define _DDRA_TRISA3_POSN                                   0x3
8561:          #define _DDRA_TRISA3_POSITION                               0x3
8562:          #define _DDRA_TRISA3_SIZE                                   0x1
8563:          #define _DDRA_TRISA3_LENGTH                                 0x1
8564:          #define _DDRA_TRISA3_MASK                                   0x8
8565:          #define _DDRA_TRISA4_POSN                                   0x4
8566:          #define _DDRA_TRISA4_POSITION                               0x4
8567:          #define _DDRA_TRISA4_SIZE                                   0x1
8568:          #define _DDRA_TRISA4_LENGTH                                 0x1
8569:          #define _DDRA_TRISA4_MASK                                   0x10
8570:          #define _DDRA_TRISA5_POSN                                   0x5
8571:          #define _DDRA_TRISA5_POSITION                               0x5
8572:          #define _DDRA_TRISA5_SIZE                                   0x1
8573:          #define _DDRA_TRISA5_LENGTH                                 0x1
8574:          #define _DDRA_TRISA5_MASK                                   0x20
8575:          #define _DDRA_TRISA6_POSN                                   0x6
8576:          #define _DDRA_TRISA6_POSITION                               0x6
8577:          #define _DDRA_TRISA6_SIZE                                   0x1
8578:          #define _DDRA_TRISA6_LENGTH                                 0x1
8579:          #define _DDRA_TRISA6_MASK                                   0x40
8580:          #define _DDRA_TRISA7_POSN                                   0x7
8581:          #define _DDRA_TRISA7_POSITION                               0x7
8582:          #define _DDRA_TRISA7_SIZE                                   0x1
8583:          #define _DDRA_TRISA7_LENGTH                                 0x1
8584:          #define _DDRA_TRISA7_MASK                                   0x80
8585:          #define _DDRA_RA0_POSN                                      0x0
8586:          #define _DDRA_RA0_POSITION                                  0x0
8587:          #define _DDRA_RA0_SIZE                                      0x1
8588:          #define _DDRA_RA0_LENGTH                                    0x1
8589:          #define _DDRA_RA0_MASK                                      0x1
8590:          #define _DDRA_RA1_POSN                                      0x1
8591:          #define _DDRA_RA1_POSITION                                  0x1
8592:          #define _DDRA_RA1_SIZE                                      0x1
8593:          #define _DDRA_RA1_LENGTH                                    0x1
8594:          #define _DDRA_RA1_MASK                                      0x2
8595:          #define _DDRA_RA2_POSN                                      0x2
8596:          #define _DDRA_RA2_POSITION                                  0x2
8597:          #define _DDRA_RA2_SIZE                                      0x1
8598:          #define _DDRA_RA2_LENGTH                                    0x1
8599:          #define _DDRA_RA2_MASK                                      0x4
8600:          #define _DDRA_RA3_POSN                                      0x3
8601:          #define _DDRA_RA3_POSITION                                  0x3
8602:          #define _DDRA_RA3_SIZE                                      0x1
8603:          #define _DDRA_RA3_LENGTH                                    0x1
8604:          #define _DDRA_RA3_MASK                                      0x8
8605:          #define _DDRA_RA4_POSN                                      0x4
8606:          #define _DDRA_RA4_POSITION                                  0x4
8607:          #define _DDRA_RA4_SIZE                                      0x1
8608:          #define _DDRA_RA4_LENGTH                                    0x1
8609:          #define _DDRA_RA4_MASK                                      0x10
8610:          #define _DDRA_RA5_POSN                                      0x5
8611:          #define _DDRA_RA5_POSITION                                  0x5
8612:          #define _DDRA_RA5_SIZE                                      0x1
8613:          #define _DDRA_RA5_LENGTH                                    0x1
8614:          #define _DDRA_RA5_MASK                                      0x20
8615:          #define _DDRA_RA6_POSN                                      0x6
8616:          #define _DDRA_RA6_POSITION                                  0x6
8617:          #define _DDRA_RA6_SIZE                                      0x1
8618:          #define _DDRA_RA6_LENGTH                                    0x1
8619:          #define _DDRA_RA6_MASK                                      0x40
8620:          #define _DDRA_RA7_POSN                                      0x7
8621:          #define _DDRA_RA7_POSITION                                  0x7
8622:          #define _DDRA_RA7_SIZE                                      0x1
8623:          #define _DDRA_RA7_LENGTH                                    0x1
8624:          #define _DDRA_RA7_MASK                                      0x80
8625:          
8626:          // Register: TRISB
8627:          extern volatile unsigned char           TRISB               @ 0xF93;
8628:          #ifndef _LIB_BUILD
8629:          asm("TRISB equ 0F93h");
8630:          #endif
8631:          // aliases
8632:          extern volatile unsigned char           DDRB                @ 0xF93;
8633:          #ifndef _LIB_BUILD
8634:          asm("DDRB equ 0F93h");
8635:          #endif
8636:          // bitfield definitions
8637:          typedef union {
8638:              struct {
8639:                  unsigned TRISB0                 :1;
8640:                  unsigned TRISB1                 :1;
8641:                  unsigned TRISB2                 :1;
8642:                  unsigned TRISB3                 :1;
8643:                  unsigned TRISB4                 :1;
8644:                  unsigned TRISB5                 :1;
8645:                  unsigned TRISB6                 :1;
8646:                  unsigned TRISB7                 :1;
8647:              };
8648:              struct {
8649:                  unsigned RB0                    :1;
8650:                  unsigned RB1                    :1;
8651:                  unsigned RB2                    :1;
8652:                  unsigned RB3                    :1;
8653:                  unsigned RB4                    :1;
8654:                  unsigned RB5                    :1;
8655:                  unsigned RB6                    :1;
8656:                  unsigned RB7                    :1;
8657:              };
8658:          } TRISBbits_t;
8659:          extern volatile TRISBbits_t TRISBbits @ 0xF93;
8660:          // bitfield macros
8661:          #define _TRISB_TRISB0_POSN                                  0x0
8662:          #define _TRISB_TRISB0_POSITION                              0x0
8663:          #define _TRISB_TRISB0_SIZE                                  0x1
8664:          #define _TRISB_TRISB0_LENGTH                                0x1
8665:          #define _TRISB_TRISB0_MASK                                  0x1
8666:          #define _TRISB_TRISB1_POSN                                  0x1
8667:          #define _TRISB_TRISB1_POSITION                              0x1
8668:          #define _TRISB_TRISB1_SIZE                                  0x1
8669:          #define _TRISB_TRISB1_LENGTH                                0x1
8670:          #define _TRISB_TRISB1_MASK                                  0x2
8671:          #define _TRISB_TRISB2_POSN                                  0x2
8672:          #define _TRISB_TRISB2_POSITION                              0x2
8673:          #define _TRISB_TRISB2_SIZE                                  0x1
8674:          #define _TRISB_TRISB2_LENGTH                                0x1
8675:          #define _TRISB_TRISB2_MASK                                  0x4
8676:          #define _TRISB_TRISB3_POSN                                  0x3
8677:          #define _TRISB_TRISB3_POSITION                              0x3
8678:          #define _TRISB_TRISB3_SIZE                                  0x1
8679:          #define _TRISB_TRISB3_LENGTH                                0x1
8680:          #define _TRISB_TRISB3_MASK                                  0x8
8681:          #define _TRISB_TRISB4_POSN                                  0x4
8682:          #define _TRISB_TRISB4_POSITION                              0x4
8683:          #define _TRISB_TRISB4_SIZE                                  0x1
8684:          #define _TRISB_TRISB4_LENGTH                                0x1
8685:          #define _TRISB_TRISB4_MASK                                  0x10
8686:          #define _TRISB_TRISB5_POSN                                  0x5
8687:          #define _TRISB_TRISB5_POSITION                              0x5
8688:          #define _TRISB_TRISB5_SIZE                                  0x1
8689:          #define _TRISB_TRISB5_LENGTH                                0x1
8690:          #define _TRISB_TRISB5_MASK                                  0x20
8691:          #define _TRISB_TRISB6_POSN                                  0x6
8692:          #define _TRISB_TRISB6_POSITION                              0x6
8693:          #define _TRISB_TRISB6_SIZE                                  0x1
8694:          #define _TRISB_TRISB6_LENGTH                                0x1
8695:          #define _TRISB_TRISB6_MASK                                  0x40
8696:          #define _TRISB_TRISB7_POSN                                  0x7
8697:          #define _TRISB_TRISB7_POSITION                              0x7
8698:          #define _TRISB_TRISB7_SIZE                                  0x1
8699:          #define _TRISB_TRISB7_LENGTH                                0x1
8700:          #define _TRISB_TRISB7_MASK                                  0x80
8701:          #define _TRISB_RB0_POSN                                     0x0
8702:          #define _TRISB_RB0_POSITION                                 0x0
8703:          #define _TRISB_RB0_SIZE                                     0x1
8704:          #define _TRISB_RB0_LENGTH                                   0x1
8705:          #define _TRISB_RB0_MASK                                     0x1
8706:          #define _TRISB_RB1_POSN                                     0x1
8707:          #define _TRISB_RB1_POSITION                                 0x1
8708:          #define _TRISB_RB1_SIZE                                     0x1
8709:          #define _TRISB_RB1_LENGTH                                   0x1
8710:          #define _TRISB_RB1_MASK                                     0x2
8711:          #define _TRISB_RB2_POSN                                     0x2
8712:          #define _TRISB_RB2_POSITION                                 0x2
8713:          #define _TRISB_RB2_SIZE                                     0x1
8714:          #define _TRISB_RB2_LENGTH                                   0x1
8715:          #define _TRISB_RB2_MASK                                     0x4
8716:          #define _TRISB_RB3_POSN                                     0x3
8717:          #define _TRISB_RB3_POSITION                                 0x3
8718:          #define _TRISB_RB3_SIZE                                     0x1
8719:          #define _TRISB_RB3_LENGTH                                   0x1
8720:          #define _TRISB_RB3_MASK                                     0x8
8721:          #define _TRISB_RB4_POSN                                     0x4
8722:          #define _TRISB_RB4_POSITION                                 0x4
8723:          #define _TRISB_RB4_SIZE                                     0x1
8724:          #define _TRISB_RB4_LENGTH                                   0x1
8725:          #define _TRISB_RB4_MASK                                     0x10
8726:          #define _TRISB_RB5_POSN                                     0x5
8727:          #define _TRISB_RB5_POSITION                                 0x5
8728:          #define _TRISB_RB5_SIZE                                     0x1
8729:          #define _TRISB_RB5_LENGTH                                   0x1
8730:          #define _TRISB_RB5_MASK                                     0x20
8731:          #define _TRISB_RB6_POSN                                     0x6
8732:          #define _TRISB_RB6_POSITION                                 0x6
8733:          #define _TRISB_RB6_SIZE                                     0x1
8734:          #define _TRISB_RB6_LENGTH                                   0x1
8735:          #define _TRISB_RB6_MASK                                     0x40
8736:          #define _TRISB_RB7_POSN                                     0x7
8737:          #define _TRISB_RB7_POSITION                                 0x7
8738:          #define _TRISB_RB7_SIZE                                     0x1
8739:          #define _TRISB_RB7_LENGTH                                   0x1
8740:          #define _TRISB_RB7_MASK                                     0x80
8741:          // alias bitfield definitions
8742:          typedef union {
8743:              struct {
8744:                  unsigned TRISB0                 :1;
8745:                  unsigned TRISB1                 :1;
8746:                  unsigned TRISB2                 :1;
8747:                  unsigned TRISB3                 :1;
8748:                  unsigned TRISB4                 :1;
8749:                  unsigned TRISB5                 :1;
8750:                  unsigned TRISB6                 :1;
8751:                  unsigned TRISB7                 :1;
8752:              };
8753:              struct {
8754:                  unsigned RB0                    :1;
8755:                  unsigned RB1                    :1;
8756:                  unsigned RB2                    :1;
8757:                  unsigned RB3                    :1;
8758:                  unsigned RB4                    :1;
8759:                  unsigned RB5                    :1;
8760:                  unsigned RB6                    :1;
8761:                  unsigned RB7                    :1;
8762:              };
8763:          } DDRBbits_t;
8764:          extern volatile DDRBbits_t DDRBbits @ 0xF93;
8765:          // bitfield macros
8766:          #define _DDRB_TRISB0_POSN                                   0x0
8767:          #define _DDRB_TRISB0_POSITION                               0x0
8768:          #define _DDRB_TRISB0_SIZE                                   0x1
8769:          #define _DDRB_TRISB0_LENGTH                                 0x1
8770:          #define _DDRB_TRISB0_MASK                                   0x1
8771:          #define _DDRB_TRISB1_POSN                                   0x1
8772:          #define _DDRB_TRISB1_POSITION                               0x1
8773:          #define _DDRB_TRISB1_SIZE                                   0x1
8774:          #define _DDRB_TRISB1_LENGTH                                 0x1
8775:          #define _DDRB_TRISB1_MASK                                   0x2
8776:          #define _DDRB_TRISB2_POSN                                   0x2
8777:          #define _DDRB_TRISB2_POSITION                               0x2
8778:          #define _DDRB_TRISB2_SIZE                                   0x1
8779:          #define _DDRB_TRISB2_LENGTH                                 0x1
8780:          #define _DDRB_TRISB2_MASK                                   0x4
8781:          #define _DDRB_TRISB3_POSN                                   0x3
8782:          #define _DDRB_TRISB3_POSITION                               0x3
8783:          #define _DDRB_TRISB3_SIZE                                   0x1
8784:          #define _DDRB_TRISB3_LENGTH                                 0x1
8785:          #define _DDRB_TRISB3_MASK                                   0x8
8786:          #define _DDRB_TRISB4_POSN                                   0x4
8787:          #define _DDRB_TRISB4_POSITION                               0x4
8788:          #define _DDRB_TRISB4_SIZE                                   0x1
8789:          #define _DDRB_TRISB4_LENGTH                                 0x1
8790:          #define _DDRB_TRISB4_MASK                                   0x10
8791:          #define _DDRB_TRISB5_POSN                                   0x5
8792:          #define _DDRB_TRISB5_POSITION                               0x5
8793:          #define _DDRB_TRISB5_SIZE                                   0x1
8794:          #define _DDRB_TRISB5_LENGTH                                 0x1
8795:          #define _DDRB_TRISB5_MASK                                   0x20
8796:          #define _DDRB_TRISB6_POSN                                   0x6
8797:          #define _DDRB_TRISB6_POSITION                               0x6
8798:          #define _DDRB_TRISB6_SIZE                                   0x1
8799:          #define _DDRB_TRISB6_LENGTH                                 0x1
8800:          #define _DDRB_TRISB6_MASK                                   0x40
8801:          #define _DDRB_TRISB7_POSN                                   0x7
8802:          #define _DDRB_TRISB7_POSITION                               0x7
8803:          #define _DDRB_TRISB7_SIZE                                   0x1
8804:          #define _DDRB_TRISB7_LENGTH                                 0x1
8805:          #define _DDRB_TRISB7_MASK                                   0x80
8806:          #define _DDRB_RB0_POSN                                      0x0
8807:          #define _DDRB_RB0_POSITION                                  0x0
8808:          #define _DDRB_RB0_SIZE                                      0x1
8809:          #define _DDRB_RB0_LENGTH                                    0x1
8810:          #define _DDRB_RB0_MASK                                      0x1
8811:          #define _DDRB_RB1_POSN                                      0x1
8812:          #define _DDRB_RB1_POSITION                                  0x1
8813:          #define _DDRB_RB1_SIZE                                      0x1
8814:          #define _DDRB_RB1_LENGTH                                    0x1
8815:          #define _DDRB_RB1_MASK                                      0x2
8816:          #define _DDRB_RB2_POSN                                      0x2
8817:          #define _DDRB_RB2_POSITION                                  0x2
8818:          #define _DDRB_RB2_SIZE                                      0x1
8819:          #define _DDRB_RB2_LENGTH                                    0x1
8820:          #define _DDRB_RB2_MASK                                      0x4
8821:          #define _DDRB_RB3_POSN                                      0x3
8822:          #define _DDRB_RB3_POSITION                                  0x3
8823:          #define _DDRB_RB3_SIZE                                      0x1
8824:          #define _DDRB_RB3_LENGTH                                    0x1
8825:          #define _DDRB_RB3_MASK                                      0x8
8826:          #define _DDRB_RB4_POSN                                      0x4
8827:          #define _DDRB_RB4_POSITION                                  0x4
8828:          #define _DDRB_RB4_SIZE                                      0x1
8829:          #define _DDRB_RB4_LENGTH                                    0x1
8830:          #define _DDRB_RB4_MASK                                      0x10
8831:          #define _DDRB_RB5_POSN                                      0x5
8832:          #define _DDRB_RB5_POSITION                                  0x5
8833:          #define _DDRB_RB5_SIZE                                      0x1
8834:          #define _DDRB_RB5_LENGTH                                    0x1
8835:          #define _DDRB_RB5_MASK                                      0x20
8836:          #define _DDRB_RB6_POSN                                      0x6
8837:          #define _DDRB_RB6_POSITION                                  0x6
8838:          #define _DDRB_RB6_SIZE                                      0x1
8839:          #define _DDRB_RB6_LENGTH                                    0x1
8840:          #define _DDRB_RB6_MASK                                      0x40
8841:          #define _DDRB_RB7_POSN                                      0x7
8842:          #define _DDRB_RB7_POSITION                                  0x7
8843:          #define _DDRB_RB7_SIZE                                      0x1
8844:          #define _DDRB_RB7_LENGTH                                    0x1
8845:          #define _DDRB_RB7_MASK                                      0x80
8846:          
8847:          // Register: TRISC
8848:          extern volatile unsigned char           TRISC               @ 0xF94;
8849:          #ifndef _LIB_BUILD
8850:          asm("TRISC equ 0F94h");
8851:          #endif
8852:          // aliases
8853:          extern volatile unsigned char           DDRC                @ 0xF94;
8854:          #ifndef _LIB_BUILD
8855:          asm("DDRC equ 0F94h");
8856:          #endif
8857:          // bitfield definitions
8858:          typedef union {
8859:              struct {
8860:                  unsigned TRISC0                 :1;
8861:                  unsigned TRISC1                 :1;
8862:                  unsigned TRISC2                 :1;
8863:                  unsigned TRISC3                 :1;
8864:                  unsigned TRISC4                 :1;
8865:                  unsigned TRISC5                 :1;
8866:                  unsigned TRISC6                 :1;
8867:                  unsigned TRISC7                 :1;
8868:              };
8869:              struct {
8870:                  unsigned RC0                    :1;
8871:                  unsigned RC1                    :1;
8872:                  unsigned RC2                    :1;
8873:                  unsigned RC3                    :1;
8874:                  unsigned RC4                    :1;
8875:                  unsigned RC5                    :1;
8876:                  unsigned RC6                    :1;
8877:                  unsigned RC7                    :1;
8878:              };
8879:          } TRISCbits_t;
8880:          extern volatile TRISCbits_t TRISCbits @ 0xF94;
8881:          // bitfield macros
8882:          #define _TRISC_TRISC0_POSN                                  0x0
8883:          #define _TRISC_TRISC0_POSITION                              0x0
8884:          #define _TRISC_TRISC0_SIZE                                  0x1
8885:          #define _TRISC_TRISC0_LENGTH                                0x1
8886:          #define _TRISC_TRISC0_MASK                                  0x1
8887:          #define _TRISC_TRISC1_POSN                                  0x1
8888:          #define _TRISC_TRISC1_POSITION                              0x1
8889:          #define _TRISC_TRISC1_SIZE                                  0x1
8890:          #define _TRISC_TRISC1_LENGTH                                0x1
8891:          #define _TRISC_TRISC1_MASK                                  0x2
8892:          #define _TRISC_TRISC2_POSN                                  0x2
8893:          #define _TRISC_TRISC2_POSITION                              0x2
8894:          #define _TRISC_TRISC2_SIZE                                  0x1
8895:          #define _TRISC_TRISC2_LENGTH                                0x1
8896:          #define _TRISC_TRISC2_MASK                                  0x4
8897:          #define _TRISC_TRISC3_POSN                                  0x3
8898:          #define _TRISC_TRISC3_POSITION                              0x3
8899:          #define _TRISC_TRISC3_SIZE                                  0x1
8900:          #define _TRISC_TRISC3_LENGTH                                0x1
8901:          #define _TRISC_TRISC3_MASK                                  0x8
8902:          #define _TRISC_TRISC4_POSN                                  0x4
8903:          #define _TRISC_TRISC4_POSITION                              0x4
8904:          #define _TRISC_TRISC4_SIZE                                  0x1
8905:          #define _TRISC_TRISC4_LENGTH                                0x1
8906:          #define _TRISC_TRISC4_MASK                                  0x10
8907:          #define _TRISC_TRISC5_POSN                                  0x5
8908:          #define _TRISC_TRISC5_POSITION                              0x5
8909:          #define _TRISC_TRISC5_SIZE                                  0x1
8910:          #define _TRISC_TRISC5_LENGTH                                0x1
8911:          #define _TRISC_TRISC5_MASK                                  0x20
8912:          #define _TRISC_TRISC6_POSN                                  0x6
8913:          #define _TRISC_TRISC6_POSITION                              0x6
8914:          #define _TRISC_TRISC6_SIZE                                  0x1
8915:          #define _TRISC_TRISC6_LENGTH                                0x1
8916:          #define _TRISC_TRISC6_MASK                                  0x40
8917:          #define _TRISC_TRISC7_POSN                                  0x7
8918:          #define _TRISC_TRISC7_POSITION                              0x7
8919:          #define _TRISC_TRISC7_SIZE                                  0x1
8920:          #define _TRISC_TRISC7_LENGTH                                0x1
8921:          #define _TRISC_TRISC7_MASK                                  0x80
8922:          #define _TRISC_RC0_POSN                                     0x0
8923:          #define _TRISC_RC0_POSITION                                 0x0
8924:          #define _TRISC_RC0_SIZE                                     0x1
8925:          #define _TRISC_RC0_LENGTH                                   0x1
8926:          #define _TRISC_RC0_MASK                                     0x1
8927:          #define _TRISC_RC1_POSN                                     0x1
8928:          #define _TRISC_RC1_POSITION                                 0x1
8929:          #define _TRISC_RC1_SIZE                                     0x1
8930:          #define _TRISC_RC1_LENGTH                                   0x1
8931:          #define _TRISC_RC1_MASK                                     0x2
8932:          #define _TRISC_RC2_POSN                                     0x2
8933:          #define _TRISC_RC2_POSITION                                 0x2
8934:          #define _TRISC_RC2_SIZE                                     0x1
8935:          #define _TRISC_RC2_LENGTH                                   0x1
8936:          #define _TRISC_RC2_MASK                                     0x4
8937:          #define _TRISC_RC3_POSN                                     0x3
8938:          #define _TRISC_RC3_POSITION                                 0x3
8939:          #define _TRISC_RC3_SIZE                                     0x1
8940:          #define _TRISC_RC3_LENGTH                                   0x1
8941:          #define _TRISC_RC3_MASK                                     0x8
8942:          #define _TRISC_RC4_POSN                                     0x4
8943:          #define _TRISC_RC4_POSITION                                 0x4
8944:          #define _TRISC_RC4_SIZE                                     0x1
8945:          #define _TRISC_RC4_LENGTH                                   0x1
8946:          #define _TRISC_RC4_MASK                                     0x10
8947:          #define _TRISC_RC5_POSN                                     0x5
8948:          #define _TRISC_RC5_POSITION                                 0x5
8949:          #define _TRISC_RC5_SIZE                                     0x1
8950:          #define _TRISC_RC5_LENGTH                                   0x1
8951:          #define _TRISC_RC5_MASK                                     0x20
8952:          #define _TRISC_RC6_POSN                                     0x6
8953:          #define _TRISC_RC6_POSITION                                 0x6
8954:          #define _TRISC_RC6_SIZE                                     0x1
8955:          #define _TRISC_RC6_LENGTH                                   0x1
8956:          #define _TRISC_RC6_MASK                                     0x40
8957:          #define _TRISC_RC7_POSN                                     0x7
8958:          #define _TRISC_RC7_POSITION                                 0x7
8959:          #define _TRISC_RC7_SIZE                                     0x1
8960:          #define _TRISC_RC7_LENGTH                                   0x1
8961:          #define _TRISC_RC7_MASK                                     0x80
8962:          // alias bitfield definitions
8963:          typedef union {
8964:              struct {
8965:                  unsigned TRISC0                 :1;
8966:                  unsigned TRISC1                 :1;
8967:                  unsigned TRISC2                 :1;
8968:                  unsigned TRISC3                 :1;
8969:                  unsigned TRISC4                 :1;
8970:                  unsigned TRISC5                 :1;
8971:                  unsigned TRISC6                 :1;
8972:                  unsigned TRISC7                 :1;
8973:              };
8974:              struct {
8975:                  unsigned RC0                    :1;
8976:                  unsigned RC1                    :1;
8977:                  unsigned RC2                    :1;
8978:                  unsigned RC3                    :1;
8979:                  unsigned RC4                    :1;
8980:                  unsigned RC5                    :1;
8981:                  unsigned RC6                    :1;
8982:                  unsigned RC7                    :1;
8983:              };
8984:          } DDRCbits_t;
8985:          extern volatile DDRCbits_t DDRCbits @ 0xF94;
8986:          // bitfield macros
8987:          #define _DDRC_TRISC0_POSN                                   0x0
8988:          #define _DDRC_TRISC0_POSITION                               0x0
8989:          #define _DDRC_TRISC0_SIZE                                   0x1
8990:          #define _DDRC_TRISC0_LENGTH                                 0x1
8991:          #define _DDRC_TRISC0_MASK                                   0x1
8992:          #define _DDRC_TRISC1_POSN                                   0x1
8993:          #define _DDRC_TRISC1_POSITION                               0x1
8994:          #define _DDRC_TRISC1_SIZE                                   0x1
8995:          #define _DDRC_TRISC1_LENGTH                                 0x1
8996:          #define _DDRC_TRISC1_MASK                                   0x2
8997:          #define _DDRC_TRISC2_POSN                                   0x2
8998:          #define _DDRC_TRISC2_POSITION                               0x2
8999:          #define _DDRC_TRISC2_SIZE                                   0x1
9000:          #define _DDRC_TRISC2_LENGTH                                 0x1
9001:          #define _DDRC_TRISC2_MASK                                   0x4
9002:          #define _DDRC_TRISC3_POSN                                   0x3
9003:          #define _DDRC_TRISC3_POSITION                               0x3
9004:          #define _DDRC_TRISC3_SIZE                                   0x1
9005:          #define _DDRC_TRISC3_LENGTH                                 0x1
9006:          #define _DDRC_TRISC3_MASK                                   0x8
9007:          #define _DDRC_TRISC4_POSN                                   0x4
9008:          #define _DDRC_TRISC4_POSITION                               0x4
9009:          #define _DDRC_TRISC4_SIZE                                   0x1
9010:          #define _DDRC_TRISC4_LENGTH                                 0x1
9011:          #define _DDRC_TRISC4_MASK                                   0x10
9012:          #define _DDRC_TRISC5_POSN                                   0x5
9013:          #define _DDRC_TRISC5_POSITION                               0x5
9014:          #define _DDRC_TRISC5_SIZE                                   0x1
9015:          #define _DDRC_TRISC5_LENGTH                                 0x1
9016:          #define _DDRC_TRISC5_MASK                                   0x20
9017:          #define _DDRC_TRISC6_POSN                                   0x6
9018:          #define _DDRC_TRISC6_POSITION                               0x6
9019:          #define _DDRC_TRISC6_SIZE                                   0x1
9020:          #define _DDRC_TRISC6_LENGTH                                 0x1
9021:          #define _DDRC_TRISC6_MASK                                   0x40
9022:          #define _DDRC_TRISC7_POSN                                   0x7
9023:          #define _DDRC_TRISC7_POSITION                               0x7
9024:          #define _DDRC_TRISC7_SIZE                                   0x1
9025:          #define _DDRC_TRISC7_LENGTH                                 0x1
9026:          #define _DDRC_TRISC7_MASK                                   0x80
9027:          #define _DDRC_RC0_POSN                                      0x0
9028:          #define _DDRC_RC0_POSITION                                  0x0
9029:          #define _DDRC_RC0_SIZE                                      0x1
9030:          #define _DDRC_RC0_LENGTH                                    0x1
9031:          #define _DDRC_RC0_MASK                                      0x1
9032:          #define _DDRC_RC1_POSN                                      0x1
9033:          #define _DDRC_RC1_POSITION                                  0x1
9034:          #define _DDRC_RC1_SIZE                                      0x1
9035:          #define _DDRC_RC1_LENGTH                                    0x1
9036:          #define _DDRC_RC1_MASK                                      0x2
9037:          #define _DDRC_RC2_POSN                                      0x2
9038:          #define _DDRC_RC2_POSITION                                  0x2
9039:          #define _DDRC_RC2_SIZE                                      0x1
9040:          #define _DDRC_RC2_LENGTH                                    0x1
9041:          #define _DDRC_RC2_MASK                                      0x4
9042:          #define _DDRC_RC3_POSN                                      0x3
9043:          #define _DDRC_RC3_POSITION                                  0x3
9044:          #define _DDRC_RC3_SIZE                                      0x1
9045:          #define _DDRC_RC3_LENGTH                                    0x1
9046:          #define _DDRC_RC3_MASK                                      0x8
9047:          #define _DDRC_RC4_POSN                                      0x4
9048:          #define _DDRC_RC4_POSITION                                  0x4
9049:          #define _DDRC_RC4_SIZE                                      0x1
9050:          #define _DDRC_RC4_LENGTH                                    0x1
9051:          #define _DDRC_RC4_MASK                                      0x10
9052:          #define _DDRC_RC5_POSN                                      0x5
9053:          #define _DDRC_RC5_POSITION                                  0x5
9054:          #define _DDRC_RC5_SIZE                                      0x1
9055:          #define _DDRC_RC5_LENGTH                                    0x1
9056:          #define _DDRC_RC5_MASK                                      0x20
9057:          #define _DDRC_RC6_POSN                                      0x6
9058:          #define _DDRC_RC6_POSITION                                  0x6
9059:          #define _DDRC_RC6_SIZE                                      0x1
9060:          #define _DDRC_RC6_LENGTH                                    0x1
9061:          #define _DDRC_RC6_MASK                                      0x40
9062:          #define _DDRC_RC7_POSN                                      0x7
9063:          #define _DDRC_RC7_POSITION                                  0x7
9064:          #define _DDRC_RC7_SIZE                                      0x1
9065:          #define _DDRC_RC7_LENGTH                                    0x1
9066:          #define _DDRC_RC7_MASK                                      0x80
9067:          
9068:          // Register: TRISD
9069:          extern volatile unsigned char           TRISD               @ 0xF95;
9070:          #ifndef _LIB_BUILD
9071:          asm("TRISD equ 0F95h");
9072:          #endif
9073:          // aliases
9074:          extern volatile unsigned char           DDRD                @ 0xF95;
9075:          #ifndef _LIB_BUILD
9076:          asm("DDRD equ 0F95h");
9077:          #endif
9078:          // bitfield definitions
9079:          typedef union {
9080:              struct {
9081:                  unsigned TRISD0                 :1;
9082:                  unsigned TRISD1                 :1;
9083:                  unsigned TRISD2                 :1;
9084:                  unsigned TRISD3                 :1;
9085:                  unsigned TRISD4                 :1;
9086:                  unsigned TRISD5                 :1;
9087:                  unsigned TRISD6                 :1;
9088:                  unsigned TRISD7                 :1;
9089:              };
9090:              struct {
9091:                  unsigned RD0                    :1;
9092:                  unsigned RD1                    :1;
9093:                  unsigned RD2                    :1;
9094:                  unsigned RD3                    :1;
9095:                  unsigned RD4                    :1;
9096:                  unsigned RD5                    :1;
9097:                  unsigned RD6                    :1;
9098:                  unsigned RD7                    :1;
9099:              };
9100:          } TRISDbits_t;
9101:          extern volatile TRISDbits_t TRISDbits @ 0xF95;
9102:          // bitfield macros
9103:          #define _TRISD_TRISD0_POSN                                  0x0
9104:          #define _TRISD_TRISD0_POSITION                              0x0
9105:          #define _TRISD_TRISD0_SIZE                                  0x1
9106:          #define _TRISD_TRISD0_LENGTH                                0x1
9107:          #define _TRISD_TRISD0_MASK                                  0x1
9108:          #define _TRISD_TRISD1_POSN                                  0x1
9109:          #define _TRISD_TRISD1_POSITION                              0x1
9110:          #define _TRISD_TRISD1_SIZE                                  0x1
9111:          #define _TRISD_TRISD1_LENGTH                                0x1
9112:          #define _TRISD_TRISD1_MASK                                  0x2
9113:          #define _TRISD_TRISD2_POSN                                  0x2
9114:          #define _TRISD_TRISD2_POSITION                              0x2
9115:          #define _TRISD_TRISD2_SIZE                                  0x1
9116:          #define _TRISD_TRISD2_LENGTH                                0x1
9117:          #define _TRISD_TRISD2_MASK                                  0x4
9118:          #define _TRISD_TRISD3_POSN                                  0x3
9119:          #define _TRISD_TRISD3_POSITION                              0x3
9120:          #define _TRISD_TRISD3_SIZE                                  0x1
9121:          #define _TRISD_TRISD3_LENGTH                                0x1
9122:          #define _TRISD_TRISD3_MASK                                  0x8
9123:          #define _TRISD_TRISD4_POSN                                  0x4
9124:          #define _TRISD_TRISD4_POSITION                              0x4
9125:          #define _TRISD_TRISD4_SIZE                                  0x1
9126:          #define _TRISD_TRISD4_LENGTH                                0x1
9127:          #define _TRISD_TRISD4_MASK                                  0x10
9128:          #define _TRISD_TRISD5_POSN                                  0x5
9129:          #define _TRISD_TRISD5_POSITION                              0x5
9130:          #define _TRISD_TRISD5_SIZE                                  0x1
9131:          #define _TRISD_TRISD5_LENGTH                                0x1
9132:          #define _TRISD_TRISD5_MASK                                  0x20
9133:          #define _TRISD_TRISD6_POSN                                  0x6
9134:          #define _TRISD_TRISD6_POSITION                              0x6
9135:          #define _TRISD_TRISD6_SIZE                                  0x1
9136:          #define _TRISD_TRISD6_LENGTH                                0x1
9137:          #define _TRISD_TRISD6_MASK                                  0x40
9138:          #define _TRISD_TRISD7_POSN                                  0x7
9139:          #define _TRISD_TRISD7_POSITION                              0x7
9140:          #define _TRISD_TRISD7_SIZE                                  0x1
9141:          #define _TRISD_TRISD7_LENGTH                                0x1
9142:          #define _TRISD_TRISD7_MASK                                  0x80
9143:          #define _TRISD_RD0_POSN                                     0x0
9144:          #define _TRISD_RD0_POSITION                                 0x0
9145:          #define _TRISD_RD0_SIZE                                     0x1
9146:          #define _TRISD_RD0_LENGTH                                   0x1
9147:          #define _TRISD_RD0_MASK                                     0x1
9148:          #define _TRISD_RD1_POSN                                     0x1
9149:          #define _TRISD_RD1_POSITION                                 0x1
9150:          #define _TRISD_RD1_SIZE                                     0x1
9151:          #define _TRISD_RD1_LENGTH                                   0x1
9152:          #define _TRISD_RD1_MASK                                     0x2
9153:          #define _TRISD_RD2_POSN                                     0x2
9154:          #define _TRISD_RD2_POSITION                                 0x2
9155:          #define _TRISD_RD2_SIZE                                     0x1
9156:          #define _TRISD_RD2_LENGTH                                   0x1
9157:          #define _TRISD_RD2_MASK                                     0x4
9158:          #define _TRISD_RD3_POSN                                     0x3
9159:          #define _TRISD_RD3_POSITION                                 0x3
9160:          #define _TRISD_RD3_SIZE                                     0x1
9161:          #define _TRISD_RD3_LENGTH                                   0x1
9162:          #define _TRISD_RD3_MASK                                     0x8
9163:          #define _TRISD_RD4_POSN                                     0x4
9164:          #define _TRISD_RD4_POSITION                                 0x4
9165:          #define _TRISD_RD4_SIZE                                     0x1
9166:          #define _TRISD_RD4_LENGTH                                   0x1
9167:          #define _TRISD_RD4_MASK                                     0x10
9168:          #define _TRISD_RD5_POSN                                     0x5
9169:          #define _TRISD_RD5_POSITION                                 0x5
9170:          #define _TRISD_RD5_SIZE                                     0x1
9171:          #define _TRISD_RD5_LENGTH                                   0x1
9172:          #define _TRISD_RD5_MASK                                     0x20
9173:          #define _TRISD_RD6_POSN                                     0x6
9174:          #define _TRISD_RD6_POSITION                                 0x6
9175:          #define _TRISD_RD6_SIZE                                     0x1
9176:          #define _TRISD_RD6_LENGTH                                   0x1
9177:          #define _TRISD_RD6_MASK                                     0x40
9178:          #define _TRISD_RD7_POSN                                     0x7
9179:          #define _TRISD_RD7_POSITION                                 0x7
9180:          #define _TRISD_RD7_SIZE                                     0x1
9181:          #define _TRISD_RD7_LENGTH                                   0x1
9182:          #define _TRISD_RD7_MASK                                     0x80
9183:          // alias bitfield definitions
9184:          typedef union {
9185:              struct {
9186:                  unsigned TRISD0                 :1;
9187:                  unsigned TRISD1                 :1;
9188:                  unsigned TRISD2                 :1;
9189:                  unsigned TRISD3                 :1;
9190:                  unsigned TRISD4                 :1;
9191:                  unsigned TRISD5                 :1;
9192:                  unsigned TRISD6                 :1;
9193:                  unsigned TRISD7                 :1;
9194:              };
9195:              struct {
9196:                  unsigned RD0                    :1;
9197:                  unsigned RD1                    :1;
9198:                  unsigned RD2                    :1;
9199:                  unsigned RD3                    :1;
9200:                  unsigned RD4                    :1;
9201:                  unsigned RD5                    :1;
9202:                  unsigned RD6                    :1;
9203:                  unsigned RD7                    :1;
9204:              };
9205:          } DDRDbits_t;
9206:          extern volatile DDRDbits_t DDRDbits @ 0xF95;
9207:          // bitfield macros
9208:          #define _DDRD_TRISD0_POSN                                   0x0
9209:          #define _DDRD_TRISD0_POSITION                               0x0
9210:          #define _DDRD_TRISD0_SIZE                                   0x1
9211:          #define _DDRD_TRISD0_LENGTH                                 0x1
9212:          #define _DDRD_TRISD0_MASK                                   0x1
9213:          #define _DDRD_TRISD1_POSN                                   0x1
9214:          #define _DDRD_TRISD1_POSITION                               0x1
9215:          #define _DDRD_TRISD1_SIZE                                   0x1
9216:          #define _DDRD_TRISD1_LENGTH                                 0x1
9217:          #define _DDRD_TRISD1_MASK                                   0x2
9218:          #define _DDRD_TRISD2_POSN                                   0x2
9219:          #define _DDRD_TRISD2_POSITION                               0x2
9220:          #define _DDRD_TRISD2_SIZE                                   0x1
9221:          #define _DDRD_TRISD2_LENGTH                                 0x1
9222:          #define _DDRD_TRISD2_MASK                                   0x4
9223:          #define _DDRD_TRISD3_POSN                                   0x3
9224:          #define _DDRD_TRISD3_POSITION                               0x3
9225:          #define _DDRD_TRISD3_SIZE                                   0x1
9226:          #define _DDRD_TRISD3_LENGTH                                 0x1
9227:          #define _DDRD_TRISD3_MASK                                   0x8
9228:          #define _DDRD_TRISD4_POSN                                   0x4
9229:          #define _DDRD_TRISD4_POSITION                               0x4
9230:          #define _DDRD_TRISD4_SIZE                                   0x1
9231:          #define _DDRD_TRISD4_LENGTH                                 0x1
9232:          #define _DDRD_TRISD4_MASK                                   0x10
9233:          #define _DDRD_TRISD5_POSN                                   0x5
9234:          #define _DDRD_TRISD5_POSITION                               0x5
9235:          #define _DDRD_TRISD5_SIZE                                   0x1
9236:          #define _DDRD_TRISD5_LENGTH                                 0x1
9237:          #define _DDRD_TRISD5_MASK                                   0x20
9238:          #define _DDRD_TRISD6_POSN                                   0x6
9239:          #define _DDRD_TRISD6_POSITION                               0x6
9240:          #define _DDRD_TRISD6_SIZE                                   0x1
9241:          #define _DDRD_TRISD6_LENGTH                                 0x1
9242:          #define _DDRD_TRISD6_MASK                                   0x40
9243:          #define _DDRD_TRISD7_POSN                                   0x7
9244:          #define _DDRD_TRISD7_POSITION                               0x7
9245:          #define _DDRD_TRISD7_SIZE                                   0x1
9246:          #define _DDRD_TRISD7_LENGTH                                 0x1
9247:          #define _DDRD_TRISD7_MASK                                   0x80
9248:          #define _DDRD_RD0_POSN                                      0x0
9249:          #define _DDRD_RD0_POSITION                                  0x0
9250:          #define _DDRD_RD0_SIZE                                      0x1
9251:          #define _DDRD_RD0_LENGTH                                    0x1
9252:          #define _DDRD_RD0_MASK                                      0x1
9253:          #define _DDRD_RD1_POSN                                      0x1
9254:          #define _DDRD_RD1_POSITION                                  0x1
9255:          #define _DDRD_RD1_SIZE                                      0x1
9256:          #define _DDRD_RD1_LENGTH                                    0x1
9257:          #define _DDRD_RD1_MASK                                      0x2
9258:          #define _DDRD_RD2_POSN                                      0x2
9259:          #define _DDRD_RD2_POSITION                                  0x2
9260:          #define _DDRD_RD2_SIZE                                      0x1
9261:          #define _DDRD_RD2_LENGTH                                    0x1
9262:          #define _DDRD_RD2_MASK                                      0x4
9263:          #define _DDRD_RD3_POSN                                      0x3
9264:          #define _DDRD_RD3_POSITION                                  0x3
9265:          #define _DDRD_RD3_SIZE                                      0x1
9266:          #define _DDRD_RD3_LENGTH                                    0x1
9267:          #define _DDRD_RD3_MASK                                      0x8
9268:          #define _DDRD_RD4_POSN                                      0x4
9269:          #define _DDRD_RD4_POSITION                                  0x4
9270:          #define _DDRD_RD4_SIZE                                      0x1
9271:          #define _DDRD_RD4_LENGTH                                    0x1
9272:          #define _DDRD_RD4_MASK                                      0x10
9273:          #define _DDRD_RD5_POSN                                      0x5
9274:          #define _DDRD_RD5_POSITION                                  0x5
9275:          #define _DDRD_RD5_SIZE                                      0x1
9276:          #define _DDRD_RD5_LENGTH                                    0x1
9277:          #define _DDRD_RD5_MASK                                      0x20
9278:          #define _DDRD_RD6_POSN                                      0x6
9279:          #define _DDRD_RD6_POSITION                                  0x6
9280:          #define _DDRD_RD6_SIZE                                      0x1
9281:          #define _DDRD_RD6_LENGTH                                    0x1
9282:          #define _DDRD_RD6_MASK                                      0x40
9283:          #define _DDRD_RD7_POSN                                      0x7
9284:          #define _DDRD_RD7_POSITION                                  0x7
9285:          #define _DDRD_RD7_SIZE                                      0x1
9286:          #define _DDRD_RD7_LENGTH                                    0x1
9287:          #define _DDRD_RD7_MASK                                      0x80
9288:          
9289:          // Register: TRISE
9290:          extern volatile unsigned char           TRISE               @ 0xF96;
3C12  0E00     MOVLW 0x0
9291:          #ifndef _LIB_BUILD
9292:          asm("TRISE equ 0F96h");
9293:          #endif
9294:          // aliases
9295:          extern volatile unsigned char           DDRE                @ 0xF96;
9296:          #ifndef _LIB_BUILD
9297:          asm("DDRE equ 0F96h");
9298:          #endif
9299:          // bitfield definitions
9300:          typedef union {
9301:              struct {
9302:                  unsigned TRISE0                 :1;
9303:                  unsigned TRISE1                 :1;
9304:                  unsigned TRISE2                 :1;
9305:                  unsigned                        :4;
9306:                  unsigned WPUE3                  :1;
9307:              };
9308:              struct {
9309:                  unsigned RE0                    :1;
9310:                  unsigned RE1                    :1;
9311:                  unsigned RE2                    :1;
9312:              };
9313:          } TRISEbits_t;
9314:          extern volatile TRISEbits_t TRISEbits @ 0xF96;
9315:          // bitfield macros
9316:          #define _TRISE_TRISE0_POSN                                  0x0
9317:          #define _TRISE_TRISE0_POSITION                              0x0
9318:          #define _TRISE_TRISE0_SIZE                                  0x1
9319:          #define _TRISE_TRISE0_LENGTH                                0x1
9320:          #define _TRISE_TRISE0_MASK                                  0x1
9321:          #define _TRISE_TRISE1_POSN                                  0x1
9322:          #define _TRISE_TRISE1_POSITION                              0x1
9323:          #define _TRISE_TRISE1_SIZE                                  0x1
9324:          #define _TRISE_TRISE1_LENGTH                                0x1
9325:          #define _TRISE_TRISE1_MASK                                  0x2
9326:          #define _TRISE_TRISE2_POSN                                  0x2
9327:          #define _TRISE_TRISE2_POSITION                              0x2
9328:          #define _TRISE_TRISE2_SIZE                                  0x1
9329:          #define _TRISE_TRISE2_LENGTH                                0x1
9330:          #define _TRISE_TRISE2_MASK                                  0x4
9331:          #define _TRISE_WPUE3_POSN                                   0x7
9332:          #define _TRISE_WPUE3_POSITION                               0x7
9333:          #define _TRISE_WPUE3_SIZE                                   0x1
9334:          #define _TRISE_WPUE3_LENGTH                                 0x1
9335:          #define _TRISE_WPUE3_MASK                                   0x80
9336:          #define _TRISE_RE0_POSN                                     0x0
9337:          #define _TRISE_RE0_POSITION                                 0x0
9338:          #define _TRISE_RE0_SIZE                                     0x1
9339:          #define _TRISE_RE0_LENGTH                                   0x1
9340:          #define _TRISE_RE0_MASK                                     0x1
9341:          #define _TRISE_RE1_POSN                                     0x1
9342:          #define _TRISE_RE1_POSITION                                 0x1
9343:          #define _TRISE_RE1_SIZE                                     0x1
9344:          #define _TRISE_RE1_LENGTH                                   0x1
9345:          #define _TRISE_RE1_MASK                                     0x2
9346:          #define _TRISE_RE2_POSN                                     0x2
9347:          #define _TRISE_RE2_POSITION                                 0x2
9348:          #define _TRISE_RE2_SIZE                                     0x1
9349:          #define _TRISE_RE2_LENGTH                                   0x1
9350:          #define _TRISE_RE2_MASK                                     0x4
9351:          // alias bitfield definitions
9352:          typedef union {
9353:              struct {
9354:                  unsigned TRISE0                 :1;
9355:                  unsigned TRISE1                 :1;
9356:                  unsigned TRISE2                 :1;
9357:                  unsigned                        :4;
9358:                  unsigned WPUE3                  :1;
9359:              };
9360:              struct {
9361:                  unsigned RE0                    :1;
9362:                  unsigned RE1                    :1;
9363:                  unsigned RE2                    :1;
9364:              };
9365:          } DDREbits_t;
9366:          extern volatile DDREbits_t DDREbits @ 0xF96;
9367:          // bitfield macros
9368:          #define _DDRE_TRISE0_POSN                                   0x0
9369:          #define _DDRE_TRISE0_POSITION                               0x0
9370:          #define _DDRE_TRISE0_SIZE                                   0x1
9371:          #define _DDRE_TRISE0_LENGTH                                 0x1
9372:          #define _DDRE_TRISE0_MASK                                   0x1
9373:          #define _DDRE_TRISE1_POSN                                   0x1
9374:          #define _DDRE_TRISE1_POSITION                               0x1
9375:          #define _DDRE_TRISE1_SIZE                                   0x1
9376:          #define _DDRE_TRISE1_LENGTH                                 0x1
9377:          #define _DDRE_TRISE1_MASK                                   0x2
9378:          #define _DDRE_TRISE2_POSN                                   0x2
9379:          #define _DDRE_TRISE2_POSITION                               0x2
9380:          #define _DDRE_TRISE2_SIZE                                   0x1
9381:          #define _DDRE_TRISE2_LENGTH                                 0x1
9382:          #define _DDRE_TRISE2_MASK                                   0x4
9383:          #define _DDRE_WPUE3_POSN                                    0x7
9384:          #define _DDRE_WPUE3_POSITION                                0x7
9385:          #define _DDRE_WPUE3_SIZE                                    0x1
9386:          #define _DDRE_WPUE3_LENGTH                                  0x1
9387:          #define _DDRE_WPUE3_MASK                                    0x80
9388:          #define _DDRE_RE0_POSN                                      0x0
9389:          #define _DDRE_RE0_POSITION                                  0x0
9390:          #define _DDRE_RE0_SIZE                                      0x1
9391:          #define _DDRE_RE0_LENGTH                                    0x1
9392:          #define _DDRE_RE0_MASK                                      0x1
9393:          #define _DDRE_RE1_POSN                                      0x1
9394:          #define _DDRE_RE1_POSITION                                  0x1
9395:          #define _DDRE_RE1_SIZE                                      0x1
9396:          #define _DDRE_RE1_LENGTH                                    0x1
9397:          #define _DDRE_RE1_MASK                                      0x2
9398:          #define _DDRE_RE2_POSN                                      0x2
9399:          #define _DDRE_RE2_POSITION                                  0x2
9400:          #define _DDRE_RE2_SIZE                                      0x1
9401:          #define _DDRE_RE2_LENGTH                                    0x1
9402:          #define _DDRE_RE2_MASK                                      0x4
9403:          
9404:          // Register: OSCTUNE
9405:          extern volatile unsigned char           OSCTUNE             @ 0xF9B;
9406:          #ifndef _LIB_BUILD
9407:          asm("OSCTUNE equ 0F9Bh");
9408:          #endif
9409:          // bitfield definitions
9410:          typedef union {
9411:              struct {
9412:                  unsigned TUN                    :6;
9413:                  unsigned PLLEN                  :1;
9414:                  unsigned INTSRC                 :1;
9415:              };
9416:              struct {
9417:                  unsigned TUN0                   :1;
9418:                  unsigned TUN1                   :1;
9419:                  unsigned TUN2                   :1;
9420:                  unsigned TUN3                   :1;
9421:                  unsigned TUN4                   :1;
9422:                  unsigned TUN5                   :1;
9423:              };
9424:          } OSCTUNEbits_t;
9425:          extern volatile OSCTUNEbits_t OSCTUNEbits @ 0xF9B;
9426:          // bitfield macros
9427:          #define _OSCTUNE_TUN_POSN                                   0x0
9428:          #define _OSCTUNE_TUN_POSITION                               0x0
9429:          #define _OSCTUNE_TUN_SIZE                                   0x6
9430:          #define _OSCTUNE_TUN_LENGTH                                 0x6
9431:          #define _OSCTUNE_TUN_MASK                                   0x3F
9432:          #define _OSCTUNE_PLLEN_POSN                                 0x6
9433:          #define _OSCTUNE_PLLEN_POSITION                             0x6
9434:          #define _OSCTUNE_PLLEN_SIZE                                 0x1
9435:          #define _OSCTUNE_PLLEN_LENGTH                               0x1
9436:          #define _OSCTUNE_PLLEN_MASK                                 0x40
9437:          #define _OSCTUNE_INTSRC_POSN                                0x7
9438:          #define _OSCTUNE_INTSRC_POSITION                            0x7
9439:          #define _OSCTUNE_INTSRC_SIZE                                0x1
9440:          #define _OSCTUNE_INTSRC_LENGTH                              0x1
9441:          #define _OSCTUNE_INTSRC_MASK                                0x80
9442:          #define _OSCTUNE_TUN0_POSN                                  0x0
9443:          #define _OSCTUNE_TUN0_POSITION                              0x0
9444:          #define _OSCTUNE_TUN0_SIZE                                  0x1
9445:          #define _OSCTUNE_TUN0_LENGTH                                0x1
9446:          #define _OSCTUNE_TUN0_MASK                                  0x1
9447:          #define _OSCTUNE_TUN1_POSN                                  0x1
9448:          #define _OSCTUNE_TUN1_POSITION                              0x1
9449:          #define _OSCTUNE_TUN1_SIZE                                  0x1
9450:          #define _OSCTUNE_TUN1_LENGTH                                0x1
9451:          #define _OSCTUNE_TUN1_MASK                                  0x2
9452:          #define _OSCTUNE_TUN2_POSN                                  0x2
9453:          #define _OSCTUNE_TUN2_POSITION                              0x2
9454:          #define _OSCTUNE_TUN2_SIZE                                  0x1
9455:          #define _OSCTUNE_TUN2_LENGTH                                0x1
9456:          #define _OSCTUNE_TUN2_MASK                                  0x4
9457:          #define _OSCTUNE_TUN3_POSN                                  0x3
9458:          #define _OSCTUNE_TUN3_POSITION                              0x3
9459:          #define _OSCTUNE_TUN3_SIZE                                  0x1
9460:          #define _OSCTUNE_TUN3_LENGTH                                0x1
9461:          #define _OSCTUNE_TUN3_MASK                                  0x8
9462:          #define _OSCTUNE_TUN4_POSN                                  0x4
9463:          #define _OSCTUNE_TUN4_POSITION                              0x4
9464:          #define _OSCTUNE_TUN4_SIZE                                  0x1
9465:          #define _OSCTUNE_TUN4_LENGTH                                0x1
9466:          #define _OSCTUNE_TUN4_MASK                                  0x10
9467:          #define _OSCTUNE_TUN5_POSN                                  0x5
9468:          #define _OSCTUNE_TUN5_POSITION                              0x5
9469:          #define _OSCTUNE_TUN5_SIZE                                  0x1
9470:          #define _OSCTUNE_TUN5_LENGTH                                0x1
9471:          #define _OSCTUNE_TUN5_MASK                                  0x20
9472:          
9473:          // Register: HLVDCON
9474:          extern volatile unsigned char           HLVDCON             @ 0xF9C;
9475:          #ifndef _LIB_BUILD
9476:          asm("HLVDCON equ 0F9Ch");
9477:          #endif
9478:          // aliases
9479:          extern volatile unsigned char           LVDCON              @ 0xF9C;
9480:          #ifndef _LIB_BUILD
9481:          asm("LVDCON equ 0F9Ch");
9482:          #endif
9483:          // bitfield definitions
9484:          typedef union {
9485:              struct {
9486:                  unsigned HLVDL                  :4;
9487:                  unsigned HLVDEN                 :1;
9488:                  unsigned IRVST                  :1;
9489:                  unsigned BGVST                  :1;
9490:                  unsigned VDIRMAG                :1;
9491:              };
9492:              struct {
9493:                  unsigned HLVDL0                 :1;
9494:                  unsigned HLVDL1                 :1;
9495:                  unsigned HLVDL2                 :1;
9496:                  unsigned HLVDL3                 :1;
9497:              };
9498:              struct {
9499:                  unsigned LVDL0                  :1;
9500:                  unsigned LVDL1                  :1;
9501:                  unsigned LVDL2                  :1;
9502:                  unsigned LVDL3                  :1;
9503:                  unsigned LVDEN                  :1;
9504:                  unsigned IVRST                  :1;
9505:              };
9506:              struct {
9507:                  unsigned LVV0                   :1;
9508:                  unsigned LVV1                   :1;
9509:                  unsigned LVV2                   :1;
9510:                  unsigned LVV3                   :1;
9511:                  unsigned                        :1;
9512:                  unsigned BGST                   :1;
9513:              };
9514:          } HLVDCONbits_t;
9515:          extern volatile HLVDCONbits_t HLVDCONbits @ 0xF9C;
9516:          // bitfield macros
9517:          #define _HLVDCON_HLVDL_POSN                                 0x0
9518:          #define _HLVDCON_HLVDL_POSITION                             0x0
9519:          #define _HLVDCON_HLVDL_SIZE                                 0x4
9520:          #define _HLVDCON_HLVDL_LENGTH                               0x4
9521:          #define _HLVDCON_HLVDL_MASK                                 0xF
9522:          #define _HLVDCON_HLVDEN_POSN                                0x4
9523:          #define _HLVDCON_HLVDEN_POSITION                            0x4
9524:          #define _HLVDCON_HLVDEN_SIZE                                0x1
9525:          #define _HLVDCON_HLVDEN_LENGTH                              0x1
9526:          #define _HLVDCON_HLVDEN_MASK                                0x10
9527:          #define _HLVDCON_IRVST_POSN                                 0x5
9528:          #define _HLVDCON_IRVST_POSITION                             0x5
9529:          #define _HLVDCON_IRVST_SIZE                                 0x1
9530:          #define _HLVDCON_IRVST_LENGTH                               0x1
9531:          #define _HLVDCON_IRVST_MASK                                 0x20
9532:          #define _HLVDCON_BGVST_POSN                                 0x6
9533:          #define _HLVDCON_BGVST_POSITION                             0x6
9534:          #define _HLVDCON_BGVST_SIZE                                 0x1
9535:          #define _HLVDCON_BGVST_LENGTH                               0x1
9536:          #define _HLVDCON_BGVST_MASK                                 0x40
9537:          #define _HLVDCON_VDIRMAG_POSN                               0x7
9538:          #define _HLVDCON_VDIRMAG_POSITION                           0x7
9539:          #define _HLVDCON_VDIRMAG_SIZE                               0x1
9540:          #define _HLVDCON_VDIRMAG_LENGTH                             0x1
9541:          #define _HLVDCON_VDIRMAG_MASK                               0x80
9542:          #define _HLVDCON_HLVDL0_POSN                                0x0
9543:          #define _HLVDCON_HLVDL0_POSITION                            0x0
9544:          #define _HLVDCON_HLVDL0_SIZE                                0x1
9545:          #define _HLVDCON_HLVDL0_LENGTH                              0x1
9546:          #define _HLVDCON_HLVDL0_MASK                                0x1
9547:          #define _HLVDCON_HLVDL1_POSN                                0x1
9548:          #define _HLVDCON_HLVDL1_POSITION                            0x1
9549:          #define _HLVDCON_HLVDL1_SIZE                                0x1
9550:          #define _HLVDCON_HLVDL1_LENGTH                              0x1
9551:          #define _HLVDCON_HLVDL1_MASK                                0x2
9552:          #define _HLVDCON_HLVDL2_POSN                                0x2
9553:          #define _HLVDCON_HLVDL2_POSITION                            0x2
9554:          #define _HLVDCON_HLVDL2_SIZE                                0x1
9555:          #define _HLVDCON_HLVDL2_LENGTH                              0x1
9556:          #define _HLVDCON_HLVDL2_MASK                                0x4
9557:          #define _HLVDCON_HLVDL3_POSN                                0x3
9558:          #define _HLVDCON_HLVDL3_POSITION                            0x3
9559:          #define _HLVDCON_HLVDL3_SIZE                                0x1
9560:          #define _HLVDCON_HLVDL3_LENGTH                              0x1
9561:          #define _HLVDCON_HLVDL3_MASK                                0x8
9562:          #define _HLVDCON_LVDL0_POSN                                 0x0
9563:          #define _HLVDCON_LVDL0_POSITION                             0x0
9564:          #define _HLVDCON_LVDL0_SIZE                                 0x1
9565:          #define _HLVDCON_LVDL0_LENGTH                               0x1
9566:          #define _HLVDCON_LVDL0_MASK                                 0x1
9567:          #define _HLVDCON_LVDL1_POSN                                 0x1
9568:          #define _HLVDCON_LVDL1_POSITION                             0x1
9569:          #define _HLVDCON_LVDL1_SIZE                                 0x1
9570:          #define _HLVDCON_LVDL1_LENGTH                               0x1
9571:          #define _HLVDCON_LVDL1_MASK                                 0x2
9572:          #define _HLVDCON_LVDL2_POSN                                 0x2
9573:          #define _HLVDCON_LVDL2_POSITION                             0x2
9574:          #define _HLVDCON_LVDL2_SIZE                                 0x1
9575:          #define _HLVDCON_LVDL2_LENGTH                               0x1
9576:          #define _HLVDCON_LVDL2_MASK                                 0x4
9577:          #define _HLVDCON_LVDL3_POSN                                 0x3
9578:          #define _HLVDCON_LVDL3_POSITION                             0x3
9579:          #define _HLVDCON_LVDL3_SIZE                                 0x1
9580:          #define _HLVDCON_LVDL3_LENGTH                               0x1
9581:          #define _HLVDCON_LVDL3_MASK                                 0x8
9582:          #define _HLVDCON_LVDEN_POSN                                 0x4
9583:          #define _HLVDCON_LVDEN_POSITION                             0x4
9584:          #define _HLVDCON_LVDEN_SIZE                                 0x1
9585:          #define _HLVDCON_LVDEN_LENGTH                               0x1
9586:          #define _HLVDCON_LVDEN_MASK                                 0x10
9587:          #define _HLVDCON_IVRST_POSN                                 0x5
9588:          #define _HLVDCON_IVRST_POSITION                             0x5
9589:          #define _HLVDCON_IVRST_SIZE                                 0x1
9590:          #define _HLVDCON_IVRST_LENGTH                               0x1
9591:          #define _HLVDCON_IVRST_MASK                                 0x20
9592:          #define _HLVDCON_LVV0_POSN                                  0x0
9593:          #define _HLVDCON_LVV0_POSITION                              0x0
9594:          #define _HLVDCON_LVV0_SIZE                                  0x1
9595:          #define _HLVDCON_LVV0_LENGTH                                0x1
9596:          #define _HLVDCON_LVV0_MASK                                  0x1
9597:          #define _HLVDCON_LVV1_POSN                                  0x1
9598:          #define _HLVDCON_LVV1_POSITION                              0x1
9599:          #define _HLVDCON_LVV1_SIZE                                  0x1
9600:          #define _HLVDCON_LVV1_LENGTH                                0x1
9601:          #define _HLVDCON_LVV1_MASK                                  0x2
9602:          #define _HLVDCON_LVV2_POSN                                  0x2
9603:          #define _HLVDCON_LVV2_POSITION                              0x2
9604:          #define _HLVDCON_LVV2_SIZE                                  0x1
9605:          #define _HLVDCON_LVV2_LENGTH                                0x1
9606:          #define _HLVDCON_LVV2_MASK                                  0x4
9607:          #define _HLVDCON_LVV3_POSN                                  0x3
9608:          #define _HLVDCON_LVV3_POSITION                              0x3
9609:          #define _HLVDCON_LVV3_SIZE                                  0x1
9610:          #define _HLVDCON_LVV3_LENGTH                                0x1
9611:          #define _HLVDCON_LVV3_MASK                                  0x8
9612:          #define _HLVDCON_BGST_POSN                                  0x5
9613:          #define _HLVDCON_BGST_POSITION                              0x5
9614:          #define _HLVDCON_BGST_SIZE                                  0x1
9615:          #define _HLVDCON_BGST_LENGTH                                0x1
9616:          #define _HLVDCON_BGST_MASK                                  0x20
9617:          // alias bitfield definitions
9618:          typedef union {
9619:              struct {
9620:                  unsigned HLVDL                  :4;
9621:                  unsigned HLVDEN                 :1;
9622:                  unsigned IRVST                  :1;
9623:                  unsigned BGVST                  :1;
9624:                  unsigned VDIRMAG                :1;
9625:              };
9626:              struct {
9627:                  unsigned HLVDL0                 :1;
9628:                  unsigned HLVDL1                 :1;
9629:                  unsigned HLVDL2                 :1;
9630:                  unsigned HLVDL3                 :1;
9631:              };
9632:              struct {
9633:                  unsigned LVDL0                  :1;
9634:                  unsigned LVDL1                  :1;
9635:                  unsigned LVDL2                  :1;
9636:                  unsigned LVDL3                  :1;
9637:                  unsigned LVDEN                  :1;
9638:                  unsigned IVRST                  :1;
9639:              };
9640:              struct {
9641:                  unsigned LVV0                   :1;
9642:                  unsigned LVV1                   :1;
9643:                  unsigned LVV2                   :1;
9644:                  unsigned LVV3                   :1;
9645:                  unsigned                        :1;
9646:                  unsigned BGST                   :1;
9647:              };
9648:          } LVDCONbits_t;
9649:          extern volatile LVDCONbits_t LVDCONbits @ 0xF9C;
9650:          // bitfield macros
9651:          #define _LVDCON_HLVDL_POSN                                  0x0
9652:          #define _LVDCON_HLVDL_POSITION                              0x0
9653:          #define _LVDCON_HLVDL_SIZE                                  0x4
9654:          #define _LVDCON_HLVDL_LENGTH                                0x4
9655:          #define _LVDCON_HLVDL_MASK                                  0xF
9656:          #define _LVDCON_HLVDEN_POSN                                 0x4
9657:          #define _LVDCON_HLVDEN_POSITION                             0x4
9658:          #define _LVDCON_HLVDEN_SIZE                                 0x1
9659:          #define _LVDCON_HLVDEN_LENGTH                               0x1
9660:          #define _LVDCON_HLVDEN_MASK                                 0x10
9661:          #define _LVDCON_IRVST_POSN                                  0x5
9662:          #define _LVDCON_IRVST_POSITION                              0x5
9663:          #define _LVDCON_IRVST_SIZE                                  0x1
9664:          #define _LVDCON_IRVST_LENGTH                                0x1
9665:          #define _LVDCON_IRVST_MASK                                  0x20
9666:          #define _LVDCON_BGVST_POSN                                  0x6
9667:          #define _LVDCON_BGVST_POSITION                              0x6
9668:          #define _LVDCON_BGVST_SIZE                                  0x1
9669:          #define _LVDCON_BGVST_LENGTH                                0x1
9670:          #define _LVDCON_BGVST_MASK                                  0x40
9671:          #define _LVDCON_VDIRMAG_POSN                                0x7
9672:          #define _LVDCON_VDIRMAG_POSITION                            0x7
9673:          #define _LVDCON_VDIRMAG_SIZE                                0x1
9674:          #define _LVDCON_VDIRMAG_LENGTH                              0x1
9675:          #define _LVDCON_VDIRMAG_MASK                                0x80
9676:          #define _LVDCON_HLVDL0_POSN                                 0x0
9677:          #define _LVDCON_HLVDL0_POSITION                             0x0
9678:          #define _LVDCON_HLVDL0_SIZE                                 0x1
9679:          #define _LVDCON_HLVDL0_LENGTH                               0x1
9680:          #define _LVDCON_HLVDL0_MASK                                 0x1
9681:          #define _LVDCON_HLVDL1_POSN                                 0x1
9682:          #define _LVDCON_HLVDL1_POSITION                             0x1
9683:          #define _LVDCON_HLVDL1_SIZE                                 0x1
9684:          #define _LVDCON_HLVDL1_LENGTH                               0x1
9685:          #define _LVDCON_HLVDL1_MASK                                 0x2
9686:          #define _LVDCON_HLVDL2_POSN                                 0x2
9687:          #define _LVDCON_HLVDL2_POSITION                             0x2
9688:          #define _LVDCON_HLVDL2_SIZE                                 0x1
9689:          #define _LVDCON_HLVDL2_LENGTH                               0x1
9690:          #define _LVDCON_HLVDL2_MASK                                 0x4
9691:          #define _LVDCON_HLVDL3_POSN                                 0x3
9692:          #define _LVDCON_HLVDL3_POSITION                             0x3
9693:          #define _LVDCON_HLVDL3_SIZE                                 0x1
9694:          #define _LVDCON_HLVDL3_LENGTH                               0x1
9695:          #define _LVDCON_HLVDL3_MASK                                 0x8
9696:          #define _LVDCON_LVDL0_POSN                                  0x0
9697:          #define _LVDCON_LVDL0_POSITION                              0x0
9698:          #define _LVDCON_LVDL0_SIZE                                  0x1
9699:          #define _LVDCON_LVDL0_LENGTH                                0x1
9700:          #define _LVDCON_LVDL0_MASK                                  0x1
9701:          #define _LVDCON_LVDL1_POSN                                  0x1
9702:          #define _LVDCON_LVDL1_POSITION                              0x1
9703:          #define _LVDCON_LVDL1_SIZE                                  0x1
9704:          #define _LVDCON_LVDL1_LENGTH                                0x1
9705:          #define _LVDCON_LVDL1_MASK                                  0x2
9706:          #define _LVDCON_LVDL2_POSN                                  0x2
9707:          #define _LVDCON_LVDL2_POSITION                              0x2
9708:          #define _LVDCON_LVDL2_SIZE                                  0x1
9709:          #define _LVDCON_LVDL2_LENGTH                                0x1
9710:          #define _LVDCON_LVDL2_MASK                                  0x4
9711:          #define _LVDCON_LVDL3_POSN                                  0x3
9712:          #define _LVDCON_LVDL3_POSITION                              0x3
9713:          #define _LVDCON_LVDL3_SIZE                                  0x1
9714:          #define _LVDCON_LVDL3_LENGTH                                0x1
9715:          #define _LVDCON_LVDL3_MASK                                  0x8
9716:          #define _LVDCON_LVDEN_POSN                                  0x4
9717:          #define _LVDCON_LVDEN_POSITION                              0x4
9718:          #define _LVDCON_LVDEN_SIZE                                  0x1
9719:          #define _LVDCON_LVDEN_LENGTH                                0x1
9720:          #define _LVDCON_LVDEN_MASK                                  0x10
9721:          #define _LVDCON_IVRST_POSN                                  0x5
9722:          #define _LVDCON_IVRST_POSITION                              0x5
9723:          #define _LVDCON_IVRST_SIZE                                  0x1
9724:          #define _LVDCON_IVRST_LENGTH                                0x1
9725:          #define _LVDCON_IVRST_MASK                                  0x20
9726:          #define _LVDCON_LVV0_POSN                                   0x0
9727:          #define _LVDCON_LVV0_POSITION                               0x0
9728:          #define _LVDCON_LVV0_SIZE                                   0x1
9729:          #define _LVDCON_LVV0_LENGTH                                 0x1
9730:          #define _LVDCON_LVV0_MASK                                   0x1
9731:          #define _LVDCON_LVV1_POSN                                   0x1
9732:          #define _LVDCON_LVV1_POSITION                               0x1
9733:          #define _LVDCON_LVV1_SIZE                                   0x1
9734:          #define _LVDCON_LVV1_LENGTH                                 0x1
9735:          #define _LVDCON_LVV1_MASK                                   0x2
9736:          #define _LVDCON_LVV2_POSN                                   0x2
9737:          #define _LVDCON_LVV2_POSITION                               0x2
9738:          #define _LVDCON_LVV2_SIZE                                   0x1
9739:          #define _LVDCON_LVV2_LENGTH                                 0x1
9740:          #define _LVDCON_LVV2_MASK                                   0x4
9741:          #define _LVDCON_LVV3_POSN                                   0x3
9742:          #define _LVDCON_LVV3_POSITION                               0x3
9743:          #define _LVDCON_LVV3_SIZE                                   0x1
9744:          #define _LVDCON_LVV3_LENGTH                                 0x1
9745:          #define _LVDCON_LVV3_MASK                                   0x8
9746:          #define _LVDCON_BGST_POSN                                   0x5
9747:          #define _LVDCON_BGST_POSITION                               0x5
9748:          #define _LVDCON_BGST_SIZE                                   0x1
9749:          #define _LVDCON_BGST_LENGTH                                 0x1
9750:          #define _LVDCON_BGST_MASK                                   0x20
9751:          
9752:          // Register: PIE1
9753:          extern volatile unsigned char           PIE1                @ 0xF9D;
9754:          #ifndef _LIB_BUILD
9755:          asm("PIE1 equ 0F9Dh");
9756:          #endif
9757:          // bitfield definitions
9758:          typedef union {
9759:              struct {
9760:                  unsigned TMR1IE                 :1;
9761:                  unsigned TMR2IE                 :1;
9762:                  unsigned CCP1IE                 :1;
9763:                  unsigned SSP1IE                 :1;
9764:                  unsigned TX1IE                  :1;
9765:                  unsigned RC1IE                  :1;
9766:                  unsigned ADIE                   :1;
9767:              };
9768:              struct {
9769:                  unsigned                        :3;
9770:                  unsigned SSPIE                  :1;
9771:                  unsigned TXIE                   :1;
9772:                  unsigned RCIE                   :1;
9773:              };
9774:          } PIE1bits_t;
9775:          extern volatile PIE1bits_t PIE1bits @ 0xF9D;
9776:          // bitfield macros
9777:          #define _PIE1_TMR1IE_POSN                                   0x0
9778:          #define _PIE1_TMR1IE_POSITION                               0x0
9779:          #define _PIE1_TMR1IE_SIZE                                   0x1
9780:          #define _PIE1_TMR1IE_LENGTH                                 0x1
9781:          #define _PIE1_TMR1IE_MASK                                   0x1
9782:          #define _PIE1_TMR2IE_POSN                                   0x1
9783:          #define _PIE1_TMR2IE_POSITION                               0x1
9784:          #define _PIE1_TMR2IE_SIZE                                   0x1
9785:          #define _PIE1_TMR2IE_LENGTH                                 0x1
9786:          #define _PIE1_TMR2IE_MASK                                   0x2
9787:          #define _PIE1_CCP1IE_POSN                                   0x2
9788:          #define _PIE1_CCP1IE_POSITION                               0x2
9789:          #define _PIE1_CCP1IE_SIZE                                   0x1
9790:          #define _PIE1_CCP1IE_LENGTH                                 0x1
9791:          #define _PIE1_CCP1IE_MASK                                   0x4
9792:          #define _PIE1_SSP1IE_POSN                                   0x3
9793:          #define _PIE1_SSP1IE_POSITION                               0x3
9794:          #define _PIE1_SSP1IE_SIZE                                   0x1
9795:          #define _PIE1_SSP1IE_LENGTH                                 0x1
9796:          #define _PIE1_SSP1IE_MASK                                   0x8
9797:          #define _PIE1_TX1IE_POSN                                    0x4
9798:          #define _PIE1_TX1IE_POSITION                                0x4
9799:          #define _PIE1_TX1IE_SIZE                                    0x1
9800:          #define _PIE1_TX1IE_LENGTH                                  0x1
9801:          #define _PIE1_TX1IE_MASK                                    0x10
9802:          #define _PIE1_RC1IE_POSN                                    0x5
9803:          #define _PIE1_RC1IE_POSITION                                0x5
9804:          #define _PIE1_RC1IE_SIZE                                    0x1
9805:          #define _PIE1_RC1IE_LENGTH                                  0x1
9806:          #define _PIE1_RC1IE_MASK                                    0x20
9807:          #define _PIE1_ADIE_POSN                                     0x6
9808:          #define _PIE1_ADIE_POSITION                                 0x6
9809:          #define _PIE1_ADIE_SIZE                                     0x1
9810:          #define _PIE1_ADIE_LENGTH                                   0x1
9811:          #define _PIE1_ADIE_MASK                                     0x40
9812:          #define _PIE1_SSPIE_POSN                                    0x3
9813:          #define _PIE1_SSPIE_POSITION                                0x3
9814:          #define _PIE1_SSPIE_SIZE                                    0x1
9815:          #define _PIE1_SSPIE_LENGTH                                  0x1
9816:          #define _PIE1_SSPIE_MASK                                    0x8
9817:          #define _PIE1_TXIE_POSN                                     0x4
9818:          #define _PIE1_TXIE_POSITION                                 0x4
9819:          #define _PIE1_TXIE_SIZE                                     0x1
9820:          #define _PIE1_TXIE_LENGTH                                   0x1
9821:          #define _PIE1_TXIE_MASK                                     0x10
9822:          #define _PIE1_RCIE_POSN                                     0x5
9823:          #define _PIE1_RCIE_POSITION                                 0x5
9824:          #define _PIE1_RCIE_SIZE                                     0x1
9825:          #define _PIE1_RCIE_LENGTH                                   0x1
9826:          #define _PIE1_RCIE_MASK                                     0x20
9827:          
9828:          // Register: PIR1
9829:          extern volatile unsigned char           PIR1                @ 0xF9E;
9830:          #ifndef _LIB_BUILD
9831:          asm("PIR1 equ 0F9Eh");
9832:          #endif
9833:          // bitfield definitions
9834:          typedef union {
9835:              struct {
9836:                  unsigned TMR1IF                 :1;
9837:                  unsigned TMR2IF                 :1;
9838:                  unsigned CCP1IF                 :1;
9839:                  unsigned SSP1IF                 :1;
9840:                  unsigned TX1IF                  :1;
9841:                  unsigned RC1IF                  :1;
9842:                  unsigned ADIF                   :1;
9843:              };
9844:              struct {
9845:                  unsigned                        :3;
9846:                  unsigned SSPIF                  :1;
9847:                  unsigned TXIF                   :1;
9848:                  unsigned RCIF                   :1;
9849:              };
9850:          } PIR1bits_t;
9851:          extern volatile PIR1bits_t PIR1bits @ 0xF9E;
9852:          // bitfield macros
9853:          #define _PIR1_TMR1IF_POSN                                   0x0
9854:          #define _PIR1_TMR1IF_POSITION                               0x0
9855:          #define _PIR1_TMR1IF_SIZE                                   0x1
9856:          #define _PIR1_TMR1IF_LENGTH                                 0x1
9857:          #define _PIR1_TMR1IF_MASK                                   0x1
9858:          #define _PIR1_TMR2IF_POSN                                   0x1
9859:          #define _PIR1_TMR2IF_POSITION                               0x1
9860:          #define _PIR1_TMR2IF_SIZE                                   0x1
9861:          #define _PIR1_TMR2IF_LENGTH                                 0x1
9862:          #define _PIR1_TMR2IF_MASK                                   0x2
9863:          #define _PIR1_CCP1IF_POSN                                   0x2
9864:          #define _PIR1_CCP1IF_POSITION                               0x2
9865:          #define _PIR1_CCP1IF_SIZE                                   0x1
9866:          #define _PIR1_CCP1IF_LENGTH                                 0x1
9867:          #define _PIR1_CCP1IF_MASK                                   0x4
9868:          #define _PIR1_SSP1IF_POSN                                   0x3
9869:          #define _PIR1_SSP1IF_POSITION                               0x3
9870:          #define _PIR1_SSP1IF_SIZE                                   0x1
9871:          #define _PIR1_SSP1IF_LENGTH                                 0x1
9872:          #define _PIR1_SSP1IF_MASK                                   0x8
9873:          #define _PIR1_TX1IF_POSN                                    0x4
9874:          #define _PIR1_TX1IF_POSITION                                0x4
9875:          #define _PIR1_TX1IF_SIZE                                    0x1
9876:          #define _PIR1_TX1IF_LENGTH                                  0x1
9877:          #define _PIR1_TX1IF_MASK                                    0x10
9878:          #define _PIR1_RC1IF_POSN                                    0x5
9879:          #define _PIR1_RC1IF_POSITION                                0x5
9880:          #define _PIR1_RC1IF_SIZE                                    0x1
9881:          #define _PIR1_RC1IF_LENGTH                                  0x1
9882:          #define _PIR1_RC1IF_MASK                                    0x20
9883:          #define _PIR1_ADIF_POSN                                     0x6
9884:          #define _PIR1_ADIF_POSITION                                 0x6
9885:          #define _PIR1_ADIF_SIZE                                     0x1
9886:          #define _PIR1_ADIF_LENGTH                                   0x1
9887:          #define _PIR1_ADIF_MASK                                     0x40
9888:          #define _PIR1_SSPIF_POSN                                    0x3
9889:          #define _PIR1_SSPIF_POSITION                                0x3
9890:          #define _PIR1_SSPIF_SIZE                                    0x1
9891:          #define _PIR1_SSPIF_LENGTH                                  0x1
9892:          #define _PIR1_SSPIF_MASK                                    0x8
9893:          #define _PIR1_TXIF_POSN                                     0x4
9894:          #define _PIR1_TXIF_POSITION                                 0x4
9895:          #define _PIR1_TXIF_SIZE                                     0x1
9896:          #define _PIR1_TXIF_LENGTH                                   0x1
9897:          #define _PIR1_TXIF_MASK                                     0x10
9898:          #define _PIR1_RCIF_POSN                                     0x5
9899:          #define _PIR1_RCIF_POSITION                                 0x5
9900:          #define _PIR1_RCIF_SIZE                                     0x1
9901:          #define _PIR1_RCIF_LENGTH                                   0x1
9902:          #define _PIR1_RCIF_MASK                                     0x20
9903:          
9904:          // Register: IPR1
9905:          extern volatile unsigned char           IPR1                @ 0xF9F;
9906:          #ifndef _LIB_BUILD
9907:          asm("IPR1 equ 0F9Fh");
9908:          #endif
9909:          // bitfield definitions
9910:          typedef union {
9911:              struct {
9912:                  unsigned TMR1IP                 :1;
9913:                  unsigned TMR2IP                 :1;
9914:                  unsigned CCP1IP                 :1;
9915:                  unsigned SSP1IP                 :1;
9916:                  unsigned TX1IP                  :1;
9917:                  unsigned RC1IP                  :1;
9918:                  unsigned ADIP                   :1;
9919:              };
9920:              struct {
9921:                  unsigned                        :3;
9922:                  unsigned SSPIP                  :1;
9923:                  unsigned TXIP                   :1;
9924:                  unsigned RCIP                   :1;
9925:              };
9926:          } IPR1bits_t;
9927:          extern volatile IPR1bits_t IPR1bits @ 0xF9F;
9928:          // bitfield macros
9929:          #define _IPR1_TMR1IP_POSN                                   0x0
9930:          #define _IPR1_TMR1IP_POSITION                               0x0
9931:          #define _IPR1_TMR1IP_SIZE                                   0x1
9932:          #define _IPR1_TMR1IP_LENGTH                                 0x1
9933:          #define _IPR1_TMR1IP_MASK                                   0x1
9934:          #define _IPR1_TMR2IP_POSN                                   0x1
9935:          #define _IPR1_TMR2IP_POSITION                               0x1
9936:          #define _IPR1_TMR2IP_SIZE                                   0x1
9937:          #define _IPR1_TMR2IP_LENGTH                                 0x1
9938:          #define _IPR1_TMR2IP_MASK                                   0x2
9939:          #define _IPR1_CCP1IP_POSN                                   0x2
9940:          #define _IPR1_CCP1IP_POSITION                               0x2
9941:          #define _IPR1_CCP1IP_SIZE                                   0x1
9942:          #define _IPR1_CCP1IP_LENGTH                                 0x1
9943:          #define _IPR1_CCP1IP_MASK                                   0x4
9944:          #define _IPR1_SSP1IP_POSN                                   0x3
9945:          #define _IPR1_SSP1IP_POSITION                               0x3
9946:          #define _IPR1_SSP1IP_SIZE                                   0x1
9947:          #define _IPR1_SSP1IP_LENGTH                                 0x1
9948:          #define _IPR1_SSP1IP_MASK                                   0x8
9949:          #define _IPR1_TX1IP_POSN                                    0x4
9950:          #define _IPR1_TX1IP_POSITION                                0x4
9951:          #define _IPR1_TX1IP_SIZE                                    0x1
9952:          #define _IPR1_TX1IP_LENGTH                                  0x1
9953:          #define _IPR1_TX1IP_MASK                                    0x10
9954:          #define _IPR1_RC1IP_POSN                                    0x5
9955:          #define _IPR1_RC1IP_POSITION                                0x5
9956:          #define _IPR1_RC1IP_SIZE                                    0x1
9957:          #define _IPR1_RC1IP_LENGTH                                  0x1
9958:          #define _IPR1_RC1IP_MASK                                    0x20
9959:          #define _IPR1_ADIP_POSN                                     0x6
9960:          #define _IPR1_ADIP_POSITION                                 0x6
9961:          #define _IPR1_ADIP_SIZE                                     0x1
9962:          #define _IPR1_ADIP_LENGTH                                   0x1
9963:          #define _IPR1_ADIP_MASK                                     0x40
9964:          #define _IPR1_SSPIP_POSN                                    0x3
9965:          #define _IPR1_SSPIP_POSITION                                0x3
9966:          #define _IPR1_SSPIP_SIZE                                    0x1
9967:          #define _IPR1_SSPIP_LENGTH                                  0x1
9968:          #define _IPR1_SSPIP_MASK                                    0x8
9969:          #define _IPR1_TXIP_POSN                                     0x4
9970:          #define _IPR1_TXIP_POSITION                                 0x4
9971:          #define _IPR1_TXIP_SIZE                                     0x1
9972:          #define _IPR1_TXIP_LENGTH                                   0x1
9973:          #define _IPR1_TXIP_MASK                                     0x10
9974:          #define _IPR1_RCIP_POSN                                     0x5
9975:          #define _IPR1_RCIP_POSITION                                 0x5
9976:          #define _IPR1_RCIP_SIZE                                     0x1
9977:          #define _IPR1_RCIP_LENGTH                                   0x1
9978:          #define _IPR1_RCIP_MASK                                     0x20
9979:          
9980:          // Register: PIE2
9981:          extern volatile unsigned char           PIE2                @ 0xFA0;
9982:          #ifndef _LIB_BUILD
9983:          asm("PIE2 equ 0FA0h");
9984:          #endif
9985:          // bitfield definitions
9986:          typedef union {
9987:              struct {
9988:                  unsigned CCP2IE                 :1;
9989:                  unsigned TMR3IE                 :1;
9990:                  unsigned HLVDIE                 :1;
9991:                  unsigned BCL1IE                 :1;
9992:                  unsigned EEIE                   :1;
9993:                  unsigned C2IE                   :1;
9994:                  unsigned C1IE                   :1;
9995:                  unsigned OSCFIE                 :1;
9996:              };
9997:              struct {
9998:                  unsigned                        :2;
9999:                  unsigned LVDIE                  :1;
10000:                 unsigned BCLIE                  :1;
10001:             };
10002:             struct {
10003:                 unsigned                        :6;
10004:                 unsigned CMIE                   :1;
10005:             };
10006:         } PIE2bits_t;
10007:         extern volatile PIE2bits_t PIE2bits @ 0xFA0;
10008:         // bitfield macros
10009:         #define _PIE2_CCP2IE_POSN                                   0x0
10010:         #define _PIE2_CCP2IE_POSITION                               0x0
10011:         #define _PIE2_CCP2IE_SIZE                                   0x1
10012:         #define _PIE2_CCP2IE_LENGTH                                 0x1
10013:         #define _PIE2_CCP2IE_MASK                                   0x1
10014:         #define _PIE2_TMR3IE_POSN                                   0x1
10015:         #define _PIE2_TMR3IE_POSITION                               0x1
10016:         #define _PIE2_TMR3IE_SIZE                                   0x1
10017:         #define _PIE2_TMR3IE_LENGTH                                 0x1
10018:         #define _PIE2_TMR3IE_MASK                                   0x2
10019:         #define _PIE2_HLVDIE_POSN                                   0x2
10020:         #define _PIE2_HLVDIE_POSITION                               0x2
10021:         #define _PIE2_HLVDIE_SIZE                                   0x1
10022:         #define _PIE2_HLVDIE_LENGTH                                 0x1
10023:         #define _PIE2_HLVDIE_MASK                                   0x4
10024:         #define _PIE2_BCL1IE_POSN                                   0x3
10025:         #define _PIE2_BCL1IE_POSITION                               0x3
10026:         #define _PIE2_BCL1IE_SIZE                                   0x1
10027:         #define _PIE2_BCL1IE_LENGTH                                 0x1
10028:         #define _PIE2_BCL1IE_MASK                                   0x8
10029:         #define _PIE2_EEIE_POSN                                     0x4
10030:         #define _PIE2_EEIE_POSITION                                 0x4
10031:         #define _PIE2_EEIE_SIZE                                     0x1
10032:         #define _PIE2_EEIE_LENGTH                                   0x1
10033:         #define _PIE2_EEIE_MASK                                     0x10
10034:         #define _PIE2_C2IE_POSN                                     0x5
10035:         #define _PIE2_C2IE_POSITION                                 0x5
10036:         #define _PIE2_C2IE_SIZE                                     0x1
10037:         #define _PIE2_C2IE_LENGTH                                   0x1
10038:         #define _PIE2_C2IE_MASK                                     0x20
10039:         #define _PIE2_C1IE_POSN                                     0x6
10040:         #define _PIE2_C1IE_POSITION                                 0x6
10041:         #define _PIE2_C1IE_SIZE                                     0x1
10042:         #define _PIE2_C1IE_LENGTH                                   0x1
10043:         #define _PIE2_C1IE_MASK                                     0x40
10044:         #define _PIE2_OSCFIE_POSN                                   0x7
10045:         #define _PIE2_OSCFIE_POSITION                               0x7
10046:         #define _PIE2_OSCFIE_SIZE                                   0x1
10047:         #define _PIE2_OSCFIE_LENGTH                                 0x1
10048:         #define _PIE2_OSCFIE_MASK                                   0x80
10049:         #define _PIE2_LVDIE_POSN                                    0x2
10050:         #define _PIE2_LVDIE_POSITION                                0x2
10051:         #define _PIE2_LVDIE_SIZE                                    0x1
10052:         #define _PIE2_LVDIE_LENGTH                                  0x1
10053:         #define _PIE2_LVDIE_MASK                                    0x4
10054:         #define _PIE2_BCLIE_POSN                                    0x3
10055:         #define _PIE2_BCLIE_POSITION                                0x3
10056:         #define _PIE2_BCLIE_SIZE                                    0x1
10057:         #define _PIE2_BCLIE_LENGTH                                  0x1
10058:         #define _PIE2_BCLIE_MASK                                    0x8
10059:         #define _PIE2_CMIE_POSN                                     0x6
10060:         #define _PIE2_CMIE_POSITION                                 0x6
10061:         #define _PIE2_CMIE_SIZE                                     0x1
10062:         #define _PIE2_CMIE_LENGTH                                   0x1
10063:         #define _PIE2_CMIE_MASK                                     0x40
10064:         
10065:         // Register: PIR2
10066:         extern volatile unsigned char           PIR2                @ 0xFA1;
10067:         #ifndef _LIB_BUILD
10068:         asm("PIR2 equ 0FA1h");
10069:         #endif
10070:         // bitfield definitions
10071:         typedef union {
10072:             struct {
10073:                 unsigned CCP2IF                 :1;
10074:                 unsigned TMR3IF                 :1;
10075:                 unsigned HLVDIF                 :1;
10076:                 unsigned BCL1IF                 :1;
10077:                 unsigned EEIF                   :1;
10078:                 unsigned C2IF                   :1;
10079:                 unsigned C1IF                   :1;
10080:                 unsigned OSCFIF                 :1;
10081:             };
10082:             struct {
10083:                 unsigned                        :2;
10084:                 unsigned LVDIF                  :1;
10085:                 unsigned BCLIF                  :1;
10086:             };
10087:             struct {
10088:                 unsigned                        :6;
10089:                 unsigned CMIF                   :1;
10090:             };
10091:         } PIR2bits_t;
10092:         extern volatile PIR2bits_t PIR2bits @ 0xFA1;
10093:         // bitfield macros
10094:         #define _PIR2_CCP2IF_POSN                                   0x0
10095:         #define _PIR2_CCP2IF_POSITION                               0x0
10096:         #define _PIR2_CCP2IF_SIZE                                   0x1
10097:         #define _PIR2_CCP2IF_LENGTH                                 0x1
10098:         #define _PIR2_CCP2IF_MASK                                   0x1
10099:         #define _PIR2_TMR3IF_POSN                                   0x1
10100:         #define _PIR2_TMR3IF_POSITION                               0x1
10101:         #define _PIR2_TMR3IF_SIZE                                   0x1
10102:         #define _PIR2_TMR3IF_LENGTH                                 0x1
10103:         #define _PIR2_TMR3IF_MASK                                   0x2
10104:         #define _PIR2_HLVDIF_POSN                                   0x2
10105:         #define _PIR2_HLVDIF_POSITION                               0x2
10106:         #define _PIR2_HLVDIF_SIZE                                   0x1
10107:         #define _PIR2_HLVDIF_LENGTH                                 0x1
10108:         #define _PIR2_HLVDIF_MASK                                   0x4
10109:         #define _PIR2_BCL1IF_POSN                                   0x3
10110:         #define _PIR2_BCL1IF_POSITION                               0x3
10111:         #define _PIR2_BCL1IF_SIZE                                   0x1
10112:         #define _PIR2_BCL1IF_LENGTH                                 0x1
10113:         #define _PIR2_BCL1IF_MASK                                   0x8
10114:         #define _PIR2_EEIF_POSN                                     0x4
10115:         #define _PIR2_EEIF_POSITION                                 0x4
10116:         #define _PIR2_EEIF_SIZE                                     0x1
10117:         #define _PIR2_EEIF_LENGTH                                   0x1
10118:         #define _PIR2_EEIF_MASK                                     0x10
10119:         #define _PIR2_C2IF_POSN                                     0x5
10120:         #define _PIR2_C2IF_POSITION                                 0x5
10121:         #define _PIR2_C2IF_SIZE                                     0x1
10122:         #define _PIR2_C2IF_LENGTH                                   0x1
10123:         #define _PIR2_C2IF_MASK                                     0x20
10124:         #define _PIR2_C1IF_POSN                                     0x6
10125:         #define _PIR2_C1IF_POSITION                                 0x6
10126:         #define _PIR2_C1IF_SIZE                                     0x1
10127:         #define _PIR2_C1IF_LENGTH                                   0x1
10128:         #define _PIR2_C1IF_MASK                                     0x40
10129:         #define _PIR2_OSCFIF_POSN                                   0x7
10130:         #define _PIR2_OSCFIF_POSITION                               0x7
10131:         #define _PIR2_OSCFIF_SIZE                                   0x1
10132:         #define _PIR2_OSCFIF_LENGTH                                 0x1
10133:         #define _PIR2_OSCFIF_MASK                                   0x80
10134:         #define _PIR2_LVDIF_POSN                                    0x2
10135:         #define _PIR2_LVDIF_POSITION                                0x2
10136:         #define _PIR2_LVDIF_SIZE                                    0x1
10137:         #define _PIR2_LVDIF_LENGTH                                  0x1
10138:         #define _PIR2_LVDIF_MASK                                    0x4
10139:         #define _PIR2_BCLIF_POSN                                    0x3
10140:         #define _PIR2_BCLIF_POSITION                                0x3
10141:         #define _PIR2_BCLIF_SIZE                                    0x1
10142:         #define _PIR2_BCLIF_LENGTH                                  0x1
10143:         #define _PIR2_BCLIF_MASK                                    0x8
10144:         #define _PIR2_CMIF_POSN                                     0x6
10145:         #define _PIR2_CMIF_POSITION                                 0x6
10146:         #define _PIR2_CMIF_SIZE                                     0x1
10147:         #define _PIR2_CMIF_LENGTH                                   0x1
10148:         #define _PIR2_CMIF_MASK                                     0x40
10149:         
10150:         // Register: IPR2
10151:         extern volatile unsigned char           IPR2                @ 0xFA2;
10152:         #ifndef _LIB_BUILD
10153:         asm("IPR2 equ 0FA2h");
10154:         #endif
10155:         // bitfield definitions
10156:         typedef union {
10157:             struct {
10158:                 unsigned CCP2IP                 :1;
10159:                 unsigned TMR3IP                 :1;
10160:                 unsigned HLVDIP                 :1;
10161:                 unsigned BCL1IP                 :1;
10162:                 unsigned EEIP                   :1;
10163:                 unsigned C2IP                   :1;
10164:                 unsigned C1IP                   :1;
10165:                 unsigned OSCFIP                 :1;
10166:             };
10167:             struct {
10168:                 unsigned                        :2;
10169:                 unsigned LVDIP                  :1;
10170:                 unsigned BCLIP                  :1;
10171:             };
10172:             struct {
10173:                 unsigned                        :6;
10174:                 unsigned CMIP                   :1;
10175:             };
10176:         } IPR2bits_t;
10177:         extern volatile IPR2bits_t IPR2bits @ 0xFA2;
10178:         // bitfield macros
10179:         #define _IPR2_CCP2IP_POSN                                   0x0
10180:         #define _IPR2_CCP2IP_POSITION                               0x0
10181:         #define _IPR2_CCP2IP_SIZE                                   0x1
10182:         #define _IPR2_CCP2IP_LENGTH                                 0x1
10183:         #define _IPR2_CCP2IP_MASK                                   0x1
10184:         #define _IPR2_TMR3IP_POSN                                   0x1
10185:         #define _IPR2_TMR3IP_POSITION                               0x1
10186:         #define _IPR2_TMR3IP_SIZE                                   0x1
10187:         #define _IPR2_TMR3IP_LENGTH                                 0x1
10188:         #define _IPR2_TMR3IP_MASK                                   0x2
10189:         #define _IPR2_HLVDIP_POSN                                   0x2
10190:         #define _IPR2_HLVDIP_POSITION                               0x2
10191:         #define _IPR2_HLVDIP_SIZE                                   0x1
10192:         #define _IPR2_HLVDIP_LENGTH                                 0x1
10193:         #define _IPR2_HLVDIP_MASK                                   0x4
10194:         #define _IPR2_BCL1IP_POSN                                   0x3
10195:         #define _IPR2_BCL1IP_POSITION                               0x3
10196:         #define _IPR2_BCL1IP_SIZE                                   0x1
10197:         #define _IPR2_BCL1IP_LENGTH                                 0x1
10198:         #define _IPR2_BCL1IP_MASK                                   0x8
10199:         #define _IPR2_EEIP_POSN                                     0x4
10200:         #define _IPR2_EEIP_POSITION                                 0x4
10201:         #define _IPR2_EEIP_SIZE                                     0x1
10202:         #define _IPR2_EEIP_LENGTH                                   0x1
10203:         #define _IPR2_EEIP_MASK                                     0x10
10204:         #define _IPR2_C2IP_POSN                                     0x5
10205:         #define _IPR2_C2IP_POSITION                                 0x5
10206:         #define _IPR2_C2IP_SIZE                                     0x1
10207:         #define _IPR2_C2IP_LENGTH                                   0x1
10208:         #define _IPR2_C2IP_MASK                                     0x20
10209:         #define _IPR2_C1IP_POSN                                     0x6
10210:         #define _IPR2_C1IP_POSITION                                 0x6
10211:         #define _IPR2_C1IP_SIZE                                     0x1
10212:         #define _IPR2_C1IP_LENGTH                                   0x1
10213:         #define _IPR2_C1IP_MASK                                     0x40
10214:         #define _IPR2_OSCFIP_POSN                                   0x7
10215:         #define _IPR2_OSCFIP_POSITION                               0x7
10216:         #define _IPR2_OSCFIP_SIZE                                   0x1
10217:         #define _IPR2_OSCFIP_LENGTH                                 0x1
10218:         #define _IPR2_OSCFIP_MASK                                   0x80
10219:         #define _IPR2_LVDIP_POSN                                    0x2
10220:         #define _IPR2_LVDIP_POSITION                                0x2
10221:         #define _IPR2_LVDIP_SIZE                                    0x1
10222:         #define _IPR2_LVDIP_LENGTH                                  0x1
10223:         #define _IPR2_LVDIP_MASK                                    0x4
10224:         #define _IPR2_BCLIP_POSN                                    0x3
10225:         #define _IPR2_BCLIP_POSITION                                0x3
10226:         #define _IPR2_BCLIP_SIZE                                    0x1
10227:         #define _IPR2_BCLIP_LENGTH                                  0x1
10228:         #define _IPR2_BCLIP_MASK                                    0x8
10229:         #define _IPR2_CMIP_POSN                                     0x6
10230:         #define _IPR2_CMIP_POSITION                                 0x6
10231:         #define _IPR2_CMIP_SIZE                                     0x1
10232:         #define _IPR2_CMIP_LENGTH                                   0x1
10233:         #define _IPR2_CMIP_MASK                                     0x40
10234:         
10235:         // Register: PIE3
10236:         extern volatile unsigned char           PIE3                @ 0xFA3;
10237:         #ifndef _LIB_BUILD
10238:         asm("PIE3 equ 0FA3h");
10239:         #endif
10240:         // bitfield definitions
10241:         typedef union {
10242:             struct {
10243:                 unsigned TMR1GIE                :1;
10244:                 unsigned TMR3GIE                :1;
10245:                 unsigned TMR5GIE                :1;
10246:                 unsigned CTMUIE                 :1;
10247:                 unsigned TX2IE                  :1;
10248:                 unsigned RC2IE                  :1;
10249:                 unsigned BCL2IE                 :1;
10250:                 unsigned SSP2IE                 :1;
10251:             };
10252:             struct {
10253:                 unsigned RXB0IE                 :1;
10254:             };
10255:             struct {
10256:                 unsigned                        :1;
10257:                 unsigned RXB1IE                 :1;
10258:             };
10259:             struct {
10260:                 unsigned                        :1;
10261:                 unsigned RXBNIE                 :1;
10262:             };
10263:             struct {
10264:                 unsigned                        :2;
10265:                 unsigned TXB0IE                 :1;
10266:             };
10267:             struct {
10268:                 unsigned                        :3;
10269:                 unsigned TXB1IE                 :1;
10270:             };
10271:             struct {
10272:                 unsigned                        :4;
10273:                 unsigned TXB2IE                 :1;
10274:             };
10275:             struct {
10276:                 unsigned                        :4;
10277:                 unsigned TXBNIE                 :1;
10278:             };
10279:         } PIE3bits_t;
10280:         extern volatile PIE3bits_t PIE3bits @ 0xFA3;
10281:         // bitfield macros
10282:         #define _PIE3_TMR1GIE_POSN                                  0x0
10283:         #define _PIE3_TMR1GIE_POSITION                              0x0
10284:         #define _PIE3_TMR1GIE_SIZE                                  0x1
10285:         #define _PIE3_TMR1GIE_LENGTH                                0x1
10286:         #define _PIE3_TMR1GIE_MASK                                  0x1
10287:         #define _PIE3_TMR3GIE_POSN                                  0x1
10288:         #define _PIE3_TMR3GIE_POSITION                              0x1
10289:         #define _PIE3_TMR3GIE_SIZE                                  0x1
10290:         #define _PIE3_TMR3GIE_LENGTH                                0x1
10291:         #define _PIE3_TMR3GIE_MASK                                  0x2
10292:         #define _PIE3_TMR5GIE_POSN                                  0x2
10293:         #define _PIE3_TMR5GIE_POSITION                              0x2
10294:         #define _PIE3_TMR5GIE_SIZE                                  0x1
10295:         #define _PIE3_TMR5GIE_LENGTH                                0x1
10296:         #define _PIE3_TMR5GIE_MASK                                  0x4
10297:         #define _PIE3_CTMUIE_POSN                                   0x3
10298:         #define _PIE3_CTMUIE_POSITION                               0x3
10299:         #define _PIE3_CTMUIE_SIZE                                   0x1
10300:         #define _PIE3_CTMUIE_LENGTH                                 0x1
10301:         #define _PIE3_CTMUIE_MASK                                   0x8
10302:         #define _PIE3_TX2IE_POSN                                    0x4
10303:         #define _PIE3_TX2IE_POSITION                                0x4
10304:         #define _PIE3_TX2IE_SIZE                                    0x1
10305:         #define _PIE3_TX2IE_LENGTH                                  0x1
10306:         #define _PIE3_TX2IE_MASK                                    0x10
10307:         #define _PIE3_RC2IE_POSN                                    0x5
10308:         #define _PIE3_RC2IE_POSITION                                0x5
10309:         #define _PIE3_RC2IE_SIZE                                    0x1
10310:         #define _PIE3_RC2IE_LENGTH                                  0x1
10311:         #define _PIE3_RC2IE_MASK                                    0x20
10312:         #define _PIE3_BCL2IE_POSN                                   0x6
10313:         #define _PIE3_BCL2IE_POSITION                               0x6
10314:         #define _PIE3_BCL2IE_SIZE                                   0x1
10315:         #define _PIE3_BCL2IE_LENGTH                                 0x1
10316:         #define _PIE3_BCL2IE_MASK                                   0x40
10317:         #define _PIE3_SSP2IE_POSN                                   0x7
10318:         #define _PIE3_SSP2IE_POSITION                               0x7
10319:         #define _PIE3_SSP2IE_SIZE                                   0x1
10320:         #define _PIE3_SSP2IE_LENGTH                                 0x1
10321:         #define _PIE3_SSP2IE_MASK                                   0x80
10322:         #define _PIE3_RXB0IE_POSN                                   0x0
10323:         #define _PIE3_RXB0IE_POSITION                               0x0
10324:         #define _PIE3_RXB0IE_SIZE                                   0x1
10325:         #define _PIE3_RXB0IE_LENGTH                                 0x1
10326:         #define _PIE3_RXB0IE_MASK                                   0x1
10327:         #define _PIE3_RXB1IE_POSN                                   0x1
10328:         #define _PIE3_RXB1IE_POSITION                               0x1
10329:         #define _PIE3_RXB1IE_SIZE                                   0x1
10330:         #define _PIE3_RXB1IE_LENGTH                                 0x1
10331:         #define _PIE3_RXB1IE_MASK                                   0x2
10332:         #define _PIE3_RXBNIE_POSN                                   0x1
10333:         #define _PIE3_RXBNIE_POSITION                               0x1
10334:         #define _PIE3_RXBNIE_SIZE                                   0x1
10335:         #define _PIE3_RXBNIE_LENGTH                                 0x1
10336:         #define _PIE3_RXBNIE_MASK                                   0x2
10337:         #define _PIE3_TXB0IE_POSN                                   0x2
10338:         #define _PIE3_TXB0IE_POSITION                               0x2
10339:         #define _PIE3_TXB0IE_SIZE                                   0x1
10340:         #define _PIE3_TXB0IE_LENGTH                                 0x1
10341:         #define _PIE3_TXB0IE_MASK                                   0x4
10342:         #define _PIE3_TXB1IE_POSN                                   0x3
10343:         #define _PIE3_TXB1IE_POSITION                               0x3
10344:         #define _PIE3_TXB1IE_SIZE                                   0x1
10345:         #define _PIE3_TXB1IE_LENGTH                                 0x1
10346:         #define _PIE3_TXB1IE_MASK                                   0x8
10347:         #define _PIE3_TXB2IE_POSN                                   0x4
10348:         #define _PIE3_TXB2IE_POSITION                               0x4
10349:         #define _PIE3_TXB2IE_SIZE                                   0x1
10350:         #define _PIE3_TXB2IE_LENGTH                                 0x1
10351:         #define _PIE3_TXB2IE_MASK                                   0x10
10352:         #define _PIE3_TXBNIE_POSN                                   0x4
10353:         #define _PIE3_TXBNIE_POSITION                               0x4
10354:         #define _PIE3_TXBNIE_SIZE                                   0x1
10355:         #define _PIE3_TXBNIE_LENGTH                                 0x1
10356:         #define _PIE3_TXBNIE_MASK                                   0x10
10357:         
10358:         // Register: PIR3
10359:         extern volatile unsigned char           PIR3                @ 0xFA4;
10360:         #ifndef _LIB_BUILD
10361:         asm("PIR3 equ 0FA4h");
10362:         #endif
10363:         // bitfield definitions
10364:         typedef union {
10365:             struct {
10366:                 unsigned TMR1GIF                :1;
10367:                 unsigned TMR3GIF                :1;
10368:                 unsigned TMR5GIF                :1;
10369:                 unsigned CTMUIF                 :1;
10370:                 unsigned TX2IF                  :1;
10371:                 unsigned RC2IF                  :1;
10372:                 unsigned BCL2IF                 :1;
10373:                 unsigned SSP2IF                 :1;
10374:             };
10375:             struct {
10376:                 unsigned                        :1;
10377:                 unsigned RXBNIF                 :1;
10378:             };
10379:             struct {
10380:                 unsigned                        :4;
10381:                 unsigned TXBNIF                 :1;
10382:             };
10383:         } PIR3bits_t;
10384:         extern volatile PIR3bits_t PIR3bits @ 0xFA4;
10385:         // bitfield macros
10386:         #define _PIR3_TMR1GIF_POSN                                  0x0
10387:         #define _PIR3_TMR1GIF_POSITION                              0x0
10388:         #define _PIR3_TMR1GIF_SIZE                                  0x1
10389:         #define _PIR3_TMR1GIF_LENGTH                                0x1
10390:         #define _PIR3_TMR1GIF_MASK                                  0x1
10391:         #define _PIR3_TMR3GIF_POSN                                  0x1
10392:         #define _PIR3_TMR3GIF_POSITION                              0x1
10393:         #define _PIR3_TMR3GIF_SIZE                                  0x1
10394:         #define _PIR3_TMR3GIF_LENGTH                                0x1
10395:         #define _PIR3_TMR3GIF_MASK                                  0x2
10396:         #define _PIR3_TMR5GIF_POSN                                  0x2
10397:         #define _PIR3_TMR5GIF_POSITION                              0x2
10398:         #define _PIR3_TMR5GIF_SIZE                                  0x1
10399:         #define _PIR3_TMR5GIF_LENGTH                                0x1
10400:         #define _PIR3_TMR5GIF_MASK                                  0x4
10401:         #define _PIR3_CTMUIF_POSN                                   0x3
10402:         #define _PIR3_CTMUIF_POSITION                               0x3
10403:         #define _PIR3_CTMUIF_SIZE                                   0x1
10404:         #define _PIR3_CTMUIF_LENGTH                                 0x1
10405:         #define _PIR3_CTMUIF_MASK                                   0x8
10406:         #define _PIR3_TX2IF_POSN                                    0x4
10407:         #define _PIR3_TX2IF_POSITION                                0x4
10408:         #define _PIR3_TX2IF_SIZE                                    0x1
10409:         #define _PIR3_TX2IF_LENGTH                                  0x1
10410:         #define _PIR3_TX2IF_MASK                                    0x10
10411:         #define _PIR3_RC2IF_POSN                                    0x5
10412:         #define _PIR3_RC2IF_POSITION                                0x5
10413:         #define _PIR3_RC2IF_SIZE                                    0x1
10414:         #define _PIR3_RC2IF_LENGTH                                  0x1
10415:         #define _PIR3_RC2IF_MASK                                    0x20
10416:         #define _PIR3_BCL2IF_POSN                                   0x6
10417:         #define _PIR3_BCL2IF_POSITION                               0x6
10418:         #define _PIR3_BCL2IF_SIZE                                   0x1
10419:         #define _PIR3_BCL2IF_LENGTH                                 0x1
10420:         #define _PIR3_BCL2IF_MASK                                   0x40
10421:         #define _PIR3_SSP2IF_POSN                                   0x7
10422:         #define _PIR3_SSP2IF_POSITION                               0x7
10423:         #define _PIR3_SSP2IF_SIZE                                   0x1
10424:         #define _PIR3_SSP2IF_LENGTH                                 0x1
10425:         #define _PIR3_SSP2IF_MASK                                   0x80
10426:         #define _PIR3_RXBNIF_POSN                                   0x1
10427:         #define _PIR3_RXBNIF_POSITION                               0x1
10428:         #define _PIR3_RXBNIF_SIZE                                   0x1
10429:         #define _PIR3_RXBNIF_LENGTH                                 0x1
10430:         #define _PIR3_RXBNIF_MASK                                   0x2
10431:         #define _PIR3_TXBNIF_POSN                                   0x4
10432:         #define _PIR3_TXBNIF_POSITION                               0x4
10433:         #define _PIR3_TXBNIF_SIZE                                   0x1
10434:         #define _PIR3_TXBNIF_LENGTH                                 0x1
10435:         #define _PIR3_TXBNIF_MASK                                   0x10
10436:         
10437:         // Register: IPR3
10438:         extern volatile unsigned char           IPR3                @ 0xFA5;
10439:         #ifndef _LIB_BUILD
10440:         asm("IPR3 equ 0FA5h");
10441:         #endif
10442:         // bitfield definitions
10443:         typedef union {
10444:             struct {
10445:                 unsigned TMR1GIP                :1;
10446:                 unsigned TMR3GIP                :1;
10447:                 unsigned TMR5GIP                :1;
10448:                 unsigned CTMUIP                 :1;
10449:                 unsigned TX2IP                  :1;
10450:                 unsigned RC2IP                  :1;
10451:                 unsigned BCL2IP                 :1;
10452:                 unsigned SSP2IP                 :1;
10453:             };
10454:             struct {
10455:                 unsigned                        :1;
10456:                 unsigned RXBNIP                 :1;
10457:             };
10458:             struct {
10459:                 unsigned                        :4;
10460:                 unsigned TXBNIP                 :1;
10461:             };
10462:         } IPR3bits_t;
10463:         extern volatile IPR3bits_t IPR3bits @ 0xFA5;
10464:         // bitfield macros
10465:         #define _IPR3_TMR1GIP_POSN                                  0x0
10466:         #define _IPR3_TMR1GIP_POSITION                              0x0
10467:         #define _IPR3_TMR1GIP_SIZE                                  0x1
10468:         #define _IPR3_TMR1GIP_LENGTH                                0x1
10469:         #define _IPR3_TMR1GIP_MASK                                  0x1
10470:         #define _IPR3_TMR3GIP_POSN                                  0x1
10471:         #define _IPR3_TMR3GIP_POSITION                              0x1
10472:         #define _IPR3_TMR3GIP_SIZE                                  0x1
10473:         #define _IPR3_TMR3GIP_LENGTH                                0x1
10474:         #define _IPR3_TMR3GIP_MASK                                  0x2
10475:         #define _IPR3_TMR5GIP_POSN                                  0x2
10476:         #define _IPR3_TMR5GIP_POSITION                              0x2
10477:         #define _IPR3_TMR5GIP_SIZE                                  0x1
10478:         #define _IPR3_TMR5GIP_LENGTH                                0x1
10479:         #define _IPR3_TMR5GIP_MASK                                  0x4
10480:         #define _IPR3_CTMUIP_POSN                                   0x3
10481:         #define _IPR3_CTMUIP_POSITION                               0x3
10482:         #define _IPR3_CTMUIP_SIZE                                   0x1
10483:         #define _IPR3_CTMUIP_LENGTH                                 0x1
10484:         #define _IPR3_CTMUIP_MASK                                   0x8
10485:         #define _IPR3_TX2IP_POSN                                    0x4
10486:         #define _IPR3_TX2IP_POSITION                                0x4
10487:         #define _IPR3_TX2IP_SIZE                                    0x1
10488:         #define _IPR3_TX2IP_LENGTH                                  0x1
10489:         #define _IPR3_TX2IP_MASK                                    0x10
10490:         #define _IPR3_RC2IP_POSN                                    0x5
10491:         #define _IPR3_RC2IP_POSITION                                0x5
10492:         #define _IPR3_RC2IP_SIZE                                    0x1
10493:         #define _IPR3_RC2IP_LENGTH                                  0x1
10494:         #define _IPR3_RC2IP_MASK                                    0x20
10495:         #define _IPR3_BCL2IP_POSN                                   0x6
10496:         #define _IPR3_BCL2IP_POSITION                               0x6
10497:         #define _IPR3_BCL2IP_SIZE                                   0x1
10498:         #define _IPR3_BCL2IP_LENGTH                                 0x1
10499:         #define _IPR3_BCL2IP_MASK                                   0x40
10500:         #define _IPR3_SSP2IP_POSN                                   0x7
10501:         #define _IPR3_SSP2IP_POSITION                               0x7
10502:         #define _IPR3_SSP2IP_SIZE                                   0x1
10503:         #define _IPR3_SSP2IP_LENGTH                                 0x1
10504:         #define _IPR3_SSP2IP_MASK                                   0x80
10505:         #define _IPR3_RXBNIP_POSN                                   0x1
10506:         #define _IPR3_RXBNIP_POSITION                               0x1
10507:         #define _IPR3_RXBNIP_SIZE                                   0x1
10508:         #define _IPR3_RXBNIP_LENGTH                                 0x1
10509:         #define _IPR3_RXBNIP_MASK                                   0x2
10510:         #define _IPR3_TXBNIP_POSN                                   0x4
10511:         #define _IPR3_TXBNIP_POSITION                               0x4
10512:         #define _IPR3_TXBNIP_SIZE                                   0x1
10513:         #define _IPR3_TXBNIP_LENGTH                                 0x1
10514:         #define _IPR3_TXBNIP_MASK                                   0x10
10515:         
10516:         // Register: EECON1
10517:         extern volatile unsigned char           EECON1              @ 0xFA6;
10518:         #ifndef _LIB_BUILD
10519:         asm("EECON1 equ 0FA6h");
10520:         #endif
10521:         // bitfield definitions
10522:         typedef union {
10523:             struct {
10524:                 unsigned RD                     :1;
10525:                 unsigned WR                     :1;
10526:                 unsigned WREN                   :1;
10527:                 unsigned WRERR                  :1;
10528:                 unsigned FREE                   :1;
10529:                 unsigned                        :1;
10530:                 unsigned CFGS                   :1;
10531:                 unsigned EEPGD                  :1;
10532:             };
10533:             struct {
10534:                 unsigned                        :6;
10535:                 unsigned EEFS                   :1;
10536:             };
10537:         } EECON1bits_t;
10538:         extern volatile EECON1bits_t EECON1bits @ 0xFA6;
10539:         // bitfield macros
10540:         #define _EECON1_RD_POSN                                     0x0
10541:         #define _EECON1_RD_POSITION                                 0x0
10542:         #define _EECON1_RD_SIZE                                     0x1
10543:         #define _EECON1_RD_LENGTH                                   0x1
10544:         #define _EECON1_RD_MASK                                     0x1
10545:         #define _EECON1_WR_POSN                                     0x1
10546:         #define _EECON1_WR_POSITION                                 0x1
10547:         #define _EECON1_WR_SIZE                                     0x1
10548:         #define _EECON1_WR_LENGTH                                   0x1
10549:         #define _EECON1_WR_MASK                                     0x2
10550:         #define _EECON1_WREN_POSN                                   0x2
10551:         #define _EECON1_WREN_POSITION                               0x2
10552:         #define _EECON1_WREN_SIZE                                   0x1
10553:         #define _EECON1_WREN_LENGTH                                 0x1
10554:         #define _EECON1_WREN_MASK                                   0x4
10555:         #define _EECON1_WRERR_POSN                                  0x3
10556:         #define _EECON1_WRERR_POSITION                              0x3
10557:         #define _EECON1_WRERR_SIZE                                  0x1
10558:         #define _EECON1_WRERR_LENGTH                                0x1
10559:         #define _EECON1_WRERR_MASK                                  0x8
10560:         #define _EECON1_FREE_POSN                                   0x4
10561:         #define _EECON1_FREE_POSITION                               0x4
10562:         #define _EECON1_FREE_SIZE                                   0x1
10563:         #define _EECON1_FREE_LENGTH                                 0x1
10564:         #define _EECON1_FREE_MASK                                   0x10
10565:         #define _EECON1_CFGS_POSN                                   0x6
10566:         #define _EECON1_CFGS_POSITION                               0x6
10567:         #define _EECON1_CFGS_SIZE                                   0x1
10568:         #define _EECON1_CFGS_LENGTH                                 0x1
10569:         #define _EECON1_CFGS_MASK                                   0x40
10570:         #define _EECON1_EEPGD_POSN                                  0x7
10571:         #define _EECON1_EEPGD_POSITION                              0x7
10572:         #define _EECON1_EEPGD_SIZE                                  0x1
10573:         #define _EECON1_EEPGD_LENGTH                                0x1
10574:         #define _EECON1_EEPGD_MASK                                  0x80
10575:         #define _EECON1_EEFS_POSN                                   0x6
10576:         #define _EECON1_EEFS_POSITION                               0x6
10577:         #define _EECON1_EEFS_SIZE                                   0x1
10578:         #define _EECON1_EEFS_LENGTH                                 0x1
10579:         #define _EECON1_EEFS_MASK                                   0x40
10580:         
10581:         // Register: EECON2
10582:         extern volatile unsigned char           EECON2              @ 0xFA7;
10583:         #ifndef _LIB_BUILD
10584:         asm("EECON2 equ 0FA7h");
10585:         #endif
10586:         // bitfield definitions
10587:         typedef union {
10588:             struct {
10589:                 unsigned EECON2                 :8;
10590:             };
10591:         } EECON2bits_t;
10592:         extern volatile EECON2bits_t EECON2bits @ 0xFA7;
10593:         // bitfield macros
10594:         #define _EECON2_EECON2_POSN                                 0x0
10595:         #define _EECON2_EECON2_POSITION                             0x0
10596:         #define _EECON2_EECON2_SIZE                                 0x8
10597:         #define _EECON2_EECON2_LENGTH                               0x8
10598:         #define _EECON2_EECON2_MASK                                 0xFF
10599:         
10600:         // Register: EEDATA
10601:         extern volatile unsigned char           EEDATA              @ 0xFA8;
10602:         #ifndef _LIB_BUILD
10603:         asm("EEDATA equ 0FA8h");
10604:         #endif
10605:         // bitfield definitions
10606:         typedef union {
10607:             struct {
10608:                 unsigned EEDATA                 :8;
10609:             };
10610:         } EEDATAbits_t;
10611:         extern volatile EEDATAbits_t EEDATAbits @ 0xFA8;
10612:         // bitfield macros
10613:         #define _EEDATA_EEDATA_POSN                                 0x0
10614:         #define _EEDATA_EEDATA_POSITION                             0x0
10615:         #define _EEDATA_EEDATA_SIZE                                 0x8
10616:         #define _EEDATA_EEDATA_LENGTH                               0x8
10617:         #define _EEDATA_EEDATA_MASK                                 0xFF
10618:         
10619:         // Register: EEADR
10620:         extern volatile unsigned char           EEADR               @ 0xFA9;
10621:         #ifndef _LIB_BUILD
10622:         asm("EEADR equ 0FA9h");
10623:         #endif
10624:         // bitfield definitions
10625:         typedef union {
10626:             struct {
10627:                 unsigned EEADR                  :8;
10628:             };
10629:             struct {
10630:                 unsigned EEADR0                 :1;
10631:                 unsigned EEADR1                 :1;
10632:                 unsigned EEADR2                 :1;
10633:                 unsigned EEADR3                 :1;
10634:                 unsigned EEADR4                 :1;
10635:                 unsigned EEADR5                 :1;
10636:                 unsigned EEADR6                 :1;
10637:                 unsigned EEADR7                 :1;
10638:             };
10639:         } EEADRbits_t;
10640:         extern volatile EEADRbits_t EEADRbits @ 0xFA9;
10641:         // bitfield macros
10642:         #define _EEADR_EEADR_POSN                                   0x0
10643:         #define _EEADR_EEADR_POSITION                               0x0
10644:         #define _EEADR_EEADR_SIZE                                   0x8
10645:         #define _EEADR_EEADR_LENGTH                                 0x8
10646:         #define _EEADR_EEADR_MASK                                   0xFF
10647:         #define _EEADR_EEADR0_POSN                                  0x0
10648:         #define _EEADR_EEADR0_POSITION                              0x0
10649:         #define _EEADR_EEADR0_SIZE                                  0x1
10650:         #define _EEADR_EEADR0_LENGTH                                0x1
10651:         #define _EEADR_EEADR0_MASK                                  0x1
10652:         #define _EEADR_EEADR1_POSN                                  0x1
10653:         #define _EEADR_EEADR1_POSITION                              0x1
10654:         #define _EEADR_EEADR1_SIZE                                  0x1
10655:         #define _EEADR_EEADR1_LENGTH                                0x1
10656:         #define _EEADR_EEADR1_MASK                                  0x2
10657:         #define _EEADR_EEADR2_POSN                                  0x2
10658:         #define _EEADR_EEADR2_POSITION                              0x2
10659:         #define _EEADR_EEADR2_SIZE                                  0x1
10660:         #define _EEADR_EEADR2_LENGTH                                0x1
10661:         #define _EEADR_EEADR2_MASK                                  0x4
10662:         #define _EEADR_EEADR3_POSN                                  0x3
10663:         #define _EEADR_EEADR3_POSITION                              0x3
10664:         #define _EEADR_EEADR3_SIZE                                  0x1
10665:         #define _EEADR_EEADR3_LENGTH                                0x1
10666:         #define _EEADR_EEADR3_MASK                                  0x8
10667:         #define _EEADR_EEADR4_POSN                                  0x4
10668:         #define _EEADR_EEADR4_POSITION                              0x4
10669:         #define _EEADR_EEADR4_SIZE                                  0x1
10670:         #define _EEADR_EEADR4_LENGTH                                0x1
10671:         #define _EEADR_EEADR4_MASK                                  0x10
10672:         #define _EEADR_EEADR5_POSN                                  0x5
10673:         #define _EEADR_EEADR5_POSITION                              0x5
10674:         #define _EEADR_EEADR5_SIZE                                  0x1
10675:         #define _EEADR_EEADR5_LENGTH                                0x1
10676:         #define _EEADR_EEADR5_MASK                                  0x20
10677:         #define _EEADR_EEADR6_POSN                                  0x6
10678:         #define _EEADR_EEADR6_POSITION                              0x6
10679:         #define _EEADR_EEADR6_SIZE                                  0x1
10680:         #define _EEADR_EEADR6_LENGTH                                0x1
10681:         #define _EEADR_EEADR6_MASK                                  0x40
10682:         #define _EEADR_EEADR7_POSN                                  0x7
10683:         #define _EEADR_EEADR7_POSITION                              0x7
10684:         #define _EEADR_EEADR7_SIZE                                  0x1
10685:         #define _EEADR_EEADR7_LENGTH                                0x1
10686:         #define _EEADR_EEADR7_MASK                                  0x80
10687:         
10688:         // Register: RCSTA1
10689:         extern volatile unsigned char           RCSTA1              @ 0xFAB;
10690:         #ifndef _LIB_BUILD
10691:         asm("RCSTA1 equ 0FABh");
10692:         #endif
10693:         // aliases
10694:         extern volatile unsigned char           RCSTA               @ 0xFAB;
10695:         #ifndef _LIB_BUILD
10696:         asm("RCSTA equ 0FABh");
10697:         #endif
10698:         extern volatile unsigned char           RC1STA              @ 0xFAB;
10699:         #ifndef _LIB_BUILD
10700:         asm("RC1STA equ 0FABh");
10701:         #endif
10702:         // bitfield definitions
10703:         typedef union {
10704:             struct {
10705:                 unsigned RX9D                   :1;
10706:                 unsigned OERR                   :1;
10707:                 unsigned FERR                   :1;
10708:                 unsigned ADDEN                  :1;
10709:                 unsigned CREN                   :1;
10710:                 unsigned SREN                   :1;
10711:                 unsigned RX9                    :1;
10712:                 unsigned SPEN                   :1;
10713:             };
10714:             struct {
10715:                 unsigned                        :3;
10716:                 unsigned ADEN                   :1;
10717:             };
10718:             struct {
10719:                 unsigned RX9D1                  :1;
10720:                 unsigned OERR1                  :1;
10721:                 unsigned FERR1                  :1;
10722:                 unsigned ADDEN1                 :1;
10723:                 unsigned CREN1                  :1;
10724:                 unsigned SREN1                  :1;
10725:                 unsigned RX91                   :1;
10726:                 unsigned SPEN1                  :1;
10727:             };
10728:             struct {
10729:                 unsigned                        :6;
10730:                 unsigned RC8_9                  :1;
10731:             };
10732:             struct {
10733:                 unsigned                        :6;
10734:                 unsigned RC9                    :1;
10735:             };
10736:             struct {
10737:                 unsigned RCD8                   :1;
10738:             };
10739:             struct {
10740:                 unsigned                        :5;
10741:                 unsigned SRENA                  :1;
10742:             };
10743:         } RCSTA1bits_t;
10744:         extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAB;
10745:         // bitfield macros
10746:         #define _RCSTA1_RX9D_POSN                                   0x0
10747:         #define _RCSTA1_RX9D_POSITION                               0x0
10748:         #define _RCSTA1_RX9D_SIZE                                   0x1
10749:         #define _RCSTA1_RX9D_LENGTH                                 0x1
10750:         #define _RCSTA1_RX9D_MASK                                   0x1
10751:         #define _RCSTA1_OERR_POSN                                   0x1
10752:         #define _RCSTA1_OERR_POSITION                               0x1
10753:         #define _RCSTA1_OERR_SIZE                                   0x1
10754:         #define _RCSTA1_OERR_LENGTH                                 0x1
10755:         #define _RCSTA1_OERR_MASK                                   0x2
10756:         #define _RCSTA1_FERR_POSN                                   0x2
10757:         #define _RCSTA1_FERR_POSITION                               0x2
10758:         #define _RCSTA1_FERR_SIZE                                   0x1
10759:         #define _RCSTA1_FERR_LENGTH                                 0x1
10760:         #define _RCSTA1_FERR_MASK                                   0x4
10761:         #define _RCSTA1_ADDEN_POSN                                  0x3
10762:         #define _RCSTA1_ADDEN_POSITION                              0x3
10763:         #define _RCSTA1_ADDEN_SIZE                                  0x1
10764:         #define _RCSTA1_ADDEN_LENGTH                                0x1
10765:         #define _RCSTA1_ADDEN_MASK                                  0x8
10766:         #define _RCSTA1_CREN_POSN                                   0x4
10767:         #define _RCSTA1_CREN_POSITION                               0x4
10768:         #define _RCSTA1_CREN_SIZE                                   0x1
10769:         #define _RCSTA1_CREN_LENGTH                                 0x1
10770:         #define _RCSTA1_CREN_MASK                                   0x10
10771:         #define _RCSTA1_SREN_POSN                                   0x5
10772:         #define _RCSTA1_SREN_POSITION                               0x5
10773:         #define _RCSTA1_SREN_SIZE                                   0x1
10774:         #define _RCSTA1_SREN_LENGTH                                 0x1
10775:         #define _RCSTA1_SREN_MASK                                   0x20
10776:         #define _RCSTA1_RX9_POSN                                    0x6
10777:         #define _RCSTA1_RX9_POSITION                                0x6
10778:         #define _RCSTA1_RX9_SIZE                                    0x1
10779:         #define _RCSTA1_RX9_LENGTH                                  0x1
10780:         #define _RCSTA1_RX9_MASK                                    0x40
10781:         #define _RCSTA1_SPEN_POSN                                   0x7
10782:         #define _RCSTA1_SPEN_POSITION                               0x7
10783:         #define _RCSTA1_SPEN_SIZE                                   0x1
10784:         #define _RCSTA1_SPEN_LENGTH                                 0x1
10785:         #define _RCSTA1_SPEN_MASK                                   0x80
10786:         #define _RCSTA1_ADEN_POSN                                   0x3
10787:         #define _RCSTA1_ADEN_POSITION                               0x3
10788:         #define _RCSTA1_ADEN_SIZE                                   0x1
10789:         #define _RCSTA1_ADEN_LENGTH                                 0x1
10790:         #define _RCSTA1_ADEN_MASK                                   0x8
10791:         #define _RCSTA1_RX9D1_POSN                                  0x0
10792:         #define _RCSTA1_RX9D1_POSITION                              0x0
10793:         #define _RCSTA1_RX9D1_SIZE                                  0x1
10794:         #define _RCSTA1_RX9D1_LENGTH                                0x1
10795:         #define _RCSTA1_RX9D1_MASK                                  0x1
10796:         #define _RCSTA1_OERR1_POSN                                  0x1
10797:         #define _RCSTA1_OERR1_POSITION                              0x1
10798:         #define _RCSTA1_OERR1_SIZE                                  0x1
10799:         #define _RCSTA1_OERR1_LENGTH                                0x1
10800:         #define _RCSTA1_OERR1_MASK                                  0x2
10801:         #define _RCSTA1_FERR1_POSN                                  0x2
10802:         #define _RCSTA1_FERR1_POSITION                              0x2
10803:         #define _RCSTA1_FERR1_SIZE                                  0x1
10804:         #define _RCSTA1_FERR1_LENGTH                                0x1
10805:         #define _RCSTA1_FERR1_MASK                                  0x4
10806:         #define _RCSTA1_ADDEN1_POSN                                 0x3
10807:         #define _RCSTA1_ADDEN1_POSITION                             0x3
10808:         #define _RCSTA1_ADDEN1_SIZE                                 0x1
10809:         #define _RCSTA1_ADDEN1_LENGTH                               0x1
10810:         #define _RCSTA1_ADDEN1_MASK                                 0x8
10811:         #define _RCSTA1_CREN1_POSN                                  0x4
10812:         #define _RCSTA1_CREN1_POSITION                              0x4
10813:         #define _RCSTA1_CREN1_SIZE                                  0x1
10814:         #define _RCSTA1_CREN1_LENGTH                                0x1
10815:         #define _RCSTA1_CREN1_MASK                                  0x10
10816:         #define _RCSTA1_SREN1_POSN                                  0x5
10817:         #define _RCSTA1_SREN1_POSITION                              0x5
10818:         #define _RCSTA1_SREN1_SIZE                                  0x1
10819:         #define _RCSTA1_SREN1_LENGTH                                0x1
10820:         #define _RCSTA1_SREN1_MASK                                  0x20
10821:         #define _RCSTA1_RX91_POSN                                   0x6
10822:         #define _RCSTA1_RX91_POSITION                               0x6
10823:         #define _RCSTA1_RX91_SIZE                                   0x1
10824:         #define _RCSTA1_RX91_LENGTH                                 0x1
10825:         #define _RCSTA1_RX91_MASK                                   0x40
10826:         #define _RCSTA1_SPEN1_POSN                                  0x7
10827:         #define _RCSTA1_SPEN1_POSITION                              0x7
10828:         #define _RCSTA1_SPEN1_SIZE                                  0x1
10829:         #define _RCSTA1_SPEN1_LENGTH                                0x1
10830:         #define _RCSTA1_SPEN1_MASK                                  0x80
10831:         #define _RCSTA1_RC8_9_POSN                                  0x6
10832:         #define _RCSTA1_RC8_9_POSITION                              0x6
10833:         #define _RCSTA1_RC8_9_SIZE                                  0x1
10834:         #define _RCSTA1_RC8_9_LENGTH                                0x1
10835:         #define _RCSTA1_RC8_9_MASK                                  0x40
10836:         #define _RCSTA1_RC9_POSN                                    0x6
10837:         #define _RCSTA1_RC9_POSITION                                0x6
10838:         #define _RCSTA1_RC9_SIZE                                    0x1
10839:         #define _RCSTA1_RC9_LENGTH                                  0x1
10840:         #define _RCSTA1_RC9_MASK                                    0x40
10841:         #define _RCSTA1_RCD8_POSN                                   0x0
10842:         #define _RCSTA1_RCD8_POSITION                               0x0
10843:         #define _RCSTA1_RCD8_SIZE                                   0x1
10844:         #define _RCSTA1_RCD8_LENGTH                                 0x1
10845:         #define _RCSTA1_RCD8_MASK                                   0x1
10846:         #define _RCSTA1_SRENA_POSN                                  0x5
10847:         #define _RCSTA1_SRENA_POSITION                              0x5
10848:         #define _RCSTA1_SRENA_SIZE                                  0x1
10849:         #define _RCSTA1_SRENA_LENGTH                                0x1
10850:         #define _RCSTA1_SRENA_MASK                                  0x20
10851:         // alias bitfield definitions
10852:         typedef union {
10853:             struct {
10854:                 unsigned RX9D                   :1;
10855:                 unsigned OERR                   :1;
10856:                 unsigned FERR                   :1;
10857:                 unsigned ADDEN                  :1;
10858:                 unsigned CREN                   :1;
10859:                 unsigned SREN                   :1;
10860:                 unsigned RX9                    :1;
10861:                 unsigned SPEN                   :1;
10862:             };
10863:             struct {
10864:                 unsigned                        :3;
10865:                 unsigned ADEN                   :1;
10866:             };
10867:             struct {
10868:                 unsigned RX9D1                  :1;
10869:                 unsigned OERR1                  :1;
10870:                 unsigned FERR1                  :1;
10871:                 unsigned ADDEN1                 :1;
10872:                 unsigned CREN1                  :1;
10873:                 unsigned SREN1                  :1;
10874:                 unsigned RX91                   :1;
10875:                 unsigned SPEN1                  :1;
10876:             };
10877:             struct {
10878:                 unsigned                        :6;
10879:                 unsigned RC8_9                  :1;
10880:             };
10881:             struct {
10882:                 unsigned                        :6;
10883:                 unsigned RC9                    :1;
10884:             };
10885:             struct {
10886:                 unsigned RCD8                   :1;
10887:             };
10888:             struct {
10889:                 unsigned                        :5;
10890:                 unsigned SRENA                  :1;
10891:             };
10892:         } RCSTAbits_t;
10893:         extern volatile RCSTAbits_t RCSTAbits @ 0xFAB;
10894:         // bitfield macros
10895:         #define _RCSTA_RX9D_POSN                                    0x0
10896:         #define _RCSTA_RX9D_POSITION                                0x0
10897:         #define _RCSTA_RX9D_SIZE                                    0x1
10898:         #define _RCSTA_RX9D_LENGTH                                  0x1
10899:         #define _RCSTA_RX9D_MASK                                    0x1
10900:         #define _RCSTA_OERR_POSN                                    0x1
10901:         #define _RCSTA_OERR_POSITION                                0x1
10902:         #define _RCSTA_OERR_SIZE                                    0x1
10903:         #define _RCSTA_OERR_LENGTH                                  0x1
10904:         #define _RCSTA_OERR_MASK                                    0x2
10905:         #define _RCSTA_FERR_POSN                                    0x2
10906:         #define _RCSTA_FERR_POSITION                                0x2
10907:         #define _RCSTA_FERR_SIZE                                    0x1
10908:         #define _RCSTA_FERR_LENGTH                                  0x1
10909:         #define _RCSTA_FERR_MASK                                    0x4
10910:         #define _RCSTA_ADDEN_POSN                                   0x3
10911:         #define _RCSTA_ADDEN_POSITION                               0x3
10912:         #define _RCSTA_ADDEN_SIZE                                   0x1
10913:         #define _RCSTA_ADDEN_LENGTH                                 0x1
10914:         #define _RCSTA_ADDEN_MASK                                   0x8
10915:         #define _RCSTA_CREN_POSN                                    0x4
10916:         #define _RCSTA_CREN_POSITION                                0x4
10917:         #define _RCSTA_CREN_SIZE                                    0x1
10918:         #define _RCSTA_CREN_LENGTH                                  0x1
10919:         #define _RCSTA_CREN_MASK                                    0x10
10920:         #define _RCSTA_SREN_POSN                                    0x5
10921:         #define _RCSTA_SREN_POSITION                                0x5
10922:         #define _RCSTA_SREN_SIZE                                    0x1
10923:         #define _RCSTA_SREN_LENGTH                                  0x1
10924:         #define _RCSTA_SREN_MASK                                    0x20
10925:         #define _RCSTA_RX9_POSN                                     0x6
10926:         #define _RCSTA_RX9_POSITION                                 0x6
10927:         #define _RCSTA_RX9_SIZE                                     0x1
10928:         #define _RCSTA_RX9_LENGTH                                   0x1
10929:         #define _RCSTA_RX9_MASK                                     0x40
10930:         #define _RCSTA_SPEN_POSN                                    0x7
10931:         #define _RCSTA_SPEN_POSITION                                0x7
10932:         #define _RCSTA_SPEN_SIZE                                    0x1
10933:         #define _RCSTA_SPEN_LENGTH                                  0x1
10934:         #define _RCSTA_SPEN_MASK                                    0x80
10935:         #define _RCSTA_ADEN_POSN                                    0x3
10936:         #define _RCSTA_ADEN_POSITION                                0x3
10937:         #define _RCSTA_ADEN_SIZE                                    0x1
10938:         #define _RCSTA_ADEN_LENGTH                                  0x1
10939:         #define _RCSTA_ADEN_MASK                                    0x8
10940:         #define _RCSTA_RX9D1_POSN                                   0x0
10941:         #define _RCSTA_RX9D1_POSITION                               0x0
10942:         #define _RCSTA_RX9D1_SIZE                                   0x1
10943:         #define _RCSTA_RX9D1_LENGTH                                 0x1
10944:         #define _RCSTA_RX9D1_MASK                                   0x1
10945:         #define _RCSTA_OERR1_POSN                                   0x1
10946:         #define _RCSTA_OERR1_POSITION                               0x1
10947:         #define _RCSTA_OERR1_SIZE                                   0x1
10948:         #define _RCSTA_OERR1_LENGTH                                 0x1
10949:         #define _RCSTA_OERR1_MASK                                   0x2
10950:         #define _RCSTA_FERR1_POSN                                   0x2
10951:         #define _RCSTA_FERR1_POSITION                               0x2
10952:         #define _RCSTA_FERR1_SIZE                                   0x1
10953:         #define _RCSTA_FERR1_LENGTH                                 0x1
10954:         #define _RCSTA_FERR1_MASK                                   0x4
10955:         #define _RCSTA_ADDEN1_POSN                                  0x3
10956:         #define _RCSTA_ADDEN1_POSITION                              0x3
10957:         #define _RCSTA_ADDEN1_SIZE                                  0x1
10958:         #define _RCSTA_ADDEN1_LENGTH                                0x1
10959:         #define _RCSTA_ADDEN1_MASK                                  0x8
10960:         #define _RCSTA_CREN1_POSN                                   0x4
10961:         #define _RCSTA_CREN1_POSITION                               0x4
10962:         #define _RCSTA_CREN1_SIZE                                   0x1
10963:         #define _RCSTA_CREN1_LENGTH                                 0x1
10964:         #define _RCSTA_CREN1_MASK                                   0x10
10965:         #define _RCSTA_SREN1_POSN                                   0x5
10966:         #define _RCSTA_SREN1_POSITION                               0x5
10967:         #define _RCSTA_SREN1_SIZE                                   0x1
10968:         #define _RCSTA_SREN1_LENGTH                                 0x1
10969:         #define _RCSTA_SREN1_MASK                                   0x20
10970:         #define _RCSTA_RX91_POSN                                    0x6
10971:         #define _RCSTA_RX91_POSITION                                0x6
10972:         #define _RCSTA_RX91_SIZE                                    0x1
10973:         #define _RCSTA_RX91_LENGTH                                  0x1
10974:         #define _RCSTA_RX91_MASK                                    0x40
10975:         #define _RCSTA_SPEN1_POSN                                   0x7
10976:         #define _RCSTA_SPEN1_POSITION                               0x7
10977:         #define _RCSTA_SPEN1_SIZE                                   0x1
10978:         #define _RCSTA_SPEN1_LENGTH                                 0x1
10979:         #define _RCSTA_SPEN1_MASK                                   0x80
10980:         #define _RCSTA_RC8_9_POSN                                   0x6
10981:         #define _RCSTA_RC8_9_POSITION                               0x6
10982:         #define _RCSTA_RC8_9_SIZE                                   0x1
10983:         #define _RCSTA_RC8_9_LENGTH                                 0x1
10984:         #define _RCSTA_RC8_9_MASK                                   0x40
10985:         #define _RCSTA_RC9_POSN                                     0x6
10986:         #define _RCSTA_RC9_POSITION                                 0x6
10987:         #define _RCSTA_RC9_SIZE                                     0x1
10988:         #define _RCSTA_RC9_LENGTH                                   0x1
10989:         #define _RCSTA_RC9_MASK                                     0x40
10990:         #define _RCSTA_RCD8_POSN                                    0x0
10991:         #define _RCSTA_RCD8_POSITION                                0x0
10992:         #define _RCSTA_RCD8_SIZE                                    0x1
10993:         #define _RCSTA_RCD8_LENGTH                                  0x1
10994:         #define _RCSTA_RCD8_MASK                                    0x1
10995:         #define _RCSTA_SRENA_POSN                                   0x5
10996:         #define _RCSTA_SRENA_POSITION                               0x5
10997:         #define _RCSTA_SRENA_SIZE                                   0x1
10998:         #define _RCSTA_SRENA_LENGTH                                 0x1
10999:         #define _RCSTA_SRENA_MASK                                   0x20
11000:         typedef union {
11001:             struct {
11002:                 unsigned RX9D                   :1;
11003:                 unsigned OERR                   :1;
11004:                 unsigned FERR                   :1;
11005:                 unsigned ADDEN                  :1;
11006:                 unsigned CREN                   :1;
11007:                 unsigned SREN                   :1;
11008:                 unsigned RX9                    :1;
11009:                 unsigned SPEN                   :1;
11010:             };
11011:             struct {
11012:                 unsigned                        :3;
11013:                 unsigned ADEN                   :1;
11014:             };
11015:             struct {
11016:                 unsigned RX9D1                  :1;
11017:                 unsigned OERR1                  :1;
11018:                 unsigned FERR1                  :1;
11019:                 unsigned ADDEN1                 :1;
11020:                 unsigned CREN1                  :1;
11021:                 unsigned SREN1                  :1;
11022:                 unsigned RX91                   :1;
11023:                 unsigned SPEN1                  :1;
11024:             };
11025:             struct {
11026:                 unsigned                        :6;
11027:                 unsigned RC8_9                  :1;
11028:             };
11029:             struct {
11030:                 unsigned                        :6;
11031:                 unsigned RC9                    :1;
11032:             };
11033:             struct {
11034:                 unsigned RCD8                   :1;
11035:             };
11036:             struct {
11037:                 unsigned                        :5;
11038:                 unsigned SRENA                  :1;
11039:             };
11040:         } RC1STAbits_t;
11041:         extern volatile RC1STAbits_t RC1STAbits @ 0xFAB;
11042:         // bitfield macros
11043:         #define _RC1STA_RX9D_POSN                                   0x0
11044:         #define _RC1STA_RX9D_POSITION                               0x0
11045:         #define _RC1STA_RX9D_SIZE                                   0x1
11046:         #define _RC1STA_RX9D_LENGTH                                 0x1
11047:         #define _RC1STA_RX9D_MASK                                   0x1
11048:         #define _RC1STA_OERR_POSN                                   0x1
11049:         #define _RC1STA_OERR_POSITION                               0x1
11050:         #define _RC1STA_OERR_SIZE                                   0x1
11051:         #define _RC1STA_OERR_LENGTH                                 0x1
11052:         #define _RC1STA_OERR_MASK                                   0x2
11053:         #define _RC1STA_FERR_POSN                                   0x2
11054:         #define _RC1STA_FERR_POSITION                               0x2
11055:         #define _RC1STA_FERR_SIZE                                   0x1
11056:         #define _RC1STA_FERR_LENGTH                                 0x1
11057:         #define _RC1STA_FERR_MASK                                   0x4
11058:         #define _RC1STA_ADDEN_POSN                                  0x3
11059:         #define _RC1STA_ADDEN_POSITION                              0x3
11060:         #define _RC1STA_ADDEN_SIZE                                  0x1
11061:         #define _RC1STA_ADDEN_LENGTH                                0x1
11062:         #define _RC1STA_ADDEN_MASK                                  0x8
11063:         #define _RC1STA_CREN_POSN                                   0x4
11064:         #define _RC1STA_CREN_POSITION                               0x4
11065:         #define _RC1STA_CREN_SIZE                                   0x1
11066:         #define _RC1STA_CREN_LENGTH                                 0x1
11067:         #define _RC1STA_CREN_MASK                                   0x10
11068:         #define _RC1STA_SREN_POSN                                   0x5
11069:         #define _RC1STA_SREN_POSITION                               0x5
11070:         #define _RC1STA_SREN_SIZE                                   0x1
11071:         #define _RC1STA_SREN_LENGTH                                 0x1
11072:         #define _RC1STA_SREN_MASK                                   0x20
11073:         #define _RC1STA_RX9_POSN                                    0x6
11074:         #define _RC1STA_RX9_POSITION                                0x6
11075:         #define _RC1STA_RX9_SIZE                                    0x1
11076:         #define _RC1STA_RX9_LENGTH                                  0x1
11077:         #define _RC1STA_RX9_MASK                                    0x40
11078:         #define _RC1STA_SPEN_POSN                                   0x7
11079:         #define _RC1STA_SPEN_POSITION                               0x7
11080:         #define _RC1STA_SPEN_SIZE                                   0x1
11081:         #define _RC1STA_SPEN_LENGTH                                 0x1
11082:         #define _RC1STA_SPEN_MASK                                   0x80
11083:         #define _RC1STA_ADEN_POSN                                   0x3
11084:         #define _RC1STA_ADEN_POSITION                               0x3
11085:         #define _RC1STA_ADEN_SIZE                                   0x1
11086:         #define _RC1STA_ADEN_LENGTH                                 0x1
11087:         #define _RC1STA_ADEN_MASK                                   0x8
11088:         #define _RC1STA_RX9D1_POSN                                  0x0
11089:         #define _RC1STA_RX9D1_POSITION                              0x0
11090:         #define _RC1STA_RX9D1_SIZE                                  0x1
11091:         #define _RC1STA_RX9D1_LENGTH                                0x1
11092:         #define _RC1STA_RX9D1_MASK                                  0x1
11093:         #define _RC1STA_OERR1_POSN                                  0x1
11094:         #define _RC1STA_OERR1_POSITION                              0x1
11095:         #define _RC1STA_OERR1_SIZE                                  0x1
11096:         #define _RC1STA_OERR1_LENGTH                                0x1
11097:         #define _RC1STA_OERR1_MASK                                  0x2
11098:         #define _RC1STA_FERR1_POSN                                  0x2
11099:         #define _RC1STA_FERR1_POSITION                              0x2
11100:         #define _RC1STA_FERR1_SIZE                                  0x1
11101:         #define _RC1STA_FERR1_LENGTH                                0x1
11102:         #define _RC1STA_FERR1_MASK                                  0x4
11103:         #define _RC1STA_ADDEN1_POSN                                 0x3
11104:         #define _RC1STA_ADDEN1_POSITION                             0x3
11105:         #define _RC1STA_ADDEN1_SIZE                                 0x1
11106:         #define _RC1STA_ADDEN1_LENGTH                               0x1
11107:         #define _RC1STA_ADDEN1_MASK                                 0x8
11108:         #define _RC1STA_CREN1_POSN                                  0x4
11109:         #define _RC1STA_CREN1_POSITION                              0x4
11110:         #define _RC1STA_CREN1_SIZE                                  0x1
11111:         #define _RC1STA_CREN1_LENGTH                                0x1
11112:         #define _RC1STA_CREN1_MASK                                  0x10
11113:         #define _RC1STA_SREN1_POSN                                  0x5
11114:         #define _RC1STA_SREN1_POSITION                              0x5
11115:         #define _RC1STA_SREN1_SIZE                                  0x1
11116:         #define _RC1STA_SREN1_LENGTH                                0x1
11117:         #define _RC1STA_SREN1_MASK                                  0x20
11118:         #define _RC1STA_RX91_POSN                                   0x6
11119:         #define _RC1STA_RX91_POSITION                               0x6
11120:         #define _RC1STA_RX91_SIZE                                   0x1
11121:         #define _RC1STA_RX91_LENGTH                                 0x1
11122:         #define _RC1STA_RX91_MASK                                   0x40
11123:         #define _RC1STA_SPEN1_POSN                                  0x7
11124:         #define _RC1STA_SPEN1_POSITION                              0x7
11125:         #define _RC1STA_SPEN1_SIZE                                  0x1
11126:         #define _RC1STA_SPEN1_LENGTH                                0x1
11127:         #define _RC1STA_SPEN1_MASK                                  0x80
11128:         #define _RC1STA_RC8_9_POSN                                  0x6
11129:         #define _RC1STA_RC8_9_POSITION                              0x6
11130:         #define _RC1STA_RC8_9_SIZE                                  0x1
11131:         #define _RC1STA_RC8_9_LENGTH                                0x1
11132:         #define _RC1STA_RC8_9_MASK                                  0x40
11133:         #define _RC1STA_RC9_POSN                                    0x6
11134:         #define _RC1STA_RC9_POSITION                                0x6
11135:         #define _RC1STA_RC9_SIZE                                    0x1
11136:         #define _RC1STA_RC9_LENGTH                                  0x1
11137:         #define _RC1STA_RC9_MASK                                    0x40
11138:         #define _RC1STA_RCD8_POSN                                   0x0
11139:         #define _RC1STA_RCD8_POSITION                               0x0
11140:         #define _RC1STA_RCD8_SIZE                                   0x1
11141:         #define _RC1STA_RCD8_LENGTH                                 0x1
11142:         #define _RC1STA_RCD8_MASK                                   0x1
11143:         #define _RC1STA_SRENA_POSN                                  0x5
11144:         #define _RC1STA_SRENA_POSITION                              0x5
11145:         #define _RC1STA_SRENA_SIZE                                  0x1
11146:         #define _RC1STA_SRENA_LENGTH                                0x1
11147:         #define _RC1STA_SRENA_MASK                                  0x20
11148:         
11149:         // Register: TXSTA1
11150:         extern volatile unsigned char           TXSTA1              @ 0xFAC;
11151:         #ifndef _LIB_BUILD
11152:         asm("TXSTA1 equ 0FACh");
11153:         #endif
11154:         // aliases
11155:         extern volatile unsigned char           TXSTA               @ 0xFAC;
11156:         #ifndef _LIB_BUILD
11157:         asm("TXSTA equ 0FACh");
11158:         #endif
11159:         extern volatile unsigned char           TX1STA              @ 0xFAC;
11160:         #ifndef _LIB_BUILD
11161:         asm("TX1STA equ 0FACh");
11162:         #endif
11163:         // bitfield definitions
11164:         typedef union {
11165:             struct {
11166:                 unsigned TX9D                   :1;
11167:                 unsigned TRMT                   :1;
11168:                 unsigned BRGH                   :1;
11169:                 unsigned SENDB                  :1;
11170:                 unsigned SYNC                   :1;
11171:                 unsigned TXEN                   :1;
11172:                 unsigned TX9                    :1;
11173:                 unsigned CSRC                   :1;
11174:             };
11175:             struct {
11176:                 unsigned TX9D1                  :1;
11177:                 unsigned TRMT1                  :1;
11178:                 unsigned BRGH1                  :1;
11179:                 unsigned SENDB1                 :1;
11180:                 unsigned SYNC1                  :1;
11181:                 unsigned TXEN1                  :1;
11182:                 unsigned TX91                   :1;
11183:                 unsigned CSRC1                  :1;
11184:             };
11185:             struct {
11186:                 unsigned                        :6;
11187:                 unsigned TX8_9                  :1;
11188:             };
11189:             struct {
11190:                 unsigned TXD8                   :1;
11191:             };
11192:         } TXSTA1bits_t;
11193:         extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAC;
11194:         // bitfield macros
11195:         #define _TXSTA1_TX9D_POSN                                   0x0
11196:         #define _TXSTA1_TX9D_POSITION                               0x0
11197:         #define _TXSTA1_TX9D_SIZE                                   0x1
11198:         #define _TXSTA1_TX9D_LENGTH                                 0x1
11199:         #define _TXSTA1_TX9D_MASK                                   0x1
11200:         #define _TXSTA1_TRMT_POSN                                   0x1
11201:         #define _TXSTA1_TRMT_POSITION                               0x1
11202:         #define _TXSTA1_TRMT_SIZE                                   0x1
11203:         #define _TXSTA1_TRMT_LENGTH                                 0x1
11204:         #define _TXSTA1_TRMT_MASK                                   0x2
11205:         #define _TXSTA1_BRGH_POSN                                   0x2
11206:         #define _TXSTA1_BRGH_POSITION                               0x2
11207:         #define _TXSTA1_BRGH_SIZE                                   0x1
11208:         #define _TXSTA1_BRGH_LENGTH                                 0x1
11209:         #define _TXSTA1_BRGH_MASK                                   0x4
11210:         #define _TXSTA1_SENDB_POSN                                  0x3
11211:         #define _TXSTA1_SENDB_POSITION                              0x3
11212:         #define _TXSTA1_SENDB_SIZE                                  0x1
11213:         #define _TXSTA1_SENDB_LENGTH                                0x1
11214:         #define _TXSTA1_SENDB_MASK                                  0x8
11215:         #define _TXSTA1_SYNC_POSN                                   0x4
11216:         #define _TXSTA1_SYNC_POSITION                               0x4
11217:         #define _TXSTA1_SYNC_SIZE                                   0x1
11218:         #define _TXSTA1_SYNC_LENGTH                                 0x1
11219:         #define _TXSTA1_SYNC_MASK                                   0x10
11220:         #define _TXSTA1_TXEN_POSN                                   0x5
11221:         #define _TXSTA1_TXEN_POSITION                               0x5
11222:         #define _TXSTA1_TXEN_SIZE                                   0x1
11223:         #define _TXSTA1_TXEN_LENGTH                                 0x1
11224:         #define _TXSTA1_TXEN_MASK                                   0x20
11225:         #define _TXSTA1_TX9_POSN                                    0x6
11226:         #define _TXSTA1_TX9_POSITION                                0x6
11227:         #define _TXSTA1_TX9_SIZE                                    0x1
11228:         #define _TXSTA1_TX9_LENGTH                                  0x1
11229:         #define _TXSTA1_TX9_MASK                                    0x40
11230:         #define _TXSTA1_CSRC_POSN                                   0x7
11231:         #define _TXSTA1_CSRC_POSITION                               0x7
11232:         #define _TXSTA1_CSRC_SIZE                                   0x1
11233:         #define _TXSTA1_CSRC_LENGTH                                 0x1
11234:         #define _TXSTA1_CSRC_MASK                                   0x80
11235:         #define _TXSTA1_TX9D1_POSN                                  0x0
11236:         #define _TXSTA1_TX9D1_POSITION                              0x0
11237:         #define _TXSTA1_TX9D1_SIZE                                  0x1
11238:         #define _TXSTA1_TX9D1_LENGTH                                0x1
11239:         #define _TXSTA1_TX9D1_MASK                                  0x1
11240:         #define _TXSTA1_TRMT1_POSN                                  0x1
11241:         #define _TXSTA1_TRMT1_POSITION                              0x1
11242:         #define _TXSTA1_TRMT1_SIZE                                  0x1
11243:         #define _TXSTA1_TRMT1_LENGTH                                0x1
11244:         #define _TXSTA1_TRMT1_MASK                                  0x2
11245:         #define _TXSTA1_BRGH1_POSN                                  0x2
11246:         #define _TXSTA1_BRGH1_POSITION                              0x2
11247:         #define _TXSTA1_BRGH1_SIZE                                  0x1
11248:         #define _TXSTA1_BRGH1_LENGTH                                0x1
11249:         #define _TXSTA1_BRGH1_MASK                                  0x4
11250:         #define _TXSTA1_SENDB1_POSN                                 0x3
11251:         #define _TXSTA1_SENDB1_POSITION                             0x3
11252:         #define _TXSTA1_SENDB1_SIZE                                 0x1
11253:         #define _TXSTA1_SENDB1_LENGTH                               0x1
11254:         #define _TXSTA1_SENDB1_MASK                                 0x8
11255:         #define _TXSTA1_SYNC1_POSN                                  0x4
11256:         #define _TXSTA1_SYNC1_POSITION                              0x4
11257:         #define _TXSTA1_SYNC1_SIZE                                  0x1
11258:         #define _TXSTA1_SYNC1_LENGTH                                0x1
11259:         #define _TXSTA1_SYNC1_MASK                                  0x10
11260:         #define _TXSTA1_TXEN1_POSN                                  0x5
11261:         #define _TXSTA1_TXEN1_POSITION                              0x5
11262:         #define _TXSTA1_TXEN1_SIZE                                  0x1
11263:         #define _TXSTA1_TXEN1_LENGTH                                0x1
11264:         #define _TXSTA1_TXEN1_MASK                                  0x20
11265:         #define _TXSTA1_TX91_POSN                                   0x6
11266:         #define _TXSTA1_TX91_POSITION                               0x6
11267:         #define _TXSTA1_TX91_SIZE                                   0x1
11268:         #define _TXSTA1_TX91_LENGTH                                 0x1
11269:         #define _TXSTA1_TX91_MASK                                   0x40
11270:         #define _TXSTA1_CSRC1_POSN                                  0x7
11271:         #define _TXSTA1_CSRC1_POSITION                              0x7
11272:         #define _TXSTA1_CSRC1_SIZE                                  0x1
11273:         #define _TXSTA1_CSRC1_LENGTH                                0x1
11274:         #define _TXSTA1_CSRC1_MASK                                  0x80
11275:         #define _TXSTA1_TX8_9_POSN                                  0x6
11276:         #define _TXSTA1_TX8_9_POSITION                              0x6
11277:         #define _TXSTA1_TX8_9_SIZE                                  0x1
11278:         #define _TXSTA1_TX8_9_LENGTH                                0x1
11279:         #define _TXSTA1_TX8_9_MASK                                  0x40
11280:         #define _TXSTA1_TXD8_POSN                                   0x0
11281:         #define _TXSTA1_TXD8_POSITION                               0x0
11282:         #define _TXSTA1_TXD8_SIZE                                   0x1
11283:         #define _TXSTA1_TXD8_LENGTH                                 0x1
11284:         #define _TXSTA1_TXD8_MASK                                   0x1
11285:         // alias bitfield definitions
11286:         typedef union {
11287:             struct {
11288:                 unsigned TX9D                   :1;
11289:                 unsigned TRMT                   :1;
11290:                 unsigned BRGH                   :1;
11291:                 unsigned SENDB                  :1;
11292:                 unsigned SYNC                   :1;
11293:                 unsigned TXEN                   :1;
11294:                 unsigned TX9                    :1;
11295:                 unsigned CSRC                   :1;
11296:             };
11297:             struct {
11298:                 unsigned TX9D1                  :1;
11299:                 unsigned TRMT1                  :1;
11300:                 unsigned BRGH1                  :1;
11301:                 unsigned SENDB1                 :1;
11302:                 unsigned SYNC1                  :1;
11303:                 unsigned TXEN1                  :1;
11304:                 unsigned TX91                   :1;
11305:                 unsigned CSRC1                  :1;
11306:             };
11307:             struct {
11308:                 unsigned                        :6;
11309:                 unsigned TX8_9                  :1;
11310:             };
11311:             struct {
11312:                 unsigned TXD8                   :1;
11313:             };
11314:         } TXSTAbits_t;
11315:         extern volatile TXSTAbits_t TXSTAbits @ 0xFAC;
11316:         // bitfield macros
11317:         #define _TXSTA_TX9D_POSN                                    0x0
11318:         #define _TXSTA_TX9D_POSITION                                0x0
11319:         #define _TXSTA_TX9D_SIZE                                    0x1
11320:         #define _TXSTA_TX9D_LENGTH                                  0x1
11321:         #define _TXSTA_TX9D_MASK                                    0x1
11322:         #define _TXSTA_TRMT_POSN                                    0x1
11323:         #define _TXSTA_TRMT_POSITION                                0x1
11324:         #define _TXSTA_TRMT_SIZE                                    0x1
11325:         #define _TXSTA_TRMT_LENGTH                                  0x1
11326:         #define _TXSTA_TRMT_MASK                                    0x2
11327:         #define _TXSTA_BRGH_POSN                                    0x2
11328:         #define _TXSTA_BRGH_POSITION                                0x2
11329:         #define _TXSTA_BRGH_SIZE                                    0x1
11330:         #define _TXSTA_BRGH_LENGTH                                  0x1
11331:         #define _TXSTA_BRGH_MASK                                    0x4
11332:         #define _TXSTA_SENDB_POSN                                   0x3
11333:         #define _TXSTA_SENDB_POSITION                               0x3
11334:         #define _TXSTA_SENDB_SIZE                                   0x1
11335:         #define _TXSTA_SENDB_LENGTH                                 0x1
11336:         #define _TXSTA_SENDB_MASK                                   0x8
11337:         #define _TXSTA_SYNC_POSN                                    0x4
11338:         #define _TXSTA_SYNC_POSITION                                0x4
11339:         #define _TXSTA_SYNC_SIZE                                    0x1
11340:         #define _TXSTA_SYNC_LENGTH                                  0x1
11341:         #define _TXSTA_SYNC_MASK                                    0x10
11342:         #define _TXSTA_TXEN_POSN                                    0x5
11343:         #define _TXSTA_TXEN_POSITION                                0x5
11344:         #define _TXSTA_TXEN_SIZE                                    0x1
11345:         #define _TXSTA_TXEN_LENGTH                                  0x1
11346:         #define _TXSTA_TXEN_MASK                                    0x20
11347:         #define _TXSTA_TX9_POSN                                     0x6
11348:         #define _TXSTA_TX9_POSITION                                 0x6
11349:         #define _TXSTA_TX9_SIZE                                     0x1
11350:         #define _TXSTA_TX9_LENGTH                                   0x1
11351:         #define _TXSTA_TX9_MASK                                     0x40
11352:         #define _TXSTA_CSRC_POSN                                    0x7
11353:         #define _TXSTA_CSRC_POSITION                                0x7
11354:         #define _TXSTA_CSRC_SIZE                                    0x1
11355:         #define _TXSTA_CSRC_LENGTH                                  0x1
11356:         #define _TXSTA_CSRC_MASK                                    0x80
11357:         #define _TXSTA_TX9D1_POSN                                   0x0
11358:         #define _TXSTA_TX9D1_POSITION                               0x0
11359:         #define _TXSTA_TX9D1_SIZE                                   0x1
11360:         #define _TXSTA_TX9D1_LENGTH                                 0x1
11361:         #define _TXSTA_TX9D1_MASK                                   0x1
11362:         #define _TXSTA_TRMT1_POSN                                   0x1
11363:         #define _TXSTA_TRMT1_POSITION                               0x1
11364:         #define _TXSTA_TRMT1_SIZE                                   0x1
11365:         #define _TXSTA_TRMT1_LENGTH                                 0x1
11366:         #define _TXSTA_TRMT1_MASK                                   0x2
11367:         #define _TXSTA_BRGH1_POSN                                   0x2
11368:         #define _TXSTA_BRGH1_POSITION                               0x2
11369:         #define _TXSTA_BRGH1_SIZE                                   0x1
11370:         #define _TXSTA_BRGH1_LENGTH                                 0x1
11371:         #define _TXSTA_BRGH1_MASK                                   0x4
11372:         #define _TXSTA_SENDB1_POSN                                  0x3
11373:         #define _TXSTA_SENDB1_POSITION                              0x3
11374:         #define _TXSTA_SENDB1_SIZE                                  0x1
11375:         #define _TXSTA_SENDB1_LENGTH                                0x1
11376:         #define _TXSTA_SENDB1_MASK                                  0x8
11377:         #define _TXSTA_SYNC1_POSN                                   0x4
11378:         #define _TXSTA_SYNC1_POSITION                               0x4
11379:         #define _TXSTA_SYNC1_SIZE                                   0x1
11380:         #define _TXSTA_SYNC1_LENGTH                                 0x1
11381:         #define _TXSTA_SYNC1_MASK                                   0x10
11382:         #define _TXSTA_TXEN1_POSN                                   0x5
11383:         #define _TXSTA_TXEN1_POSITION                               0x5
11384:         #define _TXSTA_TXEN1_SIZE                                   0x1
11385:         #define _TXSTA_TXEN1_LENGTH                                 0x1
11386:         #define _TXSTA_TXEN1_MASK                                   0x20
11387:         #define _TXSTA_TX91_POSN                                    0x6
11388:         #define _TXSTA_TX91_POSITION                                0x6
11389:         #define _TXSTA_TX91_SIZE                                    0x1
11390:         #define _TXSTA_TX91_LENGTH                                  0x1
11391:         #define _TXSTA_TX91_MASK                                    0x40
11392:         #define _TXSTA_CSRC1_POSN                                   0x7
11393:         #define _TXSTA_CSRC1_POSITION                               0x7
11394:         #define _TXSTA_CSRC1_SIZE                                   0x1
11395:         #define _TXSTA_CSRC1_LENGTH                                 0x1
11396:         #define _TXSTA_CSRC1_MASK                                   0x80
11397:         #define _TXSTA_TX8_9_POSN                                   0x6
11398:         #define _TXSTA_TX8_9_POSITION                               0x6
11399:         #define _TXSTA_TX8_9_SIZE                                   0x1
11400:         #define _TXSTA_TX8_9_LENGTH                                 0x1
11401:         #define _TXSTA_TX8_9_MASK                                   0x40
11402:         #define _TXSTA_TXD8_POSN                                    0x0
11403:         #define _TXSTA_TXD8_POSITION                                0x0
11404:         #define _TXSTA_TXD8_SIZE                                    0x1
11405:         #define _TXSTA_TXD8_LENGTH                                  0x1
11406:         #define _TXSTA_TXD8_MASK                                    0x1
11407:         typedef union {
11408:             struct {
11409:                 unsigned TX9D                   :1;
11410:                 unsigned TRMT                   :1;
11411:                 unsigned BRGH                   :1;
11412:                 unsigned SENDB                  :1;
11413:                 unsigned SYNC                   :1;
11414:                 unsigned TXEN                   :1;
11415:                 unsigned TX9                    :1;
11416:                 unsigned CSRC                   :1;
11417:             };
11418:             struct {
11419:                 unsigned TX9D1                  :1;
11420:                 unsigned TRMT1                  :1;
11421:                 unsigned BRGH1                  :1;
11422:                 unsigned SENDB1                 :1;
11423:                 unsigned SYNC1                  :1;
11424:                 unsigned TXEN1                  :1;
11425:                 unsigned TX91                   :1;
11426:                 unsigned CSRC1                  :1;
11427:             };
11428:             struct {
11429:                 unsigned                        :6;
11430:                 unsigned TX8_9                  :1;
11431:             };
11432:             struct {
11433:                 unsigned TXD8                   :1;
11434:             };
11435:         } TX1STAbits_t;
11436:         extern volatile TX1STAbits_t TX1STAbits @ 0xFAC;
11437:         // bitfield macros
11438:         #define _TX1STA_TX9D_POSN                                   0x0
11439:         #define _TX1STA_TX9D_POSITION                               0x0
11440:         #define _TX1STA_TX9D_SIZE                                   0x1
11441:         #define _TX1STA_TX9D_LENGTH                                 0x1
11442:         #define _TX1STA_TX9D_MASK                                   0x1
11443:         #define _TX1STA_TRMT_POSN                                   0x1
11444:         #define _TX1STA_TRMT_POSITION                               0x1
11445:         #define _TX1STA_TRMT_SIZE                                   0x1
11446:         #define _TX1STA_TRMT_LENGTH                                 0x1
11447:         #define _TX1STA_TRMT_MASK                                   0x2
11448:         #define _TX1STA_BRGH_POSN                                   0x2
11449:         #define _TX1STA_BRGH_POSITION                               0x2
11450:         #define _TX1STA_BRGH_SIZE                                   0x1
11451:         #define _TX1STA_BRGH_LENGTH                                 0x1
11452:         #define _TX1STA_BRGH_MASK                                   0x4
11453:         #define _TX1STA_SENDB_POSN                                  0x3
11454:         #define _TX1STA_SENDB_POSITION                              0x3
11455:         #define _TX1STA_SENDB_SIZE                                  0x1
11456:         #define _TX1STA_SENDB_LENGTH                                0x1
11457:         #define _TX1STA_SENDB_MASK                                  0x8
11458:         #define _TX1STA_SYNC_POSN                                   0x4
11459:         #define _TX1STA_SYNC_POSITION                               0x4
11460:         #define _TX1STA_SYNC_SIZE                                   0x1
11461:         #define _TX1STA_SYNC_LENGTH                                 0x1
11462:         #define _TX1STA_SYNC_MASK                                   0x10
11463:         #define _TX1STA_TXEN_POSN                                   0x5
11464:         #define _TX1STA_TXEN_POSITION                               0x5
11465:         #define _TX1STA_TXEN_SIZE                                   0x1
11466:         #define _TX1STA_TXEN_LENGTH                                 0x1
11467:         #define _TX1STA_TXEN_MASK                                   0x20
11468:         #define _TX1STA_TX9_POSN                                    0x6
11469:         #define _TX1STA_TX9_POSITION                                0x6
11470:         #define _TX1STA_TX9_SIZE                                    0x1
11471:         #define _TX1STA_TX9_LENGTH                                  0x1
11472:         #define _TX1STA_TX9_MASK                                    0x40
11473:         #define _TX1STA_CSRC_POSN                                   0x7
11474:         #define _TX1STA_CSRC_POSITION                               0x7
11475:         #define _TX1STA_CSRC_SIZE                                   0x1
11476:         #define _TX1STA_CSRC_LENGTH                                 0x1
11477:         #define _TX1STA_CSRC_MASK                                   0x80
11478:         #define _TX1STA_TX9D1_POSN                                  0x0
11479:         #define _TX1STA_TX9D1_POSITION                              0x0
11480:         #define _TX1STA_TX9D1_SIZE                                  0x1
11481:         #define _TX1STA_TX9D1_LENGTH                                0x1
11482:         #define _TX1STA_TX9D1_MASK                                  0x1
11483:         #define _TX1STA_TRMT1_POSN                                  0x1
11484:         #define _TX1STA_TRMT1_POSITION                              0x1
11485:         #define _TX1STA_TRMT1_SIZE                                  0x1
11486:         #define _TX1STA_TRMT1_LENGTH                                0x1
11487:         #define _TX1STA_TRMT1_MASK                                  0x2
11488:         #define _TX1STA_BRGH1_POSN                                  0x2
11489:         #define _TX1STA_BRGH1_POSITION                              0x2
11490:         #define _TX1STA_BRGH1_SIZE                                  0x1
11491:         #define _TX1STA_BRGH1_LENGTH                                0x1
11492:         #define _TX1STA_BRGH1_MASK                                  0x4
11493:         #define _TX1STA_SENDB1_POSN                                 0x3
11494:         #define _TX1STA_SENDB1_POSITION                             0x3
11495:         #define _TX1STA_SENDB1_SIZE                                 0x1
11496:         #define _TX1STA_SENDB1_LENGTH                               0x1
11497:         #define _TX1STA_SENDB1_MASK                                 0x8
11498:         #define _TX1STA_SYNC1_POSN                                  0x4
11499:         #define _TX1STA_SYNC1_POSITION                              0x4
11500:         #define _TX1STA_SYNC1_SIZE                                  0x1
11501:         #define _TX1STA_SYNC1_LENGTH                                0x1
11502:         #define _TX1STA_SYNC1_MASK                                  0x10
11503:         #define _TX1STA_TXEN1_POSN                                  0x5
11504:         #define _TX1STA_TXEN1_POSITION                              0x5
11505:         #define _TX1STA_TXEN1_SIZE                                  0x1
11506:         #define _TX1STA_TXEN1_LENGTH                                0x1
11507:         #define _TX1STA_TXEN1_MASK                                  0x20
11508:         #define _TX1STA_TX91_POSN                                   0x6
11509:         #define _TX1STA_TX91_POSITION                               0x6
11510:         #define _TX1STA_TX91_SIZE                                   0x1
11511:         #define _TX1STA_TX91_LENGTH                                 0x1
11512:         #define _TX1STA_TX91_MASK                                   0x40
11513:         #define _TX1STA_CSRC1_POSN                                  0x7
11514:         #define _TX1STA_CSRC1_POSITION                              0x7
11515:         #define _TX1STA_CSRC1_SIZE                                  0x1
11516:         #define _TX1STA_CSRC1_LENGTH                                0x1
11517:         #define _TX1STA_CSRC1_MASK                                  0x80
11518:         #define _TX1STA_TX8_9_POSN                                  0x6
11519:         #define _TX1STA_TX8_9_POSITION                              0x6
11520:         #define _TX1STA_TX8_9_SIZE                                  0x1
11521:         #define _TX1STA_TX8_9_LENGTH                                0x1
11522:         #define _TX1STA_TX8_9_MASK                                  0x40
11523:         #define _TX1STA_TXD8_POSN                                   0x0
11524:         #define _TX1STA_TXD8_POSITION                               0x0
11525:         #define _TX1STA_TXD8_SIZE                                   0x1
11526:         #define _TX1STA_TXD8_LENGTH                                 0x1
11527:         #define _TX1STA_TXD8_MASK                                   0x1
11528:         
11529:         // Register: TXREG1
11530:         extern volatile unsigned char           TXREG1              @ 0xFAD;
11531:         #ifndef _LIB_BUILD
11532:         asm("TXREG1 equ 0FADh");
11533:         #endif
11534:         // aliases
11535:         extern volatile unsigned char           TXREG               @ 0xFAD;
11536:         #ifndef _LIB_BUILD
11537:         asm("TXREG equ 0FADh");
11538:         #endif
11539:         extern volatile unsigned char           TX1REG              @ 0xFAD;
11540:         #ifndef _LIB_BUILD
11541:         asm("TX1REG equ 0FADh");
11542:         #endif
11543:         // bitfield definitions
11544:         typedef union {
11545:             struct {
11546:                 unsigned TX1REG                 :8;
11547:             };
11548:             struct {
11549:                 unsigned TXREG                  :8;
11550:             };
11551:         } TXREG1bits_t;
11552:         extern volatile TXREG1bits_t TXREG1bits @ 0xFAD;
11553:         // bitfield macros
11554:         #define _TXREG1_TX1REG_POSN                                 0x0
11555:         #define _TXREG1_TX1REG_POSITION                             0x0
11556:         #define _TXREG1_TX1REG_SIZE                                 0x8
11557:         #define _TXREG1_TX1REG_LENGTH                               0x8
11558:         #define _TXREG1_TX1REG_MASK                                 0xFF
11559:         #define _TXREG1_TXREG_POSN                                  0x0
11560:         #define _TXREG1_TXREG_POSITION                              0x0
11561:         #define _TXREG1_TXREG_SIZE                                  0x8
11562:         #define _TXREG1_TXREG_LENGTH                                0x8
11563:         #define _TXREG1_TXREG_MASK                                  0xFF
11564:         // alias bitfield definitions
11565:         typedef union {
11566:             struct {
11567:                 unsigned TX1REG                 :8;
11568:             };
11569:             struct {
11570:                 unsigned TXREG                  :8;
11571:             };
11572:         } TXREGbits_t;
11573:         extern volatile TXREGbits_t TXREGbits @ 0xFAD;
11574:         // bitfield macros
11575:         #define _TXREG_TX1REG_POSN                                  0x0
11576:         #define _TXREG_TX1REG_POSITION                              0x0
11577:         #define _TXREG_TX1REG_SIZE                                  0x8
11578:         #define _TXREG_TX1REG_LENGTH                                0x8
11579:         #define _TXREG_TX1REG_MASK                                  0xFF
11580:         #define _TXREG_TXREG_POSN                                   0x0
11581:         #define _TXREG_TXREG_POSITION                               0x0
11582:         #define _TXREG_TXREG_SIZE                                   0x8
11583:         #define _TXREG_TXREG_LENGTH                                 0x8
11584:         #define _TXREG_TXREG_MASK                                   0xFF
11585:         typedef union {
11586:             struct {
11587:                 unsigned TX1REG                 :8;
11588:             };
11589:             struct {
11590:                 unsigned TXREG                  :8;
11591:             };
11592:         } TX1REGbits_t;
11593:         extern volatile TX1REGbits_t TX1REGbits @ 0xFAD;
11594:         // bitfield macros
11595:         #define _TX1REG_TX1REG_POSN                                 0x0
11596:         #define _TX1REG_TX1REG_POSITION                             0x0
11597:         #define _TX1REG_TX1REG_SIZE                                 0x8
11598:         #define _TX1REG_TX1REG_LENGTH                               0x8
11599:         #define _TX1REG_TX1REG_MASK                                 0xFF
11600:         #define _TX1REG_TXREG_POSN                                  0x0
11601:         #define _TX1REG_TXREG_POSITION                              0x0
11602:         #define _TX1REG_TXREG_SIZE                                  0x8
11603:         #define _TX1REG_TXREG_LENGTH                                0x8
11604:         #define _TX1REG_TXREG_MASK                                  0xFF
11605:         
11606:         // Register: RCREG1
11607:         extern volatile unsigned char           RCREG1              @ 0xFAE;
11608:         #ifndef _LIB_BUILD
11609:         asm("RCREG1 equ 0FAEh");
11610:         #endif
11611:         // aliases
11612:         extern volatile unsigned char           RCREG               @ 0xFAE;
11613:         #ifndef _LIB_BUILD
11614:         asm("RCREG equ 0FAEh");
11615:         #endif
11616:         extern volatile unsigned char           RC1REG              @ 0xFAE;
11617:         #ifndef _LIB_BUILD
11618:         asm("RC1REG equ 0FAEh");
11619:         #endif
11620:         // bitfield definitions
11621:         typedef union {
11622:             struct {
11623:                 unsigned RC1REG                 :8;
11624:             };
11625:             struct {
11626:                 unsigned RCREG                  :8;
11627:             };
11628:         } RCREG1bits_t;
11629:         extern volatile RCREG1bits_t RCREG1bits @ 0xFAE;
11630:         // bitfield macros
11631:         #define _RCREG1_RC1REG_POSN                                 0x0
11632:         #define _RCREG1_RC1REG_POSITION                             0x0
11633:         #define _RCREG1_RC1REG_SIZE                                 0x8
11634:         #define _RCREG1_RC1REG_LENGTH                               0x8
11635:         #define _RCREG1_RC1REG_MASK                                 0xFF
11636:         #define _RCREG1_RCREG_POSN                                  0x0
11637:         #define _RCREG1_RCREG_POSITION                              0x0
11638:         #define _RCREG1_RCREG_SIZE                                  0x8
11639:         #define _RCREG1_RCREG_LENGTH                                0x8
11640:         #define _RCREG1_RCREG_MASK                                  0xFF
11641:         // alias bitfield definitions
11642:         typedef union {
11643:             struct {
11644:                 unsigned RC1REG                 :8;
11645:             };
11646:             struct {
11647:                 unsigned RCREG                  :8;
11648:             };
11649:         } RCREGbits_t;
11650:         extern volatile RCREGbits_t RCREGbits @ 0xFAE;
11651:         // bitfield macros
11652:         #define _RCREG_RC1REG_POSN                                  0x0
11653:         #define _RCREG_RC1REG_POSITION                              0x0
11654:         #define _RCREG_RC1REG_SIZE                                  0x8
11655:         #define _RCREG_RC1REG_LENGTH                                0x8
11656:         #define _RCREG_RC1REG_MASK                                  0xFF
11657:         #define _RCREG_RCREG_POSN                                   0x0
11658:         #define _RCREG_RCREG_POSITION                               0x0
11659:         #define _RCREG_RCREG_SIZE                                   0x8
11660:         #define _RCREG_RCREG_LENGTH                                 0x8
11661:         #define _RCREG_RCREG_MASK                                   0xFF
11662:         typedef union {
11663:             struct {
11664:                 unsigned RC1REG                 :8;
11665:             };
11666:             struct {
11667:                 unsigned RCREG                  :8;
11668:             };
11669:         } RC1REGbits_t;
11670:         extern volatile RC1REGbits_t RC1REGbits @ 0xFAE;
11671:         // bitfield macros
11672:         #define _RC1REG_RC1REG_POSN                                 0x0
11673:         #define _RC1REG_RC1REG_POSITION                             0x0
11674:         #define _RC1REG_RC1REG_SIZE                                 0x8
11675:         #define _RC1REG_RC1REG_LENGTH                               0x8
11676:         #define _RC1REG_RC1REG_MASK                                 0xFF
11677:         #define _RC1REG_RCREG_POSN                                  0x0
11678:         #define _RC1REG_RCREG_POSITION                              0x0
11679:         #define _RC1REG_RCREG_SIZE                                  0x8
11680:         #define _RC1REG_RCREG_LENGTH                                0x8
11681:         #define _RC1REG_RCREG_MASK                                  0xFF
11682:         
11683:         // Register: SPBRG1
11684:         extern volatile unsigned char           SPBRG1              @ 0xFAF;
11685:         #ifndef _LIB_BUILD
11686:         asm("SPBRG1 equ 0FAFh");
11687:         #endif
11688:         // aliases
11689:         extern volatile unsigned char           SPBRG               @ 0xFAF;
11690:         #ifndef _LIB_BUILD
11691:         asm("SPBRG equ 0FAFh");
11692:         #endif
11693:         extern volatile unsigned char           SP1BRG              @ 0xFAF;
11694:         #ifndef _LIB_BUILD
11695:         asm("SP1BRG equ 0FAFh");
11696:         #endif
11697:         // bitfield definitions
11698:         typedef union {
11699:             struct {
11700:                 unsigned SP1BRG                 :8;
11701:             };
11702:             struct {
11703:                 unsigned SPBRG                  :8;
11704:             };
11705:         } SPBRG1bits_t;
11706:         extern volatile SPBRG1bits_t SPBRG1bits @ 0xFAF;
11707:         // bitfield macros
11708:         #define _SPBRG1_SP1BRG_POSN                                 0x0
11709:         #define _SPBRG1_SP1BRG_POSITION                             0x0
11710:         #define _SPBRG1_SP1BRG_SIZE                                 0x8
11711:         #define _SPBRG1_SP1BRG_LENGTH                               0x8
11712:         #define _SPBRG1_SP1BRG_MASK                                 0xFF
11713:         #define _SPBRG1_SPBRG_POSN                                  0x0
11714:         #define _SPBRG1_SPBRG_POSITION                              0x0
11715:         #define _SPBRG1_SPBRG_SIZE                                  0x8
11716:         #define _SPBRG1_SPBRG_LENGTH                                0x8
11717:         #define _SPBRG1_SPBRG_MASK                                  0xFF
11718:         // alias bitfield definitions
11719:         typedef union {
11720:             struct {
11721:                 unsigned SP1BRG                 :8;
11722:             };
11723:             struct {
11724:                 unsigned SPBRG                  :8;
11725:             };
11726:         } SPBRGbits_t;
11727:         extern volatile SPBRGbits_t SPBRGbits @ 0xFAF;
11728:         // bitfield macros
11729:         #define _SPBRG_SP1BRG_POSN                                  0x0
11730:         #define _SPBRG_SP1BRG_POSITION                              0x0
11731:         #define _SPBRG_SP1BRG_SIZE                                  0x8
11732:         #define _SPBRG_SP1BRG_LENGTH                                0x8
11733:         #define _SPBRG_SP1BRG_MASK                                  0xFF
11734:         #define _SPBRG_SPBRG_POSN                                   0x0
11735:         #define _SPBRG_SPBRG_POSITION                               0x0
11736:         #define _SPBRG_SPBRG_SIZE                                   0x8
11737:         #define _SPBRG_SPBRG_LENGTH                                 0x8
11738:         #define _SPBRG_SPBRG_MASK                                   0xFF
11739:         typedef union {
11740:             struct {
11741:                 unsigned SP1BRG                 :8;
11742:             };
11743:             struct {
11744:                 unsigned SPBRG                  :8;
11745:             };
11746:         } SP1BRGbits_t;
11747:         extern volatile SP1BRGbits_t SP1BRGbits @ 0xFAF;
11748:         // bitfield macros
11749:         #define _SP1BRG_SP1BRG_POSN                                 0x0
11750:         #define _SP1BRG_SP1BRG_POSITION                             0x0
11751:         #define _SP1BRG_SP1BRG_SIZE                                 0x8
11752:         #define _SP1BRG_SP1BRG_LENGTH                               0x8
11753:         #define _SP1BRG_SP1BRG_MASK                                 0xFF
11754:         #define _SP1BRG_SPBRG_POSN                                  0x0
11755:         #define _SP1BRG_SPBRG_POSITION                              0x0
11756:         #define _SP1BRG_SPBRG_SIZE                                  0x8
11757:         #define _SP1BRG_SPBRG_LENGTH                                0x8
11758:         #define _SP1BRG_SPBRG_MASK                                  0xFF
11759:         
11760:         // Register: SPBRGH1
11761:         extern volatile unsigned char           SPBRGH1             @ 0xFB0;
11762:         #ifndef _LIB_BUILD
11763:         asm("SPBRGH1 equ 0FB0h");
11764:         #endif
11765:         // aliases
11766:         extern volatile unsigned char           SPBRGH              @ 0xFB0;
11767:         #ifndef _LIB_BUILD
11768:         asm("SPBRGH equ 0FB0h");
11769:         #endif
11770:         extern volatile unsigned char           SP1BRGH             @ 0xFB0;
11771:         #ifndef _LIB_BUILD
11772:         asm("SP1BRGH equ 0FB0h");
11773:         #endif
11774:         // bitfield definitions
11775:         typedef union {
11776:             struct {
11777:                 unsigned SP1BRGH                :8;
11778:             };
11779:             struct {
11780:                 unsigned SPBRGH                 :8;
11781:             };
11782:         } SPBRGH1bits_t;
11783:         extern volatile SPBRGH1bits_t SPBRGH1bits @ 0xFB0;
11784:         // bitfield macros
11785:         #define _SPBRGH1_SP1BRGH_POSN                               0x0
11786:         #define _SPBRGH1_SP1BRGH_POSITION                           0x0
11787:         #define _SPBRGH1_SP1BRGH_SIZE                               0x8
11788:         #define _SPBRGH1_SP1BRGH_LENGTH                             0x8
11789:         #define _SPBRGH1_SP1BRGH_MASK                               0xFF
11790:         #define _SPBRGH1_SPBRGH_POSN                                0x0
11791:         #define _SPBRGH1_SPBRGH_POSITION                            0x0
11792:         #define _SPBRGH1_SPBRGH_SIZE                                0x8
11793:         #define _SPBRGH1_SPBRGH_LENGTH                              0x8
11794:         #define _SPBRGH1_SPBRGH_MASK                                0xFF
11795:         // alias bitfield definitions
11796:         typedef union {
11797:             struct {
11798:                 unsigned SP1BRGH                :8;
11799:             };
11800:             struct {
11801:                 unsigned SPBRGH                 :8;
11802:             };
11803:         } SPBRGHbits_t;
11804:         extern volatile SPBRGHbits_t SPBRGHbits @ 0xFB0;
11805:         // bitfield macros
11806:         #define _SPBRGH_SP1BRGH_POSN                                0x0
11807:         #define _SPBRGH_SP1BRGH_POSITION                            0x0
11808:         #define _SPBRGH_SP1BRGH_SIZE                                0x8
11809:         #define _SPBRGH_SP1BRGH_LENGTH                              0x8
11810:         #define _SPBRGH_SP1BRGH_MASK                                0xFF
11811:         #define _SPBRGH_SPBRGH_POSN                                 0x0
11812:         #define _SPBRGH_SPBRGH_POSITION                             0x0
11813:         #define _SPBRGH_SPBRGH_SIZE                                 0x8
11814:         #define _SPBRGH_SPBRGH_LENGTH                               0x8
11815:         #define _SPBRGH_SPBRGH_MASK                                 0xFF
11816:         typedef union {
11817:             struct {
11818:                 unsigned SP1BRGH                :8;
11819:             };
11820:             struct {
11821:                 unsigned SPBRGH                 :8;
11822:             };
11823:         } SP1BRGHbits_t;
11824:         extern volatile SP1BRGHbits_t SP1BRGHbits @ 0xFB0;
11825:         // bitfield macros
11826:         #define _SP1BRGH_SP1BRGH_POSN                               0x0
11827:         #define _SP1BRGH_SP1BRGH_POSITION                           0x0
11828:         #define _SP1BRGH_SP1BRGH_SIZE                               0x8
11829:         #define _SP1BRGH_SP1BRGH_LENGTH                             0x8
11830:         #define _SP1BRGH_SP1BRGH_MASK                               0xFF
11831:         #define _SP1BRGH_SPBRGH_POSN                                0x0
11832:         #define _SP1BRGH_SPBRGH_POSITION                            0x0
11833:         #define _SP1BRGH_SPBRGH_SIZE                                0x8
11834:         #define _SP1BRGH_SPBRGH_LENGTH                              0x8
11835:         #define _SP1BRGH_SPBRGH_MASK                                0xFF
11836:         
11837:         // Register: T3CON
11838:         extern volatile unsigned char           T3CON               @ 0xFB1;
11839:         #ifndef _LIB_BUILD
11840:         asm("T3CON equ 0FB1h");
11841:         #endif
11842:         // bitfield definitions
11843:         typedef union {
11844:             struct {
11845:                 unsigned                        :2;
11846:                 unsigned NOT_T3SYNC             :1;
11847:             };
11848:             struct {
11849:                 unsigned TMR3ON                 :1;
11850:                 unsigned T3RD16                 :1;
11851:                 unsigned nT3SYNC                :1;
11852:                 unsigned T3SOSCEN               :1;
11853:                 unsigned T3CKPS                 :2;
11854:                 unsigned TMR3CS                 :2;
11855:             };
11856:             struct {
11857:                 unsigned                        :3;
11858:                 unsigned T3OSCEN                :1;
11859:                 unsigned T3CKPS0                :1;
11860:                 unsigned T3CKPS1                :1;
11861:                 unsigned TMR3CS0                :1;
11862:                 unsigned TMR3CS1                :1;
11863:             };
11864:             struct {
11865:                 unsigned                        :7;
11866:                 unsigned RD163                  :1;
11867:             };
11868:             struct {
11869:                 unsigned                        :3;
11870:                 unsigned SOSCEN3                :1;
11871:             };
11872:         } T3CONbits_t;
11873:         extern volatile T3CONbits_t T3CONbits @ 0xFB1;
11874:         // bitfield macros
11875:         #define _T3CON_NOT_T3SYNC_POSN                              0x2
11876:         #define _T3CON_NOT_T3SYNC_POSITION                          0x2
11877:         #define _T3CON_NOT_T3SYNC_SIZE                              0x1
11878:         #define _T3CON_NOT_T3SYNC_LENGTH                            0x1
11879:         #define _T3CON_NOT_T3SYNC_MASK                              0x4
11880:         #define _T3CON_TMR3ON_POSN                                  0x0
11881:         #define _T3CON_TMR3ON_POSITION                              0x0
11882:         #define _T3CON_TMR3ON_SIZE                                  0x1
11883:         #define _T3CON_TMR3ON_LENGTH                                0x1
11884:         #define _T3CON_TMR3ON_MASK                                  0x1
11885:         #define _T3CON_T3RD16_POSN                                  0x1
11886:         #define _T3CON_T3RD16_POSITION                              0x1
11887:         #define _T3CON_T3RD16_SIZE                                  0x1
11888:         #define _T3CON_T3RD16_LENGTH                                0x1
11889:         #define _T3CON_T3RD16_MASK                                  0x2
11890:         #define _T3CON_nT3SYNC_POSN                                 0x2
11891:         #define _T3CON_nT3SYNC_POSITION                             0x2
11892:         #define _T3CON_nT3SYNC_SIZE                                 0x1
11893:         #define _T3CON_nT3SYNC_LENGTH                               0x1
11894:         #define _T3CON_nT3SYNC_MASK                                 0x4
11895:         #define _T3CON_T3SOSCEN_POSN                                0x3
11896:         #define _T3CON_T3SOSCEN_POSITION                            0x3
11897:         #define _T3CON_T3SOSCEN_SIZE                                0x1
11898:         #define _T3CON_T3SOSCEN_LENGTH                              0x1
11899:         #define _T3CON_T3SOSCEN_MASK                                0x8
11900:         #define _T3CON_T3CKPS_POSN                                  0x4
11901:         #define _T3CON_T3CKPS_POSITION                              0x4
11902:         #define _T3CON_T3CKPS_SIZE                                  0x2
11903:         #define _T3CON_T3CKPS_LENGTH                                0x2
11904:         #define _T3CON_T3CKPS_MASK                                  0x30
11905:         #define _T3CON_TMR3CS_POSN                                  0x6
11906:         #define _T3CON_TMR3CS_POSITION                              0x6
11907:         #define _T3CON_TMR3CS_SIZE                                  0x2
11908:         #define _T3CON_TMR3CS_LENGTH                                0x2
11909:         #define _T3CON_TMR3CS_MASK                                  0xC0
11910:         #define _T3CON_T3OSCEN_POSN                                 0x3
11911:         #define _T3CON_T3OSCEN_POSITION                             0x3
11912:         #define _T3CON_T3OSCEN_SIZE                                 0x1
11913:         #define _T3CON_T3OSCEN_LENGTH                               0x1
11914:         #define _T3CON_T3OSCEN_MASK                                 0x8
11915:         #define _T3CON_T3CKPS0_POSN                                 0x4
11916:         #define _T3CON_T3CKPS0_POSITION                             0x4
11917:         #define _T3CON_T3CKPS0_SIZE                                 0x1
11918:         #define _T3CON_T3CKPS0_LENGTH                               0x1
11919:         #define _T3CON_T3CKPS0_MASK                                 0x10
11920:         #define _T3CON_T3CKPS1_POSN                                 0x5
11921:         #define _T3CON_T3CKPS1_POSITION                             0x5
11922:         #define _T3CON_T3CKPS1_SIZE                                 0x1
11923:         #define _T3CON_T3CKPS1_LENGTH                               0x1
11924:         #define _T3CON_T3CKPS1_MASK                                 0x20
11925:         #define _T3CON_TMR3CS0_POSN                                 0x6
11926:         #define _T3CON_TMR3CS0_POSITION                             0x6
11927:         #define _T3CON_TMR3CS0_SIZE                                 0x1
11928:         #define _T3CON_TMR3CS0_LENGTH                               0x1
11929:         #define _T3CON_TMR3CS0_MASK                                 0x40
11930:         #define _T3CON_TMR3CS1_POSN                                 0x7
11931:         #define _T3CON_TMR3CS1_POSITION                             0x7
11932:         #define _T3CON_TMR3CS1_SIZE                                 0x1
11933:         #define _T3CON_TMR3CS1_LENGTH                               0x1
11934:         #define _T3CON_TMR3CS1_MASK                                 0x80
11935:         #define _T3CON_RD163_POSN                                   0x7
11936:         #define _T3CON_RD163_POSITION                               0x7
11937:         #define _T3CON_RD163_SIZE                                   0x1
11938:         #define _T3CON_RD163_LENGTH                                 0x1
11939:         #define _T3CON_RD163_MASK                                   0x80
11940:         #define _T3CON_SOSCEN3_POSN                                 0x3
11941:         #define _T3CON_SOSCEN3_POSITION                             0x3
11942:         #define _T3CON_SOSCEN3_SIZE                                 0x1
11943:         #define _T3CON_SOSCEN3_LENGTH                               0x1
11944:         #define _T3CON_SOSCEN3_MASK                                 0x8
11945:         
11946:         // Register: TMR3
11947:         extern volatile unsigned short          TMR3                @ 0xFB2;
11948:         #ifndef _LIB_BUILD
11949:         asm("TMR3 equ 0FB2h");
11950:         #endif
11951:         
11952:         // Register: TMR3L
11953:         extern volatile unsigned char           TMR3L               @ 0xFB2;
11954:         #ifndef _LIB_BUILD
11955:         asm("TMR3L equ 0FB2h");
11956:         #endif
11957:         // bitfield definitions
11958:         typedef union {
11959:             struct {
11960:                 unsigned TMR3L                  :8;
11961:             };
11962:         } TMR3Lbits_t;
11963:         extern volatile TMR3Lbits_t TMR3Lbits @ 0xFB2;
11964:         // bitfield macros
11965:         #define _TMR3L_TMR3L_POSN                                   0x0
11966:         #define _TMR3L_TMR3L_POSITION                               0x0
11967:         #define _TMR3L_TMR3L_SIZE                                   0x8
11968:         #define _TMR3L_TMR3L_LENGTH                                 0x8
11969:         #define _TMR3L_TMR3L_MASK                                   0xFF
11970:         
11971:         // Register: TMR3H
11972:         extern volatile unsigned char           TMR3H               @ 0xFB3;
11973:         #ifndef _LIB_BUILD
11974:         asm("TMR3H equ 0FB3h");
11975:         #endif
11976:         // bitfield definitions
11977:         typedef union {
11978:             struct {
11979:                 unsigned TMR3H                  :8;
11980:             };
11981:         } TMR3Hbits_t;
11982:         extern volatile TMR3Hbits_t TMR3Hbits @ 0xFB3;
11983:         // bitfield macros
11984:         #define _TMR3H_TMR3H_POSN                                   0x0
11985:         #define _TMR3H_TMR3H_POSITION                               0x0
11986:         #define _TMR3H_TMR3H_SIZE                                   0x8
11987:         #define _TMR3H_TMR3H_LENGTH                                 0x8
11988:         #define _TMR3H_TMR3H_MASK                                   0xFF
11989:         
11990:         // Register: T3GCON
11991:         extern volatile unsigned char           T3GCON              @ 0xFB4;
11992:         #ifndef _LIB_BUILD
11993:         asm("T3GCON equ 0FB4h");
11994:         #endif
11995:         // bitfield definitions
11996:         typedef union {
11997:             struct {
11998:                 unsigned                        :3;
11999:                 unsigned T3GGO_NOT_DONE         :1;
12000:             };
12001:             struct {
12002:                 unsigned T3GSS                  :2;
12003:                 unsigned T3GVAL                 :1;
12004:                 unsigned T3GGO_nDONE            :1;
12005:                 unsigned T3GSPM                 :1;
12006:                 unsigned T3GTM                  :1;
12007:                 unsigned T3GPOL                 :1;
12008:                 unsigned TMR3GE                 :1;
12009:             };
12010:             struct {
12011:                 unsigned T3GSS0                 :1;
12012:                 unsigned T3GSS1                 :1;
12013:                 unsigned                        :1;
12014:                 unsigned T3G_DONE               :1;
12015:             };
12016:             struct {
12017:                 unsigned                        :3;
12018:                 unsigned T3GGO                  :1;
12019:             };
12020:         } T3GCONbits_t;
12021:         extern volatile T3GCONbits_t T3GCONbits @ 0xFB4;
12022:         // bitfield macros
12023:         #define _T3GCON_T3GGO_NOT_DONE_POSN                         0x3
12024:         #define _T3GCON_T3GGO_NOT_DONE_POSITION                     0x3
12025:         #define _T3GCON_T3GGO_NOT_DONE_SIZE                         0x1
12026:         #define _T3GCON_T3GGO_NOT_DONE_LENGTH                       0x1
12027:         #define _T3GCON_T3GGO_NOT_DONE_MASK                         0x8
12028:         #define _T3GCON_T3GSS_POSN                                  0x0
12029:         #define _T3GCON_T3GSS_POSITION                              0x0
12030:         #define _T3GCON_T3GSS_SIZE                                  0x2
12031:         #define _T3GCON_T3GSS_LENGTH                                0x2
12032:         #define _T3GCON_T3GSS_MASK                                  0x3
12033:         #define _T3GCON_T3GVAL_POSN                                 0x2
12034:         #define _T3GCON_T3GVAL_POSITION                             0x2
12035:         #define _T3GCON_T3GVAL_SIZE                                 0x1
12036:         #define _T3GCON_T3GVAL_LENGTH                               0x1
12037:         #define _T3GCON_T3GVAL_MASK                                 0x4
12038:         #define _T3GCON_T3GGO_nDONE_POSN                            0x3
12039:         #define _T3GCON_T3GGO_nDONE_POSITION                        0x3
12040:         #define _T3GCON_T3GGO_nDONE_SIZE                            0x1
12041:         #define _T3GCON_T3GGO_nDONE_LENGTH                          0x1
12042:         #define _T3GCON_T3GGO_nDONE_MASK                            0x8
12043:         #define _T3GCON_T3GSPM_POSN                                 0x4
12044:         #define _T3GCON_T3GSPM_POSITION                             0x4
12045:         #define _T3GCON_T3GSPM_SIZE                                 0x1
12046:         #define _T3GCON_T3GSPM_LENGTH                               0x1
12047:         #define _T3GCON_T3GSPM_MASK                                 0x10
12048:         #define _T3GCON_T3GTM_POSN                                  0x5
12049:         #define _T3GCON_T3GTM_POSITION                              0x5
12050:         #define _T3GCON_T3GTM_SIZE                                  0x1
12051:         #define _T3GCON_T3GTM_LENGTH                                0x1
12052:         #define _T3GCON_T3GTM_MASK                                  0x20
12053:         #define _T3GCON_T3GPOL_POSN                                 0x6
12054:         #define _T3GCON_T3GPOL_POSITION                             0x6
12055:         #define _T3GCON_T3GPOL_SIZE                                 0x1
12056:         #define _T3GCON_T3GPOL_LENGTH                               0x1
12057:         #define _T3GCON_T3GPOL_MASK                                 0x40
12058:         #define _T3GCON_TMR3GE_POSN                                 0x7
12059:         #define _T3GCON_TMR3GE_POSITION                             0x7
12060:         #define _T3GCON_TMR3GE_SIZE                                 0x1
12061:         #define _T3GCON_TMR3GE_LENGTH                               0x1
12062:         #define _T3GCON_TMR3GE_MASK                                 0x80
12063:         #define _T3GCON_T3GSS0_POSN                                 0x0
12064:         #define _T3GCON_T3GSS0_POSITION                             0x0
12065:         #define _T3GCON_T3GSS0_SIZE                                 0x1
12066:         #define _T3GCON_T3GSS0_LENGTH                               0x1
12067:         #define _T3GCON_T3GSS0_MASK                                 0x1
12068:         #define _T3GCON_T3GSS1_POSN                                 0x1
12069:         #define _T3GCON_T3GSS1_POSITION                             0x1
12070:         #define _T3GCON_T3GSS1_SIZE                                 0x1
12071:         #define _T3GCON_T3GSS1_LENGTH                               0x1
12072:         #define _T3GCON_T3GSS1_MASK                                 0x2
12073:         #define _T3GCON_T3G_DONE_POSN                               0x3
12074:         #define _T3GCON_T3G_DONE_POSITION                           0x3
12075:         #define _T3GCON_T3G_DONE_SIZE                               0x1
12076:         #define _T3GCON_T3G_DONE_LENGTH                             0x1
12077:         #define _T3GCON_T3G_DONE_MASK                               0x8
12078:         #define _T3GCON_T3GGO_POSN                                  0x3
12079:         #define _T3GCON_T3GGO_POSITION                              0x3
12080:         #define _T3GCON_T3GGO_SIZE                                  0x1
12081:         #define _T3GCON_T3GGO_LENGTH                                0x1
12082:         #define _T3GCON_T3GGO_MASK                                  0x8
12083:         
12084:         // Register: ECCP1AS
12085:         extern volatile unsigned char           ECCP1AS             @ 0xFB6;
12086:         #ifndef _LIB_BUILD
12087:         asm("ECCP1AS equ 0FB6h");
12088:         #endif
12089:         // aliases
12090:         extern volatile unsigned char           ECCPAS              @ 0xFB6;
12091:         #ifndef _LIB_BUILD
12092:         asm("ECCPAS equ 0FB6h");
12093:         #endif
12094:         // bitfield definitions
12095:         typedef union {
12096:             struct {
12097:                 unsigned P1SSBD                 :2;
12098:                 unsigned P1SSAC                 :2;
12099:                 unsigned CCP1AS                 :3;
12100:                 unsigned CCP1ASE                :1;
12101:             };
12102:             struct {
12103:                 unsigned P1SSBD0                :1;
12104:                 unsigned P1SSBD1                :1;
12105:                 unsigned P1SSAC0                :1;
12106:                 unsigned P1SSAC1                :1;
12107:                 unsigned CCP1AS0                :1;
12108:                 unsigned CCP1AS1                :1;
12109:                 unsigned CCP1AS2                :1;
12110:             };
12111:             struct {
12112:                 unsigned PSS1BD                 :2;
12113:                 unsigned PSS1AC                 :2;
12114:             };
12115:             struct {
12116:                 unsigned PSS1BD0                :1;
12117:                 unsigned PSS1BD1                :1;
12118:                 unsigned PSS1AC0                :1;
12119:                 unsigned PSS1AC1                :1;
12120:             };
12121:             struct {
12122:                 unsigned PSSBD                  :2;
12123:                 unsigned PSSAC                  :2;
12124:                 unsigned ECCPAS                 :3;
12125:                 unsigned ECCPASE                :1;
12126:             };
12127:             struct {
12128:                 unsigned PSSBD0                 :1;
12129:                 unsigned PSSBD1                 :1;
12130:                 unsigned PSSAC0                 :1;
12131:                 unsigned PSSAC1                 :1;
12132:                 unsigned ECCPAS0                :1;
12133:                 unsigned ECCPAS1                :1;
12134:                 unsigned ECCPAS2                :1;
12135:             };
12136:         } ECCP1ASbits_t;
12137:         extern volatile ECCP1ASbits_t ECCP1ASbits @ 0xFB6;
12138:         // bitfield macros
12139:         #define _ECCP1AS_P1SSBD_POSN                                0x0
12140:         #define _ECCP1AS_P1SSBD_POSITION                            0x0
12141:         #define _ECCP1AS_P1SSBD_SIZE                                0x2
12142:         #define _ECCP1AS_P1SSBD_LENGTH                              0x2
12143:         #define _ECCP1AS_P1SSBD_MASK                                0x3
12144:         #define _ECCP1AS_P1SSAC_POSN                                0x2
12145:         #define _ECCP1AS_P1SSAC_POSITION                            0x2
12146:         #define _ECCP1AS_P1SSAC_SIZE                                0x2
12147:         #define _ECCP1AS_P1SSAC_LENGTH                              0x2
12148:         #define _ECCP1AS_P1SSAC_MASK                                0xC
12149:         #define _ECCP1AS_CCP1AS_POSN                                0x4
12150:         #define _ECCP1AS_CCP1AS_POSITION                            0x4
12151:         #define _ECCP1AS_CCP1AS_SIZE                                0x3
12152:         #define _ECCP1AS_CCP1AS_LENGTH                              0x3
12153:         #define _ECCP1AS_CCP1AS_MASK                                0x70
12154:         #define _ECCP1AS_CCP1ASE_POSN                               0x7
12155:         #define _ECCP1AS_CCP1ASE_POSITION                           0x7
12156:         #define _ECCP1AS_CCP1ASE_SIZE                               0x1
12157:         #define _ECCP1AS_CCP1ASE_LENGTH                             0x1
12158:         #define _ECCP1AS_CCP1ASE_MASK                               0x80
12159:         #define _ECCP1AS_P1SSBD0_POSN                               0x0
12160:         #define _ECCP1AS_P1SSBD0_POSITION                           0x0
12161:         #define _ECCP1AS_P1SSBD0_SIZE                               0x1
12162:         #define _ECCP1AS_P1SSBD0_LENGTH                             0x1
12163:         #define _ECCP1AS_P1SSBD0_MASK                               0x1
12164:         #define _ECCP1AS_P1SSBD1_POSN                               0x1
12165:         #define _ECCP1AS_P1SSBD1_POSITION                           0x1
12166:         #define _ECCP1AS_P1SSBD1_SIZE                               0x1
12167:         #define _ECCP1AS_P1SSBD1_LENGTH                             0x1
12168:         #define _ECCP1AS_P1SSBD1_MASK                               0x2
12169:         #define _ECCP1AS_P1SSAC0_POSN                               0x2
12170:         #define _ECCP1AS_P1SSAC0_POSITION                           0x2
12171:         #define _ECCP1AS_P1SSAC0_SIZE                               0x1
12172:         #define _ECCP1AS_P1SSAC0_LENGTH                             0x1
12173:         #define _ECCP1AS_P1SSAC0_MASK                               0x4
12174:         #define _ECCP1AS_P1SSAC1_POSN                               0x3
12175:         #define _ECCP1AS_P1SSAC1_POSITION                           0x3
12176:         #define _ECCP1AS_P1SSAC1_SIZE                               0x1
12177:         #define _ECCP1AS_P1SSAC1_LENGTH                             0x1
12178:         #define _ECCP1AS_P1SSAC1_MASK                               0x8
12179:         #define _ECCP1AS_CCP1AS0_POSN                               0x4
12180:         #define _ECCP1AS_CCP1AS0_POSITION                           0x4
12181:         #define _ECCP1AS_CCP1AS0_SIZE                               0x1
12182:         #define _ECCP1AS_CCP1AS0_LENGTH                             0x1
12183:         #define _ECCP1AS_CCP1AS0_MASK                               0x10
12184:         #define _ECCP1AS_CCP1AS1_POSN                               0x5
12185:         #define _ECCP1AS_CCP1AS1_POSITION                           0x5
12186:         #define _ECCP1AS_CCP1AS1_SIZE                               0x1
12187:         #define _ECCP1AS_CCP1AS1_LENGTH                             0x1
12188:         #define _ECCP1AS_CCP1AS1_MASK                               0x20
12189:         #define _ECCP1AS_CCP1AS2_POSN                               0x6
12190:         #define _ECCP1AS_CCP1AS2_POSITION                           0x6
12191:         #define _ECCP1AS_CCP1AS2_SIZE                               0x1
12192:         #define _ECCP1AS_CCP1AS2_LENGTH                             0x1
12193:         #define _ECCP1AS_CCP1AS2_MASK                               0x40
12194:         #define _ECCP1AS_PSS1BD_POSN                                0x0
12195:         #define _ECCP1AS_PSS1BD_POSITION                            0x0
12196:         #define _ECCP1AS_PSS1BD_SIZE                                0x2
12197:         #define _ECCP1AS_PSS1BD_LENGTH                              0x2
12198:         #define _ECCP1AS_PSS1BD_MASK                                0x3
12199:         #define _ECCP1AS_PSS1AC_POSN                                0x2
12200:         #define _ECCP1AS_PSS1AC_POSITION                            0x2
12201:         #define _ECCP1AS_PSS1AC_SIZE                                0x2
12202:         #define _ECCP1AS_PSS1AC_LENGTH                              0x2
12203:         #define _ECCP1AS_PSS1AC_MASK                                0xC
12204:         #define _ECCP1AS_PSS1BD0_POSN                               0x0
12205:         #define _ECCP1AS_PSS1BD0_POSITION                           0x0
12206:         #define _ECCP1AS_PSS1BD0_SIZE                               0x1
12207:         #define _ECCP1AS_PSS1BD0_LENGTH                             0x1
12208:         #define _ECCP1AS_PSS1BD0_MASK                               0x1
12209:         #define _ECCP1AS_PSS1BD1_POSN                               0x1
12210:         #define _ECCP1AS_PSS1BD1_POSITION                           0x1
12211:         #define _ECCP1AS_PSS1BD1_SIZE                               0x1
12212:         #define _ECCP1AS_PSS1BD1_LENGTH                             0x1
12213:         #define _ECCP1AS_PSS1BD1_MASK                               0x2
12214:         #define _ECCP1AS_PSS1AC0_POSN                               0x2
12215:         #define _ECCP1AS_PSS1AC0_POSITION                           0x2
12216:         #define _ECCP1AS_PSS1AC0_SIZE                               0x1
12217:         #define _ECCP1AS_PSS1AC0_LENGTH                             0x1
12218:         #define _ECCP1AS_PSS1AC0_MASK                               0x4
12219:         #define _ECCP1AS_PSS1AC1_POSN                               0x3
12220:         #define _ECCP1AS_PSS1AC1_POSITION                           0x3
12221:         #define _ECCP1AS_PSS1AC1_SIZE                               0x1
12222:         #define _ECCP1AS_PSS1AC1_LENGTH                             0x1
12223:         #define _ECCP1AS_PSS1AC1_MASK                               0x8
12224:         #define _ECCP1AS_PSSBD_POSN                                 0x0
12225:         #define _ECCP1AS_PSSBD_POSITION                             0x0
12226:         #define _ECCP1AS_PSSBD_SIZE                                 0x2
12227:         #define _ECCP1AS_PSSBD_LENGTH                               0x2
12228:         #define _ECCP1AS_PSSBD_MASK                                 0x3
12229:         #define _ECCP1AS_PSSAC_POSN                                 0x2
12230:         #define _ECCP1AS_PSSAC_POSITION                             0x2
12231:         #define _ECCP1AS_PSSAC_SIZE                                 0x2
12232:         #define _ECCP1AS_PSSAC_LENGTH                               0x2
12233:         #define _ECCP1AS_PSSAC_MASK                                 0xC
12234:         #define _ECCP1AS_ECCPAS_POSN                                0x4
12235:         #define _ECCP1AS_ECCPAS_POSITION                            0x4
12236:         #define _ECCP1AS_ECCPAS_SIZE                                0x3
12237:         #define _ECCP1AS_ECCPAS_LENGTH                              0x3
12238:         #define _ECCP1AS_ECCPAS_MASK                                0x70
12239:         #define _ECCP1AS_ECCPASE_POSN                               0x7
12240:         #define _ECCP1AS_ECCPASE_POSITION                           0x7
12241:         #define _ECCP1AS_ECCPASE_SIZE                               0x1
12242:         #define _ECCP1AS_ECCPASE_LENGTH                             0x1
12243:         #define _ECCP1AS_ECCPASE_MASK                               0x80
12244:         #define _ECCP1AS_PSSBD0_POSN                                0x0
12245:         #define _ECCP1AS_PSSBD0_POSITION                            0x0
12246:         #define _ECCP1AS_PSSBD0_SIZE                                0x1
12247:         #define _ECCP1AS_PSSBD0_LENGTH                              0x1
12248:         #define _ECCP1AS_PSSBD0_MASK                                0x1
12249:         #define _ECCP1AS_PSSBD1_POSN                                0x1
12250:         #define _ECCP1AS_PSSBD1_POSITION                            0x1
12251:         #define _ECCP1AS_PSSBD1_SIZE                                0x1
12252:         #define _ECCP1AS_PSSBD1_LENGTH                              0x1
12253:         #define _ECCP1AS_PSSBD1_MASK                                0x2
12254:         #define _ECCP1AS_PSSAC0_POSN                                0x2
12255:         #define _ECCP1AS_PSSAC0_POSITION                            0x2
12256:         #define _ECCP1AS_PSSAC0_SIZE                                0x1
12257:         #define _ECCP1AS_PSSAC0_LENGTH                              0x1
12258:         #define _ECCP1AS_PSSAC0_MASK                                0x4
12259:         #define _ECCP1AS_PSSAC1_POSN                                0x3
12260:         #define _ECCP1AS_PSSAC1_POSITION                            0x3
12261:         #define _ECCP1AS_PSSAC1_SIZE                                0x1
12262:         #define _ECCP1AS_PSSAC1_LENGTH                              0x1
12263:         #define _ECCP1AS_PSSAC1_MASK                                0x8
12264:         #define _ECCP1AS_ECCPAS0_POSN                               0x4
12265:         #define _ECCP1AS_ECCPAS0_POSITION                           0x4
12266:         #define _ECCP1AS_ECCPAS0_SIZE                               0x1
12267:         #define _ECCP1AS_ECCPAS0_LENGTH                             0x1
12268:         #define _ECCP1AS_ECCPAS0_MASK                               0x10
12269:         #define _ECCP1AS_ECCPAS1_POSN                               0x5
12270:         #define _ECCP1AS_ECCPAS1_POSITION                           0x5
12271:         #define _ECCP1AS_ECCPAS1_SIZE                               0x1
12272:         #define _ECCP1AS_ECCPAS1_LENGTH                             0x1
12273:         #define _ECCP1AS_ECCPAS1_MASK                               0x20
12274:         #define _ECCP1AS_ECCPAS2_POSN                               0x6
12275:         #define _ECCP1AS_ECCPAS2_POSITION                           0x6
12276:         #define _ECCP1AS_ECCPAS2_SIZE                               0x1
12277:         #define _ECCP1AS_ECCPAS2_LENGTH                             0x1
12278:         #define _ECCP1AS_ECCPAS2_MASK                               0x40
12279:         // alias bitfield definitions
12280:         typedef union {
12281:             struct {
12282:                 unsigned P1SSBD                 :2;
12283:                 unsigned P1SSAC                 :2;
12284:                 unsigned CCP1AS                 :3;
12285:                 unsigned CCP1ASE                :1;
12286:             };
12287:             struct {
12288:                 unsigned P1SSBD0                :1;
12289:                 unsigned P1SSBD1                :1;
12290:                 unsigned P1SSAC0                :1;
12291:                 unsigned P1SSAC1                :1;
12292:                 unsigned CCP1AS0                :1;
12293:                 unsigned CCP1AS1                :1;
12294:                 unsigned CCP1AS2                :1;
12295:             };
12296:             struct {
12297:                 unsigned PSS1BD                 :2;
12298:                 unsigned PSS1AC                 :2;
12299:             };
12300:             struct {
12301:                 unsigned PSS1BD0                :1;
12302:                 unsigned PSS1BD1                :1;
12303:                 unsigned PSS1AC0                :1;
12304:                 unsigned PSS1AC1                :1;
12305:             };
12306:             struct {
12307:                 unsigned PSSBD                  :2;
12308:                 unsigned PSSAC                  :2;
12309:                 unsigned ECCPAS                 :3;
12310:                 unsigned ECCPASE                :1;
12311:             };
12312:             struct {
12313:                 unsigned PSSBD0                 :1;
12314:                 unsigned PSSBD1                 :1;
12315:                 unsigned PSSAC0                 :1;
12316:                 unsigned PSSAC1                 :1;
12317:                 unsigned ECCPAS0                :1;
12318:                 unsigned ECCPAS1                :1;
12319:                 unsigned ECCPAS2                :1;
12320:             };
12321:         } ECCPASbits_t;
12322:         extern volatile ECCPASbits_t ECCPASbits @ 0xFB6;
12323:         // bitfield macros
12324:         #define _ECCPAS_P1SSBD_POSN                                 0x0
12325:         #define _ECCPAS_P1SSBD_POSITION                             0x0
12326:         #define _ECCPAS_P1SSBD_SIZE                                 0x2
12327:         #define _ECCPAS_P1SSBD_LENGTH                               0x2
12328:         #define _ECCPAS_P1SSBD_MASK                                 0x3
12329:         #define _ECCPAS_P1SSAC_POSN                                 0x2
12330:         #define _ECCPAS_P1SSAC_POSITION                             0x2
12331:         #define _ECCPAS_P1SSAC_SIZE                                 0x2
12332:         #define _ECCPAS_P1SSAC_LENGTH                               0x2
12333:         #define _ECCPAS_P1SSAC_MASK                                 0xC
12334:         #define _ECCPAS_CCP1AS_POSN                                 0x4
12335:         #define _ECCPAS_CCP1AS_POSITION                             0x4
12336:         #define _ECCPAS_CCP1AS_SIZE                                 0x3
12337:         #define _ECCPAS_CCP1AS_LENGTH                               0x3
12338:         #define _ECCPAS_CCP1AS_MASK                                 0x70
12339:         #define _ECCPAS_CCP1ASE_POSN                                0x7
12340:         #define _ECCPAS_CCP1ASE_POSITION                            0x7
12341:         #define _ECCPAS_CCP1ASE_SIZE                                0x1
12342:         #define _ECCPAS_CCP1ASE_LENGTH                              0x1
12343:         #define _ECCPAS_CCP1ASE_MASK                                0x80
12344:         #define _ECCPAS_P1SSBD0_POSN                                0x0
12345:         #define _ECCPAS_P1SSBD0_POSITION                            0x0
12346:         #define _ECCPAS_P1SSBD0_SIZE                                0x1
12347:         #define _ECCPAS_P1SSBD0_LENGTH                              0x1
12348:         #define _ECCPAS_P1SSBD0_MASK                                0x1
12349:         #define _ECCPAS_P1SSBD1_POSN                                0x1
12350:         #define _ECCPAS_P1SSBD1_POSITION                            0x1
12351:         #define _ECCPAS_P1SSBD1_SIZE                                0x1
12352:         #define _ECCPAS_P1SSBD1_LENGTH                              0x1
12353:         #define _ECCPAS_P1SSBD1_MASK                                0x2
12354:         #define _ECCPAS_P1SSAC0_POSN                                0x2
12355:         #define _ECCPAS_P1SSAC0_POSITION                            0x2
12356:         #define _ECCPAS_P1SSAC0_SIZE                                0x1
12357:         #define _ECCPAS_P1SSAC0_LENGTH                              0x1
12358:         #define _ECCPAS_P1SSAC0_MASK                                0x4
12359:         #define _ECCPAS_P1SSAC1_POSN                                0x3
12360:         #define _ECCPAS_P1SSAC1_POSITION                            0x3
12361:         #define _ECCPAS_P1SSAC1_SIZE                                0x1
12362:         #define _ECCPAS_P1SSAC1_LENGTH                              0x1
12363:         #define _ECCPAS_P1SSAC1_MASK                                0x8
12364:         #define _ECCPAS_CCP1AS0_POSN                                0x4
12365:         #define _ECCPAS_CCP1AS0_POSITION                            0x4
12366:         #define _ECCPAS_CCP1AS0_SIZE                                0x1
12367:         #define _ECCPAS_CCP1AS0_LENGTH                              0x1
12368:         #define _ECCPAS_CCP1AS0_MASK                                0x10
12369:         #define _ECCPAS_CCP1AS1_POSN                                0x5
12370:         #define _ECCPAS_CCP1AS1_POSITION                            0x5
12371:         #define _ECCPAS_CCP1AS1_SIZE                                0x1
12372:         #define _ECCPAS_CCP1AS1_LENGTH                              0x1
12373:         #define _ECCPAS_CCP1AS1_MASK                                0x20
12374:         #define _ECCPAS_CCP1AS2_POSN                                0x6
12375:         #define _ECCPAS_CCP1AS2_POSITION                            0x6
12376:         #define _ECCPAS_CCP1AS2_SIZE                                0x1
12377:         #define _ECCPAS_CCP1AS2_LENGTH                              0x1
12378:         #define _ECCPAS_CCP1AS2_MASK                                0x40
12379:         #define _ECCPAS_PSS1BD_POSN                                 0x0
12380:         #define _ECCPAS_PSS1BD_POSITION                             0x0
12381:         #define _ECCPAS_PSS1BD_SIZE                                 0x2
12382:         #define _ECCPAS_PSS1BD_LENGTH                               0x2
12383:         #define _ECCPAS_PSS1BD_MASK                                 0x3
12384:         #define _ECCPAS_PSS1AC_POSN                                 0x2
12385:         #define _ECCPAS_PSS1AC_POSITION                             0x2
12386:         #define _ECCPAS_PSS1AC_SIZE                                 0x2
12387:         #define _ECCPAS_PSS1AC_LENGTH                               0x2
12388:         #define _ECCPAS_PSS1AC_MASK                                 0xC
12389:         #define _ECCPAS_PSS1BD0_POSN                                0x0
12390:         #define _ECCPAS_PSS1BD0_POSITION                            0x0
12391:         #define _ECCPAS_PSS1BD0_SIZE                                0x1
12392:         #define _ECCPAS_PSS1BD0_LENGTH                              0x1
12393:         #define _ECCPAS_PSS1BD0_MASK                                0x1
12394:         #define _ECCPAS_PSS1BD1_POSN                                0x1
12395:         #define _ECCPAS_PSS1BD1_POSITION                            0x1
12396:         #define _ECCPAS_PSS1BD1_SIZE                                0x1
12397:         #define _ECCPAS_PSS1BD1_LENGTH                              0x1
12398:         #define _ECCPAS_PSS1BD1_MASK                                0x2
12399:         #define _ECCPAS_PSS1AC0_POSN                                0x2
12400:         #define _ECCPAS_PSS1AC0_POSITION                            0x2
12401:         #define _ECCPAS_PSS1AC0_SIZE                                0x1
12402:         #define _ECCPAS_PSS1AC0_LENGTH                              0x1
12403:         #define _ECCPAS_PSS1AC0_MASK                                0x4
12404:         #define _ECCPAS_PSS1AC1_POSN                                0x3
12405:         #define _ECCPAS_PSS1AC1_POSITION                            0x3
12406:         #define _ECCPAS_PSS1AC1_SIZE                                0x1
12407:         #define _ECCPAS_PSS1AC1_LENGTH                              0x1
12408:         #define _ECCPAS_PSS1AC1_MASK                                0x8
12409:         #define _ECCPAS_PSSBD_POSN                                  0x0
12410:         #define _ECCPAS_PSSBD_POSITION                              0x0
12411:         #define _ECCPAS_PSSBD_SIZE                                  0x2
12412:         #define _ECCPAS_PSSBD_LENGTH                                0x2
12413:         #define _ECCPAS_PSSBD_MASK                                  0x3
12414:         #define _ECCPAS_PSSAC_POSN                                  0x2
12415:         #define _ECCPAS_PSSAC_POSITION                              0x2
12416:         #define _ECCPAS_PSSAC_SIZE                                  0x2
12417:         #define _ECCPAS_PSSAC_LENGTH                                0x2
12418:         #define _ECCPAS_PSSAC_MASK                                  0xC
12419:         #define _ECCPAS_ECCPAS_POSN                                 0x4
12420:         #define _ECCPAS_ECCPAS_POSITION                             0x4
12421:         #define _ECCPAS_ECCPAS_SIZE                                 0x3
12422:         #define _ECCPAS_ECCPAS_LENGTH                               0x3
12423:         #define _ECCPAS_ECCPAS_MASK                                 0x70
12424:         #define _ECCPAS_ECCPASE_POSN                                0x7
12425:         #define _ECCPAS_ECCPASE_POSITION                            0x7
12426:         #define _ECCPAS_ECCPASE_SIZE                                0x1
12427:         #define _ECCPAS_ECCPASE_LENGTH                              0x1
12428:         #define _ECCPAS_ECCPASE_MASK                                0x80
12429:         #define _ECCPAS_PSSBD0_POSN                                 0x0
12430:         #define _ECCPAS_PSSBD0_POSITION                             0x0
12431:         #define _ECCPAS_PSSBD0_SIZE                                 0x1
12432:         #define _ECCPAS_PSSBD0_LENGTH                               0x1
12433:         #define _ECCPAS_PSSBD0_MASK                                 0x1
12434:         #define _ECCPAS_PSSBD1_POSN                                 0x1
12435:         #define _ECCPAS_PSSBD1_POSITION                             0x1
12436:         #define _ECCPAS_PSSBD1_SIZE                                 0x1
12437:         #define _ECCPAS_PSSBD1_LENGTH                               0x1
12438:         #define _ECCPAS_PSSBD1_MASK                                 0x2
12439:         #define _ECCPAS_PSSAC0_POSN                                 0x2
12440:         #define _ECCPAS_PSSAC0_POSITION                             0x2
12441:         #define _ECCPAS_PSSAC0_SIZE                                 0x1
12442:         #define _ECCPAS_PSSAC0_LENGTH                               0x1
12443:         #define _ECCPAS_PSSAC0_MASK                                 0x4
12444:         #define _ECCPAS_PSSAC1_POSN                                 0x3
12445:         #define _ECCPAS_PSSAC1_POSITION                             0x3
12446:         #define _ECCPAS_PSSAC1_SIZE                                 0x1
12447:         #define _ECCPAS_PSSAC1_LENGTH                               0x1
12448:         #define _ECCPAS_PSSAC1_MASK                                 0x8
12449:         #define _ECCPAS_ECCPAS0_POSN                                0x4
12450:         #define _ECCPAS_ECCPAS0_POSITION                            0x4
12451:         #define _ECCPAS_ECCPAS0_SIZE                                0x1
12452:         #define _ECCPAS_ECCPAS0_LENGTH                              0x1
12453:         #define _ECCPAS_ECCPAS0_MASK                                0x10
12454:         #define _ECCPAS_ECCPAS1_POSN                                0x5
12455:         #define _ECCPAS_ECCPAS1_POSITION                            0x5
12456:         #define _ECCPAS_ECCPAS1_SIZE                                0x1
12457:         #define _ECCPAS_ECCPAS1_LENGTH                              0x1
12458:         #define _ECCPAS_ECCPAS1_MASK                                0x20
12459:         #define _ECCPAS_ECCPAS2_POSN                                0x6
12460:         #define _ECCPAS_ECCPAS2_POSITION                            0x6
12461:         #define _ECCPAS_ECCPAS2_SIZE                                0x1
12462:         #define _ECCPAS_ECCPAS2_LENGTH                              0x1
12463:         #define _ECCPAS_ECCPAS2_MASK                                0x40
12464:         
12465:         // Register: PWM1CON
12466:         extern volatile unsigned char           PWM1CON             @ 0xFB7;
12467:         #ifndef _LIB_BUILD
12468:         asm("PWM1CON equ 0FB7h");
12469:         #endif
12470:         // aliases
12471:         extern volatile unsigned char           PWMCON              @ 0xFB7;
12472:         #ifndef _LIB_BUILD
12473:         asm("PWMCON equ 0FB7h");
12474:         #endif
12475:         // bitfield definitions
12476:         typedef union {
12477:             struct {
12478:                 unsigned P1DC                   :7;
12479:                 unsigned P1RSEN                 :1;
12480:             };
12481:             struct {
12482:                 unsigned P1DC0                  :1;
12483:                 unsigned P1DC1                  :1;
12484:                 unsigned P1DC2                  :1;
12485:                 unsigned P1DC3                  :1;
12486:                 unsigned P1DC4                  :1;
12487:                 unsigned P1DC5                  :1;
12488:                 unsigned P1DC6                  :1;
12489:             };
12490:             struct {
12491:                 unsigned PDC                    :7;
12492:                 unsigned PRSEN                  :1;
12493:             };
12494:             struct {
12495:                 unsigned PDC0                   :1;
12496:                 unsigned PDC1                   :1;
12497:                 unsigned PDC2                   :1;
12498:                 unsigned PDC3                   :1;
12499:                 unsigned PDC4                   :1;
12500:                 unsigned PDC5                   :1;
12501:                 unsigned PDC6                   :1;
12502:             };
12503:         } PWM1CONbits_t;
12504:         extern volatile PWM1CONbits_t PWM1CONbits @ 0xFB7;
12505:         // bitfield macros
12506:         #define _PWM1CON_P1DC_POSN                                  0x0
12507:         #define _PWM1CON_P1DC_POSITION                              0x0
12508:         #define _PWM1CON_P1DC_SIZE                                  0x7
12509:         #define _PWM1CON_P1DC_LENGTH                                0x7
12510:         #define _PWM1CON_P1DC_MASK                                  0x7F
12511:         #define _PWM1CON_P1RSEN_POSN                                0x7
12512:         #define _PWM1CON_P1RSEN_POSITION                            0x7
12513:         #define _PWM1CON_P1RSEN_SIZE                                0x1
12514:         #define _PWM1CON_P1RSEN_LENGTH                              0x1
12515:         #define _PWM1CON_P1RSEN_MASK                                0x80
12516:         #define _PWM1CON_P1DC0_POSN                                 0x0
12517:         #define _PWM1CON_P1DC0_POSITION                             0x0
12518:         #define _PWM1CON_P1DC0_SIZE                                 0x1
12519:         #define _PWM1CON_P1DC0_LENGTH                               0x1
12520:         #define _PWM1CON_P1DC0_MASK                                 0x1
12521:         #define _PWM1CON_P1DC1_POSN                                 0x1
12522:         #define _PWM1CON_P1DC1_POSITION                             0x1
12523:         #define _PWM1CON_P1DC1_SIZE                                 0x1
12524:         #define _PWM1CON_P1DC1_LENGTH                               0x1
12525:         #define _PWM1CON_P1DC1_MASK                                 0x2
12526:         #define _PWM1CON_P1DC2_POSN                                 0x2
12527:         #define _PWM1CON_P1DC2_POSITION                             0x2
12528:         #define _PWM1CON_P1DC2_SIZE                                 0x1
12529:         #define _PWM1CON_P1DC2_LENGTH                               0x1
12530:         #define _PWM1CON_P1DC2_MASK                                 0x4
12531:         #define _PWM1CON_P1DC3_POSN                                 0x3
12532:         #define _PWM1CON_P1DC3_POSITION                             0x3
12533:         #define _PWM1CON_P1DC3_SIZE                                 0x1
12534:         #define _PWM1CON_P1DC3_LENGTH                               0x1
12535:         #define _PWM1CON_P1DC3_MASK                                 0x8
12536:         #define _PWM1CON_P1DC4_POSN                                 0x4
12537:         #define _PWM1CON_P1DC4_POSITION                             0x4
12538:         #define _PWM1CON_P1DC4_SIZE                                 0x1
12539:         #define _PWM1CON_P1DC4_LENGTH                               0x1
12540:         #define _PWM1CON_P1DC4_MASK                                 0x10
12541:         #define _PWM1CON_P1DC5_POSN                                 0x5
12542:         #define _PWM1CON_P1DC5_POSITION                             0x5
12543:         #define _PWM1CON_P1DC5_SIZE                                 0x1
12544:         #define _PWM1CON_P1DC5_LENGTH                               0x1
12545:         #define _PWM1CON_P1DC5_MASK                                 0x20
12546:         #define _PWM1CON_P1DC6_POSN                                 0x6
12547:         #define _PWM1CON_P1DC6_POSITION                             0x6
12548:         #define _PWM1CON_P1DC6_SIZE                                 0x1
12549:         #define _PWM1CON_P1DC6_LENGTH                               0x1
12550:         #define _PWM1CON_P1DC6_MASK                                 0x40
12551:         #define _PWM1CON_PDC_POSN                                   0x0
12552:         #define _PWM1CON_PDC_POSITION                               0x0
12553:         #define _PWM1CON_PDC_SIZE                                   0x7
12554:         #define _PWM1CON_PDC_LENGTH                                 0x7
12555:         #define _PWM1CON_PDC_MASK                                   0x7F
12556:         #define _PWM1CON_PRSEN_POSN                                 0x7
12557:         #define _PWM1CON_PRSEN_POSITION                             0x7
12558:         #define _PWM1CON_PRSEN_SIZE                                 0x1
12559:         #define _PWM1CON_PRSEN_LENGTH                               0x1
12560:         #define _PWM1CON_PRSEN_MASK                                 0x80
12561:         #define _PWM1CON_PDC0_POSN                                  0x0
12562:         #define _PWM1CON_PDC0_POSITION                              0x0
12563:         #define _PWM1CON_PDC0_SIZE                                  0x1
12564:         #define _PWM1CON_PDC0_LENGTH                                0x1
12565:         #define _PWM1CON_PDC0_MASK                                  0x1
12566:         #define _PWM1CON_PDC1_POSN                                  0x1
12567:         #define _PWM1CON_PDC1_POSITION                              0x1
12568:         #define _PWM1CON_PDC1_SIZE                                  0x1
12569:         #define _PWM1CON_PDC1_LENGTH                                0x1
12570:         #define _PWM1CON_PDC1_MASK                                  0x2
12571:         #define _PWM1CON_PDC2_POSN                                  0x2
12572:         #define _PWM1CON_PDC2_POSITION                              0x2
12573:         #define _PWM1CON_PDC2_SIZE                                  0x1
12574:         #define _PWM1CON_PDC2_LENGTH                                0x1
12575:         #define _PWM1CON_PDC2_MASK                                  0x4
12576:         #define _PWM1CON_PDC3_POSN                                  0x3
12577:         #define _PWM1CON_PDC3_POSITION                              0x3
12578:         #define _PWM1CON_PDC3_SIZE                                  0x1
12579:         #define _PWM1CON_PDC3_LENGTH                                0x1
12580:         #define _PWM1CON_PDC3_MASK                                  0x8
12581:         #define _PWM1CON_PDC4_POSN                                  0x4
12582:         #define _PWM1CON_PDC4_POSITION                              0x4
12583:         #define _PWM1CON_PDC4_SIZE                                  0x1
12584:         #define _PWM1CON_PDC4_LENGTH                                0x1
12585:         #define _PWM1CON_PDC4_MASK                                  0x10
12586:         #define _PWM1CON_PDC5_POSN                                  0x5
12587:         #define _PWM1CON_PDC5_POSITION                              0x5
12588:         #define _PWM1CON_PDC5_SIZE                                  0x1
12589:         #define _PWM1CON_PDC5_LENGTH                                0x1
12590:         #define _PWM1CON_PDC5_MASK                                  0x20
12591:         #define _PWM1CON_PDC6_POSN                                  0x6
12592:         #define _PWM1CON_PDC6_POSITION                              0x6
12593:         #define _PWM1CON_PDC6_SIZE                                  0x1
12594:         #define _PWM1CON_PDC6_LENGTH                                0x1
12595:         #define _PWM1CON_PDC6_MASK                                  0x40
12596:         // alias bitfield definitions
12597:         typedef union {
12598:             struct {
12599:                 unsigned P1DC                   :7;
12600:                 unsigned P1RSEN                 :1;
12601:             };
12602:             struct {
12603:                 unsigned P1DC0                  :1;
12604:                 unsigned P1DC1                  :1;
12605:                 unsigned P1DC2                  :1;
12606:                 unsigned P1DC3                  :1;
12607:                 unsigned P1DC4                  :1;
12608:                 unsigned P1DC5                  :1;
12609:                 unsigned P1DC6                  :1;
12610:             };
12611:             struct {
12612:                 unsigned PDC                    :7;
12613:                 unsigned PRSEN                  :1;
12614:             };
12615:             struct {
12616:                 unsigned PDC0                   :1;
12617:                 unsigned PDC1                   :1;
12618:                 unsigned PDC2                   :1;
12619:                 unsigned PDC3                   :1;
12620:                 unsigned PDC4                   :1;
12621:                 unsigned PDC5                   :1;
12622:                 unsigned PDC6                   :1;
12623:             };
12624:         } PWMCONbits_t;
12625:         extern volatile PWMCONbits_t PWMCONbits @ 0xFB7;
12626:         // bitfield macros
12627:         #define _PWMCON_P1DC_POSN                                   0x0
12628:         #define _PWMCON_P1DC_POSITION                               0x0
12629:         #define _PWMCON_P1DC_SIZE                                   0x7
12630:         #define _PWMCON_P1DC_LENGTH                                 0x7
12631:         #define _PWMCON_P1DC_MASK                                   0x7F
12632:         #define _PWMCON_P1RSEN_POSN                                 0x7
12633:         #define _PWMCON_P1RSEN_POSITION                             0x7
12634:         #define _PWMCON_P1RSEN_SIZE                                 0x1
12635:         #define _PWMCON_P1RSEN_LENGTH                               0x1
12636:         #define _PWMCON_P1RSEN_MASK                                 0x80
12637:         #define _PWMCON_P1DC0_POSN                                  0x0
12638:         #define _PWMCON_P1DC0_POSITION                              0x0
12639:         #define _PWMCON_P1DC0_SIZE                                  0x1
12640:         #define _PWMCON_P1DC0_LENGTH                                0x1
12641:         #define _PWMCON_P1DC0_MASK                                  0x1
12642:         #define _PWMCON_P1DC1_POSN                                  0x1
12643:         #define _PWMCON_P1DC1_POSITION                              0x1
12644:         #define _PWMCON_P1DC1_SIZE                                  0x1
12645:         #define _PWMCON_P1DC1_LENGTH                                0x1
12646:         #define _PWMCON_P1DC1_MASK                                  0x2
12647:         #define _PWMCON_P1DC2_POSN                                  0x2
12648:         #define _PWMCON_P1DC2_POSITION                              0x2
12649:         #define _PWMCON_P1DC2_SIZE                                  0x1
12650:         #define _PWMCON_P1DC2_LENGTH                                0x1
12651:         #define _PWMCON_P1DC2_MASK                                  0x4
12652:         #define _PWMCON_P1DC3_POSN                                  0x3
12653:         #define _PWMCON_P1DC3_POSITION                              0x3
12654:         #define _PWMCON_P1DC3_SIZE                                  0x1
12655:         #define _PWMCON_P1DC3_LENGTH                                0x1
12656:         #define _PWMCON_P1DC3_MASK                                  0x8
12657:         #define _PWMCON_P1DC4_POSN                                  0x4
12658:         #define _PWMCON_P1DC4_POSITION                              0x4
12659:         #define _PWMCON_P1DC4_SIZE                                  0x1
12660:         #define _PWMCON_P1DC4_LENGTH                                0x1
12661:         #define _PWMCON_P1DC4_MASK                                  0x10
12662:         #define _PWMCON_P1DC5_POSN                                  0x5
12663:         #define _PWMCON_P1DC5_POSITION                              0x5
12664:         #define _PWMCON_P1DC5_SIZE                                  0x1
12665:         #define _PWMCON_P1DC5_LENGTH                                0x1
12666:         #define _PWMCON_P1DC5_MASK                                  0x20
12667:         #define _PWMCON_P1DC6_POSN                                  0x6
12668:         #define _PWMCON_P1DC6_POSITION                              0x6
12669:         #define _PWMCON_P1DC6_SIZE                                  0x1
12670:         #define _PWMCON_P1DC6_LENGTH                                0x1
12671:         #define _PWMCON_P1DC6_MASK                                  0x40
12672:         #define _PWMCON_PDC_POSN                                    0x0
12673:         #define _PWMCON_PDC_POSITION                                0x0
12674:         #define _PWMCON_PDC_SIZE                                    0x7
12675:         #define _PWMCON_PDC_LENGTH                                  0x7
12676:         #define _PWMCON_PDC_MASK                                    0x7F
12677:         #define _PWMCON_PRSEN_POSN                                  0x7
12678:         #define _PWMCON_PRSEN_POSITION                              0x7
12679:         #define _PWMCON_PRSEN_SIZE                                  0x1
12680:         #define _PWMCON_PRSEN_LENGTH                                0x1
12681:         #define _PWMCON_PRSEN_MASK                                  0x80
12682:         #define _PWMCON_PDC0_POSN                                   0x0
12683:         #define _PWMCON_PDC0_POSITION                               0x0
12684:         #define _PWMCON_PDC0_SIZE                                   0x1
12685:         #define _PWMCON_PDC0_LENGTH                                 0x1
12686:         #define _PWMCON_PDC0_MASK                                   0x1
12687:         #define _PWMCON_PDC1_POSN                                   0x1
12688:         #define _PWMCON_PDC1_POSITION                               0x1
12689:         #define _PWMCON_PDC1_SIZE                                   0x1
12690:         #define _PWMCON_PDC1_LENGTH                                 0x1
12691:         #define _PWMCON_PDC1_MASK                                   0x2
12692:         #define _PWMCON_PDC2_POSN                                   0x2
12693:         #define _PWMCON_PDC2_POSITION                               0x2
12694:         #define _PWMCON_PDC2_SIZE                                   0x1
12695:         #define _PWMCON_PDC2_LENGTH                                 0x1
12696:         #define _PWMCON_PDC2_MASK                                   0x4
12697:         #define _PWMCON_PDC3_POSN                                   0x3
12698:         #define _PWMCON_PDC3_POSITION                               0x3
12699:         #define _PWMCON_PDC3_SIZE                                   0x1
12700:         #define _PWMCON_PDC3_LENGTH                                 0x1
12701:         #define _PWMCON_PDC3_MASK                                   0x8
12702:         #define _PWMCON_PDC4_POSN                                   0x4
12703:         #define _PWMCON_PDC4_POSITION                               0x4
12704:         #define _PWMCON_PDC4_SIZE                                   0x1
12705:         #define _PWMCON_PDC4_LENGTH                                 0x1
12706:         #define _PWMCON_PDC4_MASK                                   0x10
12707:         #define _PWMCON_PDC5_POSN                                   0x5
12708:         #define _PWMCON_PDC5_POSITION                               0x5
12709:         #define _PWMCON_PDC5_SIZE                                   0x1
12710:         #define _PWMCON_PDC5_LENGTH                                 0x1
12711:         #define _PWMCON_PDC5_MASK                                   0x20
12712:         #define _PWMCON_PDC6_POSN                                   0x6
12713:         #define _PWMCON_PDC6_POSITION                               0x6
12714:         #define _PWMCON_PDC6_SIZE                                   0x1
12715:         #define _PWMCON_PDC6_LENGTH                                 0x1
12716:         #define _PWMCON_PDC6_MASK                                   0x40
12717:         
12718:         // Register: BAUDCON1
12719:         extern volatile unsigned char           BAUDCON1            @ 0xFB8;
12720:         #ifndef _LIB_BUILD
12721:         asm("BAUDCON1 equ 0FB8h");
12722:         #endif
12723:         // aliases
12724:         extern volatile unsigned char           BAUDCON             @ 0xFB8;
12725:         #ifndef _LIB_BUILD
12726:         asm("BAUDCON equ 0FB8h");
12727:         #endif
12728:         extern volatile unsigned char           BAUDCTL             @ 0xFB8;
12729:         #ifndef _LIB_BUILD
12730:         asm("BAUDCTL equ 0FB8h");
12731:         #endif
12732:         extern volatile unsigned char           BAUD1CON            @ 0xFB8;
12733:         #ifndef _LIB_BUILD
12734:         asm("BAUD1CON equ 0FB8h");
12735:         #endif
12736:         // bitfield definitions
12737:         typedef union {
12738:             struct {
12739:                 unsigned ABDEN                  :1;
12740:                 unsigned WUE                    :1;
12741:                 unsigned                        :1;
12742:                 unsigned BRG16                  :1;
12743:                 unsigned CKTXP                  :1;
12744:                 unsigned DTRXP                  :1;
12745:                 unsigned RCIDL                  :1;
12746:                 unsigned ABDOVF                 :1;
12747:             };
12748:             struct {
12749:                 unsigned                        :4;
12750:                 unsigned SCKP                   :1;
12751:             };
12752:             struct {
12753:                 unsigned ABDEN1                 :1;
12754:             };
12755:             struct {
12756:                 unsigned                        :7;
12757:                 unsigned ABDOVF1                :1;
12758:             };
12759:             struct {
12760:                 unsigned                        :3;
12761:                 unsigned BRG161                 :1;
12762:             };
12763:             struct {
12764:                 unsigned                        :5;
12765:                 unsigned DTRXP1                 :1;
12766:             };
12767:             struct {
12768:                 unsigned                        :6;
12769:                 unsigned RCIDL1                 :1;
12770:             };
12771:             struct {
12772:                 unsigned                        :6;
12773:                 unsigned RCMT                   :1;
12774:             };
12775:             struct {
12776:                 unsigned                        :6;
12777:                 unsigned RCMT1                  :1;
12778:             };
12779:             struct {
12780:                 unsigned                        :5;
12781:                 unsigned RXDTP                  :1;
12782:             };
12783:             struct {
12784:                 unsigned                        :5;
12785:                 unsigned RXDTP1                 :1;
12786:             };
12787:             struct {
12788:                 unsigned                        :4;
12789:                 unsigned SCKP1                  :1;
12790:             };
12791:             struct {
12792:                 unsigned                        :4;
12793:                 unsigned TXCKP                  :1;
12794:             };
12795:             struct {
12796:                 unsigned                        :4;
12797:                 unsigned TXCKP1                 :1;
12798:             };
12799:             struct {
12800:                 unsigned                        :1;
12801:                 unsigned WUE1                   :1;
12802:             };
12803:             struct {
12804:                 unsigned                        :5;
12805:                 unsigned RXCKP                  :1;
12806:             };
12807:             struct {
12808:                 unsigned                        :1;
12809:                 unsigned W4E                    :1;
12810:             };
12811:         } BAUDCON1bits_t;
12812:         extern volatile BAUDCON1bits_t BAUDCON1bits @ 0xFB8;
12813:         // bitfield macros
12814:         #define _BAUDCON1_ABDEN_POSN                                0x0
12815:         #define _BAUDCON1_ABDEN_POSITION                            0x0
12816:         #define _BAUDCON1_ABDEN_SIZE                                0x1
12817:         #define _BAUDCON1_ABDEN_LENGTH                              0x1
12818:         #define _BAUDCON1_ABDEN_MASK                                0x1
12819:         #define _BAUDCON1_WUE_POSN                                  0x1
12820:         #define _BAUDCON1_WUE_POSITION                              0x1
12821:         #define _BAUDCON1_WUE_SIZE                                  0x1
12822:         #define _BAUDCON1_WUE_LENGTH                                0x1
12823:         #define _BAUDCON1_WUE_MASK                                  0x2
12824:         #define _BAUDCON1_BRG16_POSN                                0x3
12825:         #define _BAUDCON1_BRG16_POSITION                            0x3
12826:         #define _BAUDCON1_BRG16_SIZE                                0x1
12827:         #define _BAUDCON1_BRG16_LENGTH                              0x1
12828:         #define _BAUDCON1_BRG16_MASK                                0x8
12829:         #define _BAUDCON1_CKTXP_POSN                                0x4
12830:         #define _BAUDCON1_CKTXP_POSITION                            0x4
12831:         #define _BAUDCON1_CKTXP_SIZE                                0x1
12832:         #define _BAUDCON1_CKTXP_LENGTH                              0x1
12833:         #define _BAUDCON1_CKTXP_MASK                                0x10
12834:         #define _BAUDCON1_DTRXP_POSN                                0x5
12835:         #define _BAUDCON1_DTRXP_POSITION                            0x5
12836:         #define _BAUDCON1_DTRXP_SIZE                                0x1
12837:         #define _BAUDCON1_DTRXP_LENGTH                              0x1
12838:         #define _BAUDCON1_DTRXP_MASK                                0x20
12839:         #define _BAUDCON1_RCIDL_POSN                                0x6
12840:         #define _BAUDCON1_RCIDL_POSITION                            0x6
12841:         #define _BAUDCON1_RCIDL_SIZE                                0x1
12842:         #define _BAUDCON1_RCIDL_LENGTH                              0x1
12843:         #define _BAUDCON1_RCIDL_MASK                                0x40
12844:         #define _BAUDCON1_ABDOVF_POSN                               0x7
12845:         #define _BAUDCON1_ABDOVF_POSITION                           0x7
12846:         #define _BAUDCON1_ABDOVF_SIZE                               0x1
12847:         #define _BAUDCON1_ABDOVF_LENGTH                             0x1
12848:         #define _BAUDCON1_ABDOVF_MASK                               0x80
12849:         #define _BAUDCON1_SCKP_POSN                                 0x4
12850:         #define _BAUDCON1_SCKP_POSITION                             0x4
12851:         #define _BAUDCON1_SCKP_SIZE                                 0x1
12852:         #define _BAUDCON1_SCKP_LENGTH                               0x1
12853:         #define _BAUDCON1_SCKP_MASK                                 0x10
12854:         #define _BAUDCON1_ABDEN1_POSN                               0x0
12855:         #define _BAUDCON1_ABDEN1_POSITION                           0x0
12856:         #define _BAUDCON1_ABDEN1_SIZE                               0x1
12857:         #define _BAUDCON1_ABDEN1_LENGTH                             0x1
12858:         #define _BAUDCON1_ABDEN1_MASK                               0x1
12859:         #define _BAUDCON1_ABDOVF1_POSN                              0x7
12860:         #define _BAUDCON1_ABDOVF1_POSITION                          0x7
12861:         #define _BAUDCON1_ABDOVF1_SIZE                              0x1
12862:         #define _BAUDCON1_ABDOVF1_LENGTH                            0x1
12863:         #define _BAUDCON1_ABDOVF1_MASK                              0x80
12864:         #define _BAUDCON1_BRG161_POSN                               0x3
12865:         #define _BAUDCON1_BRG161_POSITION                           0x3
12866:         #define _BAUDCON1_BRG161_SIZE                               0x1
12867:         #define _BAUDCON1_BRG161_LENGTH                             0x1
12868:         #define _BAUDCON1_BRG161_MASK                               0x8
12869:         #define _BAUDCON1_DTRXP1_POSN                               0x5
12870:         #define _BAUDCON1_DTRXP1_POSITION                           0x5
12871:         #define _BAUDCON1_DTRXP1_SIZE                               0x1
12872:         #define _BAUDCON1_DTRXP1_LENGTH                             0x1
12873:         #define _BAUDCON1_DTRXP1_MASK                               0x20
12874:         #define _BAUDCON1_RCIDL1_POSN                               0x6
12875:         #define _BAUDCON1_RCIDL1_POSITION                           0x6
12876:         #define _BAUDCON1_RCIDL1_SIZE                               0x1
12877:         #define _BAUDCON1_RCIDL1_LENGTH                             0x1
12878:         #define _BAUDCON1_RCIDL1_MASK                               0x40
12879:         #define _BAUDCON1_RCMT_POSN                                 0x6
12880:         #define _BAUDCON1_RCMT_POSITION                             0x6
12881:         #define _BAUDCON1_RCMT_SIZE                                 0x1
12882:         #define _BAUDCON1_RCMT_LENGTH                               0x1
12883:         #define _BAUDCON1_RCMT_MASK                                 0x40
12884:         #define _BAUDCON1_RCMT1_POSN                                0x6
12885:         #define _BAUDCON1_RCMT1_POSITION                            0x6
12886:         #define _BAUDCON1_RCMT1_SIZE                                0x1
12887:         #define _BAUDCON1_RCMT1_LENGTH                              0x1
12888:         #define _BAUDCON1_RCMT1_MASK                                0x40
12889:         #define _BAUDCON1_RXDTP_POSN                                0x5
12890:         #define _BAUDCON1_RXDTP_POSITION                            0x5
12891:         #define _BAUDCON1_RXDTP_SIZE                                0x1
12892:         #define _BAUDCON1_RXDTP_LENGTH                              0x1
12893:         #define _BAUDCON1_RXDTP_MASK                                0x20
12894:         #define _BAUDCON1_RXDTP1_POSN                               0x5
12895:         #define _BAUDCON1_RXDTP1_POSITION                           0x5
12896:         #define _BAUDCON1_RXDTP1_SIZE                               0x1
12897:         #define _BAUDCON1_RXDTP1_LENGTH                             0x1
12898:         #define _BAUDCON1_RXDTP1_MASK                               0x20
12899:         #define _BAUDCON1_SCKP1_POSN                                0x4
12900:         #define _BAUDCON1_SCKP1_POSITION                            0x4
12901:         #define _BAUDCON1_SCKP1_SIZE                                0x1
12902:         #define _BAUDCON1_SCKP1_LENGTH                              0x1
12903:         #define _BAUDCON1_SCKP1_MASK                                0x10
12904:         #define _BAUDCON1_TXCKP_POSN                                0x4
12905:         #define _BAUDCON1_TXCKP_POSITION                            0x4
12906:         #define _BAUDCON1_TXCKP_SIZE                                0x1
12907:         #define _BAUDCON1_TXCKP_LENGTH                              0x1
12908:         #define _BAUDCON1_TXCKP_MASK                                0x10
12909:         #define _BAUDCON1_TXCKP1_POSN                               0x4
12910:         #define _BAUDCON1_TXCKP1_POSITION                           0x4
12911:         #define _BAUDCON1_TXCKP1_SIZE                               0x1
12912:         #define _BAUDCON1_TXCKP1_LENGTH                             0x1
12913:         #define _BAUDCON1_TXCKP1_MASK                               0x10
12914:         #define _BAUDCON1_WUE1_POSN                                 0x1
12915:         #define _BAUDCON1_WUE1_POSITION                             0x1
12916:         #define _BAUDCON1_WUE1_SIZE                                 0x1
12917:         #define _BAUDCON1_WUE1_LENGTH                               0x1
12918:         #define _BAUDCON1_WUE1_MASK                                 0x2
12919:         #define _BAUDCON1_RXCKP_POSN                                0x5
12920:         #define _BAUDCON1_RXCKP_POSITION                            0x5
12921:         #define _BAUDCON1_RXCKP_SIZE                                0x1
12922:         #define _BAUDCON1_RXCKP_LENGTH                              0x1
12923:         #define _BAUDCON1_RXCKP_MASK                                0x20
12924:         #define _BAUDCON1_W4E_POSN                                  0x1
12925:         #define _BAUDCON1_W4E_POSITION                              0x1
12926:         #define _BAUDCON1_W4E_SIZE                                  0x1
12927:         #define _BAUDCON1_W4E_LENGTH                                0x1
12928:         #define _BAUDCON1_W4E_MASK                                  0x2
12929:         // alias bitfield definitions
12930:         typedef union {
12931:             struct {
12932:                 unsigned ABDEN                  :1;
12933:                 unsigned WUE                    :1;
12934:                 unsigned                        :1;
12935:                 unsigned BRG16                  :1;
12936:                 unsigned CKTXP                  :1;
12937:                 unsigned DTRXP                  :1;
12938:                 unsigned RCIDL                  :1;
12939:                 unsigned ABDOVF                 :1;
12940:             };
12941:             struct {
12942:                 unsigned                        :4;
12943:                 unsigned SCKP                   :1;
12944:             };
12945:             struct {
12946:                 unsigned ABDEN1                 :1;
12947:             };
12948:             struct {
12949:                 unsigned                        :7;
12950:                 unsigned ABDOVF1                :1;
12951:             };
12952:             struct {
12953:                 unsigned                        :3;
12954:                 unsigned BRG161                 :1;
12955:             };
12956:             struct {
12957:                 unsigned                        :5;
12958:                 unsigned DTRXP1                 :1;
12959:             };
12960:             struct {
12961:                 unsigned                        :6;
12962:                 unsigned RCIDL1                 :1;
12963:             };
12964:             struct {
12965:                 unsigned                        :6;
12966:                 unsigned RCMT                   :1;
12967:             };
12968:             struct {
12969:                 unsigned                        :6;
12970:                 unsigned RCMT1                  :1;
12971:             };
12972:             struct {
12973:                 unsigned                        :5;
12974:                 unsigned RXDTP                  :1;
12975:             };
12976:             struct {
12977:                 unsigned                        :5;
12978:                 unsigned RXDTP1                 :1;
12979:             };
12980:             struct {
12981:                 unsigned                        :4;
12982:                 unsigned SCKP1                  :1;
12983:             };
12984:             struct {
12985:                 unsigned                        :4;
12986:                 unsigned TXCKP                  :1;
12987:             };
12988:             struct {
12989:                 unsigned                        :4;
12990:                 unsigned TXCKP1                 :1;
12991:             };
12992:             struct {
12993:                 unsigned                        :1;
12994:                 unsigned WUE1                   :1;
12995:             };
12996:             struct {
12997:                 unsigned                        :5;
12998:                 unsigned RXCKP                  :1;
12999:             };
13000:             struct {
13001:                 unsigned                        :1;
13002:                 unsigned W4E                    :1;
13003:             };
13004:         } BAUDCONbits_t;
13005:         extern volatile BAUDCONbits_t BAUDCONbits @ 0xFB8;
13006:         // bitfield macros
13007:         #define _BAUDCON_ABDEN_POSN                                 0x0
13008:         #define _BAUDCON_ABDEN_POSITION                             0x0
13009:         #define _BAUDCON_ABDEN_SIZE                                 0x1
13010:         #define _BAUDCON_ABDEN_LENGTH                               0x1
13011:         #define _BAUDCON_ABDEN_MASK                                 0x1
13012:         #define _BAUDCON_WUE_POSN                                   0x1
13013:         #define _BAUDCON_WUE_POSITION                               0x1
13014:         #define _BAUDCON_WUE_SIZE                                   0x1
13015:         #define _BAUDCON_WUE_LENGTH                                 0x1
13016:         #define _BAUDCON_WUE_MASK                                   0x2
13017:         #define _BAUDCON_BRG16_POSN                                 0x3
13018:         #define _BAUDCON_BRG16_POSITION                             0x3
13019:         #define _BAUDCON_BRG16_SIZE                                 0x1
13020:         #define _BAUDCON_BRG16_LENGTH                               0x1
13021:         #define _BAUDCON_BRG16_MASK                                 0x8
13022:         #define _BAUDCON_CKTXP_POSN                                 0x4
13023:         #define _BAUDCON_CKTXP_POSITION                             0x4
13024:         #define _BAUDCON_CKTXP_SIZE                                 0x1
13025:         #define _BAUDCON_CKTXP_LENGTH                               0x1
13026:         #define _BAUDCON_CKTXP_MASK                                 0x10
13027:         #define _BAUDCON_DTRXP_POSN                                 0x5
13028:         #define _BAUDCON_DTRXP_POSITION                             0x5
13029:         #define _BAUDCON_DTRXP_SIZE                                 0x1
13030:         #define _BAUDCON_DTRXP_LENGTH                               0x1
13031:         #define _BAUDCON_DTRXP_MASK                                 0x20
13032:         #define _BAUDCON_RCIDL_POSN                                 0x6
13033:         #define _BAUDCON_RCIDL_POSITION                             0x6
13034:         #define _BAUDCON_RCIDL_SIZE                                 0x1
13035:         #define _BAUDCON_RCIDL_LENGTH                               0x1
13036:         #define _BAUDCON_RCIDL_MASK                                 0x40
13037:         #define _BAUDCON_ABDOVF_POSN                                0x7
13038:         #define _BAUDCON_ABDOVF_POSITION                            0x7
13039:         #define _BAUDCON_ABDOVF_SIZE                                0x1
13040:         #define _BAUDCON_ABDOVF_LENGTH                              0x1
13041:         #define _BAUDCON_ABDOVF_MASK                                0x80
13042:         #define _BAUDCON_SCKP_POSN                                  0x4
13043:         #define _BAUDCON_SCKP_POSITION                              0x4
13044:         #define _BAUDCON_SCKP_SIZE                                  0x1
13045:         #define _BAUDCON_SCKP_LENGTH                                0x1
13046:         #define _BAUDCON_SCKP_MASK                                  0x10
13047:         #define _BAUDCON_ABDEN1_POSN                                0x0
13048:         #define _BAUDCON_ABDEN1_POSITION                            0x0
13049:         #define _BAUDCON_ABDEN1_SIZE                                0x1
13050:         #define _BAUDCON_ABDEN1_LENGTH                              0x1
13051:         #define _BAUDCON_ABDEN1_MASK                                0x1
13052:         #define _BAUDCON_ABDOVF1_POSN                               0x7
13053:         #define _BAUDCON_ABDOVF1_POSITION                           0x7
13054:         #define _BAUDCON_ABDOVF1_SIZE                               0x1
13055:         #define _BAUDCON_ABDOVF1_LENGTH                             0x1
13056:         #define _BAUDCON_ABDOVF1_MASK                               0x80
13057:         #define _BAUDCON_BRG161_POSN                                0x3
13058:         #define _BAUDCON_BRG161_POSITION                            0x3
13059:         #define _BAUDCON_BRG161_SIZE                                0x1
13060:         #define _BAUDCON_BRG161_LENGTH                              0x1
13061:         #define _BAUDCON_BRG161_MASK                                0x8
13062:         #define _BAUDCON_DTRXP1_POSN                                0x5
13063:         #define _BAUDCON_DTRXP1_POSITION                            0x5
13064:         #define _BAUDCON_DTRXP1_SIZE                                0x1
13065:         #define _BAUDCON_DTRXP1_LENGTH                              0x1
13066:         #define _BAUDCON_DTRXP1_MASK                                0x20
13067:         #define _BAUDCON_RCIDL1_POSN                                0x6
13068:         #define _BAUDCON_RCIDL1_POSITION                            0x6
13069:         #define _BAUDCON_RCIDL1_SIZE                                0x1
13070:         #define _BAUDCON_RCIDL1_LENGTH                              0x1
13071:         #define _BAUDCON_RCIDL1_MASK                                0x40
13072:         #define _BAUDCON_RCMT_POSN                                  0x6
13073:         #define _BAUDCON_RCMT_POSITION                              0x6
13074:         #define _BAUDCON_RCMT_SIZE                                  0x1
13075:         #define _BAUDCON_RCMT_LENGTH                                0x1
13076:         #define _BAUDCON_RCMT_MASK                                  0x40
13077:         #define _BAUDCON_RCMT1_POSN                                 0x6
13078:         #define _BAUDCON_RCMT1_POSITION                             0x6
13079:         #define _BAUDCON_RCMT1_SIZE                                 0x1
13080:         #define _BAUDCON_RCMT1_LENGTH                               0x1
13081:         #define _BAUDCON_RCMT1_MASK                                 0x40
13082:         #define _BAUDCON_RXDTP_POSN                                 0x5
13083:         #define _BAUDCON_RXDTP_POSITION                             0x5
13084:         #define _BAUDCON_RXDTP_SIZE                                 0x1
13085:         #define _BAUDCON_RXDTP_LENGTH                               0x1
13086:         #define _BAUDCON_RXDTP_MASK                                 0x20
13087:         #define _BAUDCON_RXDTP1_POSN                                0x5
13088:         #define _BAUDCON_RXDTP1_POSITION                            0x5
13089:         #define _BAUDCON_RXDTP1_SIZE                                0x1
13090:         #define _BAUDCON_RXDTP1_LENGTH                              0x1
13091:         #define _BAUDCON_RXDTP1_MASK                                0x20
13092:         #define _BAUDCON_SCKP1_POSN                                 0x4
13093:         #define _BAUDCON_SCKP1_POSITION                             0x4
13094:         #define _BAUDCON_SCKP1_SIZE                                 0x1
13095:         #define _BAUDCON_SCKP1_LENGTH                               0x1
13096:         #define _BAUDCON_SCKP1_MASK                                 0x10
13097:         #define _BAUDCON_TXCKP_POSN                                 0x4
13098:         #define _BAUDCON_TXCKP_POSITION                             0x4
13099:         #define _BAUDCON_TXCKP_SIZE                                 0x1
13100:         #define _BAUDCON_TXCKP_LENGTH                               0x1
13101:         #define _BAUDCON_TXCKP_MASK                                 0x10
13102:         #define _BAUDCON_TXCKP1_POSN                                0x4
13103:         #define _BAUDCON_TXCKP1_POSITION                            0x4
13104:         #define _BAUDCON_TXCKP1_SIZE                                0x1
13105:         #define _BAUDCON_TXCKP1_LENGTH                              0x1
13106:         #define _BAUDCON_TXCKP1_MASK                                0x10
13107:         #define _BAUDCON_WUE1_POSN                                  0x1
13108:         #define _BAUDCON_WUE1_POSITION                              0x1
13109:         #define _BAUDCON_WUE1_SIZE                                  0x1
13110:         #define _BAUDCON_WUE1_LENGTH                                0x1
13111:         #define _BAUDCON_WUE1_MASK                                  0x2
13112:         #define _BAUDCON_RXCKP_POSN                                 0x5
13113:         #define _BAUDCON_RXCKP_POSITION                             0x5
13114:         #define _BAUDCON_RXCKP_SIZE                                 0x1
13115:         #define _BAUDCON_RXCKP_LENGTH                               0x1
13116:         #define _BAUDCON_RXCKP_MASK                                 0x20
13117:         #define _BAUDCON_W4E_POSN                                   0x1
13118:         #define _BAUDCON_W4E_POSITION                               0x1
13119:         #define _BAUDCON_W4E_SIZE                                   0x1
13120:         #define _BAUDCON_W4E_LENGTH                                 0x1
13121:         #define _BAUDCON_W4E_MASK                                   0x2
13122:         typedef union {
13123:             struct {
13124:                 unsigned ABDEN                  :1;
13125:                 unsigned WUE                    :1;
13126:                 unsigned                        :1;
13127:                 unsigned BRG16                  :1;
13128:                 unsigned CKTXP                  :1;
13129:                 unsigned DTRXP                  :1;
13130:                 unsigned RCIDL                  :1;
13131:                 unsigned ABDOVF                 :1;
13132:             };
13133:             struct {
13134:                 unsigned                        :4;
13135:                 unsigned SCKP                   :1;
13136:             };
13137:             struct {
13138:                 unsigned ABDEN1                 :1;
13139:             };
13140:             struct {
13141:                 unsigned                        :7;
13142:                 unsigned ABDOVF1                :1;
13143:             };
13144:             struct {
13145:                 unsigned                        :3;
13146:                 unsigned BRG161                 :1;
13147:             };
13148:             struct {
13149:                 unsigned                        :5;
13150:                 unsigned DTRXP1                 :1;
13151:             };
13152:             struct {
13153:                 unsigned                        :6;
13154:                 unsigned RCIDL1                 :1;
13155:             };
13156:             struct {
13157:                 unsigned                        :6;
13158:                 unsigned RCMT                   :1;
13159:             };
13160:             struct {
13161:                 unsigned                        :6;
13162:                 unsigned RCMT1                  :1;
13163:             };
13164:             struct {
13165:                 unsigned                        :5;
13166:                 unsigned RXDTP                  :1;
13167:             };
13168:             struct {
13169:                 unsigned                        :5;
13170:                 unsigned RXDTP1                 :1;
13171:             };
13172:             struct {
13173:                 unsigned                        :4;
13174:                 unsigned SCKP1                  :1;
13175:             };
13176:             struct {
13177:                 unsigned                        :4;
13178:                 unsigned TXCKP                  :1;
13179:             };
13180:             struct {
13181:                 unsigned                        :4;
13182:                 unsigned TXCKP1                 :1;
13183:             };
13184:             struct {
13185:                 unsigned                        :1;
13186:                 unsigned WUE1                   :1;
13187:             };
13188:             struct {
13189:                 unsigned                        :5;
13190:                 unsigned RXCKP                  :1;
13191:             };
13192:             struct {
13193:                 unsigned                        :1;
13194:                 unsigned W4E                    :1;
13195:             };
13196:         } BAUDCTLbits_t;
13197:         extern volatile BAUDCTLbits_t BAUDCTLbits @ 0xFB8;
13198:         // bitfield macros
13199:         #define _BAUDCTL_ABDEN_POSN                                 0x0
13200:         #define _BAUDCTL_ABDEN_POSITION                             0x0
13201:         #define _BAUDCTL_ABDEN_SIZE                                 0x1
13202:         #define _BAUDCTL_ABDEN_LENGTH                               0x1
13203:         #define _BAUDCTL_ABDEN_MASK                                 0x1
13204:         #define _BAUDCTL_WUE_POSN                                   0x1
13205:         #define _BAUDCTL_WUE_POSITION                               0x1
13206:         #define _BAUDCTL_WUE_SIZE                                   0x1
13207:         #define _BAUDCTL_WUE_LENGTH                                 0x1
13208:         #define _BAUDCTL_WUE_MASK                                   0x2
13209:         #define _BAUDCTL_BRG16_POSN                                 0x3
13210:         #define _BAUDCTL_BRG16_POSITION                             0x3
13211:         #define _BAUDCTL_BRG16_SIZE                                 0x1
13212:         #define _BAUDCTL_BRG16_LENGTH                               0x1
13213:         #define _BAUDCTL_BRG16_MASK                                 0x8
13214:         #define _BAUDCTL_CKTXP_POSN                                 0x4
13215:         #define _BAUDCTL_CKTXP_POSITION                             0x4
13216:         #define _BAUDCTL_CKTXP_SIZE                                 0x1
13217:         #define _BAUDCTL_CKTXP_LENGTH                               0x1
13218:         #define _BAUDCTL_CKTXP_MASK                                 0x10
13219:         #define _BAUDCTL_DTRXP_POSN                                 0x5
13220:         #define _BAUDCTL_DTRXP_POSITION                             0x5
13221:         #define _BAUDCTL_DTRXP_SIZE                                 0x1
13222:         #define _BAUDCTL_DTRXP_LENGTH                               0x1
13223:         #define _BAUDCTL_DTRXP_MASK                                 0x20
13224:         #define _BAUDCTL_RCIDL_POSN                                 0x6
13225:         #define _BAUDCTL_RCIDL_POSITION                             0x6
13226:         #define _BAUDCTL_RCIDL_SIZE                                 0x1
13227:         #define _BAUDCTL_RCIDL_LENGTH                               0x1
13228:         #define _BAUDCTL_RCIDL_MASK                                 0x40
13229:         #define _BAUDCTL_ABDOVF_POSN                                0x7
13230:         #define _BAUDCTL_ABDOVF_POSITION                            0x7
13231:         #define _BAUDCTL_ABDOVF_SIZE                                0x1
13232:         #define _BAUDCTL_ABDOVF_LENGTH                              0x1
13233:         #define _BAUDCTL_ABDOVF_MASK                                0x80
13234:         #define _BAUDCTL_SCKP_POSN                                  0x4
13235:         #define _BAUDCTL_SCKP_POSITION                              0x4
13236:         #define _BAUDCTL_SCKP_SIZE                                  0x1
13237:         #define _BAUDCTL_SCKP_LENGTH                                0x1
13238:         #define _BAUDCTL_SCKP_MASK                                  0x10
13239:         #define _BAUDCTL_ABDEN1_POSN                                0x0
13240:         #define _BAUDCTL_ABDEN1_POSITION                            0x0
13241:         #define _BAUDCTL_ABDEN1_SIZE                                0x1
13242:         #define _BAUDCTL_ABDEN1_LENGTH                              0x1
13243:         #define _BAUDCTL_ABDEN1_MASK                                0x1
13244:         #define _BAUDCTL_ABDOVF1_POSN                               0x7
13245:         #define _BAUDCTL_ABDOVF1_POSITION                           0x7
13246:         #define _BAUDCTL_ABDOVF1_SIZE                               0x1
13247:         #define _BAUDCTL_ABDOVF1_LENGTH                             0x1
13248:         #define _BAUDCTL_ABDOVF1_MASK                               0x80
13249:         #define _BAUDCTL_BRG161_POSN                                0x3
13250:         #define _BAUDCTL_BRG161_POSITION                            0x3
13251:         #define _BAUDCTL_BRG161_SIZE                                0x1
13252:         #define _BAUDCTL_BRG161_LENGTH                              0x1
13253:         #define _BAUDCTL_BRG161_MASK                                0x8
13254:         #define _BAUDCTL_DTRXP1_POSN                                0x5
13255:         #define _BAUDCTL_DTRXP1_POSITION                            0x5
13256:         #define _BAUDCTL_DTRXP1_SIZE                                0x1
13257:         #define _BAUDCTL_DTRXP1_LENGTH                              0x1
13258:         #define _BAUDCTL_DTRXP1_MASK                                0x20
13259:         #define _BAUDCTL_RCIDL1_POSN                                0x6
13260:         #define _BAUDCTL_RCIDL1_POSITION                            0x6
13261:         #define _BAUDCTL_RCIDL1_SIZE                                0x1
13262:         #define _BAUDCTL_RCIDL1_LENGTH                              0x1
13263:         #define _BAUDCTL_RCIDL1_MASK                                0x40
13264:         #define _BAUDCTL_RCMT_POSN                                  0x6
13265:         #define _BAUDCTL_RCMT_POSITION                              0x6
13266:         #define _BAUDCTL_RCMT_SIZE                                  0x1
13267:         #define _BAUDCTL_RCMT_LENGTH                                0x1
13268:         #define _BAUDCTL_RCMT_MASK                                  0x40
13269:         #define _BAUDCTL_RCMT1_POSN                                 0x6
13270:         #define _BAUDCTL_RCMT1_POSITION                             0x6
13271:         #define _BAUDCTL_RCMT1_SIZE                                 0x1
13272:         #define _BAUDCTL_RCMT1_LENGTH                               0x1
13273:         #define _BAUDCTL_RCMT1_MASK                                 0x40
13274:         #define _BAUDCTL_RXDTP_POSN                                 0x5
13275:         #define _BAUDCTL_RXDTP_POSITION                             0x5
13276:         #define _BAUDCTL_RXDTP_SIZE                                 0x1
13277:         #define _BAUDCTL_RXDTP_LENGTH                               0x1
13278:         #define _BAUDCTL_RXDTP_MASK                                 0x20
13279:         #define _BAUDCTL_RXDTP1_POSN                                0x5
13280:         #define _BAUDCTL_RXDTP1_POSITION                            0x5
13281:         #define _BAUDCTL_RXDTP1_SIZE                                0x1
13282:         #define _BAUDCTL_RXDTP1_LENGTH                              0x1
13283:         #define _BAUDCTL_RXDTP1_MASK                                0x20
13284:         #define _BAUDCTL_SCKP1_POSN                                 0x4
13285:         #define _BAUDCTL_SCKP1_POSITION                             0x4
13286:         #define _BAUDCTL_SCKP1_SIZE                                 0x1
13287:         #define _BAUDCTL_SCKP1_LENGTH                               0x1
13288:         #define _BAUDCTL_SCKP1_MASK                                 0x10
13289:         #define _BAUDCTL_TXCKP_POSN                                 0x4
13290:         #define _BAUDCTL_TXCKP_POSITION                             0x4
13291:         #define _BAUDCTL_TXCKP_SIZE                                 0x1
13292:         #define _BAUDCTL_TXCKP_LENGTH                               0x1
13293:         #define _BAUDCTL_TXCKP_MASK                                 0x10
13294:         #define _BAUDCTL_TXCKP1_POSN                                0x4
13295:         #define _BAUDCTL_TXCKP1_POSITION                            0x4
13296:         #define _BAUDCTL_TXCKP1_SIZE                                0x1
13297:         #define _BAUDCTL_TXCKP1_LENGTH                              0x1
13298:         #define _BAUDCTL_TXCKP1_MASK                                0x10
13299:         #define _BAUDCTL_WUE1_POSN                                  0x1
13300:         #define _BAUDCTL_WUE1_POSITION                              0x1
13301:         #define _BAUDCTL_WUE1_SIZE                                  0x1
13302:         #define _BAUDCTL_WUE1_LENGTH                                0x1
13303:         #define _BAUDCTL_WUE1_MASK                                  0x2
13304:         #define _BAUDCTL_RXCKP_POSN                                 0x5
13305:         #define _BAUDCTL_RXCKP_POSITION                             0x5
13306:         #define _BAUDCTL_RXCKP_SIZE                                 0x1
13307:         #define _BAUDCTL_RXCKP_LENGTH                               0x1
13308:         #define _BAUDCTL_RXCKP_MASK                                 0x20
13309:         #define _BAUDCTL_W4E_POSN                                   0x1
13310:         #define _BAUDCTL_W4E_POSITION                               0x1
13311:         #define _BAUDCTL_W4E_SIZE                                   0x1
13312:         #define _BAUDCTL_W4E_LENGTH                                 0x1
13313:         #define _BAUDCTL_W4E_MASK                                   0x2
13314:         typedef union {
13315:             struct {
13316:                 unsigned ABDEN                  :1;
13317:                 unsigned WUE                    :1;
13318:                 unsigned                        :1;
13319:                 unsigned BRG16                  :1;
13320:                 unsigned CKTXP                  :1;
13321:                 unsigned DTRXP                  :1;
13322:                 unsigned RCIDL                  :1;
13323:                 unsigned ABDOVF                 :1;
13324:             };
13325:             struct {
13326:                 unsigned                        :4;
13327:                 unsigned SCKP                   :1;
13328:             };
13329:             struct {
13330:                 unsigned ABDEN1                 :1;
13331:             };
13332:             struct {
13333:                 unsigned                        :7;
13334:                 unsigned ABDOVF1                :1;
13335:             };
13336:             struct {
13337:                 unsigned                        :3;
13338:                 unsigned BRG161                 :1;
13339:             };
13340:             struct {
13341:                 unsigned                        :5;
13342:                 unsigned DTRXP1                 :1;
13343:             };
13344:             struct {
13345:                 unsigned                        :6;
13346:                 unsigned RCIDL1                 :1;
13347:             };
13348:             struct {
13349:                 unsigned                        :6;
13350:                 unsigned RCMT                   :1;
13351:             };
13352:             struct {
13353:                 unsigned                        :6;
13354:                 unsigned RCMT1                  :1;
13355:             };
13356:             struct {
13357:                 unsigned                        :5;
13358:                 unsigned RXDTP                  :1;
13359:             };
13360:             struct {
13361:                 unsigned                        :5;
13362:                 unsigned RXDTP1                 :1;
13363:             };
13364:             struct {
13365:                 unsigned                        :4;
13366:                 unsigned SCKP1                  :1;
13367:             };
13368:             struct {
13369:                 unsigned                        :4;
13370:                 unsigned TXCKP                  :1;
13371:             };
13372:             struct {
13373:                 unsigned                        :4;
13374:                 unsigned TXCKP1                 :1;
13375:             };
13376:             struct {
13377:                 unsigned                        :1;
13378:                 unsigned WUE1                   :1;
13379:             };
13380:             struct {
13381:                 unsigned                        :5;
13382:                 unsigned RXCKP                  :1;
13383:             };
13384:             struct {
13385:                 unsigned                        :1;
13386:                 unsigned W4E                    :1;
13387:             };
13388:         } BAUD1CONbits_t;
13389:         extern volatile BAUD1CONbits_t BAUD1CONbits @ 0xFB8;
13390:         // bitfield macros
13391:         #define _BAUD1CON_ABDEN_POSN                                0x0
13392:         #define _BAUD1CON_ABDEN_POSITION                            0x0
13393:         #define _BAUD1CON_ABDEN_SIZE                                0x1
13394:         #define _BAUD1CON_ABDEN_LENGTH                              0x1
13395:         #define _BAUD1CON_ABDEN_MASK                                0x1
13396:         #define _BAUD1CON_WUE_POSN                                  0x1
13397:         #define _BAUD1CON_WUE_POSITION                              0x1
13398:         #define _BAUD1CON_WUE_SIZE                                  0x1
13399:         #define _BAUD1CON_WUE_LENGTH                                0x1
13400:         #define _BAUD1CON_WUE_MASK                                  0x2
13401:         #define _BAUD1CON_BRG16_POSN                                0x3
13402:         #define _BAUD1CON_BRG16_POSITION                            0x3
13403:         #define _BAUD1CON_BRG16_SIZE                                0x1
13404:         #define _BAUD1CON_BRG16_LENGTH                              0x1
13405:         #define _BAUD1CON_BRG16_MASK                                0x8
13406:         #define _BAUD1CON_CKTXP_POSN                                0x4
13407:         #define _BAUD1CON_CKTXP_POSITION                            0x4
13408:         #define _BAUD1CON_CKTXP_SIZE                                0x1
13409:         #define _BAUD1CON_CKTXP_LENGTH                              0x1
13410:         #define _BAUD1CON_CKTXP_MASK                                0x10
13411:         #define _BAUD1CON_DTRXP_POSN                                0x5
13412:         #define _BAUD1CON_DTRXP_POSITION                            0x5
13413:         #define _BAUD1CON_DTRXP_SIZE                                0x1
13414:         #define _BAUD1CON_DTRXP_LENGTH                              0x1
13415:         #define _BAUD1CON_DTRXP_MASK                                0x20
13416:         #define _BAUD1CON_RCIDL_POSN                                0x6
13417:         #define _BAUD1CON_RCIDL_POSITION                            0x6
13418:         #define _BAUD1CON_RCIDL_SIZE                                0x1
13419:         #define _BAUD1CON_RCIDL_LENGTH                              0x1
13420:         #define _BAUD1CON_RCIDL_MASK                                0x40
13421:         #define _BAUD1CON_ABDOVF_POSN                               0x7
13422:         #define _BAUD1CON_ABDOVF_POSITION                           0x7
13423:         #define _BAUD1CON_ABDOVF_SIZE                               0x1
13424:         #define _BAUD1CON_ABDOVF_LENGTH                             0x1
13425:         #define _BAUD1CON_ABDOVF_MASK                               0x80
13426:         #define _BAUD1CON_SCKP_POSN                                 0x4
13427:         #define _BAUD1CON_SCKP_POSITION                             0x4
13428:         #define _BAUD1CON_SCKP_SIZE                                 0x1
13429:         #define _BAUD1CON_SCKP_LENGTH                               0x1
13430:         #define _BAUD1CON_SCKP_MASK                                 0x10
13431:         #define _BAUD1CON_ABDEN1_POSN                               0x0
13432:         #define _BAUD1CON_ABDEN1_POSITION                           0x0
13433:         #define _BAUD1CON_ABDEN1_SIZE                               0x1
13434:         #define _BAUD1CON_ABDEN1_LENGTH                             0x1
13435:         #define _BAUD1CON_ABDEN1_MASK                               0x1
13436:         #define _BAUD1CON_ABDOVF1_POSN                              0x7
13437:         #define _BAUD1CON_ABDOVF1_POSITION                          0x7
13438:         #define _BAUD1CON_ABDOVF1_SIZE                              0x1
13439:         #define _BAUD1CON_ABDOVF1_LENGTH                            0x1
13440:         #define _BAUD1CON_ABDOVF1_MASK                              0x80
13441:         #define _BAUD1CON_BRG161_POSN                               0x3
13442:         #define _BAUD1CON_BRG161_POSITION                           0x3
13443:         #define _BAUD1CON_BRG161_SIZE                               0x1
13444:         #define _BAUD1CON_BRG161_LENGTH                             0x1
13445:         #define _BAUD1CON_BRG161_MASK                               0x8
13446:         #define _BAUD1CON_DTRXP1_POSN                               0x5
13447:         #define _BAUD1CON_DTRXP1_POSITION                           0x5
13448:         #define _BAUD1CON_DTRXP1_SIZE                               0x1
13449:         #define _BAUD1CON_DTRXP1_LENGTH                             0x1
13450:         #define _BAUD1CON_DTRXP1_MASK                               0x20
13451:         #define _BAUD1CON_RCIDL1_POSN                               0x6
13452:         #define _BAUD1CON_RCIDL1_POSITION                           0x6
13453:         #define _BAUD1CON_RCIDL1_SIZE                               0x1
13454:         #define _BAUD1CON_RCIDL1_LENGTH                             0x1
13455:         #define _BAUD1CON_RCIDL1_MASK                               0x40
13456:         #define _BAUD1CON_RCMT_POSN                                 0x6
13457:         #define _BAUD1CON_RCMT_POSITION                             0x6
13458:         #define _BAUD1CON_RCMT_SIZE                                 0x1
13459:         #define _BAUD1CON_RCMT_LENGTH                               0x1
13460:         #define _BAUD1CON_RCMT_MASK                                 0x40
13461:         #define _BAUD1CON_RCMT1_POSN                                0x6
13462:         #define _BAUD1CON_RCMT1_POSITION                            0x6
13463:         #define _BAUD1CON_RCMT1_SIZE                                0x1
13464:         #define _BAUD1CON_RCMT1_LENGTH                              0x1
13465:         #define _BAUD1CON_RCMT1_MASK                                0x40
13466:         #define _BAUD1CON_RXDTP_POSN                                0x5
13467:         #define _BAUD1CON_RXDTP_POSITION                            0x5
13468:         #define _BAUD1CON_RXDTP_SIZE                                0x1
13469:         #define _BAUD1CON_RXDTP_LENGTH                              0x1
13470:         #define _BAUD1CON_RXDTP_MASK                                0x20
13471:         #define _BAUD1CON_RXDTP1_POSN                               0x5
13472:         #define _BAUD1CON_RXDTP1_POSITION                           0x5
13473:         #define _BAUD1CON_RXDTP1_SIZE                               0x1
13474:         #define _BAUD1CON_RXDTP1_LENGTH                             0x1
13475:         #define _BAUD1CON_RXDTP1_MASK                               0x20
13476:         #define _BAUD1CON_SCKP1_POSN                                0x4
13477:         #define _BAUD1CON_SCKP1_POSITION                            0x4
13478:         #define _BAUD1CON_SCKP1_SIZE                                0x1
13479:         #define _BAUD1CON_SCKP1_LENGTH                              0x1
13480:         #define _BAUD1CON_SCKP1_MASK                                0x10
13481:         #define _BAUD1CON_TXCKP_POSN                                0x4
13482:         #define _BAUD1CON_TXCKP_POSITION                            0x4
13483:         #define _BAUD1CON_TXCKP_SIZE                                0x1
13484:         #define _BAUD1CON_TXCKP_LENGTH                              0x1
13485:         #define _BAUD1CON_TXCKP_MASK                                0x10
13486:         #define _BAUD1CON_TXCKP1_POSN                               0x4
13487:         #define _BAUD1CON_TXCKP1_POSITION                           0x4
13488:         #define _BAUD1CON_TXCKP1_SIZE                               0x1
13489:         #define _BAUD1CON_TXCKP1_LENGTH                             0x1
13490:         #define _BAUD1CON_TXCKP1_MASK                               0x10
13491:         #define _BAUD1CON_WUE1_POSN                                 0x1
13492:         #define _BAUD1CON_WUE1_POSITION                             0x1
13493:         #define _BAUD1CON_WUE1_SIZE                                 0x1
13494:         #define _BAUD1CON_WUE1_LENGTH                               0x1
13495:         #define _BAUD1CON_WUE1_MASK                                 0x2
13496:         #define _BAUD1CON_RXCKP_POSN                                0x5
13497:         #define _BAUD1CON_RXCKP_POSITION                            0x5
13498:         #define _BAUD1CON_RXCKP_SIZE                                0x1
13499:         #define _BAUD1CON_RXCKP_LENGTH                              0x1
13500:         #define _BAUD1CON_RXCKP_MASK                                0x20
13501:         #define _BAUD1CON_W4E_POSN                                  0x1
13502:         #define _BAUD1CON_W4E_POSITION                              0x1
13503:         #define _BAUD1CON_W4E_SIZE                                  0x1
13504:         #define _BAUD1CON_W4E_LENGTH                                0x1
13505:         #define _BAUD1CON_W4E_MASK                                  0x2
13506:         
13507:         // Register: PSTR1CON
13508:         extern volatile unsigned char           PSTR1CON            @ 0xFB9;
13509:         #ifndef _LIB_BUILD
13510:         asm("PSTR1CON equ 0FB9h");
13511:         #endif
13512:         // aliases
13513:         extern volatile unsigned char           PSTRCON             @ 0xFB9;
13514:         #ifndef _LIB_BUILD
13515:         asm("PSTRCON equ 0FB9h");
13516:         #endif
13517:         // bitfield definitions
13518:         typedef union {
13519:             struct {
13520:                 unsigned STR1A                  :1;
13521:                 unsigned STR1B                  :1;
13522:                 unsigned STR1C                  :1;
13523:                 unsigned STR1D                  :1;
13524:                 unsigned STR1SYNC               :1;
13525:             };
13526:             struct {
13527:                 unsigned STRA                   :1;
13528:             };
13529:             struct {
13530:                 unsigned                        :1;
13531:                 unsigned STRB                   :1;
13532:             };
13533:             struct {
13534:                 unsigned                        :2;
13535:                 unsigned STRC                   :1;
13536:             };
13537:             struct {
13538:                 unsigned                        :3;
13539:                 unsigned STRD                   :1;
13540:             };
13541:             struct {
13542:                 unsigned                        :4;
13543:                 unsigned STRSYNC                :1;
13544:             };
13545:         } PSTR1CONbits_t;
13546:         extern volatile PSTR1CONbits_t PSTR1CONbits @ 0xFB9;
13547:         // bitfield macros
13548:         #define _PSTR1CON_STR1A_POSN                                0x0
13549:         #define _PSTR1CON_STR1A_POSITION                            0x0
13550:         #define _PSTR1CON_STR1A_SIZE                                0x1
13551:         #define _PSTR1CON_STR1A_LENGTH                              0x1
13552:         #define _PSTR1CON_STR1A_MASK                                0x1
13553:         #define _PSTR1CON_STR1B_POSN                                0x1
13554:         #define _PSTR1CON_STR1B_POSITION                            0x1
13555:         #define _PSTR1CON_STR1B_SIZE                                0x1
13556:         #define _PSTR1CON_STR1B_LENGTH                              0x1
13557:         #define _PSTR1CON_STR1B_MASK                                0x2
13558:         #define _PSTR1CON_STR1C_POSN                                0x2
13559:         #define _PSTR1CON_STR1C_POSITION                            0x2
13560:         #define _PSTR1CON_STR1C_SIZE                                0x1
13561:         #define _PSTR1CON_STR1C_LENGTH                              0x1
13562:         #define _PSTR1CON_STR1C_MASK                                0x4
13563:         #define _PSTR1CON_STR1D_POSN                                0x3
13564:         #define _PSTR1CON_STR1D_POSITION                            0x3
13565:         #define _PSTR1CON_STR1D_SIZE                                0x1
13566:         #define _PSTR1CON_STR1D_LENGTH                              0x1
13567:         #define _PSTR1CON_STR1D_MASK                                0x8
13568:         #define _PSTR1CON_STR1SYNC_POSN                             0x4
13569:         #define _PSTR1CON_STR1SYNC_POSITION                         0x4
13570:         #define _PSTR1CON_STR1SYNC_SIZE                             0x1
13571:         #define _PSTR1CON_STR1SYNC_LENGTH                           0x1
13572:         #define _PSTR1CON_STR1SYNC_MASK                             0x10
13573:         #define _PSTR1CON_STRA_POSN                                 0x0
13574:         #define _PSTR1CON_STRA_POSITION                             0x0
13575:         #define _PSTR1CON_STRA_SIZE                                 0x1
13576:         #define _PSTR1CON_STRA_LENGTH                               0x1
13577:         #define _PSTR1CON_STRA_MASK                                 0x1
13578:         #define _PSTR1CON_STRB_POSN                                 0x1
13579:         #define _PSTR1CON_STRB_POSITION                             0x1
13580:         #define _PSTR1CON_STRB_SIZE                                 0x1
13581:         #define _PSTR1CON_STRB_LENGTH                               0x1
13582:         #define _PSTR1CON_STRB_MASK                                 0x2
13583:         #define _PSTR1CON_STRC_POSN                                 0x2
13584:         #define _PSTR1CON_STRC_POSITION                             0x2
13585:         #define _PSTR1CON_STRC_SIZE                                 0x1
13586:         #define _PSTR1CON_STRC_LENGTH                               0x1
13587:         #define _PSTR1CON_STRC_MASK                                 0x4
13588:         #define _PSTR1CON_STRD_POSN                                 0x3
13589:         #define _PSTR1CON_STRD_POSITION                             0x3
13590:         #define _PSTR1CON_STRD_SIZE                                 0x1
13591:         #define _PSTR1CON_STRD_LENGTH                               0x1
13592:         #define _PSTR1CON_STRD_MASK                                 0x8
13593:         #define _PSTR1CON_STRSYNC_POSN                              0x4
13594:         #define _PSTR1CON_STRSYNC_POSITION                          0x4
13595:         #define _PSTR1CON_STRSYNC_SIZE                              0x1
13596:         #define _PSTR1CON_STRSYNC_LENGTH                            0x1
13597:         #define _PSTR1CON_STRSYNC_MASK                              0x10
13598:         // alias bitfield definitions
13599:         typedef union {
13600:             struct {
13601:                 unsigned STR1A                  :1;
13602:                 unsigned STR1B                  :1;
13603:                 unsigned STR1C                  :1;
13604:                 unsigned STR1D                  :1;
13605:                 unsigned STR1SYNC               :1;
13606:             };
13607:             struct {
13608:                 unsigned STRA                   :1;
13609:             };
13610:             struct {
13611:                 unsigned                        :1;
13612:                 unsigned STRB                   :1;
13613:             };
13614:             struct {
13615:                 unsigned                        :2;
13616:                 unsigned STRC                   :1;
13617:             };
13618:             struct {
13619:                 unsigned                        :3;
13620:                 unsigned STRD                   :1;
13621:             };
13622:             struct {
13623:                 unsigned                        :4;
13624:                 unsigned STRSYNC                :1;
13625:             };
13626:         } PSTRCONbits_t;
13627:         extern volatile PSTRCONbits_t PSTRCONbits @ 0xFB9;
13628:         // bitfield macros
13629:         #define _PSTRCON_STR1A_POSN                                 0x0
13630:         #define _PSTRCON_STR1A_POSITION                             0x0
13631:         #define _PSTRCON_STR1A_SIZE                                 0x1
13632:         #define _PSTRCON_STR1A_LENGTH                               0x1
13633:         #define _PSTRCON_STR1A_MASK                                 0x1
13634:         #define _PSTRCON_STR1B_POSN                                 0x1
13635:         #define _PSTRCON_STR1B_POSITION                             0x1
13636:         #define _PSTRCON_STR1B_SIZE                                 0x1
13637:         #define _PSTRCON_STR1B_LENGTH                               0x1
13638:         #define _PSTRCON_STR1B_MASK                                 0x2
13639:         #define _PSTRCON_STR1C_POSN                                 0x2
13640:         #define _PSTRCON_STR1C_POSITION                             0x2
13641:         #define _PSTRCON_STR1C_SIZE                                 0x1
13642:         #define _PSTRCON_STR1C_LENGTH                               0x1
13643:         #define _PSTRCON_STR1C_MASK                                 0x4
13644:         #define _PSTRCON_STR1D_POSN                                 0x3
13645:         #define _PSTRCON_STR1D_POSITION                             0x3
13646:         #define _PSTRCON_STR1D_SIZE                                 0x1
13647:         #define _PSTRCON_STR1D_LENGTH                               0x1
13648:         #define _PSTRCON_STR1D_MASK                                 0x8
13649:         #define _PSTRCON_STR1SYNC_POSN                              0x4
13650:         #define _PSTRCON_STR1SYNC_POSITION                          0x4
13651:         #define _PSTRCON_STR1SYNC_SIZE                              0x1
13652:         #define _PSTRCON_STR1SYNC_LENGTH                            0x1
13653:         #define _PSTRCON_STR1SYNC_MASK                              0x10
13654:         #define _PSTRCON_STRA_POSN                                  0x0
13655:         #define _PSTRCON_STRA_POSITION                              0x0
13656:         #define _PSTRCON_STRA_SIZE                                  0x1
13657:         #define _PSTRCON_STRA_LENGTH                                0x1
13658:         #define _PSTRCON_STRA_MASK                                  0x1
13659:         #define _PSTRCON_STRB_POSN                                  0x1
13660:         #define _PSTRCON_STRB_POSITION                              0x1
13661:         #define _PSTRCON_STRB_SIZE                                  0x1
13662:         #define _PSTRCON_STRB_LENGTH                                0x1
13663:         #define _PSTRCON_STRB_MASK                                  0x2
13664:         #define _PSTRCON_STRC_POSN                                  0x2
13665:         #define _PSTRCON_STRC_POSITION                              0x2
13666:         #define _PSTRCON_STRC_SIZE                                  0x1
13667:         #define _PSTRCON_STRC_LENGTH                                0x1
13668:         #define _PSTRCON_STRC_MASK                                  0x4
13669:         #define _PSTRCON_STRD_POSN                                  0x3
13670:         #define _PSTRCON_STRD_POSITION                              0x3
13671:         #define _PSTRCON_STRD_SIZE                                  0x1
13672:         #define _PSTRCON_STRD_LENGTH                                0x1
13673:         #define _PSTRCON_STRD_MASK                                  0x8
13674:         #define _PSTRCON_STRSYNC_POSN                               0x4
13675:         #define _PSTRCON_STRSYNC_POSITION                           0x4
13676:         #define _PSTRCON_STRSYNC_SIZE                               0x1
13677:         #define _PSTRCON_STRSYNC_LENGTH                             0x1
13678:         #define _PSTRCON_STRSYNC_MASK                               0x10
13679:         
13680:         // Register: T2CON
13681:         extern volatile unsigned char           T2CON               @ 0xFBA;
13682:         #ifndef _LIB_BUILD
13683:         asm("T2CON equ 0FBAh");
13684:         #endif
13685:         // bitfield definitions
13686:         typedef union {
13687:             struct {
13688:                 unsigned T2CKPS                 :2;
13689:                 unsigned TMR2ON                 :1;
13690:                 unsigned T2OUTPS                :4;
13691:             };
13692:             struct {
13693:                 unsigned T2CKPS0                :1;
13694:                 unsigned T2CKPS1                :1;
13695:                 unsigned                        :1;
13696:                 unsigned T2OUTPS0               :1;
13697:                 unsigned T2OUTPS1               :1;
13698:                 unsigned T2OUTPS2               :1;
13699:                 unsigned T2OUTPS3               :1;
13700:             };
13701:         } T2CONbits_t;
13702:         extern volatile T2CONbits_t T2CONbits @ 0xFBA;
13703:         // bitfield macros
13704:         #define _T2CON_T2CKPS_POSN                                  0x0
13705:         #define _T2CON_T2CKPS_POSITION                              0x0
13706:         #define _T2CON_T2CKPS_SIZE                                  0x2
13707:         #define _T2CON_T2CKPS_LENGTH                                0x2
13708:         #define _T2CON_T2CKPS_MASK                                  0x3
13709:         #define _T2CON_TMR2ON_POSN                                  0x2
13710:         #define _T2CON_TMR2ON_POSITION                              0x2
13711:         #define _T2CON_TMR2ON_SIZE                                  0x1
13712:         #define _T2CON_TMR2ON_LENGTH                                0x1
13713:         #define _T2CON_TMR2ON_MASK                                  0x4
13714:         #define _T2CON_T2OUTPS_POSN                                 0x3
13715:         #define _T2CON_T2OUTPS_POSITION                             0x3
13716:         #define _T2CON_T2OUTPS_SIZE                                 0x4
13717:         #define _T2CON_T2OUTPS_LENGTH                               0x4
13718:         #define _T2CON_T2OUTPS_MASK                                 0x78
13719:         #define _T2CON_T2CKPS0_POSN                                 0x0
13720:         #define _T2CON_T2CKPS0_POSITION                             0x0
13721:         #define _T2CON_T2CKPS0_SIZE                                 0x1
13722:         #define _T2CON_T2CKPS0_LENGTH                               0x1
13723:         #define _T2CON_T2CKPS0_MASK                                 0x1
13724:         #define _T2CON_T2CKPS1_POSN                                 0x1
13725:         #define _T2CON_T2CKPS1_POSITION                             0x1
13726:         #define _T2CON_T2CKPS1_SIZE                                 0x1
13727:         #define _T2CON_T2CKPS1_LENGTH                               0x1
13728:         #define _T2CON_T2CKPS1_MASK                                 0x2
13729:         #define _T2CON_T2OUTPS0_POSN                                0x3
13730:         #define _T2CON_T2OUTPS0_POSITION                            0x3
13731:         #define _T2CON_T2OUTPS0_SIZE                                0x1
13732:         #define _T2CON_T2OUTPS0_LENGTH                              0x1
13733:         #define _T2CON_T2OUTPS0_MASK                                0x8
13734:         #define _T2CON_T2OUTPS1_POSN                                0x4
13735:         #define _T2CON_T2OUTPS1_POSITION                            0x4
13736:         #define _T2CON_T2OUTPS1_SIZE                                0x1
13737:         #define _T2CON_T2OUTPS1_LENGTH                              0x1
13738:         #define _T2CON_T2OUTPS1_MASK                                0x10
13739:         #define _T2CON_T2OUTPS2_POSN                                0x5
13740:         #define _T2CON_T2OUTPS2_POSITION                            0x5
13741:         #define _T2CON_T2OUTPS2_SIZE                                0x1
13742:         #define _T2CON_T2OUTPS2_LENGTH                              0x1
13743:         #define _T2CON_T2OUTPS2_MASK                                0x20
13744:         #define _T2CON_T2OUTPS3_POSN                                0x6
13745:         #define _T2CON_T2OUTPS3_POSITION                            0x6
13746:         #define _T2CON_T2OUTPS3_SIZE                                0x1
13747:         #define _T2CON_T2OUTPS3_LENGTH                              0x1
13748:         #define _T2CON_T2OUTPS3_MASK                                0x40
13749:         
13750:         // Register: PR2
13751:         extern volatile unsigned char           PR2                 @ 0xFBB;
13752:         #ifndef _LIB_BUILD
13753:         asm("PR2 equ 0FBBh");
13754:         #endif
13755:         // bitfield definitions
13756:         typedef union {
13757:             struct {
13758:                 unsigned PR2                    :8;
13759:             };
13760:         } PR2bits_t;
13761:         extern volatile PR2bits_t PR2bits @ 0xFBB;
13762:         // bitfield macros
13763:         #define _PR2_PR2_POSN                                       0x0
13764:         #define _PR2_PR2_POSITION                                   0x0
13765:         #define _PR2_PR2_SIZE                                       0x8
13766:         #define _PR2_PR2_LENGTH                                     0x8
13767:         #define _PR2_PR2_MASK                                       0xFF
13768:         
13769:         // Register: TMR2
13770:         extern volatile unsigned char           TMR2                @ 0xFBC;
13771:         #ifndef _LIB_BUILD
13772:         asm("TMR2 equ 0FBCh");
13773:         #endif
13774:         // bitfield definitions
13775:         typedef union {
13776:             struct {
13777:                 unsigned TMR2                   :8;
13778:             };
13779:         } TMR2bits_t;
13780:         extern volatile TMR2bits_t TMR2bits @ 0xFBC;
13781:         // bitfield macros
13782:         #define _TMR2_TMR2_POSN                                     0x0
13783:         #define _TMR2_TMR2_POSITION                                 0x0
13784:         #define _TMR2_TMR2_SIZE                                     0x8
13785:         #define _TMR2_TMR2_LENGTH                                   0x8
13786:         #define _TMR2_TMR2_MASK                                     0xFF
13787:         
13788:         // Register: CCP1CON
13789:         extern volatile unsigned char           CCP1CON             @ 0xFBD;
13790:         #ifndef _LIB_BUILD
13791:         asm("CCP1CON equ 0FBDh");
13792:         #endif
13793:         // bitfield definitions
13794:         typedef union {
13795:             struct {
13796:                 unsigned CCP1M                  :4;
13797:                 unsigned DC1B                   :2;
13798:                 unsigned P1M                    :2;
13799:             };
13800:             struct {
13801:                 unsigned CCP1M0                 :1;
13802:                 unsigned CCP1M1                 :1;
13803:                 unsigned CCP1M2                 :1;
13804:                 unsigned CCP1M3                 :1;
13805:                 unsigned DC1B0                  :1;
13806:                 unsigned DC1B1                  :1;
13807:                 unsigned P1M0                   :1;
13808:                 unsigned P1M1                   :1;
13809:             };
13810:         } CCP1CONbits_t;
13811:         extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBD;
13812:         // bitfield macros
13813:         #define _CCP1CON_CCP1M_POSN                                 0x0
13814:         #define _CCP1CON_CCP1M_POSITION                             0x0
13815:         #define _CCP1CON_CCP1M_SIZE                                 0x4
13816:         #define _CCP1CON_CCP1M_LENGTH                               0x4
13817:         #define _CCP1CON_CCP1M_MASK                                 0xF
13818:         #define _CCP1CON_DC1B_POSN                                  0x4
13819:         #define _CCP1CON_DC1B_POSITION                              0x4
13820:         #define _CCP1CON_DC1B_SIZE                                  0x2
13821:         #define _CCP1CON_DC1B_LENGTH                                0x2
13822:         #define _CCP1CON_DC1B_MASK                                  0x30
13823:         #define _CCP1CON_P1M_POSN                                   0x6
13824:         #define _CCP1CON_P1M_POSITION                               0x6
13825:         #define _CCP1CON_P1M_SIZE                                   0x2
13826:         #define _CCP1CON_P1M_LENGTH                                 0x2
13827:         #define _CCP1CON_P1M_MASK                                   0xC0
13828:         #define _CCP1CON_CCP1M0_POSN                                0x0
13829:         #define _CCP1CON_CCP1M0_POSITION                            0x0
13830:         #define _CCP1CON_CCP1M0_SIZE                                0x1
13831:         #define _CCP1CON_CCP1M0_LENGTH                              0x1
13832:         #define _CCP1CON_CCP1M0_MASK                                0x1
13833:         #define _CCP1CON_CCP1M1_POSN                                0x1
13834:         #define _CCP1CON_CCP1M1_POSITION                            0x1
13835:         #define _CCP1CON_CCP1M1_SIZE                                0x1
13836:         #define _CCP1CON_CCP1M1_LENGTH                              0x1
13837:         #define _CCP1CON_CCP1M1_MASK                                0x2
13838:         #define _CCP1CON_CCP1M2_POSN                                0x2
13839:         #define _CCP1CON_CCP1M2_POSITION                            0x2
13840:         #define _CCP1CON_CCP1M2_SIZE                                0x1
13841:         #define _CCP1CON_CCP1M2_LENGTH                              0x1
13842:         #define _CCP1CON_CCP1M2_MASK                                0x4
13843:         #define _CCP1CON_CCP1M3_POSN                                0x3
13844:         #define _CCP1CON_CCP1M3_POSITION                            0x3
13845:         #define _CCP1CON_CCP1M3_SIZE                                0x1
13846:         #define _CCP1CON_CCP1M3_LENGTH                              0x1
13847:         #define _CCP1CON_CCP1M3_MASK                                0x8
13848:         #define _CCP1CON_DC1B0_POSN                                 0x4
13849:         #define _CCP1CON_DC1B0_POSITION                             0x4
13850:         #define _CCP1CON_DC1B0_SIZE                                 0x1
13851:         #define _CCP1CON_DC1B0_LENGTH                               0x1
13852:         #define _CCP1CON_DC1B0_MASK                                 0x10
13853:         #define _CCP1CON_DC1B1_POSN                                 0x5
13854:         #define _CCP1CON_DC1B1_POSITION                             0x5
13855:         #define _CCP1CON_DC1B1_SIZE                                 0x1
13856:         #define _CCP1CON_DC1B1_LENGTH                               0x1
13857:         #define _CCP1CON_DC1B1_MASK                                 0x20
13858:         #define _CCP1CON_P1M0_POSN                                  0x6
13859:         #define _CCP1CON_P1M0_POSITION                              0x6
13860:         #define _CCP1CON_P1M0_SIZE                                  0x1
13861:         #define _CCP1CON_P1M0_LENGTH                                0x1
13862:         #define _CCP1CON_P1M0_MASK                                  0x40
13863:         #define _CCP1CON_P1M1_POSN                                  0x7
13864:         #define _CCP1CON_P1M1_POSITION                              0x7
13865:         #define _CCP1CON_P1M1_SIZE                                  0x1
13866:         #define _CCP1CON_P1M1_LENGTH                                0x1
13867:         #define _CCP1CON_P1M1_MASK                                  0x80
13868:         
13869:         // Register: CCPR1
13870:         extern volatile unsigned short          CCPR1               @ 0xFBE;
13871:         #ifndef _LIB_BUILD
13872:         asm("CCPR1 equ 0FBEh");
13873:         #endif
13874:         
13875:         // Register: CCPR1L
13876:         extern volatile unsigned char           CCPR1L              @ 0xFBE;
13877:         #ifndef _LIB_BUILD
13878:         asm("CCPR1L equ 0FBEh");
13879:         #endif
13880:         // bitfield definitions
13881:         typedef union {
13882:             struct {
13883:                 unsigned CCPR1L                 :8;
13884:             };
13885:         } CCPR1Lbits_t;
13886:         extern volatile CCPR1Lbits_t CCPR1Lbits @ 0xFBE;
13887:         // bitfield macros
13888:         #define _CCPR1L_CCPR1L_POSN                                 0x0
13889:         #define _CCPR1L_CCPR1L_POSITION                             0x0
13890:         #define _CCPR1L_CCPR1L_SIZE                                 0x8
13891:         #define _CCPR1L_CCPR1L_LENGTH                               0x8
13892:         #define _CCPR1L_CCPR1L_MASK                                 0xFF
13893:         
13894:         // Register: CCPR1H
13895:         extern volatile unsigned char           CCPR1H              @ 0xFBF;
13896:         #ifndef _LIB_BUILD
13897:         asm("CCPR1H equ 0FBFh");
13898:         #endif
13899:         // bitfield definitions
13900:         typedef union {
13901:             struct {
13902:                 unsigned CCPR1H                 :8;
13903:             };
13904:         } CCPR1Hbits_t;
13905:         extern volatile CCPR1Hbits_t CCPR1Hbits @ 0xFBF;
13906:         // bitfield macros
13907:         #define _CCPR1H_CCPR1H_POSN                                 0x0
13908:         #define _CCPR1H_CCPR1H_POSITION                             0x0
13909:         #define _CCPR1H_CCPR1H_SIZE                                 0x8
13910:         #define _CCPR1H_CCPR1H_LENGTH                               0x8
13911:         #define _CCPR1H_CCPR1H_MASK                                 0xFF
13912:         
13913:         // Register: ADCON2
13914:         extern volatile unsigned char           ADCON2              @ 0xFC0;
13915:         #ifndef _LIB_BUILD
13916:         asm("ADCON2 equ 0FC0h");
13917:         #endif
13918:         // bitfield definitions
13919:         typedef union {
13920:             struct {
13921:                 unsigned ADCS                   :3;
13922:                 unsigned ACQT                   :3;
13923:                 unsigned                        :1;
13924:                 unsigned ADFM                   :1;
13925:             };
13926:             struct {
13927:                 unsigned ADCS0                  :1;
13928:                 unsigned ADCS1                  :1;
13929:                 unsigned ADCS2                  :1;
13930:                 unsigned ACQT0                  :1;
13931:                 unsigned ACQT1                  :1;
13932:                 unsigned ACQT2                  :1;
13933:             };
13934:         } ADCON2bits_t;
13935:         extern volatile ADCON2bits_t ADCON2bits @ 0xFC0;
13936:         // bitfield macros
13937:         #define _ADCON2_ADCS_POSN                                   0x0
13938:         #define _ADCON2_ADCS_POSITION                               0x0
13939:         #define _ADCON2_ADCS_SIZE                                   0x3
13940:         #define _ADCON2_ADCS_LENGTH                                 0x3
13941:         #define _ADCON2_ADCS_MASK                                   0x7
13942:         #define _ADCON2_ACQT_POSN                                   0x3
13943:         #define _ADCON2_ACQT_POSITION                               0x3
13944:         #define _ADCON2_ACQT_SIZE                                   0x3
13945:         #define _ADCON2_ACQT_LENGTH                                 0x3
13946:         #define _ADCON2_ACQT_MASK                                   0x38
13947:         #define _ADCON2_ADFM_POSN                                   0x7
13948:         #define _ADCON2_ADFM_POSITION                               0x7
13949:         #define _ADCON2_ADFM_SIZE                                   0x1
13950:         #define _ADCON2_ADFM_LENGTH                                 0x1
13951:         #define _ADCON2_ADFM_MASK                                   0x80
13952:         #define _ADCON2_ADCS0_POSN                                  0x0
13953:         #define _ADCON2_ADCS0_POSITION                              0x0
13954:         #define _ADCON2_ADCS0_SIZE                                  0x1
13955:         #define _ADCON2_ADCS0_LENGTH                                0x1
13956:         #define _ADCON2_ADCS0_MASK                                  0x1
13957:         #define _ADCON2_ADCS1_POSN                                  0x1
13958:         #define _ADCON2_ADCS1_POSITION                              0x1
13959:         #define _ADCON2_ADCS1_SIZE                                  0x1
13960:         #define _ADCON2_ADCS1_LENGTH                                0x1
13961:         #define _ADCON2_ADCS1_MASK                                  0x2
13962:         #define _ADCON2_ADCS2_POSN                                  0x2
13963:         #define _ADCON2_ADCS2_POSITION                              0x2
13964:         #define _ADCON2_ADCS2_SIZE                                  0x1
13965:         #define _ADCON2_ADCS2_LENGTH                                0x1
13966:         #define _ADCON2_ADCS2_MASK                                  0x4
13967:         #define _ADCON2_ACQT0_POSN                                  0x3
13968:         #define _ADCON2_ACQT0_POSITION                              0x3
13969:         #define _ADCON2_ACQT0_SIZE                                  0x1
13970:         #define _ADCON2_ACQT0_LENGTH                                0x1
13971:         #define _ADCON2_ACQT0_MASK                                  0x8
13972:         #define _ADCON2_ACQT1_POSN                                  0x4
13973:         #define _ADCON2_ACQT1_POSITION                              0x4
13974:         #define _ADCON2_ACQT1_SIZE                                  0x1
13975:         #define _ADCON2_ACQT1_LENGTH                                0x1
13976:         #define _ADCON2_ACQT1_MASK                                  0x10
13977:         #define _ADCON2_ACQT2_POSN                                  0x5
13978:         #define _ADCON2_ACQT2_POSITION                              0x5
13979:         #define _ADCON2_ACQT2_SIZE                                  0x1
13980:         #define _ADCON2_ACQT2_LENGTH                                0x1
13981:         #define _ADCON2_ACQT2_MASK                                  0x20
13982:         
13983:         // Register: ADCON1
13984:         extern volatile unsigned char           ADCON1              @ 0xFC1;
13985:         #ifndef _LIB_BUILD
13986:         asm("ADCON1 equ 0FC1h");
13987:         #endif
13988:         // bitfield definitions
13989:         typedef union {
13990:             struct {
13991:                 unsigned NVCFG                  :2;
13992:                 unsigned PVCFG                  :2;
13993:                 unsigned                        :3;
13994:                 unsigned TRIGSEL                :1;
13995:             };
13996:             struct {
13997:                 unsigned NVCFG0                 :1;
13998:                 unsigned NVCFG1                 :1;
13999:                 unsigned PVCFG0                 :1;
14000:                 unsigned PVCFG1                 :1;
14001:             };
14002:             struct {
14003:                 unsigned                        :3;
14004:                 unsigned CHSN3                  :1;
14005:             };
14006:         } ADCON1bits_t;
14007:         extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;
14008:         // bitfield macros
14009:         #define _ADCON1_NVCFG_POSN                                  0x0
14010:         #define _ADCON1_NVCFG_POSITION                              0x0
14011:         #define _ADCON1_NVCFG_SIZE                                  0x2
14012:         #define _ADCON1_NVCFG_LENGTH                                0x2
14013:         #define _ADCON1_NVCFG_MASK                                  0x3
14014:         #define _ADCON1_PVCFG_POSN                                  0x2
14015:         #define _ADCON1_PVCFG_POSITION                              0x2
14016:         #define _ADCON1_PVCFG_SIZE                                  0x2
14017:         #define _ADCON1_PVCFG_LENGTH                                0x2
14018:         #define _ADCON1_PVCFG_MASK                                  0xC
14019:         #define _ADCON1_TRIGSEL_POSN                                0x7
14020:         #define _ADCON1_TRIGSEL_POSITION                            0x7
14021:         #define _ADCON1_TRIGSEL_SIZE                                0x1
14022:         #define _ADCON1_TRIGSEL_LENGTH                              0x1
14023:         #define _ADCON1_TRIGSEL_MASK                                0x80
14024:         #define _ADCON1_NVCFG0_POSN                                 0x0
14025:         #define _ADCON1_NVCFG0_POSITION                             0x0
14026:         #define _ADCON1_NVCFG0_SIZE                                 0x1
14027:         #define _ADCON1_NVCFG0_LENGTH                               0x1
14028:         #define _ADCON1_NVCFG0_MASK                                 0x1
14029:         #define _ADCON1_NVCFG1_POSN                                 0x1
14030:         #define _ADCON1_NVCFG1_POSITION                             0x1
14031:         #define _ADCON1_NVCFG1_SIZE                                 0x1
14032:         #define _ADCON1_NVCFG1_LENGTH                               0x1
14033:         #define _ADCON1_NVCFG1_MASK                                 0x2
14034:         #define _ADCON1_PVCFG0_POSN                                 0x2
14035:         #define _ADCON1_PVCFG0_POSITION                             0x2
14036:         #define _ADCON1_PVCFG0_SIZE                                 0x1
14037:         #define _ADCON1_PVCFG0_LENGTH                               0x1
14038:         #define _ADCON1_PVCFG0_MASK                                 0x4
14039:         #define _ADCON1_PVCFG1_POSN                                 0x3
14040:         #define _ADCON1_PVCFG1_POSITION                             0x3
14041:         #define _ADCON1_PVCFG1_SIZE                                 0x1
14042:         #define _ADCON1_PVCFG1_LENGTH                               0x1
14043:         #define _ADCON1_PVCFG1_MASK                                 0x8
14044:         #define _ADCON1_CHSN3_POSN                                  0x3
14045:         #define _ADCON1_CHSN3_POSITION                              0x3
14046:         #define _ADCON1_CHSN3_SIZE                                  0x1
14047:         #define _ADCON1_CHSN3_LENGTH                                0x1
14048:         #define _ADCON1_CHSN3_MASK                                  0x8
14049:         
14050:         // Register: ADCON0
14051:         extern volatile unsigned char           ADCON0              @ 0xFC2;
14052:         #ifndef _LIB_BUILD
14053:         asm("ADCON0 equ 0FC2h");
14054:         #endif
14055:         // bitfield definitions
14056:         typedef union {
14057:             struct {
14058:                 unsigned                        :1;
14059:                 unsigned GO_NOT_DONE            :1;
14060:             };
14061:             struct {
14062:                 unsigned ADON                   :1;
14063:                 unsigned GO_nDONE               :1;
14064:                 unsigned CHS                    :5;
14065:             };
14066:             struct {
14067:                 unsigned                        :1;
14068:                 unsigned GO                     :1;
14069:                 unsigned CHS0                   :1;
14070:                 unsigned CHS1                   :1;
14071:                 unsigned CHS2                   :1;
14072:                 unsigned CHS3                   :1;
14073:                 unsigned CHS4                   :1;
14074:             };
14075:             struct {
14076:                 unsigned                        :1;
14077:                 unsigned DONE                   :1;
14078:             };
14079:             struct {
14080:                 unsigned                        :1;
14081:                 unsigned NOT_DONE               :1;
14082:             };
14083:             struct {
14084:                 unsigned                        :1;
14085:                 unsigned nDONE                  :1;
14086:             };
14087:             struct {
14088:                 unsigned                        :1;
14089:                 unsigned GO_DONE                :1;
14090:             };
14091:             struct {
14092:                 unsigned                        :1;
14093:                 unsigned GODONE                 :1;
14094:             };
14095:         } ADCON0bits_t;
14096:         extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;
14097:         // bitfield macros
14098:         #define _ADCON0_GO_NOT_DONE_POSN                            0x1
14099:         #define _ADCON0_GO_NOT_DONE_POSITION                        0x1
14100:         #define _ADCON0_GO_NOT_DONE_SIZE                            0x1
14101:         #define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
14102:         #define _ADCON0_GO_NOT_DONE_MASK                            0x2
14103:         #define _ADCON0_ADON_POSN                                   0x0
14104:         #define _ADCON0_ADON_POSITION                               0x0
14105:         #define _ADCON0_ADON_SIZE                                   0x1
14106:         #define _ADCON0_ADON_LENGTH                                 0x1
14107:         #define _ADCON0_ADON_MASK                                   0x1
14108:         #define _ADCON0_GO_nDONE_POSN                               0x1
14109:         #define _ADCON0_GO_nDONE_POSITION                           0x1
14110:         #define _ADCON0_GO_nDONE_SIZE                               0x1
14111:         #define _ADCON0_GO_nDONE_LENGTH                             0x1
14112:         #define _ADCON0_GO_nDONE_MASK                               0x2
14113:         #define _ADCON0_CHS_POSN                                    0x2
14114:         #define _ADCON0_CHS_POSITION                                0x2
14115:         #define _ADCON0_CHS_SIZE                                    0x5
14116:         #define _ADCON0_CHS_LENGTH                                  0x5
14117:         #define _ADCON0_CHS_MASK                                    0x7C
14118:         #define _ADCON0_GO_POSN                                     0x1
14119:         #define _ADCON0_GO_POSITION                                 0x1
14120:         #define _ADCON0_GO_SIZE                                     0x1
14121:         #define _ADCON0_GO_LENGTH                                   0x1
14122:         #define _ADCON0_GO_MASK                                     0x2
14123:         #define _ADCON0_CHS0_POSN                                   0x2
14124:         #define _ADCON0_CHS0_POSITION                               0x2
14125:         #define _ADCON0_CHS0_SIZE                                   0x1
14126:         #define _ADCON0_CHS0_LENGTH                                 0x1
14127:         #define _ADCON0_CHS0_MASK                                   0x4
14128:         #define _ADCON0_CHS1_POSN                                   0x3
14129:         #define _ADCON0_CHS1_POSITION                               0x3
14130:         #define _ADCON0_CHS1_SIZE                                   0x1
14131:         #define _ADCON0_CHS1_LENGTH                                 0x1
14132:         #define _ADCON0_CHS1_MASK                                   0x8
14133:         #define _ADCON0_CHS2_POSN                                   0x4
14134:         #define _ADCON0_CHS2_POSITION                               0x4
14135:         #define _ADCON0_CHS2_SIZE                                   0x1
14136:         #define _ADCON0_CHS2_LENGTH                                 0x1
14137:         #define _ADCON0_CHS2_MASK                                   0x10
14138:         #define _ADCON0_CHS3_POSN                                   0x5
14139:         #define _ADCON0_CHS3_POSITION                               0x5
14140:         #define _ADCON0_CHS3_SIZE                                   0x1
14141:         #define _ADCON0_CHS3_LENGTH                                 0x1
14142:         #define _ADCON0_CHS3_MASK                                   0x20
14143:         #define _ADCON0_CHS4_POSN                                   0x6
14144:         #define _ADCON0_CHS4_POSITION                               0x6
14145:         #define _ADCON0_CHS4_SIZE                                   0x1
14146:         #define _ADCON0_CHS4_LENGTH                                 0x1
14147:         #define _ADCON0_CHS4_MASK                                   0x40
14148:         #define _ADCON0_DONE_POSN                                   0x1
14149:         #define _ADCON0_DONE_POSITION                               0x1
14150:         #define _ADCON0_DONE_SIZE                                   0x1
14151:         #define _ADCON0_DONE_LENGTH                                 0x1
14152:         #define _ADCON0_DONE_MASK                                   0x2
14153:         #define _ADCON0_NOT_DONE_POSN                               0x1
14154:         #define _ADCON0_NOT_DONE_POSITION                           0x1
14155:         #define _ADCON0_NOT_DONE_SIZE                               0x1
14156:         #define _ADCON0_NOT_DONE_LENGTH                             0x1
14157:         #define _ADCON0_NOT_DONE_MASK                               0x2
14158:         #define _ADCON0_nDONE_POSN                                  0x1
14159:         #define _ADCON0_nDONE_POSITION                              0x1
14160:         #define _ADCON0_nDONE_SIZE                                  0x1
14161:         #define _ADCON0_nDONE_LENGTH                                0x1
14162:         #define _ADCON0_nDONE_MASK                                  0x2
14163:         #define _ADCON0_GO_DONE_POSN                                0x1
14164:         #define _ADCON0_GO_DONE_POSITION                            0x1
14165:         #define _ADCON0_GO_DONE_SIZE                                0x1
14166:         #define _ADCON0_GO_DONE_LENGTH                              0x1
14167:         #define _ADCON0_GO_DONE_MASK                                0x2
14168:         #define _ADCON0_GODONE_POSN                                 0x1
14169:         #define _ADCON0_GODONE_POSITION                             0x1
14170:         #define _ADCON0_GODONE_SIZE                                 0x1
14171:         #define _ADCON0_GODONE_LENGTH                               0x1
14172:         #define _ADCON0_GODONE_MASK                                 0x2
14173:         
14174:         // Register: ADRES
14175:         extern volatile unsigned short          ADRES               @ 0xFC3;
14176:         #ifndef _LIB_BUILD
14177:         asm("ADRES equ 0FC3h");
14178:         #endif
14179:         
14180:         // Register: ADRESL
14181:         extern volatile unsigned char           ADRESL              @ 0xFC3;
14182:         #ifndef _LIB_BUILD
14183:         asm("ADRESL equ 0FC3h");
14184:         #endif
14185:         // bitfield definitions
14186:         typedef union {
14187:             struct {
14188:                 unsigned ADRESL                 :8;
14189:             };
14190:         } ADRESLbits_t;
14191:         extern volatile ADRESLbits_t ADRESLbits @ 0xFC3;
14192:         // bitfield macros
14193:         #define _ADRESL_ADRESL_POSN                                 0x0
14194:         #define _ADRESL_ADRESL_POSITION                             0x0
14195:         #define _ADRESL_ADRESL_SIZE                                 0x8
14196:         #define _ADRESL_ADRESL_LENGTH                               0x8
14197:         #define _ADRESL_ADRESL_MASK                                 0xFF
14198:         
14199:         // Register: ADRESH
14200:         extern volatile unsigned char           ADRESH              @ 0xFC4;
14201:         #ifndef _LIB_BUILD
14202:         asm("ADRESH equ 0FC4h");
14203:         #endif
14204:         // bitfield definitions
14205:         typedef union {
14206:             struct {
14207:                 unsigned ADRESH                 :8;
14208:             };
14209:         } ADRESHbits_t;
14210:         extern volatile ADRESHbits_t ADRESHbits @ 0xFC4;
14211:         // bitfield macros
14212:         #define _ADRESH_ADRESH_POSN                                 0x0
14213:         #define _ADRESH_ADRESH_POSITION                             0x0
14214:         #define _ADRESH_ADRESH_SIZE                                 0x8
14215:         #define _ADRESH_ADRESH_LENGTH                               0x8
14216:         #define _ADRESH_ADRESH_MASK                                 0xFF
14217:         
14218:         // Register: SSP1CON2
14219:         extern volatile unsigned char           SSP1CON2            @ 0xFC5;
14220:         #ifndef _LIB_BUILD
14221:         asm("SSP1CON2 equ 0FC5h");
14222:         #endif
14223:         // aliases
14224:         extern volatile unsigned char           SSPCON2             @ 0xFC5;
14225:         #ifndef _LIB_BUILD
14226:         asm("SSPCON2 equ 0FC5h");
14227:         #endif
14228:         // bitfield definitions
14229:         typedef union {
14230:             struct {
14231:                 unsigned SEN                    :1;
14232:                 unsigned RSEN                   :1;
14233:                 unsigned PEN                    :1;
14234:                 unsigned RCEN                   :1;
14235:                 unsigned ACKEN                  :1;
14236:                 unsigned ACKDT                  :1;
14237:                 unsigned ACKSTAT                :1;
14238:                 unsigned GCEN                   :1;
14239:             };
14240:             struct {
14241:                 unsigned                        :5;
14242:                 unsigned ACKDT1                 :1;
14243:             };
14244:             struct {
14245:                 unsigned                        :4;
14246:                 unsigned ACKEN1                 :1;
14247:             };
14248:             struct {
14249:                 unsigned                        :6;
14250:                 unsigned ACKSTAT1               :1;
14251:             };
14252:             struct {
14253:                 unsigned                        :1;
14254:                 unsigned ADMSK1                 :1;
14255:             };
14256:             struct {
14257:                 unsigned                        :1;
14258:                 unsigned ADMSK11                :1;
14259:             };
14260:             struct {
14261:                 unsigned                        :2;
14262:                 unsigned ADMSK2                 :1;
14263:             };
14264:             struct {
14265:                 unsigned                        :2;
14266:                 unsigned ADMSK21                :1;
14267:             };
14268:             struct {
14269:                 unsigned                        :3;
14270:                 unsigned ADMSK3                 :1;
14271:             };
14272:             struct {
14273:                 unsigned                        :3;
14274:                 unsigned ADMSK31                :1;
14275:             };
14276:             struct {
14277:                 unsigned                        :4;
14278:                 unsigned ADMSK4                 :1;
14279:             };
14280:             struct {
14281:                 unsigned                        :4;
14282:                 unsigned ADMSK41                :1;
14283:             };
14284:             struct {
14285:                 unsigned                        :5;
14286:                 unsigned ADMSK5                 :1;
14287:             };
14288:             struct {
14289:                 unsigned                        :5;
14290:                 unsigned ADMSK51                :1;
14291:             };
14292:             struct {
14293:                 unsigned                        :7;
14294:                 unsigned GCEN1                  :1;
14295:             };
14296:             struct {
14297:                 unsigned                        :2;
14298:                 unsigned PEN1                   :1;
14299:             };
14300:             struct {
14301:                 unsigned                        :3;
14302:                 unsigned RCEN1                  :1;
14303:             };
14304:             struct {
14305:                 unsigned                        :1;
14306:                 unsigned RSEN1                  :1;
14307:             };
14308:             struct {
14309:                 unsigned SEN1                   :1;
14310:             };
14311:         } SSP1CON2bits_t;
14312:         extern volatile SSP1CON2bits_t SSP1CON2bits @ 0xFC5;
14313:         // bitfield macros
14314:         #define _SSP1CON2_SEN_POSN                                  0x0
14315:         #define _SSP1CON2_SEN_POSITION                              0x0
14316:         #define _SSP1CON2_SEN_SIZE                                  0x1
14317:         #define _SSP1CON2_SEN_LENGTH                                0x1
14318:         #define _SSP1CON2_SEN_MASK                                  0x1
14319:         #define _SSP1CON2_RSEN_POSN                                 0x1
14320:         #define _SSP1CON2_RSEN_POSITION                             0x1
14321:         #define _SSP1CON2_RSEN_SIZE                                 0x1
14322:         #define _SSP1CON2_RSEN_LENGTH                               0x1
14323:         #define _SSP1CON2_RSEN_MASK                                 0x2
14324:         #define _SSP1CON2_PEN_POSN                                  0x2
14325:         #define _SSP1CON2_PEN_POSITION                              0x2
14326:         #define _SSP1CON2_PEN_SIZE                                  0x1
14327:         #define _SSP1CON2_PEN_LENGTH                                0x1
14328:         #define _SSP1CON2_PEN_MASK                                  0x4
14329:         #define _SSP1CON2_RCEN_POSN                                 0x3
14330:         #define _SSP1CON2_RCEN_POSITION                             0x3
14331:         #define _SSP1CON2_RCEN_SIZE                                 0x1
14332:         #define _SSP1CON2_RCEN_LENGTH                               0x1
14333:         #define _SSP1CON2_RCEN_MASK                                 0x8
14334:         #define _SSP1CON2_ACKEN_POSN                                0x4
14335:         #define _SSP1CON2_ACKEN_POSITION                            0x4
14336:         #define _SSP1CON2_ACKEN_SIZE                                0x1
14337:         #define _SSP1CON2_ACKEN_LENGTH                              0x1
14338:         #define _SSP1CON2_ACKEN_MASK                                0x10
14339:         #define _SSP1CON2_ACKDT_POSN                                0x5
14340:         #define _SSP1CON2_ACKDT_POSITION                            0x5
14341:         #define _SSP1CON2_ACKDT_SIZE                                0x1
14342:         #define _SSP1CON2_ACKDT_LENGTH                              0x1
14343:         #define _SSP1CON2_ACKDT_MASK                                0x20
14344:         #define _SSP1CON2_ACKSTAT_POSN                              0x6
14345:         #define _SSP1CON2_ACKSTAT_POSITION                          0x6
14346:         #define _SSP1CON2_ACKSTAT_SIZE                              0x1
14347:         #define _SSP1CON2_ACKSTAT_LENGTH                            0x1
14348:         #define _SSP1CON2_ACKSTAT_MASK                              0x40
14349:         #define _SSP1CON2_GCEN_POSN                                 0x7
14350:         #define _SSP1CON2_GCEN_POSITION                             0x7
14351:         #define _SSP1CON2_GCEN_SIZE                                 0x1
14352:         #define _SSP1CON2_GCEN_LENGTH                               0x1
14353:         #define _SSP1CON2_GCEN_MASK                                 0x80
14354:         #define _SSP1CON2_ACKDT1_POSN                               0x5
14355:         #define _SSP1CON2_ACKDT1_POSITION                           0x5
14356:         #define _SSP1CON2_ACKDT1_SIZE                               0x1
14357:         #define _SSP1CON2_ACKDT1_LENGTH                             0x1
14358:         #define _SSP1CON2_ACKDT1_MASK                               0x20
14359:         #define _SSP1CON2_ACKEN1_POSN                               0x4
14360:         #define _SSP1CON2_ACKEN1_POSITION                           0x4
14361:         #define _SSP1CON2_ACKEN1_SIZE                               0x1
14362:         #define _SSP1CON2_ACKEN1_LENGTH                             0x1
14363:         #define _SSP1CON2_ACKEN1_MASK                               0x10
14364:         #define _SSP1CON2_ACKSTAT1_POSN                             0x6
14365:         #define _SSP1CON2_ACKSTAT1_POSITION                         0x6
14366:         #define _SSP1CON2_ACKSTAT1_SIZE                             0x1
14367:         #define _SSP1CON2_ACKSTAT1_LENGTH                           0x1
14368:         #define _SSP1CON2_ACKSTAT1_MASK                             0x40
14369:         #define _SSP1CON2_ADMSK1_POSN                               0x1
14370:         #define _SSP1CON2_ADMSK1_POSITION                           0x1
14371:         #define _SSP1CON2_ADMSK1_SIZE                               0x1
14372:         #define _SSP1CON2_ADMSK1_LENGTH                             0x1
14373:         #define _SSP1CON2_ADMSK1_MASK                               0x2
14374:         #define _SSP1CON2_ADMSK11_POSN                              0x1
14375:         #define _SSP1CON2_ADMSK11_POSITION                          0x1
14376:         #define _SSP1CON2_ADMSK11_SIZE                              0x1
14377:         #define _SSP1CON2_ADMSK11_LENGTH                            0x1
14378:         #define _SSP1CON2_ADMSK11_MASK                              0x2
14379:         #define _SSP1CON2_ADMSK2_POSN                               0x2
14380:         #define _SSP1CON2_ADMSK2_POSITION                           0x2
14381:         #define _SSP1CON2_ADMSK2_SIZE                               0x1
14382:         #define _SSP1CON2_ADMSK2_LENGTH                             0x1
14383:         #define _SSP1CON2_ADMSK2_MASK                               0x4
14384:         #define _SSP1CON2_ADMSK21_POSN                              0x2
14385:         #define _SSP1CON2_ADMSK21_POSITION                          0x2
14386:         #define _SSP1CON2_ADMSK21_SIZE                              0x1
14387:         #define _SSP1CON2_ADMSK21_LENGTH                            0x1
14388:         #define _SSP1CON2_ADMSK21_MASK                              0x4
14389:         #define _SSP1CON2_ADMSK3_POSN                               0x3
14390:         #define _SSP1CON2_ADMSK3_POSITION                           0x3
14391:         #define _SSP1CON2_ADMSK3_SIZE                               0x1
14392:         #define _SSP1CON2_ADMSK3_LENGTH                             0x1
14393:         #define _SSP1CON2_ADMSK3_MASK                               0x8
14394:         #define _SSP1CON2_ADMSK31_POSN                              0x3
14395:         #define _SSP1CON2_ADMSK31_POSITION                          0x3
14396:         #define _SSP1CON2_ADMSK31_SIZE                              0x1
14397:         #define _SSP1CON2_ADMSK31_LENGTH                            0x1
14398:         #define _SSP1CON2_ADMSK31_MASK                              0x8
14399:         #define _SSP1CON2_ADMSK4_POSN                               0x4
14400:         #define _SSP1CON2_ADMSK4_POSITION                           0x4
14401:         #define _SSP1CON2_ADMSK4_SIZE                               0x1
14402:         #define _SSP1CON2_ADMSK4_LENGTH                             0x1
14403:         #define _SSP1CON2_ADMSK4_MASK                               0x10
14404:         #define _SSP1CON2_ADMSK41_POSN                              0x4
14405:         #define _SSP1CON2_ADMSK41_POSITION                          0x4
14406:         #define _SSP1CON2_ADMSK41_SIZE                              0x1
14407:         #define _SSP1CON2_ADMSK41_LENGTH                            0x1
14408:         #define _SSP1CON2_ADMSK41_MASK                              0x10
14409:         #define _SSP1CON2_ADMSK5_POSN                               0x5
14410:         #define _SSP1CON2_ADMSK5_POSITION                           0x5
14411:         #define _SSP1CON2_ADMSK5_SIZE                               0x1
14412:         #define _SSP1CON2_ADMSK5_LENGTH                             0x1
14413:         #define _SSP1CON2_ADMSK5_MASK                               0x20
14414:         #define _SSP1CON2_ADMSK51_POSN                              0x5
14415:         #define _SSP1CON2_ADMSK51_POSITION                          0x5
14416:         #define _SSP1CON2_ADMSK51_SIZE                              0x1
14417:         #define _SSP1CON2_ADMSK51_LENGTH                            0x1
14418:         #define _SSP1CON2_ADMSK51_MASK                              0x20
14419:         #define _SSP1CON2_GCEN1_POSN                                0x7
14420:         #define _SSP1CON2_GCEN1_POSITION                            0x7
14421:         #define _SSP1CON2_GCEN1_SIZE                                0x1
14422:         #define _SSP1CON2_GCEN1_LENGTH                              0x1
14423:         #define _SSP1CON2_GCEN1_MASK                                0x80
14424:         #define _SSP1CON2_PEN1_POSN                                 0x2
14425:         #define _SSP1CON2_PEN1_POSITION                             0x2
14426:         #define _SSP1CON2_PEN1_SIZE                                 0x1
14427:         #define _SSP1CON2_PEN1_LENGTH                               0x1
14428:         #define _SSP1CON2_PEN1_MASK                                 0x4
14429:         #define _SSP1CON2_RCEN1_POSN                                0x3
14430:         #define _SSP1CON2_RCEN1_POSITION                            0x3
14431:         #define _SSP1CON2_RCEN1_SIZE                                0x1
14432:         #define _SSP1CON2_RCEN1_LENGTH                              0x1
14433:         #define _SSP1CON2_RCEN1_MASK                                0x8
14434:         #define _SSP1CON2_RSEN1_POSN                                0x1
14435:         #define _SSP1CON2_RSEN1_POSITION                            0x1
14436:         #define _SSP1CON2_RSEN1_SIZE                                0x1
14437:         #define _SSP1CON2_RSEN1_LENGTH                              0x1
14438:         #define _SSP1CON2_RSEN1_MASK                                0x2
14439:         #define _SSP1CON2_SEN1_POSN                                 0x0
14440:         #define _SSP1CON2_SEN1_POSITION                             0x0
14441:         #define _SSP1CON2_SEN1_SIZE                                 0x1
14442:         #define _SSP1CON2_SEN1_LENGTH                               0x1
14443:         #define _SSP1CON2_SEN1_MASK                                 0x1
14444:         // alias bitfield definitions
14445:         typedef union {
14446:             struct {
14447:                 unsigned SEN                    :1;
14448:                 unsigned RSEN                   :1;
14449:                 unsigned PEN                    :1;
14450:                 unsigned RCEN                   :1;
14451:                 unsigned ACKEN                  :1;
14452:                 unsigned ACKDT                  :1;
14453:                 unsigned ACKSTAT                :1;
14454:                 unsigned GCEN                   :1;
14455:             };
14456:             struct {
14457:                 unsigned                        :5;
14458:                 unsigned ACKDT1                 :1;
14459:             };
14460:             struct {
14461:                 unsigned                        :4;
14462:                 unsigned ACKEN1                 :1;
14463:             };
14464:             struct {
14465:                 unsigned                        :6;
14466:                 unsigned ACKSTAT1               :1;
14467:             };
14468:             struct {
14469:                 unsigned                        :1;
14470:                 unsigned ADMSK1                 :1;
14471:             };
14472:             struct {
14473:                 unsigned                        :1;
14474:                 unsigned ADMSK11                :1;
14475:             };
14476:             struct {
14477:                 unsigned                        :2;
14478:                 unsigned ADMSK2                 :1;
14479:             };
14480:             struct {
14481:                 unsigned                        :2;
14482:                 unsigned ADMSK21                :1;
14483:             };
14484:             struct {
14485:                 unsigned                        :3;
14486:                 unsigned ADMSK3                 :1;
14487:             };
14488:             struct {
14489:                 unsigned                        :3;
14490:                 unsigned ADMSK31                :1;
14491:             };
14492:             struct {
14493:                 unsigned                        :4;
14494:                 unsigned ADMSK4                 :1;
14495:             };
14496:             struct {
14497:                 unsigned                        :4;
14498:                 unsigned ADMSK41                :1;
14499:             };
14500:             struct {
14501:                 unsigned                        :5;
14502:                 unsigned ADMSK5                 :1;
14503:             };
14504:             struct {
14505:                 unsigned                        :5;
14506:                 unsigned ADMSK51                :1;
14507:             };
14508:             struct {
14509:                 unsigned                        :7;
14510:                 unsigned GCEN1                  :1;
14511:             };
14512:             struct {
14513:                 unsigned                        :2;
14514:                 unsigned PEN1                   :1;
14515:             };
14516:             struct {
14517:                 unsigned                        :3;
14518:                 unsigned RCEN1                  :1;
14519:             };
14520:             struct {
14521:                 unsigned                        :1;
14522:                 unsigned RSEN1                  :1;
14523:             };
14524:             struct {
14525:                 unsigned SEN1                   :1;
14526:             };
14527:         } SSPCON2bits_t;
14528:         extern volatile SSPCON2bits_t SSPCON2bits @ 0xFC5;
14529:         // bitfield macros
14530:         #define _SSPCON2_SEN_POSN                                   0x0
14531:         #define _SSPCON2_SEN_POSITION                               0x0
14532:         #define _SSPCON2_SEN_SIZE                                   0x1
14533:         #define _SSPCON2_SEN_LENGTH                                 0x1
14534:         #define _SSPCON2_SEN_MASK                                   0x1
14535:         #define _SSPCON2_RSEN_POSN                                  0x1
14536:         #define _SSPCON2_RSEN_POSITION                              0x1
14537:         #define _SSPCON2_RSEN_SIZE                                  0x1
14538:         #define _SSPCON2_RSEN_LENGTH                                0x1
14539:         #define _SSPCON2_RSEN_MASK                                  0x2
14540:         #define _SSPCON2_PEN_POSN                                   0x2
14541:         #define _SSPCON2_PEN_POSITION                               0x2
14542:         #define _SSPCON2_PEN_SIZE                                   0x1
14543:         #define _SSPCON2_PEN_LENGTH                                 0x1
14544:         #define _SSPCON2_PEN_MASK                                   0x4
14545:         #define _SSPCON2_RCEN_POSN                                  0x3
14546:         #define _SSPCON2_RCEN_POSITION                              0x3
14547:         #define _SSPCON2_RCEN_SIZE                                  0x1
14548:         #define _SSPCON2_RCEN_LENGTH                                0x1
14549:         #define _SSPCON2_RCEN_MASK                                  0x8
14550:         #define _SSPCON2_ACKEN_POSN                                 0x4
14551:         #define _SSPCON2_ACKEN_POSITION                             0x4
14552:         #define _SSPCON2_ACKEN_SIZE                                 0x1
14553:         #define _SSPCON2_ACKEN_LENGTH                               0x1
14554:         #define _SSPCON2_ACKEN_MASK                                 0x10
14555:         #define _SSPCON2_ACKDT_POSN                                 0x5
14556:         #define _SSPCON2_ACKDT_POSITION                             0x5
14557:         #define _SSPCON2_ACKDT_SIZE                                 0x1
14558:         #define _SSPCON2_ACKDT_LENGTH                               0x1
14559:         #define _SSPCON2_ACKDT_MASK                                 0x20
14560:         #define _SSPCON2_ACKSTAT_POSN                               0x6
14561:         #define _SSPCON2_ACKSTAT_POSITION                           0x6
14562:         #define _SSPCON2_ACKSTAT_SIZE                               0x1
14563:         #define _SSPCON2_ACKSTAT_LENGTH                             0x1
14564:         #define _SSPCON2_ACKSTAT_MASK                               0x40
14565:         #define _SSPCON2_GCEN_POSN                                  0x7
14566:         #define _SSPCON2_GCEN_POSITION                              0x7
14567:         #define _SSPCON2_GCEN_SIZE                                  0x1
14568:         #define _SSPCON2_GCEN_LENGTH                                0x1
14569:         #define _SSPCON2_GCEN_MASK                                  0x80
14570:         #define _SSPCON2_ACKDT1_POSN                                0x5
14571:         #define _SSPCON2_ACKDT1_POSITION                            0x5
14572:         #define _SSPCON2_ACKDT1_SIZE                                0x1
14573:         #define _SSPCON2_ACKDT1_LENGTH                              0x1
14574:         #define _SSPCON2_ACKDT1_MASK                                0x20
14575:         #define _SSPCON2_ACKEN1_POSN                                0x4
14576:         #define _SSPCON2_ACKEN1_POSITION                            0x4
14577:         #define _SSPCON2_ACKEN1_SIZE                                0x1
14578:         #define _SSPCON2_ACKEN1_LENGTH                              0x1
14579:         #define _SSPCON2_ACKEN1_MASK                                0x10
14580:         #define _SSPCON2_ACKSTAT1_POSN                              0x6
14581:         #define _SSPCON2_ACKSTAT1_POSITION                          0x6
14582:         #define _SSPCON2_ACKSTAT1_SIZE                              0x1
14583:         #define _SSPCON2_ACKSTAT1_LENGTH                            0x1
14584:         #define _SSPCON2_ACKSTAT1_MASK                              0x40
14585:         #define _SSPCON2_ADMSK1_POSN                                0x1
14586:         #define _SSPCON2_ADMSK1_POSITION                            0x1
14587:         #define _SSPCON2_ADMSK1_SIZE                                0x1
14588:         #define _SSPCON2_ADMSK1_LENGTH                              0x1
14589:         #define _SSPCON2_ADMSK1_MASK                                0x2
14590:         #define _SSPCON2_ADMSK11_POSN                               0x1
14591:         #define _SSPCON2_ADMSK11_POSITION                           0x1
14592:         #define _SSPCON2_ADMSK11_SIZE                               0x1
14593:         #define _SSPCON2_ADMSK11_LENGTH                             0x1
14594:         #define _SSPCON2_ADMSK11_MASK                               0x2
14595:         #define _SSPCON2_ADMSK2_POSN                                0x2
14596:         #define _SSPCON2_ADMSK2_POSITION                            0x2
14597:         #define _SSPCON2_ADMSK2_SIZE                                0x1
14598:         #define _SSPCON2_ADMSK2_LENGTH                              0x1
14599:         #define _SSPCON2_ADMSK2_MASK                                0x4
14600:         #define _SSPCON2_ADMSK21_POSN                               0x2
14601:         #define _SSPCON2_ADMSK21_POSITION                           0x2
14602:         #define _SSPCON2_ADMSK21_SIZE                               0x1
14603:         #define _SSPCON2_ADMSK21_LENGTH                             0x1
14604:         #define _SSPCON2_ADMSK21_MASK                               0x4
14605:         #define _SSPCON2_ADMSK3_POSN                                0x3
14606:         #define _SSPCON2_ADMSK3_POSITION                            0x3
14607:         #define _SSPCON2_ADMSK3_SIZE                                0x1
14608:         #define _SSPCON2_ADMSK3_LENGTH                              0x1
14609:         #define _SSPCON2_ADMSK3_MASK                                0x8
14610:         #define _SSPCON2_ADMSK31_POSN                               0x3
14611:         #define _SSPCON2_ADMSK31_POSITION                           0x3
14612:         #define _SSPCON2_ADMSK31_SIZE                               0x1
14613:         #define _SSPCON2_ADMSK31_LENGTH                             0x1
14614:         #define _SSPCON2_ADMSK31_MASK                               0x8
14615:         #define _SSPCON2_ADMSK4_POSN                                0x4
14616:         #define _SSPCON2_ADMSK4_POSITION                            0x4
14617:         #define _SSPCON2_ADMSK4_SIZE                                0x1
14618:         #define _SSPCON2_ADMSK4_LENGTH                              0x1
14619:         #define _SSPCON2_ADMSK4_MASK                                0x10
14620:         #define _SSPCON2_ADMSK41_POSN                               0x4
14621:         #define _SSPCON2_ADMSK41_POSITION                           0x4
14622:         #define _SSPCON2_ADMSK41_SIZE                               0x1
14623:         #define _SSPCON2_ADMSK41_LENGTH                             0x1
14624:         #define _SSPCON2_ADMSK41_MASK                               0x10
14625:         #define _SSPCON2_ADMSK5_POSN                                0x5
14626:         #define _SSPCON2_ADMSK5_POSITION                            0x5
14627:         #define _SSPCON2_ADMSK5_SIZE                                0x1
14628:         #define _SSPCON2_ADMSK5_LENGTH                              0x1
14629:         #define _SSPCON2_ADMSK5_MASK                                0x20
14630:         #define _SSPCON2_ADMSK51_POSN                               0x5
14631:         #define _SSPCON2_ADMSK51_POSITION                           0x5
14632:         #define _SSPCON2_ADMSK51_SIZE                               0x1
14633:         #define _SSPCON2_ADMSK51_LENGTH                             0x1
14634:         #define _SSPCON2_ADMSK51_MASK                               0x20
14635:         #define _SSPCON2_GCEN1_POSN                                 0x7
14636:         #define _SSPCON2_GCEN1_POSITION                             0x7
14637:         #define _SSPCON2_GCEN1_SIZE                                 0x1
14638:         #define _SSPCON2_GCEN1_LENGTH                               0x1
14639:         #define _SSPCON2_GCEN1_MASK                                 0x80
14640:         #define _SSPCON2_PEN1_POSN                                  0x2
14641:         #define _SSPCON2_PEN1_POSITION                              0x2
14642:         #define _SSPCON2_PEN1_SIZE                                  0x1
14643:         #define _SSPCON2_PEN1_LENGTH                                0x1
14644:         #define _SSPCON2_PEN1_MASK                                  0x4
14645:         #define _SSPCON2_RCEN1_POSN                                 0x3
14646:         #define _SSPCON2_RCEN1_POSITION                             0x3
14647:         #define _SSPCON2_RCEN1_SIZE                                 0x1
14648:         #define _SSPCON2_RCEN1_LENGTH                               0x1
14649:         #define _SSPCON2_RCEN1_MASK                                 0x8
14650:         #define _SSPCON2_RSEN1_POSN                                 0x1
14651:         #define _SSPCON2_RSEN1_POSITION                             0x1
14652:         #define _SSPCON2_RSEN1_SIZE                                 0x1
14653:         #define _SSPCON2_RSEN1_LENGTH                               0x1
14654:         #define _SSPCON2_RSEN1_MASK                                 0x2
14655:         #define _SSPCON2_SEN1_POSN                                  0x0
14656:         #define _SSPCON2_SEN1_POSITION                              0x0
14657:         #define _SSPCON2_SEN1_SIZE                                  0x1
14658:         #define _SSPCON2_SEN1_LENGTH                                0x1
14659:         #define _SSPCON2_SEN1_MASK                                  0x1
14660:         
14661:         // Register: SSP1CON1
14662:         extern volatile unsigned char           SSP1CON1            @ 0xFC6;
14663:         #ifndef _LIB_BUILD
14664:         asm("SSP1CON1 equ 0FC6h");
14665:         #endif
14666:         // aliases
14667:         extern volatile unsigned char           SSPCON1             @ 0xFC6;
14668:         #ifndef _LIB_BUILD
14669:         asm("SSPCON1 equ 0FC6h");
14670:         #endif
14671:         // bitfield definitions
14672:         typedef union {
14673:             struct {
14674:                 unsigned SSPM                   :4;
14675:                 unsigned CKP                    :1;
14676:                 unsigned SSPEN                  :1;
14677:                 unsigned SSPOV                  :1;
14678:                 unsigned WCOL                   :1;
14679:             };
14680:             struct {
14681:                 unsigned SSPM0                  :1;
14682:                 unsigned SSPM1                  :1;
14683:                 unsigned SSPM2                  :1;
14684:                 unsigned SSPM3                  :1;
14685:             };
14686:             struct {
14687:                 unsigned                        :4;
14688:                 unsigned CKP1                   :1;
14689:             };
14690:             struct {
14691:                 unsigned                        :5;
14692:                 unsigned SSPEN1                 :1;
14693:             };
14694:             struct {
14695:                 unsigned SSPM01                 :1;
14696:             };
14697:             struct {
14698:                 unsigned                        :1;
14699:                 unsigned SSPM11                 :1;
14700:             };
14701:             struct {
14702:                 unsigned                        :2;
14703:                 unsigned SSPM21                 :1;
14704:             };
14705:             struct {
14706:                 unsigned                        :3;
14707:                 unsigned SSPM31                 :1;
14708:             };
14709:             struct {
14710:                 unsigned                        :6;
14711:                 unsigned SSPOV1                 :1;
14712:             };
14713:             struct {
14714:                 unsigned                        :7;
14715:                 unsigned WCOL1                  :1;
14716:             };
14717:         } SSP1CON1bits_t;
14718:         extern volatile SSP1CON1bits_t SSP1CON1bits @ 0xFC6;
14719:         // bitfield macros
14720:         #define _SSP1CON1_SSPM_POSN                                 0x0
14721:         #define _SSP1CON1_SSPM_POSITION                             0x0
14722:         #define _SSP1CON1_SSPM_SIZE                                 0x4
14723:         #define _SSP1CON1_SSPM_LENGTH                               0x4
14724:         #define _SSP1CON1_SSPM_MASK                                 0xF
14725:         #define _SSP1CON1_CKP_POSN                                  0x4
14726:         #define _SSP1CON1_CKP_POSITION                              0x4
14727:         #define _SSP1CON1_CKP_SIZE                                  0x1
14728:         #define _SSP1CON1_CKP_LENGTH                                0x1
14729:         #define _SSP1CON1_CKP_MASK                                  0x10
14730:         #define _SSP1CON1_SSPEN_POSN                                0x5
14731:         #define _SSP1CON1_SSPEN_POSITION                            0x5
14732:         #define _SSP1CON1_SSPEN_SIZE                                0x1
14733:         #define _SSP1CON1_SSPEN_LENGTH                              0x1
14734:         #define _SSP1CON1_SSPEN_MASK                                0x20
14735:         #define _SSP1CON1_SSPOV_POSN                                0x6
14736:         #define _SSP1CON1_SSPOV_POSITION                            0x6
14737:         #define _SSP1CON1_SSPOV_SIZE                                0x1
14738:         #define _SSP1CON1_SSPOV_LENGTH                              0x1
14739:         #define _SSP1CON1_SSPOV_MASK                                0x40
14740:         #define _SSP1CON1_WCOL_POSN                                 0x7
14741:         #define _SSP1CON1_WCOL_POSITION                             0x7
14742:         #define _SSP1CON1_WCOL_SIZE                                 0x1
14743:         #define _SSP1CON1_WCOL_LENGTH                               0x1
14744:         #define _SSP1CON1_WCOL_MASK                                 0x80
14745:         #define _SSP1CON1_SSPM0_POSN                                0x0
14746:         #define _SSP1CON1_SSPM0_POSITION                            0x0
14747:         #define _SSP1CON1_SSPM0_SIZE                                0x1
14748:         #define _SSP1CON1_SSPM0_LENGTH                              0x1
14749:         #define _SSP1CON1_SSPM0_MASK                                0x1
14750:         #define _SSP1CON1_SSPM1_POSN                                0x1
14751:         #define _SSP1CON1_SSPM1_POSITION                            0x1
14752:         #define _SSP1CON1_SSPM1_SIZE                                0x1
14753:         #define _SSP1CON1_SSPM1_LENGTH                              0x1
14754:         #define _SSP1CON1_SSPM1_MASK                                0x2
14755:         #define _SSP1CON1_SSPM2_POSN                                0x2
14756:         #define _SSP1CON1_SSPM2_POSITION                            0x2
14757:         #define _SSP1CON1_SSPM2_SIZE                                0x1
14758:         #define _SSP1CON1_SSPM2_LENGTH                              0x1
14759:         #define _SSP1CON1_SSPM2_MASK                                0x4
14760:         #define _SSP1CON1_SSPM3_POSN                                0x3
14761:         #define _SSP1CON1_SSPM3_POSITION                            0x3
14762:         #define _SSP1CON1_SSPM3_SIZE                                0x1
14763:         #define _SSP1CON1_SSPM3_LENGTH                              0x1
14764:         #define _SSP1CON1_SSPM3_MASK                                0x8
14765:         #define _SSP1CON1_CKP1_POSN                                 0x4
14766:         #define _SSP1CON1_CKP1_POSITION                             0x4
14767:         #define _SSP1CON1_CKP1_SIZE                                 0x1
14768:         #define _SSP1CON1_CKP1_LENGTH                               0x1
14769:         #define _SSP1CON1_CKP1_MASK                                 0x10
14770:         #define _SSP1CON1_SSPEN1_POSN                               0x5
14771:         #define _SSP1CON1_SSPEN1_POSITION                           0x5
14772:         #define _SSP1CON1_SSPEN1_SIZE                               0x1
14773:         #define _SSP1CON1_SSPEN1_LENGTH                             0x1
14774:         #define _SSP1CON1_SSPEN1_MASK                               0x20
14775:         #define _SSP1CON1_SSPM01_POSN                               0x0
14776:         #define _SSP1CON1_SSPM01_POSITION                           0x0
14777:         #define _SSP1CON1_SSPM01_SIZE                               0x1
14778:         #define _SSP1CON1_SSPM01_LENGTH                             0x1
14779:         #define _SSP1CON1_SSPM01_MASK                               0x1
14780:         #define _SSP1CON1_SSPM11_POSN                               0x1
14781:         #define _SSP1CON1_SSPM11_POSITION                           0x1
14782:         #define _SSP1CON1_SSPM11_SIZE                               0x1
14783:         #define _SSP1CON1_SSPM11_LENGTH                             0x1
14784:         #define _SSP1CON1_SSPM11_MASK                               0x2
14785:         #define _SSP1CON1_SSPM21_POSN                               0x2
14786:         #define _SSP1CON1_SSPM21_POSITION                           0x2
14787:         #define _SSP1CON1_SSPM21_SIZE                               0x1
14788:         #define _SSP1CON1_SSPM21_LENGTH                             0x1
14789:         #define _SSP1CON1_SSPM21_MASK                               0x4
14790:         #define _SSP1CON1_SSPM31_POSN                               0x3
14791:         #define _SSP1CON1_SSPM31_POSITION                           0x3
14792:         #define _SSP1CON1_SSPM31_SIZE                               0x1
14793:         #define _SSP1CON1_SSPM31_LENGTH                             0x1
14794:         #define _SSP1CON1_SSPM31_MASK                               0x8
14795:         #define _SSP1CON1_SSPOV1_POSN                               0x6
14796:         #define _SSP1CON1_SSPOV1_POSITION                           0x6
14797:         #define _SSP1CON1_SSPOV1_SIZE                               0x1
14798:         #define _SSP1CON1_SSPOV1_LENGTH                             0x1
14799:         #define _SSP1CON1_SSPOV1_MASK                               0x40
14800:         #define _SSP1CON1_WCOL1_POSN                                0x7
14801:         #define _SSP1CON1_WCOL1_POSITION                            0x7
14802:         #define _SSP1CON1_WCOL1_SIZE                                0x1
14803:         #define _SSP1CON1_WCOL1_LENGTH                              0x1
14804:         #define _SSP1CON1_WCOL1_MASK                                0x80
14805:         // alias bitfield definitions
14806:         typedef union {
14807:             struct {
14808:                 unsigned SSPM                   :4;
14809:                 unsigned CKP                    :1;
14810:                 unsigned SSPEN                  :1;
14811:                 unsigned SSPOV                  :1;
14812:                 unsigned WCOL                   :1;
14813:             };
14814:             struct {
14815:                 unsigned SSPM0                  :1;
14816:                 unsigned SSPM1                  :1;
14817:                 unsigned SSPM2                  :1;
14818:                 unsigned SSPM3                  :1;
14819:             };
14820:             struct {
14821:                 unsigned                        :4;
14822:                 unsigned CKP1                   :1;
14823:             };
14824:             struct {
14825:                 unsigned                        :5;
14826:                 unsigned SSPEN1                 :1;
14827:             };
14828:             struct {
14829:                 unsigned SSPM01                 :1;
14830:             };
14831:             struct {
14832:                 unsigned                        :1;
14833:                 unsigned SSPM11                 :1;
14834:             };
14835:             struct {
14836:                 unsigned                        :2;
14837:                 unsigned SSPM21                 :1;
14838:             };
14839:             struct {
14840:                 unsigned                        :3;
14841:                 unsigned SSPM31                 :1;
14842:             };
14843:             struct {
14844:                 unsigned                        :6;
14845:                 unsigned SSPOV1                 :1;
14846:             };
14847:             struct {
14848:                 unsigned                        :7;
14849:                 unsigned WCOL1                  :1;
14850:             };
14851:         } SSPCON1bits_t;
14852:         extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;
14853:         // bitfield macros
14854:         #define _SSPCON1_SSPM_POSN                                  0x0
14855:         #define _SSPCON1_SSPM_POSITION                              0x0
14856:         #define _SSPCON1_SSPM_SIZE                                  0x4
14857:         #define _SSPCON1_SSPM_LENGTH                                0x4
14858:         #define _SSPCON1_SSPM_MASK                                  0xF
14859:         #define _SSPCON1_CKP_POSN                                   0x4
14860:         #define _SSPCON1_CKP_POSITION                               0x4
14861:         #define _SSPCON1_CKP_SIZE                                   0x1
14862:         #define _SSPCON1_CKP_LENGTH                                 0x1
14863:         #define _SSPCON1_CKP_MASK                                   0x10
14864:         #define _SSPCON1_SSPEN_POSN                                 0x5
14865:         #define _SSPCON1_SSPEN_POSITION                             0x5
14866:         #define _SSPCON1_SSPEN_SIZE                                 0x1
14867:         #define _SSPCON1_SSPEN_LENGTH                               0x1
14868:         #define _SSPCON1_SSPEN_MASK                                 0x20
14869:         #define _SSPCON1_SSPOV_POSN                                 0x6
14870:         #define _SSPCON1_SSPOV_POSITION                             0x6
14871:         #define _SSPCON1_SSPOV_SIZE                                 0x1
14872:         #define _SSPCON1_SSPOV_LENGTH                               0x1
14873:         #define _SSPCON1_SSPOV_MASK                                 0x40
14874:         #define _SSPCON1_WCOL_POSN                                  0x7
14875:         #define _SSPCON1_WCOL_POSITION                              0x7
14876:         #define _SSPCON1_WCOL_SIZE                                  0x1
14877:         #define _SSPCON1_WCOL_LENGTH                                0x1
14878:         #define _SSPCON1_WCOL_MASK                                  0x80
14879:         #define _SSPCON1_SSPM0_POSN                                 0x0
14880:         #define _SSPCON1_SSPM0_POSITION                             0x0
14881:         #define _SSPCON1_SSPM0_SIZE                                 0x1
14882:         #define _SSPCON1_SSPM0_LENGTH                               0x1
14883:         #define _SSPCON1_SSPM0_MASK                                 0x1
14884:         #define _SSPCON1_SSPM1_POSN                                 0x1
14885:         #define _SSPCON1_SSPM1_POSITION                             0x1
14886:         #define _SSPCON1_SSPM1_SIZE                                 0x1
14887:         #define _SSPCON1_SSPM1_LENGTH                               0x1
14888:         #define _SSPCON1_SSPM1_MASK                                 0x2
14889:         #define _SSPCON1_SSPM2_POSN                                 0x2
14890:         #define _SSPCON1_SSPM2_POSITION                             0x2
14891:         #define _SSPCON1_SSPM2_SIZE                                 0x1
14892:         #define _SSPCON1_SSPM2_LENGTH                               0x1
14893:         #define _SSPCON1_SSPM2_MASK                                 0x4
14894:         #define _SSPCON1_SSPM3_POSN                                 0x3
14895:         #define _SSPCON1_SSPM3_POSITION                             0x3
14896:         #define _SSPCON1_SSPM3_SIZE                                 0x1
14897:         #define _SSPCON1_SSPM3_LENGTH                               0x1
14898:         #define _SSPCON1_SSPM3_MASK                                 0x8
14899:         #define _SSPCON1_CKP1_POSN                                  0x4
14900:         #define _SSPCON1_CKP1_POSITION                              0x4
14901:         #define _SSPCON1_CKP1_SIZE                                  0x1
14902:         #define _SSPCON1_CKP1_LENGTH                                0x1
14903:         #define _SSPCON1_CKP1_MASK                                  0x10
14904:         #define _SSPCON1_SSPEN1_POSN                                0x5
14905:         #define _SSPCON1_SSPEN1_POSITION                            0x5
14906:         #define _SSPCON1_SSPEN1_SIZE                                0x1
14907:         #define _SSPCON1_SSPEN1_LENGTH                              0x1
14908:         #define _SSPCON1_SSPEN1_MASK                                0x20
14909:         #define _SSPCON1_SSPM01_POSN                                0x0
14910:         #define _SSPCON1_SSPM01_POSITION                            0x0
14911:         #define _SSPCON1_SSPM01_SIZE                                0x1
14912:         #define _SSPCON1_SSPM01_LENGTH                              0x1
14913:         #define _SSPCON1_SSPM01_MASK                                0x1
14914:         #define _SSPCON1_SSPM11_POSN                                0x1
14915:         #define _SSPCON1_SSPM11_POSITION                            0x1
14916:         #define _SSPCON1_SSPM11_SIZE                                0x1
14917:         #define _SSPCON1_SSPM11_LENGTH                              0x1
14918:         #define _SSPCON1_SSPM11_MASK                                0x2
14919:         #define _SSPCON1_SSPM21_POSN                                0x2
14920:         #define _SSPCON1_SSPM21_POSITION                            0x2
14921:         #define _SSPCON1_SSPM21_SIZE                                0x1
14922:         #define _SSPCON1_SSPM21_LENGTH                              0x1
14923:         #define _SSPCON1_SSPM21_MASK                                0x4
14924:         #define _SSPCON1_SSPM31_POSN                                0x3
14925:         #define _SSPCON1_SSPM31_POSITION                            0x3
14926:         #define _SSPCON1_SSPM31_SIZE                                0x1
14927:         #define _SSPCON1_SSPM31_LENGTH                              0x1
14928:         #define _SSPCON1_SSPM31_MASK                                0x8
14929:         #define _SSPCON1_SSPOV1_POSN                                0x6
14930:         #define _SSPCON1_SSPOV1_POSITION                            0x6
14931:         #define _SSPCON1_SSPOV1_SIZE                                0x1
14932:         #define _SSPCON1_SSPOV1_LENGTH                              0x1
14933:         #define _SSPCON1_SSPOV1_MASK                                0x40
14934:         #define _SSPCON1_WCOL1_POSN                                 0x7
14935:         #define _SSPCON1_WCOL1_POSITION                             0x7
14936:         #define _SSPCON1_WCOL1_SIZE                                 0x1
14937:         #define _SSPCON1_WCOL1_LENGTH                               0x1
14938:         #define _SSPCON1_WCOL1_MASK                                 0x80
14939:         
14940:         // Register: SSP1STAT
14941:         extern volatile unsigned char           SSP1STAT            @ 0xFC7;
14942:         #ifndef _LIB_BUILD
14943:         asm("SSP1STAT equ 0FC7h");
14944:         #endif
14945:         // aliases
14946:         extern volatile unsigned char           SSPSTAT             @ 0xFC7;
14947:         #ifndef _LIB_BUILD
14948:         asm("SSPSTAT equ 0FC7h");
14949:         #endif
14950:         // bitfield definitions
14951:         typedef union {
14952:             struct {
14953:                 unsigned                        :2;
14954:                 unsigned R_NOT_W                :1;
14955:             };
14956:             struct {
14957:                 unsigned                        :5;
14958:                 unsigned D_NOT_A                :1;
14959:             };
14960:             struct {
14961:                 unsigned BF                     :1;
14962:                 unsigned UA                     :1;
14963:                 unsigned R_nW                   :1;
14964:                 unsigned S                      :1;
14965:                 unsigned P                      :1;
14966:                 unsigned D_nA                   :1;
14967:                 unsigned CKE                    :1;
14968:                 unsigned SMP                    :1;
14969:             };
14970:             struct {
14971:                 unsigned                        :2;
14972:                 unsigned R                      :1;
14973:                 unsigned                        :2;
14974:                 unsigned D                      :1;
14975:             };
14976:             struct {
14977:                 unsigned                        :2;
14978:                 unsigned W                      :1;
14979:                 unsigned                        :2;
14980:                 unsigned A                      :1;
14981:             };
14982:             struct {
14983:                 unsigned                        :2;
14984:                 unsigned nW                     :1;
14985:                 unsigned                        :2;
14986:                 unsigned nA                     :1;
14987:             };
14988:             struct {
14989:                 unsigned                        :2;
14990:                 unsigned R_W                    :1;
14991:                 unsigned                        :2;
14992:                 unsigned D_A                    :1;
14993:             };
14994:             struct {
14995:                 unsigned                        :2;
14996:                 unsigned NOT_WRITE              :1;
14997:             };
14998:             struct {
14999:                 unsigned                        :5;
15000:                 unsigned NOT_ADDRESS            :1;
15001:             };
15002:             struct {
15003:                 unsigned                        :2;
15004:                 unsigned nWRITE                 :1;
15005:                 unsigned                        :2;
15006:                 unsigned nADDRESS               :1;
15007:             };
15008:             struct {
15009:                 unsigned BF1                    :1;
15010:             };
15011:             struct {
15012:                 unsigned                        :6;
15013:                 unsigned CKE1                   :1;
15014:             };
15015:             struct {
15016:                 unsigned                        :5;
15017:                 unsigned DA                     :1;
15018:             };
15019:             struct {
15020:                 unsigned                        :5;
15021:                 unsigned DA1                    :1;
15022:             };
15023:             struct {
15024:                 unsigned                        :5;
15025:                 unsigned DATA_ADDRESS           :1;
15026:             };
15027:             struct {
15028:                 unsigned                        :5;
15029:                 unsigned I2C_DAT                :1;
15030:             };
15031:             struct {
15032:                 unsigned                        :2;
15033:                 unsigned I2C_READ               :1;
15034:             };
15035:             struct {
15036:                 unsigned                        :3;
15037:                 unsigned I2C_START              :1;
15038:             };
15039:             struct {
15040:                 unsigned                        :4;
15041:                 unsigned I2C_STOP               :1;
15042:             };
15043:             struct {
15044:                 unsigned                        :2;
15045:                 unsigned READ_WRITE             :1;
15046:             };
15047:             struct {
15048:                 unsigned                        :2;
15049:                 unsigned RW                     :1;
15050:             };
15051:             struct {
15052:                 unsigned                        :2;
15053:                 unsigned RW1                    :1;
15054:             };
15055:             struct {
15056:                 unsigned                        :7;
15057:                 unsigned SMP1                   :1;
15058:             };
15059:             struct {
15060:                 unsigned                        :3;
15061:                 unsigned START                  :1;
15062:             };
15063:             struct {
15064:                 unsigned                        :3;
15065:                 unsigned START1                 :1;
15066:             };
15067:             struct {
15068:                 unsigned                        :4;
15069:                 unsigned STOP                   :1;
15070:             };
15071:             struct {
15072:                 unsigned                        :4;
15073:                 unsigned STOP1                  :1;
15074:             };
15075:             struct {
15076:                 unsigned                        :1;
15077:                 unsigned UA1                    :1;
15078:             };
15079:             struct {
15080:                 unsigned                        :2;
15081:                 unsigned NOT_W                  :1;
15082:             };
15083:             struct {
15084:                 unsigned                        :5;
15085:                 unsigned NOT_A                  :1;
15086:             };
15087:         } SSP1STATbits_t;
15088:         extern volatile SSP1STATbits_t SSP1STATbits @ 0xFC7;
15089:         // bitfield macros
15090:         #define _SSP1STAT_R_NOT_W_POSN                              0x2
15091:         #define _SSP1STAT_R_NOT_W_POSITION                          0x2
15092:         #define _SSP1STAT_R_NOT_W_SIZE                              0x1
15093:         #define _SSP1STAT_R_NOT_W_LENGTH                            0x1
15094:         #define _SSP1STAT_R_NOT_W_MASK                              0x4
15095:         #define _SSP1STAT_D_NOT_A_POSN                              0x5
15096:         #define _SSP1STAT_D_NOT_A_POSITION                          0x5
15097:         #define _SSP1STAT_D_NOT_A_SIZE                              0x1
15098:         #define _SSP1STAT_D_NOT_A_LENGTH                            0x1
15099:         #define _SSP1STAT_D_NOT_A_MASK                              0x20
15100:         #define _SSP1STAT_BF_POSN                                   0x0
15101:         #define _SSP1STAT_BF_POSITION                               0x0
15102:         #define _SSP1STAT_BF_SIZE                                   0x1
15103:         #define _SSP1STAT_BF_LENGTH                                 0x1
15104:         #define _SSP1STAT_BF_MASK                                   0x1
15105:         #define _SSP1STAT_UA_POSN                                   0x1
15106:         #define _SSP1STAT_UA_POSITION                               0x1
15107:         #define _SSP1STAT_UA_SIZE                                   0x1
15108:         #define _SSP1STAT_UA_LENGTH                                 0x1
15109:         #define _SSP1STAT_UA_MASK                                   0x2
15110:         #define _SSP1STAT_R_nW_POSN                                 0x2
15111:         #define _SSP1STAT_R_nW_POSITION                             0x2
15112:         #define _SSP1STAT_R_nW_SIZE                                 0x1
15113:         #define _SSP1STAT_R_nW_LENGTH                               0x1
15114:         #define _SSP1STAT_R_nW_MASK                                 0x4
15115:         #define _SSP1STAT_S_POSN                                    0x3
15116:         #define _SSP1STAT_S_POSITION                                0x3
15117:         #define _SSP1STAT_S_SIZE                                    0x1
15118:         #define _SSP1STAT_S_LENGTH                                  0x1
15119:         #define _SSP1STAT_S_MASK                                    0x8
15120:         #define _SSP1STAT_P_POSN                                    0x4
15121:         #define _SSP1STAT_P_POSITION                                0x4
15122:         #define _SSP1STAT_P_SIZE                                    0x1
15123:         #define _SSP1STAT_P_LENGTH                                  0x1
15124:         #define _SSP1STAT_P_MASK                                    0x10
15125:         #define _SSP1STAT_D_nA_POSN                                 0x5
15126:         #define _SSP1STAT_D_nA_POSITION                             0x5
15127:         #define _SSP1STAT_D_nA_SIZE                                 0x1
15128:         #define _SSP1STAT_D_nA_LENGTH                               0x1
15129:         #define _SSP1STAT_D_nA_MASK                                 0x20
15130:         #define _SSP1STAT_CKE_POSN                                  0x6
15131:         #define _SSP1STAT_CKE_POSITION                              0x6
15132:         #define _SSP1STAT_CKE_SIZE                                  0x1
15133:         #define _SSP1STAT_CKE_LENGTH                                0x1
15134:         #define _SSP1STAT_CKE_MASK                                  0x40
15135:         #define _SSP1STAT_SMP_POSN                                  0x7
15136:         #define _SSP1STAT_SMP_POSITION                              0x7
15137:         #define _SSP1STAT_SMP_SIZE                                  0x1
15138:         #define _SSP1STAT_SMP_LENGTH                                0x1
15139:         #define _SSP1STAT_SMP_MASK                                  0x80
15140:         #define _SSP1STAT_R_POSN                                    0x2
15141:         #define _SSP1STAT_R_POSITION                                0x2
15142:         #define _SSP1STAT_R_SIZE                                    0x1
15143:         #define _SSP1STAT_R_LENGTH                                  0x1
15144:         #define _SSP1STAT_R_MASK                                    0x4
15145:         #define _SSP1STAT_D_POSN                                    0x5
15146:         #define _SSP1STAT_D_POSITION                                0x5
15147:         #define _SSP1STAT_D_SIZE                                    0x1
15148:         #define _SSP1STAT_D_LENGTH                                  0x1
15149:         #define _SSP1STAT_D_MASK                                    0x20
15150:         #define _SSP1STAT_W_POSN                                    0x2
15151:         #define _SSP1STAT_W_POSITION                                0x2
15152:         #define _SSP1STAT_W_SIZE                                    0x1
15153:         #define _SSP1STAT_W_LENGTH                                  0x1
15154:         #define _SSP1STAT_W_MASK                                    0x4
15155:         #define _SSP1STAT_A_POSN                                    0x5
15156:         #define _SSP1STAT_A_POSITION                                0x5
15157:         #define _SSP1STAT_A_SIZE                                    0x1
15158:         #define _SSP1STAT_A_LENGTH                                  0x1
15159:         #define _SSP1STAT_A_MASK                                    0x20
15160:         #define _SSP1STAT_nW_POSN                                   0x2
15161:         #define _SSP1STAT_nW_POSITION                               0x2
15162:         #define _SSP1STAT_nW_SIZE                                   0x1
15163:         #define _SSP1STAT_nW_LENGTH                                 0x1
15164:         #define _SSP1STAT_nW_MASK                                   0x4
15165:         #define _SSP1STAT_nA_POSN                                   0x5
15166:         #define _SSP1STAT_nA_POSITION                               0x5
15167:         #define _SSP1STAT_nA_SIZE                                   0x1
15168:         #define _SSP1STAT_nA_LENGTH                                 0x1
15169:         #define _SSP1STAT_nA_MASK                                   0x20
15170:         #define _SSP1STAT_R_W_POSN                                  0x2
15171:         #define _SSP1STAT_R_W_POSITION                              0x2
15172:         #define _SSP1STAT_R_W_SIZE                                  0x1
15173:         #define _SSP1STAT_R_W_LENGTH                                0x1
15174:         #define _SSP1STAT_R_W_MASK                                  0x4
15175:         #define _SSP1STAT_D_A_POSN                                  0x5
15176:         #define _SSP1STAT_D_A_POSITION                              0x5
15177:         #define _SSP1STAT_D_A_SIZE                                  0x1
15178:         #define _SSP1STAT_D_A_LENGTH                                0x1
15179:         #define _SSP1STAT_D_A_MASK                                  0x20
15180:         #define _SSP1STAT_NOT_WRITE_POSN                            0x2
15181:         #define _SSP1STAT_NOT_WRITE_POSITION                        0x2
15182:         #define _SSP1STAT_NOT_WRITE_SIZE                            0x1
15183:         #define _SSP1STAT_NOT_WRITE_LENGTH                          0x1
15184:         #define _SSP1STAT_NOT_WRITE_MASK                            0x4
15185:         #define _SSP1STAT_NOT_ADDRESS_POSN                          0x5
15186:         #define _SSP1STAT_NOT_ADDRESS_POSITION                      0x5
15187:         #define _SSP1STAT_NOT_ADDRESS_SIZE                          0x1
15188:         #define _SSP1STAT_NOT_ADDRESS_LENGTH                        0x1
15189:         #define _SSP1STAT_NOT_ADDRESS_MASK                          0x20
15190:         #define _SSP1STAT_nWRITE_POSN                               0x2
15191:         #define _SSP1STAT_nWRITE_POSITION                           0x2
15192:         #define _SSP1STAT_nWRITE_SIZE                               0x1
15193:         #define _SSP1STAT_nWRITE_LENGTH                             0x1
15194:         #define _SSP1STAT_nWRITE_MASK                               0x4
15195:         #define _SSP1STAT_nADDRESS_POSN                             0x5
15196:         #define _SSP1STAT_nADDRESS_POSITION                         0x5
15197:         #define _SSP1STAT_nADDRESS_SIZE                             0x1
15198:         #define _SSP1STAT_nADDRESS_LENGTH                           0x1
15199:         #define _SSP1STAT_nADDRESS_MASK                             0x20
15200:         #define _SSP1STAT_BF1_POSN                                  0x0
15201:         #define _SSP1STAT_BF1_POSITION                              0x0
15202:         #define _SSP1STAT_BF1_SIZE                                  0x1
15203:         #define _SSP1STAT_BF1_LENGTH                                0x1
15204:         #define _SSP1STAT_BF1_MASK                                  0x1
15205:         #define _SSP1STAT_CKE1_POSN                                 0x6
15206:         #define _SSP1STAT_CKE1_POSITION                             0x6
15207:         #define _SSP1STAT_CKE1_SIZE                                 0x1
15208:         #define _SSP1STAT_CKE1_LENGTH                               0x1
15209:         #define _SSP1STAT_CKE1_MASK                                 0x40
15210:         #define _SSP1STAT_DA_POSN                                   0x5
15211:         #define _SSP1STAT_DA_POSITION                               0x5
15212:         #define _SSP1STAT_DA_SIZE                                   0x1
15213:         #define _SSP1STAT_DA_LENGTH                                 0x1
15214:         #define _SSP1STAT_DA_MASK                                   0x20
15215:         #define _SSP1STAT_DA1_POSN                                  0x5
15216:         #define _SSP1STAT_DA1_POSITION                              0x5
15217:         #define _SSP1STAT_DA1_SIZE                                  0x1
15218:         #define _SSP1STAT_DA1_LENGTH                                0x1
15219:         #define _SSP1STAT_DA1_MASK                                  0x20
15220:         #define _SSP1STAT_DATA_ADDRESS_POSN                         0x5
15221:         #define _SSP1STAT_DATA_ADDRESS_POSITION                     0x5
15222:         #define _SSP1STAT_DATA_ADDRESS_SIZE                         0x1
15223:         #define _SSP1STAT_DATA_ADDRESS_LENGTH                       0x1
15224:         #define _SSP1STAT_DATA_ADDRESS_MASK                         0x20
15225:         #define _SSP1STAT_I2C_DAT_POSN                              0x5
15226:         #define _SSP1STAT_I2C_DAT_POSITION                          0x5
15227:         #define _SSP1STAT_I2C_DAT_SIZE                              0x1
15228:         #define _SSP1STAT_I2C_DAT_LENGTH                            0x1
15229:         #define _SSP1STAT_I2C_DAT_MASK                              0x20
15230:         #define _SSP1STAT_I2C_READ_POSN                             0x2
15231:         #define _SSP1STAT_I2C_READ_POSITION                         0x2
15232:         #define _SSP1STAT_I2C_READ_SIZE                             0x1
15233:         #define _SSP1STAT_I2C_READ_LENGTH                           0x1
15234:         #define _SSP1STAT_I2C_READ_MASK                             0x4
15235:         #define _SSP1STAT_I2C_START_POSN                            0x3
15236:         #define _SSP1STAT_I2C_START_POSITION                        0x3
15237:         #define _SSP1STAT_I2C_START_SIZE                            0x1
15238:         #define _SSP1STAT_I2C_START_LENGTH                          0x1
15239:         #define _SSP1STAT_I2C_START_MASK                            0x8
15240:         #define _SSP1STAT_I2C_STOP_POSN                             0x4
15241:         #define _SSP1STAT_I2C_STOP_POSITION                         0x4
15242:         #define _SSP1STAT_I2C_STOP_SIZE                             0x1
15243:         #define _SSP1STAT_I2C_STOP_LENGTH                           0x1
15244:         #define _SSP1STAT_I2C_STOP_MASK                             0x10
15245:         #define _SSP1STAT_READ_WRITE_POSN                           0x2
15246:         #define _SSP1STAT_READ_WRITE_POSITION                       0x2
15247:         #define _SSP1STAT_READ_WRITE_SIZE                           0x1
15248:         #define _SSP1STAT_READ_WRITE_LENGTH                         0x1
15249:         #define _SSP1STAT_READ_WRITE_MASK                           0x4
15250:         #define _SSP1STAT_RW_POSN                                   0x2
15251:         #define _SSP1STAT_RW_POSITION                               0x2
15252:         #define _SSP1STAT_RW_SIZE                                   0x1
15253:         #define _SSP1STAT_RW_LENGTH                                 0x1
15254:         #define _SSP1STAT_RW_MASK                                   0x4
15255:         #define _SSP1STAT_RW1_POSN                                  0x2
15256:         #define _SSP1STAT_RW1_POSITION                              0x2
15257:         #define _SSP1STAT_RW1_SIZE                                  0x1
15258:         #define _SSP1STAT_RW1_LENGTH                                0x1
15259:         #define _SSP1STAT_RW1_MASK                                  0x4
15260:         #define _SSP1STAT_SMP1_POSN                                 0x7
15261:         #define _SSP1STAT_SMP1_POSITION                             0x7
15262:         #define _SSP1STAT_SMP1_SIZE                                 0x1
15263:         #define _SSP1STAT_SMP1_LENGTH                               0x1
15264:         #define _SSP1STAT_SMP1_MASK                                 0x80
15265:         #define _SSP1STAT_START_POSN                                0x3
15266:         #define _SSP1STAT_START_POSITION                            0x3
15267:         #define _SSP1STAT_START_SIZE                                0x1
15268:         #define _SSP1STAT_START_LENGTH                              0x1
15269:         #define _SSP1STAT_START_MASK                                0x8
15270:         #define _SSP1STAT_START1_POSN                               0x3
15271:         #define _SSP1STAT_START1_POSITION                           0x3
15272:         #define _SSP1STAT_START1_SIZE                               0x1
15273:         #define _SSP1STAT_START1_LENGTH                             0x1
15274:         #define _SSP1STAT_START1_MASK                               0x8
15275:         #define _SSP1STAT_STOP_POSN                                 0x4
15276:         #define _SSP1STAT_STOP_POSITION                             0x4
15277:         #define _SSP1STAT_STOP_SIZE                                 0x1
15278:         #define _SSP1STAT_STOP_LENGTH                               0x1
15279:         #define _SSP1STAT_STOP_MASK                                 0x10
15280:         #define _SSP1STAT_STOP1_POSN                                0x4
15281:         #define _SSP1STAT_STOP1_POSITION                            0x4
15282:         #define _SSP1STAT_STOP1_SIZE                                0x1
15283:         #define _SSP1STAT_STOP1_LENGTH                              0x1
15284:         #define _SSP1STAT_STOP1_MASK                                0x10
15285:         #define _SSP1STAT_UA1_POSN                                  0x1
15286:         #define _SSP1STAT_UA1_POSITION                              0x1
15287:         #define _SSP1STAT_UA1_SIZE                                  0x1
15288:         #define _SSP1STAT_UA1_LENGTH                                0x1
15289:         #define _SSP1STAT_UA1_MASK                                  0x2
15290:         #define _SSP1STAT_NOT_W_POSN                                0x2
15291:         #define _SSP1STAT_NOT_W_POSITION                            0x2
15292:         #define _SSP1STAT_NOT_W_SIZE                                0x1
15293:         #define _SSP1STAT_NOT_W_LENGTH                              0x1
15294:         #define _SSP1STAT_NOT_W_MASK                                0x4
15295:         #define _SSP1STAT_NOT_A_POSN                                0x5
15296:         #define _SSP1STAT_NOT_A_POSITION                            0x5
15297:         #define _SSP1STAT_NOT_A_SIZE                                0x1
15298:         #define _SSP1STAT_NOT_A_LENGTH                              0x1
15299:         #define _SSP1STAT_NOT_A_MASK                                0x20
15300:         // alias bitfield definitions
15301:         typedef union {
15302:             struct {
15303:                 unsigned                        :2;
15304:                 unsigned R_NOT_W                :1;
15305:             };
15306:             struct {
15307:                 unsigned                        :5;
15308:                 unsigned D_NOT_A                :1;
15309:             };
15310:             struct {
15311:                 unsigned BF                     :1;
15312:                 unsigned UA                     :1;
15313:                 unsigned R_nW                   :1;
15314:                 unsigned S                      :1;
15315:                 unsigned P                      :1;
15316:                 unsigned D_nA                   :1;
15317:                 unsigned CKE                    :1;
15318:                 unsigned SMP                    :1;
15319:             };
15320:             struct {
15321:                 unsigned                        :2;
15322:                 unsigned R                      :1;
15323:                 unsigned                        :2;
15324:                 unsigned D                      :1;
15325:             };
15326:             struct {
15327:                 unsigned                        :2;
15328:                 unsigned W                      :1;
15329:                 unsigned                        :2;
15330:                 unsigned A                      :1;
15331:             };
15332:             struct {
15333:                 unsigned                        :2;
15334:                 unsigned nW                     :1;
15335:                 unsigned                        :2;
15336:                 unsigned nA                     :1;
15337:             };
15338:             struct {
15339:                 unsigned                        :2;
15340:                 unsigned R_W                    :1;
15341:                 unsigned                        :2;
15342:                 unsigned D_A                    :1;
15343:             };
15344:             struct {
15345:                 unsigned                        :2;
15346:                 unsigned NOT_WRITE              :1;
15347:             };
15348:             struct {
15349:                 unsigned                        :5;
15350:                 unsigned NOT_ADDRESS            :1;
15351:             };
15352:             struct {
15353:                 unsigned                        :2;
15354:                 unsigned nWRITE                 :1;
15355:                 unsigned                        :2;
15356:                 unsigned nADDRESS               :1;
15357:             };
15358:             struct {
15359:                 unsigned BF1                    :1;
15360:             };
15361:             struct {
15362:                 unsigned                        :6;
15363:                 unsigned CKE1                   :1;
15364:             };
15365:             struct {
15366:                 unsigned                        :5;
15367:                 unsigned DA                     :1;
15368:             };
15369:             struct {
15370:                 unsigned                        :5;
15371:                 unsigned DA1                    :1;
15372:             };
15373:             struct {
15374:                 unsigned                        :5;
15375:                 unsigned DATA_ADDRESS           :1;
15376:             };
15377:             struct {
15378:                 unsigned                        :5;
15379:                 unsigned I2C_DAT                :1;
15380:             };
15381:             struct {
15382:                 unsigned                        :2;
15383:                 unsigned I2C_READ               :1;
15384:             };
15385:             struct {
15386:                 unsigned                        :3;
15387:                 unsigned I2C_START              :1;
15388:             };
15389:             struct {
15390:                 unsigned                        :4;
15391:                 unsigned I2C_STOP               :1;
15392:             };
15393:             struct {
15394:                 unsigned                        :2;
15395:                 unsigned READ_WRITE             :1;
15396:             };
15397:             struct {
15398:                 unsigned                        :2;
15399:                 unsigned RW                     :1;
15400:             };
15401:             struct {
15402:                 unsigned                        :2;
15403:                 unsigned RW1                    :1;
15404:             };
15405:             struct {
15406:                 unsigned                        :7;
15407:                 unsigned SMP1                   :1;
15408:             };
15409:             struct {
15410:                 unsigned                        :3;
15411:                 unsigned START                  :1;
15412:             };
15413:             struct {
15414:                 unsigned                        :3;
15415:                 unsigned START1                 :1;
15416:             };
15417:             struct {
15418:                 unsigned                        :4;
15419:                 unsigned STOP                   :1;
15420:             };
15421:             struct {
15422:                 unsigned                        :4;
15423:                 unsigned STOP1                  :1;
15424:             };
15425:             struct {
15426:                 unsigned                        :1;
15427:                 unsigned UA1                    :1;
15428:             };
15429:             struct {
15430:                 unsigned                        :2;
15431:                 unsigned NOT_W                  :1;
15432:             };
15433:             struct {
15434:                 unsigned                        :5;
15435:                 unsigned NOT_A                  :1;
15436:             };
15437:         } SSPSTATbits_t;
15438:         extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;
15439:         // bitfield macros
15440:         #define _SSPSTAT_R_NOT_W_POSN                               0x2
15441:         #define _SSPSTAT_R_NOT_W_POSITION                           0x2
15442:         #define _SSPSTAT_R_NOT_W_SIZE                               0x1
15443:         #define _SSPSTAT_R_NOT_W_LENGTH                             0x1
15444:         #define _SSPSTAT_R_NOT_W_MASK                               0x4
15445:         #define _SSPSTAT_D_NOT_A_POSN                               0x5
15446:         #define _SSPSTAT_D_NOT_A_POSITION                           0x5
15447:         #define _SSPSTAT_D_NOT_A_SIZE                               0x1
15448:         #define _SSPSTAT_D_NOT_A_LENGTH                             0x1
15449:         #define _SSPSTAT_D_NOT_A_MASK                               0x20
15450:         #define _SSPSTAT_BF_POSN                                    0x0
15451:         #define _SSPSTAT_BF_POSITION                                0x0
15452:         #define _SSPSTAT_BF_SIZE                                    0x1
15453:         #define _SSPSTAT_BF_LENGTH                                  0x1
15454:         #define _SSPSTAT_BF_MASK                                    0x1
15455:         #define _SSPSTAT_UA_POSN                                    0x1
15456:         #define _SSPSTAT_UA_POSITION                                0x1
15457:         #define _SSPSTAT_UA_SIZE                                    0x1
15458:         #define _SSPSTAT_UA_LENGTH                                  0x1
15459:         #define _SSPSTAT_UA_MASK                                    0x2
15460:         #define _SSPSTAT_R_nW_POSN                                  0x2
15461:         #define _SSPSTAT_R_nW_POSITION                              0x2
15462:         #define _SSPSTAT_R_nW_SIZE                                  0x1
15463:         #define _SSPSTAT_R_nW_LENGTH                                0x1
15464:         #define _SSPSTAT_R_nW_MASK                                  0x4
15465:         #define _SSPSTAT_S_POSN                                     0x3
15466:         #define _SSPSTAT_S_POSITION                                 0x3
15467:         #define _SSPSTAT_S_SIZE                                     0x1
15468:         #define _SSPSTAT_S_LENGTH                                   0x1
15469:         #define _SSPSTAT_S_MASK                                     0x8
15470:         #define _SSPSTAT_P_POSN                                     0x4
15471:         #define _SSPSTAT_P_POSITION                                 0x4
15472:         #define _SSPSTAT_P_SIZE                                     0x1
15473:         #define _SSPSTAT_P_LENGTH                                   0x1
15474:         #define _SSPSTAT_P_MASK                                     0x10
15475:         #define _SSPSTAT_D_nA_POSN                                  0x5
15476:         #define _SSPSTAT_D_nA_POSITION                              0x5
15477:         #define _SSPSTAT_D_nA_SIZE                                  0x1
15478:         #define _SSPSTAT_D_nA_LENGTH                                0x1
15479:         #define _SSPSTAT_D_nA_MASK                                  0x20
15480:         #define _SSPSTAT_CKE_POSN                                   0x6
15481:         #define _SSPSTAT_CKE_POSITION                               0x6
15482:         #define _SSPSTAT_CKE_SIZE                                   0x1
15483:         #define _SSPSTAT_CKE_LENGTH                                 0x1
15484:         #define _SSPSTAT_CKE_MASK                                   0x40
15485:         #define _SSPSTAT_SMP_POSN                                   0x7
15486:         #define _SSPSTAT_SMP_POSITION                               0x7
15487:         #define _SSPSTAT_SMP_SIZE                                   0x1
15488:         #define _SSPSTAT_SMP_LENGTH                                 0x1
15489:         #define _SSPSTAT_SMP_MASK                                   0x80
15490:         #define _SSPSTAT_R_POSN                                     0x2
15491:         #define _SSPSTAT_R_POSITION                                 0x2
15492:         #define _SSPSTAT_R_SIZE                                     0x1
15493:         #define _SSPSTAT_R_LENGTH                                   0x1
15494:         #define _SSPSTAT_R_MASK                                     0x4
15495:         #define _SSPSTAT_D_POSN                                     0x5
15496:         #define _SSPSTAT_D_POSITION                                 0x5
15497:         #define _SSPSTAT_D_SIZE                                     0x1
15498:         #define _SSPSTAT_D_LENGTH                                   0x1
15499:         #define _SSPSTAT_D_MASK                                     0x20
15500:         #define _SSPSTAT_W_POSN                                     0x2
15501:         #define _SSPSTAT_W_POSITION                                 0x2
15502:         #define _SSPSTAT_W_SIZE                                     0x1
15503:         #define _SSPSTAT_W_LENGTH                                   0x1
15504:         #define _SSPSTAT_W_MASK                                     0x4
15505:         #define _SSPSTAT_A_POSN                                     0x5
15506:         #define _SSPSTAT_A_POSITION                                 0x5
15507:         #define _SSPSTAT_A_SIZE                                     0x1
15508:         #define _SSPSTAT_A_LENGTH                                   0x1
15509:         #define _SSPSTAT_A_MASK                                     0x20
15510:         #define _SSPSTAT_nW_POSN                                    0x2
15511:         #define _SSPSTAT_nW_POSITION                                0x2
15512:         #define _SSPSTAT_nW_SIZE                                    0x1
15513:         #define _SSPSTAT_nW_LENGTH                                  0x1
15514:         #define _SSPSTAT_nW_MASK                                    0x4
15515:         #define _SSPSTAT_nA_POSN                                    0x5
15516:         #define _SSPSTAT_nA_POSITION                                0x5
15517:         #define _SSPSTAT_nA_SIZE                                    0x1
15518:         #define _SSPSTAT_nA_LENGTH                                  0x1
15519:         #define _SSPSTAT_nA_MASK                                    0x20
15520:         #define _SSPSTAT_R_W_POSN                                   0x2
15521:         #define _SSPSTAT_R_W_POSITION                               0x2
15522:         #define _SSPSTAT_R_W_SIZE                                   0x1
15523:         #define _SSPSTAT_R_W_LENGTH                                 0x1
15524:         #define _SSPSTAT_R_W_MASK                                   0x4
15525:         #define _SSPSTAT_D_A_POSN                                   0x5
15526:         #define _SSPSTAT_D_A_POSITION                               0x5
15527:         #define _SSPSTAT_D_A_SIZE                                   0x1
15528:         #define _SSPSTAT_D_A_LENGTH                                 0x1
15529:         #define _SSPSTAT_D_A_MASK                                   0x20
15530:         #define _SSPSTAT_NOT_WRITE_POSN                             0x2
15531:         #define _SSPSTAT_NOT_WRITE_POSITION                         0x2
15532:         #define _SSPSTAT_NOT_WRITE_SIZE                             0x1
15533:         #define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
15534:         #define _SSPSTAT_NOT_WRITE_MASK                             0x4
15535:         #define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
15536:         #define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
15537:         #define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
15538:         #define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
15539:         #define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
15540:         #define _SSPSTAT_nWRITE_POSN                                0x2
15541:         #define _SSPSTAT_nWRITE_POSITION                            0x2
15542:         #define _SSPSTAT_nWRITE_SIZE                                0x1
15543:         #define _SSPSTAT_nWRITE_LENGTH                              0x1
15544:         #define _SSPSTAT_nWRITE_MASK                                0x4
15545:         #define _SSPSTAT_nADDRESS_POSN                              0x5
15546:         #define _SSPSTAT_nADDRESS_POSITION                          0x5
15547:         #define _SSPSTAT_nADDRESS_SIZE                              0x1
15548:         #define _SSPSTAT_nADDRESS_LENGTH                            0x1
15549:         #define _SSPSTAT_nADDRESS_MASK                              0x20
15550:         #define _SSPSTAT_BF1_POSN                                   0x0
15551:         #define _SSPSTAT_BF1_POSITION                               0x0
15552:         #define _SSPSTAT_BF1_SIZE                                   0x1
15553:         #define _SSPSTAT_BF1_LENGTH                                 0x1
15554:         #define _SSPSTAT_BF1_MASK                                   0x1
15555:         #define _SSPSTAT_CKE1_POSN                                  0x6
15556:         #define _SSPSTAT_CKE1_POSITION                              0x6
15557:         #define _SSPSTAT_CKE1_SIZE                                  0x1
15558:         #define _SSPSTAT_CKE1_LENGTH                                0x1
15559:         #define _SSPSTAT_CKE1_MASK                                  0x40
15560:         #define _SSPSTAT_DA_POSN                                    0x5
15561:         #define _SSPSTAT_DA_POSITION                                0x5
15562:         #define _SSPSTAT_DA_SIZE                                    0x1
15563:         #define _SSPSTAT_DA_LENGTH                                  0x1
15564:         #define _SSPSTAT_DA_MASK                                    0x20
15565:         #define _SSPSTAT_DA1_POSN                                   0x5
15566:         #define _SSPSTAT_DA1_POSITION                               0x5
15567:         #define _SSPSTAT_DA1_SIZE                                   0x1
15568:         #define _SSPSTAT_DA1_LENGTH                                 0x1
15569:         #define _SSPSTAT_DA1_MASK                                   0x20
15570:         #define _SSPSTAT_DATA_ADDRESS_POSN                          0x5
15571:         #define _SSPSTAT_DATA_ADDRESS_POSITION                      0x5
15572:         #define _SSPSTAT_DATA_ADDRESS_SIZE                          0x1
15573:         #define _SSPSTAT_DATA_ADDRESS_LENGTH                        0x1
15574:         #define _SSPSTAT_DATA_ADDRESS_MASK                          0x20
15575:         #define _SSPSTAT_I2C_DAT_POSN                               0x5
15576:         #define _SSPSTAT_I2C_DAT_POSITION                           0x5
15577:         #define _SSPSTAT_I2C_DAT_SIZE                               0x1
15578:         #define _SSPSTAT_I2C_DAT_LENGTH                             0x1
15579:         #define _SSPSTAT_I2C_DAT_MASK                               0x20
15580:         #define _SSPSTAT_I2C_READ_POSN                              0x2
15581:         #define _SSPSTAT_I2C_READ_POSITION                          0x2
15582:         #define _SSPSTAT_I2C_READ_SIZE                              0x1
15583:         #define _SSPSTAT_I2C_READ_LENGTH                            0x1
15584:         #define _SSPSTAT_I2C_READ_MASK                              0x4
15585:         #define _SSPSTAT_I2C_START_POSN                             0x3
15586:         #define _SSPSTAT_I2C_START_POSITION                         0x3
15587:         #define _SSPSTAT_I2C_START_SIZE                             0x1
15588:         #define _SSPSTAT_I2C_START_LENGTH                           0x1
15589:         #define _SSPSTAT_I2C_START_MASK                             0x8
15590:         #define _SSPSTAT_I2C_STOP_POSN                              0x4
15591:         #define _SSPSTAT_I2C_STOP_POSITION                          0x4
15592:         #define _SSPSTAT_I2C_STOP_SIZE                              0x1
15593:         #define _SSPSTAT_I2C_STOP_LENGTH                            0x1
15594:         #define _SSPSTAT_I2C_STOP_MASK                              0x10
15595:         #define _SSPSTAT_READ_WRITE_POSN                            0x2
15596:         #define _SSPSTAT_READ_WRITE_POSITION                        0x2
15597:         #define _SSPSTAT_READ_WRITE_SIZE                            0x1
15598:         #define _SSPSTAT_READ_WRITE_LENGTH                          0x1
15599:         #define _SSPSTAT_READ_WRITE_MASK                            0x4
15600:         #define _SSPSTAT_RW_POSN                                    0x2
15601:         #define _SSPSTAT_RW_POSITION                                0x2
15602:         #define _SSPSTAT_RW_SIZE                                    0x1
15603:         #define _SSPSTAT_RW_LENGTH                                  0x1
15604:         #define _SSPSTAT_RW_MASK                                    0x4
15605:         #define _SSPSTAT_RW1_POSN                                   0x2
15606:         #define _SSPSTAT_RW1_POSITION                               0x2
15607:         #define _SSPSTAT_RW1_SIZE                                   0x1
15608:         #define _SSPSTAT_RW1_LENGTH                                 0x1
15609:         #define _SSPSTAT_RW1_MASK                                   0x4
15610:         #define _SSPSTAT_SMP1_POSN                                  0x7
15611:         #define _SSPSTAT_SMP1_POSITION                              0x7
15612:         #define _SSPSTAT_SMP1_SIZE                                  0x1
15613:         #define _SSPSTAT_SMP1_LENGTH                                0x1
15614:         #define _SSPSTAT_SMP1_MASK                                  0x80
15615:         #define _SSPSTAT_START_POSN                                 0x3
15616:         #define _SSPSTAT_START_POSITION                             0x3
15617:         #define _SSPSTAT_START_SIZE                                 0x1
15618:         #define _SSPSTAT_START_LENGTH                               0x1
15619:         #define _SSPSTAT_START_MASK                                 0x8
15620:         #define _SSPSTAT_START1_POSN                                0x3
15621:         #define _SSPSTAT_START1_POSITION                            0x3
15622:         #define _SSPSTAT_START1_SIZE                                0x1
15623:         #define _SSPSTAT_START1_LENGTH                              0x1
15624:         #define _SSPSTAT_START1_MASK                                0x8
15625:         #define _SSPSTAT_STOP_POSN                                  0x4
15626:         #define _SSPSTAT_STOP_POSITION                              0x4
15627:         #define _SSPSTAT_STOP_SIZE                                  0x1
15628:         #define _SSPSTAT_STOP_LENGTH                                0x1
15629:         #define _SSPSTAT_STOP_MASK                                  0x10
15630:         #define _SSPSTAT_STOP1_POSN                                 0x4
15631:         #define _SSPSTAT_STOP1_POSITION                             0x4
15632:         #define _SSPSTAT_STOP1_SIZE                                 0x1
15633:         #define _SSPSTAT_STOP1_LENGTH                               0x1
15634:         #define _SSPSTAT_STOP1_MASK                                 0x10
15635:         #define _SSPSTAT_UA1_POSN                                   0x1
15636:         #define _SSPSTAT_UA1_POSITION                               0x1
15637:         #define _SSPSTAT_UA1_SIZE                                   0x1
15638:         #define _SSPSTAT_UA1_LENGTH                                 0x1
15639:         #define _SSPSTAT_UA1_MASK                                   0x2
15640:         #define _SSPSTAT_NOT_W_POSN                                 0x2
15641:         #define _SSPSTAT_NOT_W_POSITION                             0x2
15642:         #define _SSPSTAT_NOT_W_SIZE                                 0x1
15643:         #define _SSPSTAT_NOT_W_LENGTH                               0x1
15644:         #define _SSPSTAT_NOT_W_MASK                                 0x4
15645:         #define _SSPSTAT_NOT_A_POSN                                 0x5
15646:         #define _SSPSTAT_NOT_A_POSITION                             0x5
15647:         #define _SSPSTAT_NOT_A_SIZE                                 0x1
15648:         #define _SSPSTAT_NOT_A_LENGTH                               0x1
15649:         #define _SSPSTAT_NOT_A_MASK                                 0x20
15650:         
15651:         // Register: SSP1ADD
15652:         extern volatile unsigned char           SSP1ADD             @ 0xFC8;
15653:         #ifndef _LIB_BUILD
15654:         asm("SSP1ADD equ 0FC8h");
15655:         #endif
15656:         // aliases
15657:         extern volatile unsigned char           SSPADD              @ 0xFC8;
15658:         #ifndef _LIB_BUILD
15659:         asm("SSPADD equ 0FC8h");
15660:         #endif
15661:         // bitfield definitions
15662:         typedef union {
15663:             struct {
15664:                 unsigned SSPADD                 :8;
15665:             };
15666:             struct {
15667:                 unsigned SSP1ADD                :8;
15668:             };
15669:             struct {
15670:                 unsigned MSK0                   :1;
15671:             };
15672:             struct {
15673:                 unsigned MSK01                  :1;
15674:             };
15675:             struct {
15676:                 unsigned                        :1;
15677:                 unsigned MSK1                   :1;
15678:             };
15679:             struct {
15680:                 unsigned                        :1;
15681:                 unsigned MSK11                  :1;
15682:             };
15683:             struct {
15684:                 unsigned                        :2;
15685:                 unsigned MSK2                   :1;
15686:             };
15687:             struct {
15688:                 unsigned                        :2;
15689:                 unsigned MSK21                  :1;
15690:             };
15691:             struct {
15692:                 unsigned                        :3;
15693:                 unsigned MSK3                   :1;
15694:             };
15695:             struct {
15696:                 unsigned                        :3;
15697:                 unsigned MSK31                  :1;
15698:             };
15699:             struct {
15700:                 unsigned                        :4;
15701:                 unsigned MSK4                   :1;
15702:             };
15703:             struct {
15704:                 unsigned                        :4;
15705:                 unsigned MSK41                  :1;
15706:             };
15707:             struct {
15708:                 unsigned                        :5;
15709:                 unsigned MSK5                   :1;
15710:             };
15711:             struct {
15712:                 unsigned                        :5;
15713:                 unsigned MSK51                  :1;
15714:             };
15715:             struct {
15716:                 unsigned                        :6;
15717:                 unsigned MSK6                   :1;
15718:             };
15719:             struct {
15720:                 unsigned                        :6;
15721:                 unsigned MSK61                  :1;
15722:             };
15723:             struct {
15724:                 unsigned                        :7;
15725:                 unsigned MSK7                   :1;
15726:             };
15727:             struct {
15728:                 unsigned                        :7;
15729:                 unsigned MSK71                  :1;
15730:             };
15731:         } SSP1ADDbits_t;
15732:         extern volatile SSP1ADDbits_t SSP1ADDbits @ 0xFC8;
15733:         // bitfield macros
15734:         #define _SSP1ADD_SSPADD_POSN                                0x0
15735:         #define _SSP1ADD_SSPADD_POSITION                            0x0
15736:         #define _SSP1ADD_SSPADD_SIZE                                0x8
15737:         #define _SSP1ADD_SSPADD_LENGTH                              0x8
15738:         #define _SSP1ADD_SSPADD_MASK                                0xFF
15739:         #define _SSP1ADD_SSP1ADD_POSN                               0x0
15740:         #define _SSP1ADD_SSP1ADD_POSITION                           0x0
15741:         #define _SSP1ADD_SSP1ADD_SIZE                               0x8
15742:         #define _SSP1ADD_SSP1ADD_LENGTH                             0x8
15743:         #define _SSP1ADD_SSP1ADD_MASK                               0xFF
15744:         #define _SSP1ADD_MSK0_POSN                                  0x0
15745:         #define _SSP1ADD_MSK0_POSITION                              0x0
15746:         #define _SSP1ADD_MSK0_SIZE                                  0x1
15747:         #define _SSP1ADD_MSK0_LENGTH                                0x1
15748:         #define _SSP1ADD_MSK0_MASK                                  0x1
15749:         #define _SSP1ADD_MSK01_POSN                                 0x0
15750:         #define _SSP1ADD_MSK01_POSITION                             0x0
15751:         #define _SSP1ADD_MSK01_SIZE                                 0x1
15752:         #define _SSP1ADD_MSK01_LENGTH                               0x1
15753:         #define _SSP1ADD_MSK01_MASK                                 0x1
15754:         #define _SSP1ADD_MSK1_POSN                                  0x1
15755:         #define _SSP1ADD_MSK1_POSITION                              0x1
15756:         #define _SSP1ADD_MSK1_SIZE                                  0x1
15757:         #define _SSP1ADD_MSK1_LENGTH                                0x1
15758:         #define _SSP1ADD_MSK1_MASK                                  0x2
15759:         #define _SSP1ADD_MSK11_POSN                                 0x1
15760:         #define _SSP1ADD_MSK11_POSITION                             0x1
15761:         #define _SSP1ADD_MSK11_SIZE                                 0x1
15762:         #define _SSP1ADD_MSK11_LENGTH                               0x1
15763:         #define _SSP1ADD_MSK11_MASK                                 0x2
15764:         #define _SSP1ADD_MSK2_POSN                                  0x2
15765:         #define _SSP1ADD_MSK2_POSITION                              0x2
15766:         #define _SSP1ADD_MSK2_SIZE                                  0x1
15767:         #define _SSP1ADD_MSK2_LENGTH                                0x1
15768:         #define _SSP1ADD_MSK2_MASK                                  0x4
15769:         #define _SSP1ADD_MSK21_POSN                                 0x2
15770:         #define _SSP1ADD_MSK21_POSITION                             0x2
15771:         #define _SSP1ADD_MSK21_SIZE                                 0x1
15772:         #define _SSP1ADD_MSK21_LENGTH                               0x1
15773:         #define _SSP1ADD_MSK21_MASK                                 0x4
15774:         #define _SSP1ADD_MSK3_POSN                                  0x3
15775:         #define _SSP1ADD_MSK3_POSITION                              0x3
15776:         #define _SSP1ADD_MSK3_SIZE                                  0x1
15777:         #define _SSP1ADD_MSK3_LENGTH                                0x1
15778:         #define _SSP1ADD_MSK3_MASK                                  0x8
15779:         #define _SSP1ADD_MSK31_POSN                                 0x3
15780:         #define _SSP1ADD_MSK31_POSITION                             0x3
15781:         #define _SSP1ADD_MSK31_SIZE                                 0x1
15782:         #define _SSP1ADD_MSK31_LENGTH                               0x1
15783:         #define _SSP1ADD_MSK31_MASK                                 0x8
15784:         #define _SSP1ADD_MSK4_POSN                                  0x4
15785:         #define _SSP1ADD_MSK4_POSITION                              0x4
15786:         #define _SSP1ADD_MSK4_SIZE                                  0x1
15787:         #define _SSP1ADD_MSK4_LENGTH                                0x1
15788:         #define _SSP1ADD_MSK4_MASK                                  0x10
15789:         #define _SSP1ADD_MSK41_POSN                                 0x4
15790:         #define _SSP1ADD_MSK41_POSITION                             0x4
15791:         #define _SSP1ADD_MSK41_SIZE                                 0x1
15792:         #define _SSP1ADD_MSK41_LENGTH                               0x1
15793:         #define _SSP1ADD_MSK41_MASK                                 0x10
15794:         #define _SSP1ADD_MSK5_POSN                                  0x5
15795:         #define _SSP1ADD_MSK5_POSITION                              0x5
15796:         #define _SSP1ADD_MSK5_SIZE                                  0x1
15797:         #define _SSP1ADD_MSK5_LENGTH                                0x1
15798:         #define _SSP1ADD_MSK5_MASK                                  0x20
15799:         #define _SSP1ADD_MSK51_POSN                                 0x5
15800:         #define _SSP1ADD_MSK51_POSITION                             0x5
15801:         #define _SSP1ADD_MSK51_SIZE                                 0x1
15802:         #define _SSP1ADD_MSK51_LENGTH                               0x1
15803:         #define _SSP1ADD_MSK51_MASK                                 0x20
15804:         #define _SSP1ADD_MSK6_POSN                                  0x6
15805:         #define _SSP1ADD_MSK6_POSITION                              0x6
15806:         #define _SSP1ADD_MSK6_SIZE                                  0x1
15807:         #define _SSP1ADD_MSK6_LENGTH                                0x1
15808:         #define _SSP1ADD_MSK6_MASK                                  0x40
15809:         #define _SSP1ADD_MSK61_POSN                                 0x6
15810:         #define _SSP1ADD_MSK61_POSITION                             0x6
15811:         #define _SSP1ADD_MSK61_SIZE                                 0x1
15812:         #define _SSP1ADD_MSK61_LENGTH                               0x1
15813:         #define _SSP1ADD_MSK61_MASK                                 0x40
15814:         #define _SSP1ADD_MSK7_POSN                                  0x7
15815:         #define _SSP1ADD_MSK7_POSITION                              0x7
15816:         #define _SSP1ADD_MSK7_SIZE                                  0x1
15817:         #define _SSP1ADD_MSK7_LENGTH                                0x1
15818:         #define _SSP1ADD_MSK7_MASK                                  0x80
15819:         #define _SSP1ADD_MSK71_POSN                                 0x7
15820:         #define _SSP1ADD_MSK71_POSITION                             0x7
15821:         #define _SSP1ADD_MSK71_SIZE                                 0x1
15822:         #define _SSP1ADD_MSK71_LENGTH                               0x1
15823:         #define _SSP1ADD_MSK71_MASK                                 0x80
15824:         // alias bitfield definitions
15825:         typedef union {
15826:             struct {
15827:                 unsigned SSPADD                 :8;
15828:             };
15829:             struct {
15830:                 unsigned SSP1ADD                :8;
15831:             };
15832:             struct {
15833:                 unsigned MSK0                   :1;
15834:             };
15835:             struct {
15836:                 unsigned MSK01                  :1;
15837:             };
15838:             struct {
15839:                 unsigned                        :1;
15840:                 unsigned MSK1                   :1;
15841:             };
15842:             struct {
15843:                 unsigned                        :1;
15844:                 unsigned MSK11                  :1;
15845:             };
15846:             struct {
15847:                 unsigned                        :2;
15848:                 unsigned MSK2                   :1;
15849:             };
15850:             struct {
15851:                 unsigned                        :2;
15852:                 unsigned MSK21                  :1;
15853:             };
15854:             struct {
15855:                 unsigned                        :3;
15856:                 unsigned MSK3                   :1;
15857:             };
15858:             struct {
15859:                 unsigned                        :3;
15860:                 unsigned MSK31                  :1;
15861:             };
15862:             struct {
15863:                 unsigned                        :4;
15864:                 unsigned MSK4                   :1;
15865:             };
15866:             struct {
15867:                 unsigned                        :4;
15868:                 unsigned MSK41                  :1;
15869:             };
15870:             struct {
15871:                 unsigned                        :5;
15872:                 unsigned MSK5                   :1;
15873:             };
15874:             struct {
15875:                 unsigned                        :5;
15876:                 unsigned MSK51                  :1;
15877:             };
15878:             struct {
15879:                 unsigned                        :6;
15880:                 unsigned MSK6                   :1;
15881:             };
15882:             struct {
15883:                 unsigned                        :6;
15884:                 unsigned MSK61                  :1;
15885:             };
15886:             struct {
15887:                 unsigned                        :7;
15888:                 unsigned MSK7                   :1;
15889:             };
15890:             struct {
15891:                 unsigned                        :7;
15892:                 unsigned MSK71                  :1;
15893:             };
15894:         } SSPADDbits_t;
15895:         extern volatile SSPADDbits_t SSPADDbits @ 0xFC8;
15896:         // bitfield macros
15897:         #define _SSPADD_SSPADD_POSN                                 0x0
15898:         #define _SSPADD_SSPADD_POSITION                             0x0
15899:         #define _SSPADD_SSPADD_SIZE                                 0x8
15900:         #define _SSPADD_SSPADD_LENGTH                               0x8
15901:         #define _SSPADD_SSPADD_MASK                                 0xFF
15902:         #define _SSPADD_SSP1ADD_POSN                                0x0
15903:         #define _SSPADD_SSP1ADD_POSITION                            0x0
15904:         #define _SSPADD_SSP1ADD_SIZE                                0x8
15905:         #define _SSPADD_SSP1ADD_LENGTH                              0x8
15906:         #define _SSPADD_SSP1ADD_MASK                                0xFF
15907:         #define _SSPADD_MSK0_POSN                                   0x0
15908:         #define _SSPADD_MSK0_POSITION                               0x0
15909:         #define _SSPADD_MSK0_SIZE                                   0x1
15910:         #define _SSPADD_MSK0_LENGTH                                 0x1
15911:         #define _SSPADD_MSK0_MASK                                   0x1
15912:         #define _SSPADD_MSK01_POSN                                  0x0
15913:         #define _SSPADD_MSK01_POSITION                              0x0
15914:         #define _SSPADD_MSK01_SIZE                                  0x1
15915:         #define _SSPADD_MSK01_LENGTH                                0x1
15916:         #define _SSPADD_MSK01_MASK                                  0x1
15917:         #define _SSPADD_MSK1_POSN                                   0x1
15918:         #define _SSPADD_MSK1_POSITION                               0x1
15919:         #define _SSPADD_MSK1_SIZE                                   0x1
15920:         #define _SSPADD_MSK1_LENGTH                                 0x1
15921:         #define _SSPADD_MSK1_MASK                                   0x2
15922:         #define _SSPADD_MSK11_POSN                                  0x1
15923:         #define _SSPADD_MSK11_POSITION                              0x1
15924:         #define _SSPADD_MSK11_SIZE                                  0x1
15925:         #define _SSPADD_MSK11_LENGTH                                0x1
15926:         #define _SSPADD_MSK11_MASK                                  0x2
15927:         #define _SSPADD_MSK2_POSN                                   0x2
15928:         #define _SSPADD_MSK2_POSITION                               0x2
15929:         #define _SSPADD_MSK2_SIZE                                   0x1
15930:         #define _SSPADD_MSK2_LENGTH                                 0x1
15931:         #define _SSPADD_MSK2_MASK                                   0x4
15932:         #define _SSPADD_MSK21_POSN                                  0x2
15933:         #define _SSPADD_MSK21_POSITION                              0x2
15934:         #define _SSPADD_MSK21_SIZE                                  0x1
15935:         #define _SSPADD_MSK21_LENGTH                                0x1
15936:         #define _SSPADD_MSK21_MASK                                  0x4
15937:         #define _SSPADD_MSK3_POSN                                   0x3
15938:         #define _SSPADD_MSK3_POSITION                               0x3
15939:         #define _SSPADD_MSK3_SIZE                                   0x1
15940:         #define _SSPADD_MSK3_LENGTH                                 0x1
15941:         #define _SSPADD_MSK3_MASK                                   0x8
15942:         #define _SSPADD_MSK31_POSN                                  0x3
15943:         #define _SSPADD_MSK31_POSITION                              0x3
15944:         #define _SSPADD_MSK31_SIZE                                  0x1
15945:         #define _SSPADD_MSK31_LENGTH                                0x1
15946:         #define _SSPADD_MSK31_MASK                                  0x8
15947:         #define _SSPADD_MSK4_POSN                                   0x4
15948:         #define _SSPADD_MSK4_POSITION                               0x4
15949:         #define _SSPADD_MSK4_SIZE                                   0x1
15950:         #define _SSPADD_MSK4_LENGTH                                 0x1
15951:         #define _SSPADD_MSK4_MASK                                   0x10
15952:         #define _SSPADD_MSK41_POSN                                  0x4
15953:         #define _SSPADD_MSK41_POSITION                              0x4
15954:         #define _SSPADD_MSK41_SIZE                                  0x1
15955:         #define _SSPADD_MSK41_LENGTH                                0x1
15956:         #define _SSPADD_MSK41_MASK                                  0x10
15957:         #define _SSPADD_MSK5_POSN                                   0x5
15958:         #define _SSPADD_MSK5_POSITION                               0x5
15959:         #define _SSPADD_MSK5_SIZE                                   0x1
15960:         #define _SSPADD_MSK5_LENGTH                                 0x1
15961:         #define _SSPADD_MSK5_MASK                                   0x20
15962:         #define _SSPADD_MSK51_POSN                                  0x5
15963:         #define _SSPADD_MSK51_POSITION                              0x5
15964:         #define _SSPADD_MSK51_SIZE                                  0x1
15965:         #define _SSPADD_MSK51_LENGTH                                0x1
15966:         #define _SSPADD_MSK51_MASK                                  0x20
15967:         #define _SSPADD_MSK6_POSN                                   0x6
15968:         #define _SSPADD_MSK6_POSITION                               0x6
15969:         #define _SSPADD_MSK6_SIZE                                   0x1
15970:         #define _SSPADD_MSK6_LENGTH                                 0x1
15971:         #define _SSPADD_MSK6_MASK                                   0x40
15972:         #define _SSPADD_MSK61_POSN                                  0x6
15973:         #define _SSPADD_MSK61_POSITION                              0x6
15974:         #define _SSPADD_MSK61_SIZE                                  0x1
15975:         #define _SSPADD_MSK61_LENGTH                                0x1
15976:         #define _SSPADD_MSK61_MASK                                  0x40
15977:         #define _SSPADD_MSK7_POSN                                   0x7
15978:         #define _SSPADD_MSK7_POSITION                               0x7
15979:         #define _SSPADD_MSK7_SIZE                                   0x1
15980:         #define _SSPADD_MSK7_LENGTH                                 0x1
15981:         #define _SSPADD_MSK7_MASK                                   0x80
15982:         #define _SSPADD_MSK71_POSN                                  0x7
15983:         #define _SSPADD_MSK71_POSITION                              0x7
15984:         #define _SSPADD_MSK71_SIZE                                  0x1
15985:         #define _SSPADD_MSK71_LENGTH                                0x1
15986:         #define _SSPADD_MSK71_MASK                                  0x80
15987:         
15988:         // Register: SSP1BUF
15989:         extern volatile unsigned char           SSP1BUF             @ 0xFC9;
15990:         #ifndef _LIB_BUILD
15991:         asm("SSP1BUF equ 0FC9h");
15992:         #endif
15993:         // aliases
15994:         extern volatile unsigned char           SSPBUF              @ 0xFC9;
15995:         #ifndef _LIB_BUILD
15996:         asm("SSPBUF equ 0FC9h");
15997:         #endif
15998:         // bitfield definitions
15999:         typedef union {
16000:             struct {
16001:                 unsigned SSPBUF                 :8;
16002:             };
16003:             struct {
16004:                 unsigned SSP1BUF                :8;
16005:             };
16006:         } SSP1BUFbits_t;
16007:         extern volatile SSP1BUFbits_t SSP1BUFbits @ 0xFC9;
16008:         // bitfield macros
16009:         #define _SSP1BUF_SSPBUF_POSN                                0x0
16010:         #define _SSP1BUF_SSPBUF_POSITION                            0x0
16011:         #define _SSP1BUF_SSPBUF_SIZE                                0x8
16012:         #define _SSP1BUF_SSPBUF_LENGTH                              0x8
16013:         #define _SSP1BUF_SSPBUF_MASK                                0xFF
16014:         #define _SSP1BUF_SSP1BUF_POSN                               0x0
16015:         #define _SSP1BUF_SSP1BUF_POSITION                           0x0
16016:         #define _SSP1BUF_SSP1BUF_SIZE                               0x8
16017:         #define _SSP1BUF_SSP1BUF_LENGTH                             0x8
16018:         #define _SSP1BUF_SSP1BUF_MASK                               0xFF
16019:         // alias bitfield definitions
16020:         typedef union {
16021:             struct {
16022:                 unsigned SSPBUF                 :8;
16023:             };
16024:             struct {
16025:                 unsigned SSP1BUF                :8;
16026:             };
16027:         } SSPBUFbits_t;
16028:         extern volatile SSPBUFbits_t SSPBUFbits @ 0xFC9;
16029:         // bitfield macros
16030:         #define _SSPBUF_SSPBUF_POSN                                 0x0
16031:         #define _SSPBUF_SSPBUF_POSITION                             0x0
16032:         #define _SSPBUF_SSPBUF_SIZE                                 0x8
16033:         #define _SSPBUF_SSPBUF_LENGTH                               0x8
16034:         #define _SSPBUF_SSPBUF_MASK                                 0xFF
16035:         #define _SSPBUF_SSP1BUF_POSN                                0x0
16036:         #define _SSPBUF_SSP1BUF_POSITION                            0x0
16037:         #define _SSPBUF_SSP1BUF_SIZE                                0x8
16038:         #define _SSPBUF_SSP1BUF_LENGTH                              0x8
16039:         #define _SSPBUF_SSP1BUF_MASK                                0xFF
16040:         
16041:         // Register: SSP1MSK
16042:         extern volatile unsigned char           SSP1MSK             @ 0xFCA;
16043:         #ifndef _LIB_BUILD
16044:         asm("SSP1MSK equ 0FCAh");
16045:         #endif
16046:         // aliases
16047:         extern volatile unsigned char           SSPMSK              @ 0xFCA;
16048:         #ifndef _LIB_BUILD
16049:         asm("SSPMSK equ 0FCAh");
16050:         #endif
16051:         // bitfield definitions
16052:         typedef union {
16053:             struct {
16054:                 unsigned MSK0                   :1;
16055:                 unsigned MSK1                   :1;
16056:                 unsigned MSK2                   :1;
16057:                 unsigned MSK3                   :1;
16058:                 unsigned MSK4                   :1;
16059:                 unsigned MSK5                   :1;
16060:                 unsigned MSK6                   :1;
16061:                 unsigned MSK7                   :1;
16062:             };
16063:         } SSP1MSKbits_t;
16064:         extern volatile SSP1MSKbits_t SSP1MSKbits @ 0xFCA;
16065:         // bitfield macros
16066:         #define _SSP1MSK_MSK0_POSN                                  0x0
16067:         #define _SSP1MSK_MSK0_POSITION                              0x0
16068:         #define _SSP1MSK_MSK0_SIZE                                  0x1
16069:         #define _SSP1MSK_MSK0_LENGTH                                0x1
16070:         #define _SSP1MSK_MSK0_MASK                                  0x1
16071:         #define _SSP1MSK_MSK1_POSN                                  0x1
16072:         #define _SSP1MSK_MSK1_POSITION                              0x1
16073:         #define _SSP1MSK_MSK1_SIZE                                  0x1
16074:         #define _SSP1MSK_MSK1_LENGTH                                0x1
16075:         #define _SSP1MSK_MSK1_MASK                                  0x2
16076:         #define _SSP1MSK_MSK2_POSN                                  0x2
16077:         #define _SSP1MSK_MSK2_POSITION                              0x2
16078:         #define _SSP1MSK_MSK2_SIZE                                  0x1
16079:         #define _SSP1MSK_MSK2_LENGTH                                0x1
16080:         #define _SSP1MSK_MSK2_MASK                                  0x4
16081:         #define _SSP1MSK_MSK3_POSN                                  0x3
16082:         #define _SSP1MSK_MSK3_POSITION                              0x3
16083:         #define _SSP1MSK_MSK3_SIZE                                  0x1
16084:         #define _SSP1MSK_MSK3_LENGTH                                0x1
16085:         #define _SSP1MSK_MSK3_MASK                                  0x8
16086:         #define _SSP1MSK_MSK4_POSN                                  0x4
16087:         #define _SSP1MSK_MSK4_POSITION                              0x4
16088:         #define _SSP1MSK_MSK4_SIZE                                  0x1
16089:         #define _SSP1MSK_MSK4_LENGTH                                0x1
16090:         #define _SSP1MSK_MSK4_MASK                                  0x10
16091:         #define _SSP1MSK_MSK5_POSN                                  0x5
16092:         #define _SSP1MSK_MSK5_POSITION                              0x5
16093:         #define _SSP1MSK_MSK5_SIZE                                  0x1
16094:         #define _SSP1MSK_MSK5_LENGTH                                0x1
16095:         #define _SSP1MSK_MSK5_MASK                                  0x20
16096:         #define _SSP1MSK_MSK6_POSN                                  0x6
16097:         #define _SSP1MSK_MSK6_POSITION                              0x6
16098:         #define _SSP1MSK_MSK6_SIZE                                  0x1
16099:         #define _SSP1MSK_MSK6_LENGTH                                0x1
16100:         #define _SSP1MSK_MSK6_MASK                                  0x40
16101:         #define _SSP1MSK_MSK7_POSN                                  0x7
16102:         #define _SSP1MSK_MSK7_POSITION                              0x7
16103:         #define _SSP1MSK_MSK7_SIZE                                  0x1
16104:         #define _SSP1MSK_MSK7_LENGTH                                0x1
16105:         #define _SSP1MSK_MSK7_MASK                                  0x80
16106:         // alias bitfield definitions
16107:         typedef union {
16108:             struct {
16109:                 unsigned MSK0                   :1;
16110:                 unsigned MSK1                   :1;
16111:                 unsigned MSK2                   :1;
16112:                 unsigned MSK3                   :1;
16113:                 unsigned MSK4                   :1;
16114:                 unsigned MSK5                   :1;
16115:                 unsigned MSK6                   :1;
16116:                 unsigned MSK7                   :1;
16117:             };
16118:         } SSPMSKbits_t;
16119:         extern volatile SSPMSKbits_t SSPMSKbits @ 0xFCA;
16120:         // bitfield macros
16121:         #define _SSPMSK_MSK0_POSN                                   0x0
16122:         #define _SSPMSK_MSK0_POSITION                               0x0
16123:         #define _SSPMSK_MSK0_SIZE                                   0x1
16124:         #define _SSPMSK_MSK0_LENGTH                                 0x1
16125:         #define _SSPMSK_MSK0_MASK                                   0x1
16126:         #define _SSPMSK_MSK1_POSN                                   0x1
16127:         #define _SSPMSK_MSK1_POSITION                               0x1
16128:         #define _SSPMSK_MSK1_SIZE                                   0x1
16129:         #define _SSPMSK_MSK1_LENGTH                                 0x1
16130:         #define _SSPMSK_MSK1_MASK                                   0x2
16131:         #define _SSPMSK_MSK2_POSN                                   0x2
16132:         #define _SSPMSK_MSK2_POSITION                               0x2
16133:         #define _SSPMSK_MSK2_SIZE                                   0x1
16134:         #define _SSPMSK_MSK2_LENGTH                                 0x1
16135:         #define _SSPMSK_MSK2_MASK                                   0x4
16136:         #define _SSPMSK_MSK3_POSN                                   0x3
16137:         #define _SSPMSK_MSK3_POSITION                               0x3
16138:         #define _SSPMSK_MSK3_SIZE                                   0x1
16139:         #define _SSPMSK_MSK3_LENGTH                                 0x1
16140:         #define _SSPMSK_MSK3_MASK                                   0x8
16141:         #define _SSPMSK_MSK4_POSN                                   0x4
16142:         #define _SSPMSK_MSK4_POSITION                               0x4
16143:         #define _SSPMSK_MSK4_SIZE                                   0x1
16144:         #define _SSPMSK_MSK4_LENGTH                                 0x1
16145:         #define _SSPMSK_MSK4_MASK                                   0x10
16146:         #define _SSPMSK_MSK5_POSN                                   0x5
16147:         #define _SSPMSK_MSK5_POSITION                               0x5
16148:         #define _SSPMSK_MSK5_SIZE                                   0x1
16149:         #define _SSPMSK_MSK5_LENGTH                                 0x1
16150:         #define _SSPMSK_MSK5_MASK                                   0x20
16151:         #define _SSPMSK_MSK6_POSN                                   0x6
16152:         #define _SSPMSK_MSK6_POSITION                               0x6
16153:         #define _SSPMSK_MSK6_SIZE                                   0x1
16154:         #define _SSPMSK_MSK6_LENGTH                                 0x1
16155:         #define _SSPMSK_MSK6_MASK                                   0x40
16156:         #define _SSPMSK_MSK7_POSN                                   0x7
16157:         #define _SSPMSK_MSK7_POSITION                               0x7
16158:         #define _SSPMSK_MSK7_SIZE                                   0x1
16159:         #define _SSPMSK_MSK7_LENGTH                                 0x1
16160:         #define _SSPMSK_MSK7_MASK                                   0x80
16161:         
16162:         // Register: SSP1CON3
16163:         extern volatile unsigned char           SSP1CON3            @ 0xFCB;
16164:         #ifndef _LIB_BUILD
16165:         asm("SSP1CON3 equ 0FCBh");
16166:         #endif
16167:         // aliases
16168:         extern volatile unsigned char           SSPCON3             @ 0xFCB;
16169:         #ifndef _LIB_BUILD
16170:         asm("SSPCON3 equ 0FCBh");
16171:         #endif
16172:         // bitfield definitions
16173:         typedef union {
16174:             struct {
16175:                 unsigned DHEN                   :1;
16176:                 unsigned AHEN                   :1;
16177:                 unsigned SBCDE                  :1;
16178:                 unsigned SDAHT                  :1;
16179:                 unsigned BOEN                   :1;
16180:                 unsigned SCIE                   :1;
16181:                 unsigned PCIE                   :1;
16182:                 unsigned ACKTIM                 :1;
16183:             };
16184:         } SSP1CON3bits_t;
16185:         extern volatile SSP1CON3bits_t SSP1CON3bits @ 0xFCB;
16186:         // bitfield macros
16187:         #define _SSP1CON3_DHEN_POSN                                 0x0
16188:         #define _SSP1CON3_DHEN_POSITION                             0x0
16189:         #define _SSP1CON3_DHEN_SIZE                                 0x1
16190:         #define _SSP1CON3_DHEN_LENGTH                               0x1
16191:         #define _SSP1CON3_DHEN_MASK                                 0x1
16192:         #define _SSP1CON3_AHEN_POSN                                 0x1
16193:         #define _SSP1CON3_AHEN_POSITION                             0x1
16194:         #define _SSP1CON3_AHEN_SIZE                                 0x1
16195:         #define _SSP1CON3_AHEN_LENGTH                               0x1
16196:         #define _SSP1CON3_AHEN_MASK                                 0x2
16197:         #define _SSP1CON3_SBCDE_POSN                                0x2
16198:         #define _SSP1CON3_SBCDE_POSITION                            0x2
16199:         #define _SSP1CON3_SBCDE_SIZE                                0x1
16200:         #define _SSP1CON3_SBCDE_LENGTH                              0x1
16201:         #define _SSP1CON3_SBCDE_MASK                                0x4
16202:         #define _SSP1CON3_SDAHT_POSN                                0x3
16203:         #define _SSP1CON3_SDAHT_POSITION                            0x3
16204:         #define _SSP1CON3_SDAHT_SIZE                                0x1
16205:         #define _SSP1CON3_SDAHT_LENGTH                              0x1
16206:         #define _SSP1CON3_SDAHT_MASK                                0x8
16207:         #define _SSP1CON3_BOEN_POSN                                 0x4
16208:         #define _SSP1CON3_BOEN_POSITION                             0x4
16209:         #define _SSP1CON3_BOEN_SIZE                                 0x1
16210:         #define _SSP1CON3_BOEN_LENGTH                               0x1
16211:         #define _SSP1CON3_BOEN_MASK                                 0x10
16212:         #define _SSP1CON3_SCIE_POSN                                 0x5
16213:         #define _SSP1CON3_SCIE_POSITION                             0x5
16214:         #define _SSP1CON3_SCIE_SIZE                                 0x1
16215:         #define _SSP1CON3_SCIE_LENGTH                               0x1
16216:         #define _SSP1CON3_SCIE_MASK                                 0x20
16217:         #define _SSP1CON3_PCIE_POSN                                 0x6
16218:         #define _SSP1CON3_PCIE_POSITION                             0x6
16219:         #define _SSP1CON3_PCIE_SIZE                                 0x1
16220:         #define _SSP1CON3_PCIE_LENGTH                               0x1
16221:         #define _SSP1CON3_PCIE_MASK                                 0x40
16222:         #define _SSP1CON3_ACKTIM_POSN                               0x7
16223:         #define _SSP1CON3_ACKTIM_POSITION                           0x7
16224:         #define _SSP1CON3_ACKTIM_SIZE                               0x1
16225:         #define _SSP1CON3_ACKTIM_LENGTH                             0x1
16226:         #define _SSP1CON3_ACKTIM_MASK                               0x80
16227:         // alias bitfield definitions
16228:         typedef union {
16229:             struct {
16230:                 unsigned DHEN                   :1;
16231:                 unsigned AHEN                   :1;
16232:                 unsigned SBCDE                  :1;
16233:                 unsigned SDAHT                  :1;
16234:                 unsigned BOEN                   :1;
16235:                 unsigned SCIE                   :1;
16236:                 unsigned PCIE                   :1;
16237:                 unsigned ACKTIM                 :1;
16238:             };
16239:         } SSPCON3bits_t;
16240:         extern volatile SSPCON3bits_t SSPCON3bits @ 0xFCB;
16241:         // bitfield macros
16242:         #define _SSPCON3_DHEN_POSN                                  0x0
16243:         #define _SSPCON3_DHEN_POSITION                              0x0
16244:         #define _SSPCON3_DHEN_SIZE                                  0x1
16245:         #define _SSPCON3_DHEN_LENGTH                                0x1
16246:         #define _SSPCON3_DHEN_MASK                                  0x1
16247:         #define _SSPCON3_AHEN_POSN                                  0x1
16248:         #define _SSPCON3_AHEN_POSITION                              0x1
16249:         #define _SSPCON3_AHEN_SIZE                                  0x1
16250:         #define _SSPCON3_AHEN_LENGTH                                0x1
16251:         #define _SSPCON3_AHEN_MASK                                  0x2
16252:         #define _SSPCON3_SBCDE_POSN                                 0x2
16253:         #define _SSPCON3_SBCDE_POSITION                             0x2
16254:         #define _SSPCON3_SBCDE_SIZE                                 0x1
16255:         #define _SSPCON3_SBCDE_LENGTH                               0x1
16256:         #define _SSPCON3_SBCDE_MASK                                 0x4
16257:         #define _SSPCON3_SDAHT_POSN                                 0x3
16258:         #define _SSPCON3_SDAHT_POSITION                             0x3
16259:         #define _SSPCON3_SDAHT_SIZE                                 0x1
16260:         #define _SSPCON3_SDAHT_LENGTH                               0x1
16261:         #define _SSPCON3_SDAHT_MASK                                 0x8
16262:         #define _SSPCON3_BOEN_POSN                                  0x4
16263:         #define _SSPCON3_BOEN_POSITION                              0x4
16264:         #define _SSPCON3_BOEN_SIZE                                  0x1
16265:         #define _SSPCON3_BOEN_LENGTH                                0x1
16266:         #define _SSPCON3_BOEN_MASK                                  0x10
16267:         #define _SSPCON3_SCIE_POSN                                  0x5
16268:         #define _SSPCON3_SCIE_POSITION                              0x5
16269:         #define _SSPCON3_SCIE_SIZE                                  0x1
16270:         #define _SSPCON3_SCIE_LENGTH                                0x1
16271:         #define _SSPCON3_SCIE_MASK                                  0x20
16272:         #define _SSPCON3_PCIE_POSN                                  0x6
16273:         #define _SSPCON3_PCIE_POSITION                              0x6
16274:         #define _SSPCON3_PCIE_SIZE                                  0x1
16275:         #define _SSPCON3_PCIE_LENGTH                                0x1
16276:         #define _SSPCON3_PCIE_MASK                                  0x40
16277:         #define _SSPCON3_ACKTIM_POSN                                0x7
16278:         #define _SSPCON3_ACKTIM_POSITION                            0x7
16279:         #define _SSPCON3_ACKTIM_SIZE                                0x1
16280:         #define _SSPCON3_ACKTIM_LENGTH                              0x1
16281:         #define _SSPCON3_ACKTIM_MASK                                0x80
16282:         
16283:         // Register: T1GCON
16284:         extern volatile unsigned char           T1GCON              @ 0xFCC;
16285:         #ifndef _LIB_BUILD
16286:         asm("T1GCON equ 0FCCh");
16287:         #endif
16288:         // bitfield definitions
16289:         typedef union {
16290:             struct {
16291:                 unsigned                        :3;
16292:                 unsigned T1GGO_NOT_DONE         :1;
16293:             };
16294:             struct {
16295:                 unsigned T1GSS                  :2;
16296:                 unsigned T1GVAL                 :1;
16297:                 unsigned T1GGO_nDONE            :1;
16298:                 unsigned T1GSPM                 :1;
16299:                 unsigned T1GTM                  :1;
16300:                 unsigned T1GPOL                 :1;
16301:                 unsigned TMR1GE                 :1;
16302:             };
16303:             struct {
16304:                 unsigned T1GSS0                 :1;
16305:                 unsigned T1GSS1                 :1;
16306:                 unsigned                        :1;
16307:                 unsigned T1G_DONE               :1;
16308:             };
16309:             struct {
16310:                 unsigned                        :3;
16311:                 unsigned T1GGO                  :1;
16312:             };
16313:         } T1GCONbits_t;
16314:         extern volatile T1GCONbits_t T1GCONbits @ 0xFCC;
16315:         // bitfield macros
16316:         #define _T1GCON_T1GGO_NOT_DONE_POSN                         0x3
16317:         #define _T1GCON_T1GGO_NOT_DONE_POSITION                     0x3
16318:         #define _T1GCON_T1GGO_NOT_DONE_SIZE                         0x1
16319:         #define _T1GCON_T1GGO_NOT_DONE_LENGTH                       0x1
16320:         #define _T1GCON_T1GGO_NOT_DONE_MASK                         0x8
16321:         #define _T1GCON_T1GSS_POSN                                  0x0
16322:         #define _T1GCON_T1GSS_POSITION                              0x0
16323:         #define _T1GCON_T1GSS_SIZE                                  0x2
16324:         #define _T1GCON_T1GSS_LENGTH                                0x2
16325:         #define _T1GCON_T1GSS_MASK                                  0x3
16326:         #define _T1GCON_T1GVAL_POSN                                 0x2
16327:         #define _T1GCON_T1GVAL_POSITION                             0x2
16328:         #define _T1GCON_T1GVAL_SIZE                                 0x1
16329:         #define _T1GCON_T1GVAL_LENGTH                               0x1
16330:         #define _T1GCON_T1GVAL_MASK                                 0x4
16331:         #define _T1GCON_T1GGO_nDONE_POSN                            0x3
16332:         #define _T1GCON_T1GGO_nDONE_POSITION                        0x3
16333:         #define _T1GCON_T1GGO_nDONE_SIZE                            0x1
16334:         #define _T1GCON_T1GGO_nDONE_LENGTH                          0x1
16335:         #define _T1GCON_T1GGO_nDONE_MASK                            0x8
16336:         #define _T1GCON_T1GSPM_POSN                                 0x4
16337:         #define _T1GCON_T1GSPM_POSITION                             0x4
16338:         #define _T1GCON_T1GSPM_SIZE                                 0x1
16339:         #define _T1GCON_T1GSPM_LENGTH                               0x1
16340:         #define _T1GCON_T1GSPM_MASK                                 0x10
16341:         #define _T1GCON_T1GTM_POSN                                  0x5
16342:         #define _T1GCON_T1GTM_POSITION                              0x5
16343:         #define _T1GCON_T1GTM_SIZE                                  0x1
16344:         #define _T1GCON_T1GTM_LENGTH                                0x1
16345:         #define _T1GCON_T1GTM_MASK                                  0x20
16346:         #define _T1GCON_T1GPOL_POSN                                 0x6
16347:         #define _T1GCON_T1GPOL_POSITION                             0x6
16348:         #define _T1GCON_T1GPOL_SIZE                                 0x1
16349:         #define _T1GCON_T1GPOL_LENGTH                               0x1
16350:         #define _T1GCON_T1GPOL_MASK                                 0x40
16351:         #define _T1GCON_TMR1GE_POSN                                 0x7
16352:         #define _T1GCON_TMR1GE_POSITION                             0x7
16353:         #define _T1GCON_TMR1GE_SIZE                                 0x1
16354:         #define _T1GCON_TMR1GE_LENGTH                               0x1
16355:         #define _T1GCON_TMR1GE_MASK                                 0x80
16356:         #define _T1GCON_T1GSS0_POSN                                 0x0
16357:         #define _T1GCON_T1GSS0_POSITION                             0x0
16358:         #define _T1GCON_T1GSS0_SIZE                                 0x1
16359:         #define _T1GCON_T1GSS0_LENGTH                               0x1
16360:         #define _T1GCON_T1GSS0_MASK                                 0x1
16361:         #define _T1GCON_T1GSS1_POSN                                 0x1
16362:         #define _T1GCON_T1GSS1_POSITION                             0x1
16363:         #define _T1GCON_T1GSS1_SIZE                                 0x1
16364:         #define _T1GCON_T1GSS1_LENGTH                               0x1
16365:         #define _T1GCON_T1GSS1_MASK                                 0x2
16366:         #define _T1GCON_T1G_DONE_POSN                               0x3
16367:         #define _T1GCON_T1G_DONE_POSITION                           0x3
16368:         #define _T1GCON_T1G_DONE_SIZE                               0x1
16369:         #define _T1GCON_T1G_DONE_LENGTH                             0x1
16370:         #define _T1GCON_T1G_DONE_MASK                               0x8
16371:         #define _T1GCON_T1GGO_POSN                                  0x3
16372:         #define _T1GCON_T1GGO_POSITION                              0x3
16373:         #define _T1GCON_T1GGO_SIZE                                  0x1
16374:         #define _T1GCON_T1GGO_LENGTH                                0x1
16375:         #define _T1GCON_T1GGO_MASK                                  0x8
16376:         
16377:         // Register: T1CON
16378:         extern volatile unsigned char           T1CON               @ 0xFCD;
16379:         #ifndef _LIB_BUILD
16380:         asm("T1CON equ 0FCDh");
16381:         #endif
16382:         // bitfield definitions
16383:         typedef union {
16384:             struct {
16385:                 unsigned                        :2;
16386:                 unsigned NOT_T1SYNC             :1;
16387:             };
16388:             struct {
16389:                 unsigned TMR1ON                 :1;
16390:                 unsigned T1RD16                 :1;
16391:                 unsigned nT1SYNC                :1;
16392:                 unsigned T1SOSCEN               :1;
16393:                 unsigned T1CKPS                 :2;
16394:                 unsigned TMR1CS                 :2;
16395:             };
16396:             struct {
16397:                 unsigned                        :1;
16398:                 unsigned RD16                   :1;
16399:                 unsigned T1SYNC                 :1;
16400:                 unsigned T1OSCEN                :1;
16401:                 unsigned T1CKPS0                :1;
16402:                 unsigned T1CKPS1                :1;
16403:                 unsigned TMR1CS0                :1;
16404:                 unsigned TMR1CS1                :1;
16405:             };
16406:             struct {
16407:                 unsigned                        :3;
16408:                 unsigned SOSCEN                 :1;
16409:             };
16410:         } T1CONbits_t;
16411:         extern volatile T1CONbits_t T1CONbits @ 0xFCD;
16412:         // bitfield macros
16413:         #define _T1CON_NOT_T1SYNC_POSN                              0x2
16414:         #define _T1CON_NOT_T1SYNC_POSITION                          0x2
16415:         #define _T1CON_NOT_T1SYNC_SIZE                              0x1
16416:         #define _T1CON_NOT_T1SYNC_LENGTH                            0x1
16417:         #define _T1CON_NOT_T1SYNC_MASK                              0x4
16418:         #define _T1CON_TMR1ON_POSN                                  0x0
16419:         #define _T1CON_TMR1ON_POSITION                              0x0
16420:         #define _T1CON_TMR1ON_SIZE                                  0x1
16421:         #define _T1CON_TMR1ON_LENGTH                                0x1
16422:         #define _T1CON_TMR1ON_MASK                                  0x1
16423:         #define _T1CON_T1RD16_POSN                                  0x1
16424:         #define _T1CON_T1RD16_POSITION                              0x1
16425:         #define _T1CON_T1RD16_SIZE                                  0x1
16426:         #define _T1CON_T1RD16_LENGTH                                0x1
16427:         #define _T1CON_T1RD16_MASK                                  0x2
16428:         #define _T1CON_nT1SYNC_POSN                                 0x2
16429:         #define _T1CON_nT1SYNC_POSITION                             0x2
16430:         #define _T1CON_nT1SYNC_SIZE                                 0x1
16431:         #define _T1CON_nT1SYNC_LENGTH                               0x1
16432:         #define _T1CON_nT1SYNC_MASK                                 0x4
16433:         #define _T1CON_T1SOSCEN_POSN                                0x3
16434:         #define _T1CON_T1SOSCEN_POSITION                            0x3
16435:         #define _T1CON_T1SOSCEN_SIZE                                0x1
16436:         #define _T1CON_T1SOSCEN_LENGTH                              0x1
16437:         #define _T1CON_T1SOSCEN_MASK                                0x8
16438:         #define _T1CON_T1CKPS_POSN                                  0x4
16439:         #define _T1CON_T1CKPS_POSITION                              0x4
16440:         #define _T1CON_T1CKPS_SIZE                                  0x2
16441:         #define _T1CON_T1CKPS_LENGTH                                0x2
16442:         #define _T1CON_T1CKPS_MASK                                  0x30
16443:         #define _T1CON_TMR1CS_POSN                                  0x6
16444:         #define _T1CON_TMR1CS_POSITION                              0x6
16445:         #define _T1CON_TMR1CS_SIZE                                  0x2
16446:         #define _T1CON_TMR1CS_LENGTH                                0x2
16447:         #define _T1CON_TMR1CS_MASK                                  0xC0
16448:         #define _T1CON_RD16_POSN                                    0x1
16449:         #define _T1CON_RD16_POSITION                                0x1
16450:         #define _T1CON_RD16_SIZE                                    0x1
16451:         #define _T1CON_RD16_LENGTH                                  0x1
16452:         #define _T1CON_RD16_MASK                                    0x2
16453:         #define _T1CON_T1SYNC_POSN                                  0x2
16454:         #define _T1CON_T1SYNC_POSITION                              0x2
16455:         #define _T1CON_T1SYNC_SIZE                                  0x1
16456:         #define _T1CON_T1SYNC_LENGTH                                0x1
16457:         #define _T1CON_T1SYNC_MASK                                  0x4
16458:         #define _T1CON_T1OSCEN_POSN                                 0x3
16459:         #define _T1CON_T1OSCEN_POSITION                             0x3
16460:         #define _T1CON_T1OSCEN_SIZE                                 0x1
16461:         #define _T1CON_T1OSCEN_LENGTH                               0x1
16462:         #define _T1CON_T1OSCEN_MASK                                 0x8
16463:         #define _T1CON_T1CKPS0_POSN                                 0x4
16464:         #define _T1CON_T1CKPS0_POSITION                             0x4
16465:         #define _T1CON_T1CKPS0_SIZE                                 0x1
16466:         #define _T1CON_T1CKPS0_LENGTH                               0x1
16467:         #define _T1CON_T1CKPS0_MASK                                 0x10
16468:         #define _T1CON_T1CKPS1_POSN                                 0x5
16469:         #define _T1CON_T1CKPS1_POSITION                             0x5
16470:         #define _T1CON_T1CKPS1_SIZE                                 0x1
16471:         #define _T1CON_T1CKPS1_LENGTH                               0x1
16472:         #define _T1CON_T1CKPS1_MASK                                 0x20
16473:         #define _T1CON_TMR1CS0_POSN                                 0x6
16474:         #define _T1CON_TMR1CS0_POSITION                             0x6
16475:         #define _T1CON_TMR1CS0_SIZE                                 0x1
16476:         #define _T1CON_TMR1CS0_LENGTH                               0x1
16477:         #define _T1CON_TMR1CS0_MASK                                 0x40
16478:         #define _T1CON_TMR1CS1_POSN                                 0x7
16479:         #define _T1CON_TMR1CS1_POSITION                             0x7
16480:         #define _T1CON_TMR1CS1_SIZE                                 0x1
16481:         #define _T1CON_TMR1CS1_LENGTH                               0x1
16482:         #define _T1CON_TMR1CS1_MASK                                 0x80
16483:         #define _T1CON_SOSCEN_POSN                                  0x3
16484:         #define _T1CON_SOSCEN_POSITION                              0x3
16485:         #define _T1CON_SOSCEN_SIZE                                  0x1
16486:         #define _T1CON_SOSCEN_LENGTH                                0x1
16487:         #define _T1CON_SOSCEN_MASK                                  0x8
16488:         
16489:         // Register: TMR1
16490:         extern volatile unsigned short          TMR1                @ 0xFCE;
16491:         #ifndef _LIB_BUILD
16492:         asm("TMR1 equ 0FCEh");
16493:         #endif
16494:         
16495:         // Register: TMR1L
16496:         extern volatile unsigned char           TMR1L               @ 0xFCE;
16497:         #ifndef _LIB_BUILD
16498:         asm("TMR1L equ 0FCEh");
16499:         #endif
16500:         // bitfield definitions
16501:         typedef union {
16502:             struct {
16503:                 unsigned TMR1L                  :8;
16504:             };
16505:         } TMR1Lbits_t;
16506:         extern volatile TMR1Lbits_t TMR1Lbits @ 0xFCE;
16507:         // bitfield macros
16508:         #define _TMR1L_TMR1L_POSN                                   0x0
16509:         #define _TMR1L_TMR1L_POSITION                               0x0
16510:         #define _TMR1L_TMR1L_SIZE                                   0x8
16511:         #define _TMR1L_TMR1L_LENGTH                                 0x8
16512:         #define _TMR1L_TMR1L_MASK                                   0xFF
16513:         
16514:         // Register: TMR1H
16515:         extern volatile unsigned char           TMR1H               @ 0xFCF;
16516:         #ifndef _LIB_BUILD
16517:         asm("TMR1H equ 0FCFh");
16518:         #endif
16519:         // bitfield definitions
16520:         typedef union {
16521:             struct {
16522:                 unsigned TMR1H                  :8;
16523:             };
16524:         } TMR1Hbits_t;
16525:         extern volatile TMR1Hbits_t TMR1Hbits @ 0xFCF;
16526:         // bitfield macros
16527:         #define _TMR1H_TMR1H_POSN                                   0x0
16528:         #define _TMR1H_TMR1H_POSITION                               0x0
16529:         #define _TMR1H_TMR1H_SIZE                                   0x8
16530:         #define _TMR1H_TMR1H_LENGTH                                 0x8
16531:         #define _TMR1H_TMR1H_MASK                                   0xFF
16532:         
16533:         // Register: RCON
16534:         extern volatile unsigned char           RCON                @ 0xFD0;
16535:         #ifndef _LIB_BUILD
16536:         asm("RCON equ 0FD0h");
16537:         #endif
16538:         // bitfield definitions
16539:         typedef union {
16540:             struct {
16541:                 unsigned NOT_BOR                :1;
16542:             };
16543:             struct {
16544:                 unsigned                        :1;
16545:                 unsigned NOT_POR                :1;
16546:             };
16547:             struct {
16548:                 unsigned                        :2;
16549:                 unsigned NOT_PD                 :1;
16550:             };
16551:             struct {
16552:                 unsigned                        :3;
16553:                 unsigned NOT_TO                 :1;
16554:             };
16555:             struct {
16556:                 unsigned                        :4;
16557:                 unsigned NOT_RI                 :1;
16558:             };
16559:             struct {
16560:                 unsigned nBOR                   :1;
16561:                 unsigned nPOR                   :1;
16562:                 unsigned nPD                    :1;
16563:                 unsigned nTO                    :1;
16564:                 unsigned nRI                    :1;
16565:                 unsigned                        :1;
16566:                 unsigned SBOREN                 :1;
16567:                 unsigned IPEN                   :1;
16568:             };
16569:             struct {
16570:                 unsigned BOR                    :1;
16571:                 unsigned POR                    :1;
16572:                 unsigned PD                     :1;
16573:                 unsigned TO                     :1;
16574:                 unsigned RI                     :1;
16575:             };
16576:         } RCONbits_t;
16577:         extern volatile RCONbits_t RCONbits @ 0xFD0;
16578:         // bitfield macros
16579:         #define _RCON_NOT_BOR_POSN                                  0x0
16580:         #define _RCON_NOT_BOR_POSITION                              0x0
16581:         #define _RCON_NOT_BOR_SIZE                                  0x1
16582:         #define _RCON_NOT_BOR_LENGTH                                0x1
16583:         #define _RCON_NOT_BOR_MASK                                  0x1
16584:         #define _RCON_NOT_POR_POSN                                  0x1
16585:         #define _RCON_NOT_POR_POSITION                              0x1
16586:         #define _RCON_NOT_POR_SIZE                                  0x1
16587:         #define _RCON_NOT_POR_LENGTH                                0x1
16588:         #define _RCON_NOT_POR_MASK                                  0x2
16589:         #define _RCON_NOT_PD_POSN                                   0x2
16590:         #define _RCON_NOT_PD_POSITION                               0x2
16591:         #define _RCON_NOT_PD_SIZE                                   0x1
16592:         #define _RCON_NOT_PD_LENGTH                                 0x1
16593:         #define _RCON_NOT_PD_MASK                                   0x4
16594:         #define _RCON_NOT_TO_POSN                                   0x3
16595:         #define _RCON_NOT_TO_POSITION                               0x3
16596:         #define _RCON_NOT_TO_SIZE                                   0x1
16597:         #define _RCON_NOT_TO_LENGTH                                 0x1
16598:         #define _RCON_NOT_TO_MASK                                   0x8
16599:         #define _RCON_NOT_RI_POSN                                   0x4
16600:         #define _RCON_NOT_RI_POSITION                               0x4
16601:         #define _RCON_NOT_RI_SIZE                                   0x1
16602:         #define _RCON_NOT_RI_LENGTH                                 0x1
16603:         #define _RCON_NOT_RI_MASK                                   0x10
16604:         #define _RCON_nBOR_POSN                                     0x0
16605:         #define _RCON_nBOR_POSITION                                 0x0
16606:         #define _RCON_nBOR_SIZE                                     0x1
16607:         #define _RCON_nBOR_LENGTH                                   0x1
16608:         #define _RCON_nBOR_MASK                                     0x1
16609:         #define _RCON_nPOR_POSN                                     0x1
16610:         #define _RCON_nPOR_POSITION                                 0x1
16611:         #define _RCON_nPOR_SIZE                                     0x1
16612:         #define _RCON_nPOR_LENGTH                                   0x1
16613:         #define _RCON_nPOR_MASK                                     0x2
16614:         #define _RCON_nPD_POSN                                      0x2
16615:         #define _RCON_nPD_POSITION                                  0x2
16616:         #define _RCON_nPD_SIZE                                      0x1
16617:         #define _RCON_nPD_LENGTH                                    0x1
16618:         #define _RCON_nPD_MASK                                      0x4
16619:         #define _RCON_nTO_POSN                                      0x3
16620:         #define _RCON_nTO_POSITION                                  0x3
16621:         #define _RCON_nTO_SIZE                                      0x1
16622:         #define _RCON_nTO_LENGTH                                    0x1
16623:         #define _RCON_nTO_MASK                                      0x8
16624:         #define _RCON_nRI_POSN                                      0x4
16625:         #define _RCON_nRI_POSITION                                  0x4
16626:         #define _RCON_nRI_SIZE                                      0x1
16627:         #define _RCON_nRI_LENGTH                                    0x1
16628:         #define _RCON_nRI_MASK                                      0x10
16629:         #define _RCON_SBOREN_POSN                                   0x6
16630:         #define _RCON_SBOREN_POSITION                               0x6
16631:         #define _RCON_SBOREN_SIZE                                   0x1
16632:         #define _RCON_SBOREN_LENGTH                                 0x1
16633:         #define _RCON_SBOREN_MASK                                   0x40
16634:         #define _RCON_IPEN_POSN                                     0x7
16635:         #define _RCON_IPEN_POSITION                                 0x7
16636:         #define _RCON_IPEN_SIZE                                     0x1
16637:         #define _RCON_IPEN_LENGTH                                   0x1
16638:         #define _RCON_IPEN_MASK                                     0x80
16639:         #define _RCON_BOR_POSN                                      0x0
16640:         #define _RCON_BOR_POSITION                                  0x0
16641:         #define _RCON_BOR_SIZE                                      0x1
16642:         #define _RCON_BOR_LENGTH                                    0x1
16643:         #define _RCON_BOR_MASK                                      0x1
16644:         #define _RCON_POR_POSN                                      0x1
16645:         #define _RCON_POR_POSITION                                  0x1
16646:         #define _RCON_POR_SIZE                                      0x1
16647:         #define _RCON_POR_LENGTH                                    0x1
16648:         #define _RCON_POR_MASK                                      0x2
16649:         #define _RCON_PD_POSN                                       0x2
16650:         #define _RCON_PD_POSITION                                   0x2
16651:         #define _RCON_PD_SIZE                                       0x1
16652:         #define _RCON_PD_LENGTH                                     0x1
16653:         #define _RCON_PD_MASK                                       0x4
16654:         #define _RCON_TO_POSN                                       0x3
16655:         #define _RCON_TO_POSITION                                   0x3
16656:         #define _RCON_TO_SIZE                                       0x1
16657:         #define _RCON_TO_LENGTH                                     0x1
16658:         #define _RCON_TO_MASK                                       0x8
16659:         #define _RCON_RI_POSN                                       0x4
16660:         #define _RCON_RI_POSITION                                   0x4
16661:         #define _RCON_RI_SIZE                                       0x1
16662:         #define _RCON_RI_LENGTH                                     0x1
16663:         #define _RCON_RI_MASK                                       0x10
16664:         
16665:         // Register: WDTCON
16666:         extern volatile unsigned char           WDTCON              @ 0xFD1;
16667:         #ifndef _LIB_BUILD
16668:         asm("WDTCON equ 0FD1h");
16669:         #endif
16670:         // bitfield definitions
16671:         typedef union {
16672:             struct {
16673:                 unsigned SWDTEN                 :1;
16674:             };
16675:             struct {
16676:                 unsigned SWDTE                  :1;
16677:             };
16678:         } WDTCONbits_t;
16679:         extern volatile WDTCONbits_t WDTCONbits @ 0xFD1;
16680:         // bitfield macros
16681:         #define _WDTCON_SWDTEN_POSN                                 0x0
16682:         #define _WDTCON_SWDTEN_POSITION                             0x0
16683:         #define _WDTCON_SWDTEN_SIZE                                 0x1
16684:         #define _WDTCON_SWDTEN_LENGTH                               0x1
16685:         #define _WDTCON_SWDTEN_MASK                                 0x1
16686:         #define _WDTCON_SWDTE_POSN                                  0x0
16687:         #define _WDTCON_SWDTE_POSITION                              0x0
16688:         #define _WDTCON_SWDTE_SIZE                                  0x1
16689:         #define _WDTCON_SWDTE_LENGTH                                0x1
16690:         #define _WDTCON_SWDTE_MASK                                  0x1
16691:         
16692:         // Register: OSCCON2
16693:         extern volatile unsigned char           OSCCON2             @ 0xFD2;
16694:         #ifndef _LIB_BUILD
16695:         asm("OSCCON2 equ 0FD2h");
16696:         #endif
16697:         // bitfield definitions
16698:         typedef union {
16699:             struct {
16700:                 unsigned LFIOFS                 :1;
16701:                 unsigned MFIOFS                 :1;
16702:                 unsigned PRISD                  :1;
16703:                 unsigned SOSCGO                 :1;
16704:                 unsigned MFIOSEL                :1;
16705:                 unsigned                        :1;
16706:                 unsigned SOSCRUN                :1;
16707:                 unsigned PLLRDY                 :1;
16708:             };
16709:         } OSCCON2bits_t;
16710:         extern volatile OSCCON2bits_t OSCCON2bits @ 0xFD2;
16711:         // bitfield macros
16712:         #define _OSCCON2_LFIOFS_POSN                                0x0
16713:         #define _OSCCON2_LFIOFS_POSITION                            0x0
16714:         #define _OSCCON2_LFIOFS_SIZE                                0x1
16715:         #define _OSCCON2_LFIOFS_LENGTH                              0x1
16716:         #define _OSCCON2_LFIOFS_MASK                                0x1
16717:         #define _OSCCON2_MFIOFS_POSN                                0x1
16718:         #define _OSCCON2_MFIOFS_POSITION                            0x1
16719:         #define _OSCCON2_MFIOFS_SIZE                                0x1
16720:         #define _OSCCON2_MFIOFS_LENGTH                              0x1
16721:         #define _OSCCON2_MFIOFS_MASK                                0x2
16722:         #define _OSCCON2_PRISD_POSN                                 0x2
16723:         #define _OSCCON2_PRISD_POSITION                             0x2
16724:         #define _OSCCON2_PRISD_SIZE                                 0x1
16725:         #define _OSCCON2_PRISD_LENGTH                               0x1
16726:         #define _OSCCON2_PRISD_MASK                                 0x4
16727:         #define _OSCCON2_SOSCGO_POSN                                0x3
16728:         #define _OSCCON2_SOSCGO_POSITION                            0x3
16729:         #define _OSCCON2_SOSCGO_SIZE                                0x1
16730:         #define _OSCCON2_SOSCGO_LENGTH                              0x1
16731:         #define _OSCCON2_SOSCGO_MASK                                0x8
16732:         #define _OSCCON2_MFIOSEL_POSN                               0x4
16733:         #define _OSCCON2_MFIOSEL_POSITION                           0x4
16734:         #define _OSCCON2_MFIOSEL_SIZE                               0x1
16735:         #define _OSCCON2_MFIOSEL_LENGTH                             0x1
16736:         #define _OSCCON2_MFIOSEL_MASK                               0x10
16737:         #define _OSCCON2_SOSCRUN_POSN                               0x6
16738:         #define _OSCCON2_SOSCRUN_POSITION                           0x6
16739:         #define _OSCCON2_SOSCRUN_SIZE                               0x1
16740:         #define _OSCCON2_SOSCRUN_LENGTH                             0x1
16741:         #define _OSCCON2_SOSCRUN_MASK                               0x40
16742:         #define _OSCCON2_PLLRDY_POSN                                0x7
16743:         #define _OSCCON2_PLLRDY_POSITION                            0x7
16744:         #define _OSCCON2_PLLRDY_SIZE                                0x1
16745:         #define _OSCCON2_PLLRDY_LENGTH                              0x1
16746:         #define _OSCCON2_PLLRDY_MASK                                0x80
16747:         
16748:         // Register: OSCCON
16749:         extern volatile unsigned char           OSCCON              @ 0xFD3;
16750:         #ifndef _LIB_BUILD
16751:         asm("OSCCON equ 0FD3h");
16752:         #endif
16753:         // bitfield definitions
16754:         typedef union {
16755:             struct {
16756:                 unsigned SCS                    :2;
16757:                 unsigned HFIOFS                 :1;
16758:                 unsigned OSTS                   :1;
16759:                 unsigned IRCF                   :3;
16760:                 unsigned IDLEN                  :1;
16761:             };
16762:             struct {
16763:                 unsigned SCS0                   :1;
16764:                 unsigned SCS1                   :1;
16765:                 unsigned IOFS                   :1;
16766:                 unsigned                        :1;
16767:                 unsigned IRCF0                  :1;
16768:                 unsigned IRCF1                  :1;
16769:                 unsigned IRCF2                  :1;
16770:             };
16771:         } OSCCONbits_t;
16772:         extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;
16773:         // bitfield macros
16774:         #define _OSCCON_SCS_POSN                                    0x0
16775:         #define _OSCCON_SCS_POSITION                                0x0
16776:         #define _OSCCON_SCS_SIZE                                    0x2
16777:         #define _OSCCON_SCS_LENGTH                                  0x2
16778:         #define _OSCCON_SCS_MASK                                    0x3
16779:         #define _OSCCON_HFIOFS_POSN                                 0x2
16780:         #define _OSCCON_HFIOFS_POSITION                             0x2
16781:         #define _OSCCON_HFIOFS_SIZE                                 0x1
16782:         #define _OSCCON_HFIOFS_LENGTH                               0x1
16783:         #define _OSCCON_HFIOFS_MASK                                 0x4
16784:         #define _OSCCON_OSTS_POSN                                   0x3
16785:         #define _OSCCON_OSTS_POSITION                               0x3
16786:         #define _OSCCON_OSTS_SIZE                                   0x1
16787:         #define _OSCCON_OSTS_LENGTH                                 0x1
16788:         #define _OSCCON_OSTS_MASK                                   0x8
16789:         #define _OSCCON_IRCF_POSN                                   0x4
16790:         #define _OSCCON_IRCF_POSITION                               0x4
16791:         #define _OSCCON_IRCF_SIZE                                   0x3
16792:         #define _OSCCON_IRCF_LENGTH                                 0x3
16793:         #define _OSCCON_IRCF_MASK                                   0x70
16794:         #define _OSCCON_IDLEN_POSN                                  0x7
16795:         #define _OSCCON_IDLEN_POSITION                              0x7
16796:         #define _OSCCON_IDLEN_SIZE                                  0x1
16797:         #define _OSCCON_IDLEN_LENGTH                                0x1
16798:         #define _OSCCON_IDLEN_MASK                                  0x80
16799:         #define _OSCCON_SCS0_POSN                                   0x0
16800:         #define _OSCCON_SCS0_POSITION                               0x0
16801:         #define _OSCCON_SCS0_SIZE                                   0x1
16802:         #define _OSCCON_SCS0_LENGTH                                 0x1
16803:         #define _OSCCON_SCS0_MASK                                   0x1
16804:         #define _OSCCON_SCS1_POSN                                   0x1
16805:         #define _OSCCON_SCS1_POSITION                               0x1
16806:         #define _OSCCON_SCS1_SIZE                                   0x1
16807:         #define _OSCCON_SCS1_LENGTH                                 0x1
16808:         #define _OSCCON_SCS1_MASK                                   0x2
16809:         #define _OSCCON_IOFS_POSN                                   0x2
16810:         #define _OSCCON_IOFS_POSITION                               0x2
16811:         #define _OSCCON_IOFS_SIZE                                   0x1
16812:         #define _OSCCON_IOFS_LENGTH                                 0x1
16813:         #define _OSCCON_IOFS_MASK                                   0x4
16814:         #define _OSCCON_IRCF0_POSN                                  0x4
16815:         #define _OSCCON_IRCF0_POSITION                              0x4
16816:         #define _OSCCON_IRCF0_SIZE                                  0x1
16817:         #define _OSCCON_IRCF0_LENGTH                                0x1
16818:         #define _OSCCON_IRCF0_MASK                                  0x10
16819:         #define _OSCCON_IRCF1_POSN                                  0x5
16820:         #define _OSCCON_IRCF1_POSITION                              0x5
16821:         #define _OSCCON_IRCF1_SIZE                                  0x1
16822:         #define _OSCCON_IRCF1_LENGTH                                0x1
16823:         #define _OSCCON_IRCF1_MASK                                  0x20
16824:         #define _OSCCON_IRCF2_POSN                                  0x6
16825:         #define _OSCCON_IRCF2_POSITION                              0x6
16826:         #define _OSCCON_IRCF2_SIZE                                  0x1
16827:         #define _OSCCON_IRCF2_LENGTH                                0x1
16828:         #define _OSCCON_IRCF2_MASK                                  0x40
16829:         
16830:         // Register: T0CON
16831:         extern volatile unsigned char           T0CON               @ 0xFD5;
16832:         #ifndef _LIB_BUILD
16833:         asm("T0CON equ 0FD5h");
16834:         #endif
16835:         // bitfield definitions
16836:         typedef union {
16837:             struct {
16838:                 unsigned T0PS                   :3;
16839:                 unsigned PSA                    :1;
16840:                 unsigned T0SE                   :1;
16841:                 unsigned T0CS                   :1;
16842:                 unsigned T08BIT                 :1;
16843:                 unsigned TMR0ON                 :1;
16844:             };
16845:             struct {
16846:                 unsigned T0PS0                  :1;
16847:                 unsigned T0PS1                  :1;
16848:                 unsigned T0PS2                  :1;
16849:             };
16850:         } T0CONbits_t;
16851:         extern volatile T0CONbits_t T0CONbits @ 0xFD5;
16852:         // bitfield macros
16853:         #define _T0CON_T0PS_POSN                                    0x0
16854:         #define _T0CON_T0PS_POSITION                                0x0
16855:         #define _T0CON_T0PS_SIZE                                    0x3
16856:         #define _T0CON_T0PS_LENGTH                                  0x3
16857:         #define _T0CON_T0PS_MASK                                    0x7
16858:         #define _T0CON_PSA_POSN                                     0x3
16859:         #define _T0CON_PSA_POSITION                                 0x3
16860:         #define _T0CON_PSA_SIZE                                     0x1
16861:         #define _T0CON_PSA_LENGTH                                   0x1
16862:         #define _T0CON_PSA_MASK                                     0x8
16863:         #define _T0CON_T0SE_POSN                                    0x4
16864:         #define _T0CON_T0SE_POSITION                                0x4
16865:         #define _T0CON_T0SE_SIZE                                    0x1
16866:         #define _T0CON_T0SE_LENGTH                                  0x1
16867:         #define _T0CON_T0SE_MASK                                    0x10
16868:         #define _T0CON_T0CS_POSN                                    0x5
16869:         #define _T0CON_T0CS_POSITION                                0x5
16870:         #define _T0CON_T0CS_SIZE                                    0x1
16871:         #define _T0CON_T0CS_LENGTH                                  0x1
16872:         #define _T0CON_T0CS_MASK                                    0x20
16873:         #define _T0CON_T08BIT_POSN                                  0x6
16874:         #define _T0CON_T08BIT_POSITION                              0x6
16875:         #define _T0CON_T08BIT_SIZE                                  0x1
16876:         #define _T0CON_T08BIT_LENGTH                                0x1
16877:         #define _T0CON_T08BIT_MASK                                  0x40
16878:         #define _T0CON_TMR0ON_POSN                                  0x7
16879:         #define _T0CON_TMR0ON_POSITION                              0x7
16880:         #define _T0CON_TMR0ON_SIZE                                  0x1
16881:         #define _T0CON_TMR0ON_LENGTH                                0x1
16882:         #define _T0CON_TMR0ON_MASK                                  0x80
16883:         #define _T0CON_T0PS0_POSN                                   0x0
16884:         #define _T0CON_T0PS0_POSITION                               0x0
16885:         #define _T0CON_T0PS0_SIZE                                   0x1
16886:         #define _T0CON_T0PS0_LENGTH                                 0x1
16887:         #define _T0CON_T0PS0_MASK                                   0x1
16888:         #define _T0CON_T0PS1_POSN                                   0x1
16889:         #define _T0CON_T0PS1_POSITION                               0x1
16890:         #define _T0CON_T0PS1_SIZE                                   0x1
16891:         #define _T0CON_T0PS1_LENGTH                                 0x1
16892:         #define _T0CON_T0PS1_MASK                                   0x2
16893:         #define _T0CON_T0PS2_POSN                                   0x2
16894:         #define _T0CON_T0PS2_POSITION                               0x2
16895:         #define _T0CON_T0PS2_SIZE                                   0x1
16896:         #define _T0CON_T0PS2_LENGTH                                 0x1
16897:         #define _T0CON_T0PS2_MASK                                   0x4
16898:         
16899:         // Register: TMR0
16900:         extern volatile unsigned short          TMR0                @ 0xFD6;
16901:         #ifndef _LIB_BUILD
16902:         asm("TMR0 equ 0FD6h");
16903:         #endif
16904:         
16905:         // Register: TMR0L
16906:         extern volatile unsigned char           TMR0L               @ 0xFD6;
16907:         #ifndef _LIB_BUILD
16908:         asm("TMR0L equ 0FD6h");
16909:         #endif
16910:         // bitfield definitions
16911:         typedef union {
16912:             struct {
16913:                 unsigned TMR0L                  :8;
16914:             };
16915:         } TMR0Lbits_t;
16916:         extern volatile TMR0Lbits_t TMR0Lbits @ 0xFD6;
16917:         // bitfield macros
16918:         #define _TMR0L_TMR0L_POSN                                   0x0
16919:         #define _TMR0L_TMR0L_POSITION                               0x0
16920:         #define _TMR0L_TMR0L_SIZE                                   0x8
16921:         #define _TMR0L_TMR0L_LENGTH                                 0x8
16922:         #define _TMR0L_TMR0L_MASK                                   0xFF
16923:         
16924:         // Register: TMR0H
16925:         extern volatile unsigned char           TMR0H               @ 0xFD7;
16926:         #ifndef _LIB_BUILD
16927:         asm("TMR0H equ 0FD7h");
16928:         #endif
16929:         // bitfield definitions
16930:         typedef union {
16931:             struct {
16932:                 unsigned TMR0H                  :8;
16933:             };
16934:         } TMR0Hbits_t;
16935:         extern volatile TMR0Hbits_t TMR0Hbits @ 0xFD7;
16936:         // bitfield macros
16937:         #define _TMR0H_TMR0H_POSN                                   0x0
16938:         #define _TMR0H_TMR0H_POSITION                               0x0
16939:         #define _TMR0H_TMR0H_SIZE                                   0x8
16940:         #define _TMR0H_TMR0H_LENGTH                                 0x8
16941:         #define _TMR0H_TMR0H_MASK                                   0xFF
16942:         
16943:         // Register: STATUS
16944:         extern volatile unsigned char           STATUS              @ 0xFD8;
16945:         #ifndef _LIB_BUILD
16946:         asm("STATUS equ 0FD8h");
16947:         #endif
16948:         // bitfield definitions
16949:         typedef union {
16950:             struct {
16951:                 unsigned C                      :1;
16952:                 unsigned DC                     :1;
16953:                 unsigned Z                      :1;
16954:                 unsigned OV                     :1;
16955:                 unsigned N                      :1;
16956:             };
16957:             struct {
16958:                 unsigned CARRY                  :1;
16959:             };
16960:             struct {
16961:                 unsigned                        :4;
16962:                 unsigned NEGATIVE               :1;
16963:             };
16964:             struct {
16965:                 unsigned                        :3;
16966:                 unsigned OVERFLOW               :1;
16967:             };
16968:             struct {
16969:                 unsigned                        :2;
16970:                 unsigned ZERO                   :1;
16971:             };
16972:         } STATUSbits_t;
16973:         extern volatile STATUSbits_t STATUSbits @ 0xFD8;
16974:         // bitfield macros
16975:         #define _STATUS_C_POSN                                      0x0
16976:         #define _STATUS_C_POSITION                                  0x0
16977:         #define _STATUS_C_SIZE                                      0x1
16978:         #define _STATUS_C_LENGTH                                    0x1
16979:         #define _STATUS_C_MASK                                      0x1
16980:         #define _STATUS_DC_POSN                                     0x1
16981:         #define _STATUS_DC_POSITION                                 0x1
16982:         #define _STATUS_DC_SIZE                                     0x1
16983:         #define _STATUS_DC_LENGTH                                   0x1
16984:         #define _STATUS_DC_MASK                                     0x2
16985:         #define _STATUS_Z_POSN                                      0x2
16986:         #define _STATUS_Z_POSITION                                  0x2
16987:         #define _STATUS_Z_SIZE                                      0x1
16988:         #define _STATUS_Z_LENGTH                                    0x1
16989:         #define _STATUS_Z_MASK                                      0x4
16990:         #define _STATUS_OV_POSN                                     0x3
16991:         #define _STATUS_OV_POSITION                                 0x3
16992:         #define _STATUS_OV_SIZE                                     0x1
16993:         #define _STATUS_OV_LENGTH                                   0x1
16994:         #define _STATUS_OV_MASK                                     0x8
16995:         #define _STATUS_N_POSN                                      0x4
16996:         #define _STATUS_N_POSITION                                  0x4
16997:         #define _STATUS_N_SIZE                                      0x1
16998:         #define _STATUS_N_LENGTH                                    0x1
16999:         #define _STATUS_N_MASK                                      0x10
17000:         #define _STATUS_CARRY_POSN                                  0x0
17001:         #define _STATUS_CARRY_POSITION                              0x0
17002:         #define _STATUS_CARRY_SIZE                                  0x1
17003:         #define _STATUS_CARRY_LENGTH                                0x1
17004:         #define _STATUS_CARRY_MASK                                  0x1
17005:         #define _STATUS_NEGATIVE_POSN                               0x4
17006:         #define _STATUS_NEGATIVE_POSITION                           0x4
17007:         #define _STATUS_NEGATIVE_SIZE                               0x1
17008:         #define _STATUS_NEGATIVE_LENGTH                             0x1
17009:         #define _STATUS_NEGATIVE_MASK                               0x10
17010:         #define _STATUS_OVERFLOW_POSN                               0x3
17011:         #define _STATUS_OVERFLOW_POSITION                           0x3
17012:         #define _STATUS_OVERFLOW_SIZE                               0x1
17013:         #define _STATUS_OVERFLOW_LENGTH                             0x1
17014:         #define _STATUS_OVERFLOW_MASK                               0x8
17015:         #define _STATUS_ZERO_POSN                                   0x2
17016:         #define _STATUS_ZERO_POSITION                               0x2
17017:         #define _STATUS_ZERO_SIZE                                   0x1
17018:         #define _STATUS_ZERO_LENGTH                                 0x1
17019:         #define _STATUS_ZERO_MASK                                   0x4
17020:         
17021:         // Register: FSR2
17022:         extern volatile unsigned short          FSR2                @ 0xFD9;
17023:         #ifndef _LIB_BUILD
17024:         asm("FSR2 equ 0FD9h");
17025:         #endif
17026:         
17027:         // Register: FSR2L
17028:         extern volatile unsigned char           FSR2L               @ 0xFD9;
17029:         #ifndef _LIB_BUILD
17030:         asm("FSR2L equ 0FD9h");
17031:         #endif
17032:         // bitfield definitions
17033:         typedef union {
17034:             struct {
17035:                 unsigned FSR2L                  :8;
17036:             };
17037:         } FSR2Lbits_t;
17038:         extern volatile FSR2Lbits_t FSR2Lbits @ 0xFD9;
17039:         // bitfield macros
17040:         #define _FSR2L_FSR2L_POSN                                   0x0
17041:         #define _FSR2L_FSR2L_POSITION                               0x0
17042:         #define _FSR2L_FSR2L_SIZE                                   0x8
17043:         #define _FSR2L_FSR2L_LENGTH                                 0x8
17044:         #define _FSR2L_FSR2L_MASK                                   0xFF
17045:         
17046:         // Register: FSR2H
17047:         extern volatile unsigned char           FSR2H               @ 0xFDA;
17048:         #ifndef _LIB_BUILD
17049:         asm("FSR2H equ 0FDAh");
17050:         #endif
17051:         
17052:         // Register: PLUSW2
17053:         extern volatile unsigned char           PLUSW2              @ 0xFDB;
17054:         #ifndef _LIB_BUILD
17055:         asm("PLUSW2 equ 0FDBh");
17056:         #endif
17057:         // bitfield definitions
17058:         typedef union {
17059:             struct {
17060:                 unsigned PLUSW2                 :8;
17061:             };
17062:         } PLUSW2bits_t;
17063:         extern volatile PLUSW2bits_t PLUSW2bits @ 0xFDB;
17064:         // bitfield macros
17065:         #define _PLUSW2_PLUSW2_POSN                                 0x0
17066:         #define _PLUSW2_PLUSW2_POSITION                             0x0
17067:         #define _PLUSW2_PLUSW2_SIZE                                 0x8
17068:         #define _PLUSW2_PLUSW2_LENGTH                               0x8
17069:         #define _PLUSW2_PLUSW2_MASK                                 0xFF
17070:         
17071:         // Register: PREINC2
17072:         extern volatile unsigned char           PREINC2             @ 0xFDC;
17073:         #ifndef _LIB_BUILD
17074:         asm("PREINC2 equ 0FDCh");
17075:         #endif
17076:         // bitfield definitions
17077:         typedef union {
17078:             struct {
17079:                 unsigned PREINC2                :8;
17080:             };
17081:         } PREINC2bits_t;
17082:         extern volatile PREINC2bits_t PREINC2bits @ 0xFDC;
17083:         // bitfield macros
17084:         #define _PREINC2_PREINC2_POSN                               0x0
17085:         #define _PREINC2_PREINC2_POSITION                           0x0
17086:         #define _PREINC2_PREINC2_SIZE                               0x8
17087:         #define _PREINC2_PREINC2_LENGTH                             0x8
17088:         #define _PREINC2_PREINC2_MASK                               0xFF
17089:         
17090:         // Register: POSTDEC2
17091:         extern volatile unsigned char           POSTDEC2            @ 0xFDD;
17092:         #ifndef _LIB_BUILD
17093:         asm("POSTDEC2 equ 0FDDh");
17094:         #endif
17095:         // bitfield definitions
17096:         typedef union {
17097:             struct {
17098:                 unsigned POSTDEC2               :8;
17099:             };
17100:         } POSTDEC2bits_t;
17101:         extern volatile POSTDEC2bits_t POSTDEC2bits @ 0xFDD;
17102:         // bitfield macros
17103:         #define _POSTDEC2_POSTDEC2_POSN                             0x0
17104:         #define _POSTDEC2_POSTDEC2_POSITION                         0x0
17105:         #define _POSTDEC2_POSTDEC2_SIZE                             0x8
17106:         #define _POSTDEC2_POSTDEC2_LENGTH                           0x8
17107:         #define _POSTDEC2_POSTDEC2_MASK                             0xFF
17108:         
17109:         // Register: POSTINC2
17110:         extern volatile unsigned char           POSTINC2            @ 0xFDE;
17111:         #ifndef _LIB_BUILD
17112:         asm("POSTINC2 equ 0FDEh");
17113:         #endif
17114:         // bitfield definitions
17115:         typedef union {
17116:             struct {
17117:                 unsigned POSTINC2               :8;
17118:             };
17119:         } POSTINC2bits_t;
17120:         extern volatile POSTINC2bits_t POSTINC2bits @ 0xFDE;
17121:         // bitfield macros
17122:         #define _POSTINC2_POSTINC2_POSN                             0x0
17123:         #define _POSTINC2_POSTINC2_POSITION                         0x0
17124:         #define _POSTINC2_POSTINC2_SIZE                             0x8
17125:         #define _POSTINC2_POSTINC2_LENGTH                           0x8
17126:         #define _POSTINC2_POSTINC2_MASK                             0xFF
17127:         
17128:         // Register: INDF2
17129:         extern volatile unsigned char           INDF2               @ 0xFDF;
17130:         #ifndef _LIB_BUILD
17131:         asm("INDF2 equ 0FDFh");
17132:         #endif
17133:         // bitfield definitions
17134:         typedef union {
17135:             struct {
17136:                 unsigned INDF2                  :8;
17137:             };
17138:         } INDF2bits_t;
17139:         extern volatile INDF2bits_t INDF2bits @ 0xFDF;
17140:         // bitfield macros
17141:         #define _INDF2_INDF2_POSN                                   0x0
17142:         #define _INDF2_INDF2_POSITION                               0x0
17143:         #define _INDF2_INDF2_SIZE                                   0x8
17144:         #define _INDF2_INDF2_LENGTH                                 0x8
17145:         #define _INDF2_INDF2_MASK                                   0xFF
17146:         
17147:         // Register: BSR
17148:         extern volatile unsigned char           BSR                 @ 0xFE0;
17149:         #ifndef _LIB_BUILD
17150:         asm("BSR equ 0FE0h");
17151:         #endif
17152:         
17153:         // Register: FSR1
17154:         extern volatile unsigned short          FSR1                @ 0xFE1;
17155:         #ifndef _LIB_BUILD
17156:         asm("FSR1 equ 0FE1h");
17157:         #endif
17158:         
17159:         // Register: FSR1L
17160:         extern volatile unsigned char           FSR1L               @ 0xFE1;
17161:         #ifndef _LIB_BUILD
17162:         asm("FSR1L equ 0FE1h");
17163:         #endif
17164:         // bitfield definitions
17165:         typedef union {
17166:             struct {
17167:                 unsigned FSR1L                  :8;
17168:             };
17169:         } FSR1Lbits_t;
17170:         extern volatile FSR1Lbits_t FSR1Lbits @ 0xFE1;
17171:         // bitfield macros
17172:         #define _FSR1L_FSR1L_POSN                                   0x0
17173:         #define _FSR1L_FSR1L_POSITION                               0x0
17174:         #define _FSR1L_FSR1L_SIZE                                   0x8
17175:         #define _FSR1L_FSR1L_LENGTH                                 0x8
17176:         #define _FSR1L_FSR1L_MASK                                   0xFF
17177:         
17178:         // Register: FSR1H
17179:         extern volatile unsigned char           FSR1H               @ 0xFE2;
17180:         #ifndef _LIB_BUILD
17181:         asm("FSR1H equ 0FE2h");
17182:         #endif
17183:         
17184:         // Register: PLUSW1
17185:         extern volatile unsigned char           PLUSW1              @ 0xFE3;
17186:         #ifndef _LIB_BUILD
17187:         asm("PLUSW1 equ 0FE3h");
17188:         #endif
17189:         // bitfield definitions
17190:         typedef union {
17191:             struct {
17192:                 unsigned PLUSW1                 :8;
17193:             };
17194:         } PLUSW1bits_t;
17195:         extern volatile PLUSW1bits_t PLUSW1bits @ 0xFE3;
17196:         // bitfield macros
17197:         #define _PLUSW1_PLUSW1_POSN                                 0x0
17198:         #define _PLUSW1_PLUSW1_POSITION                             0x0
17199:         #define _PLUSW1_PLUSW1_SIZE                                 0x8
17200:         #define _PLUSW1_PLUSW1_LENGTH                               0x8
17201:         #define _PLUSW1_PLUSW1_MASK                                 0xFF
17202:         
17203:         // Register: PREINC1
17204:         extern volatile unsigned char           PREINC1             @ 0xFE4;
17205:         #ifndef _LIB_BUILD
17206:         asm("PREINC1 equ 0FE4h");
17207:         #endif
17208:         // bitfield definitions
17209:         typedef union {
17210:             struct {
17211:                 unsigned PREINC1                :8;
17212:             };
17213:         } PREINC1bits_t;
17214:         extern volatile PREINC1bits_t PREINC1bits @ 0xFE4;
17215:         // bitfield macros
17216:         #define _PREINC1_PREINC1_POSN                               0x0
17217:         #define _PREINC1_PREINC1_POSITION                           0x0
17218:         #define _PREINC1_PREINC1_SIZE                               0x8
17219:         #define _PREINC1_PREINC1_LENGTH                             0x8
17220:         #define _PREINC1_PREINC1_MASK                               0xFF
17221:         
17222:         // Register: POSTDEC1
17223:         extern volatile unsigned char           POSTDEC1            @ 0xFE5;
17224:         #ifndef _LIB_BUILD
17225:         asm("POSTDEC1 equ 0FE5h");
17226:         #endif
17227:         // bitfield definitions
17228:         typedef union {
17229:             struct {
17230:                 unsigned POSTDEC1               :8;
17231:             };
17232:         } POSTDEC1bits_t;
17233:         extern volatile POSTDEC1bits_t POSTDEC1bits @ 0xFE5;
17234:         // bitfield macros
17235:         #define _POSTDEC1_POSTDEC1_POSN                             0x0
17236:         #define _POSTDEC1_POSTDEC1_POSITION                         0x0
17237:         #define _POSTDEC1_POSTDEC1_SIZE                             0x8
17238:         #define _POSTDEC1_POSTDEC1_LENGTH                           0x8
17239:         #define _POSTDEC1_POSTDEC1_MASK                             0xFF
17240:         
17241:         // Register: POSTINC1
17242:         extern volatile unsigned char           POSTINC1            @ 0xFE6;
17243:         #ifndef _LIB_BUILD
17244:         asm("POSTINC1 equ 0FE6h");
17245:         #endif
17246:         // bitfield definitions
17247:         typedef union {
17248:             struct {
17249:                 unsigned POSTINC1               :8;
17250:             };
17251:         } POSTINC1bits_t;
17252:         extern volatile POSTINC1bits_t POSTINC1bits @ 0xFE6;
17253:         // bitfield macros
17254:         #define _POSTINC1_POSTINC1_POSN                             0x0
17255:         #define _POSTINC1_POSTINC1_POSITION                         0x0
17256:         #define _POSTINC1_POSTINC1_SIZE                             0x8
17257:         #define _POSTINC1_POSTINC1_LENGTH                           0x8
17258:         #define _POSTINC1_POSTINC1_MASK                             0xFF
17259:         
17260:         // Register: INDF1
17261:         extern volatile unsigned char           INDF1               @ 0xFE7;
17262:         #ifndef _LIB_BUILD
17263:         asm("INDF1 equ 0FE7h");
17264:         #endif
17265:         // bitfield definitions
17266:         typedef union {
17267:             struct {
17268:                 unsigned INDF1                  :8;
17269:             };
17270:         } INDF1bits_t;
17271:         extern volatile INDF1bits_t INDF1bits @ 0xFE7;
17272:         // bitfield macros
17273:         #define _INDF1_INDF1_POSN                                   0x0
17274:         #define _INDF1_INDF1_POSITION                               0x0
17275:         #define _INDF1_INDF1_SIZE                                   0x8
17276:         #define _INDF1_INDF1_LENGTH                                 0x8
17277:         #define _INDF1_INDF1_MASK                                   0xFF
17278:         
17279:         // Register: WREG
17280:         extern volatile unsigned char           WREG                @ 0xFE8;
17281:         #ifndef _LIB_BUILD
17282:         asm("WREG equ 0FE8h");
17283:         #endif
17284:         // aliases
17285:         // extern volatile unsigned char           W                   @ 0xFE8;
17286:         #ifndef _LIB_BUILD
17287:         // asm("W equ 0FE8h");
17288:         #endif
17289:         // bitfield definitions
17290:         typedef union {
17291:             struct {
17292:                 unsigned WREG                   :8;
17293:             };
17294:         } WREGbits_t;
17295:         extern volatile WREGbits_t WREGbits @ 0xFE8;
17296:         // bitfield macros
17297:         #define _WREG_WREG_POSN                                     0x0
17298:         #define _WREG_WREG_POSITION                                 0x0
17299:         #define _WREG_WREG_SIZE                                     0x8
17300:         #define _WREG_WREG_LENGTH                                   0x8
17301:         #define _WREG_WREG_MASK                                     0xFF
17302:         // alias bitfield definitions
17303:         typedef union {
17304:             struct {
17305:                 unsigned WREG                   :8;
17306:             };
17307:         } Wbits_t;
17308:         extern volatile Wbits_t Wbits @ 0xFE8;
17309:         // bitfield macros
17310:         #define _W_WREG_POSN                                        0x0
17311:         #define _W_WREG_POSITION                                    0x0
17312:         #define _W_WREG_SIZE                                        0x8
17313:         #define _W_WREG_LENGTH                                      0x8
17314:         #define _W_WREG_MASK                                        0xFF
17315:         
17316:         // Register: FSR0
17317:         extern volatile unsigned short          FSR0                @ 0xFE9;
17318:         #ifndef _LIB_BUILD
17319:         asm("FSR0 equ 0FE9h");
17320:         #endif
17321:         
17322:         // Register: FSR0L
17323:         extern volatile unsigned char           FSR0L               @ 0xFE9;
17324:         #ifndef _LIB_BUILD
17325:         asm("FSR0L equ 0FE9h");
17326:         #endif
17327:         // bitfield definitions
17328:         typedef union {
17329:             struct {
17330:                 unsigned FSR0L                  :8;
17331:             };
17332:         } FSR0Lbits_t;
17333:         extern volatile FSR0Lbits_t FSR0Lbits @ 0xFE9;
17334:         // bitfield macros
17335:         #define _FSR0L_FSR0L_POSN                                   0x0
17336:         #define _FSR0L_FSR0L_POSITION                               0x0
17337:         #define _FSR0L_FSR0L_SIZE                                   0x8
17338:         #define _FSR0L_FSR0L_LENGTH                                 0x8
17339:         #define _FSR0L_FSR0L_MASK                                   0xFF
17340:         
17341:         // Register: FSR0H
17342:         extern volatile unsigned char           FSR0H               @ 0xFEA;
17343:         #ifndef _LIB_BUILD
17344:         asm("FSR0H equ 0FEAh");
17345:         #endif
17346:         
17347:         // Register: PLUSW0
17348:         extern volatile unsigned char           PLUSW0              @ 0xFEB;
17349:         #ifndef _LIB_BUILD
17350:         asm("PLUSW0 equ 0FEBh");
17351:         #endif
17352:         // bitfield definitions
17353:         typedef union {
17354:             struct {
17355:                 unsigned PLUSW0                 :8;
17356:             };
17357:         } PLUSW0bits_t;
17358:         extern volatile PLUSW0bits_t PLUSW0bits @ 0xFEB;
17359:         // bitfield macros
17360:         #define _PLUSW0_PLUSW0_POSN                                 0x0
17361:         #define _PLUSW0_PLUSW0_POSITION                             0x0
17362:         #define _PLUSW0_PLUSW0_SIZE                                 0x8
17363:         #define _PLUSW0_PLUSW0_LENGTH                               0x8
17364:         #define _PLUSW0_PLUSW0_MASK                                 0xFF
17365:         
17366:         // Register: PREINC0
17367:         extern volatile unsigned char           PREINC0             @ 0xFEC;
17368:         #ifndef _LIB_BUILD
17369:         asm("PREINC0 equ 0FECh");
17370:         #endif
17371:         // bitfield definitions
17372:         typedef union {
17373:             struct {
17374:                 unsigned PREINC0                :8;
17375:             };
17376:         } PREINC0bits_t;
17377:         extern volatile PREINC0bits_t PREINC0bits @ 0xFEC;
17378:         // bitfield macros
17379:         #define _PREINC0_PREINC0_POSN                               0x0
17380:         #define _PREINC0_PREINC0_POSITION                           0x0
17381:         #define _PREINC0_PREINC0_SIZE                               0x8
17382:         #define _PREINC0_PREINC0_LENGTH                             0x8
17383:         #define _PREINC0_PREINC0_MASK                               0xFF
17384:         
17385:         // Register: POSTDEC0
17386:         extern volatile unsigned char           POSTDEC0            @ 0xFED;
17387:         #ifndef _LIB_BUILD
17388:         asm("POSTDEC0 equ 0FEDh");
17389:         #endif
17390:         // bitfield definitions
17391:         typedef union {
17392:             struct {
17393:                 unsigned POSTDEC0               :8;
17394:             };
17395:         } POSTDEC0bits_t;
17396:         extern volatile POSTDEC0bits_t POSTDEC0bits @ 0xFED;
17397:         // bitfield macros
17398:         #define _POSTDEC0_POSTDEC0_POSN                             0x0
17399:         #define _POSTDEC0_POSTDEC0_POSITION                         0x0
17400:         #define _POSTDEC0_POSTDEC0_SIZE                             0x8
17401:         #define _POSTDEC0_POSTDEC0_LENGTH                           0x8
17402:         #define _POSTDEC0_POSTDEC0_MASK                             0xFF
17403:         
17404:         // Register: POSTINC0
17405:         extern volatile unsigned char           POSTINC0            @ 0xFEE;
17406:         #ifndef _LIB_BUILD
17407:         asm("POSTINC0 equ 0FEEh");
17408:         #endif
17409:         // bitfield definitions
17410:         typedef union {
17411:             struct {
17412:                 unsigned POSTINC0               :8;
17413:             };
17414:         } POSTINC0bits_t;
17415:         extern volatile POSTINC0bits_t POSTINC0bits @ 0xFEE;
17416:         // bitfield macros
17417:         #define _POSTINC0_POSTINC0_POSN                             0x0
17418:         #define _POSTINC0_POSTINC0_POSITION                         0x0
17419:         #define _POSTINC0_POSTINC0_SIZE                             0x8
17420:         #define _POSTINC0_POSTINC0_LENGTH                           0x8
17421:         #define _POSTINC0_POSTINC0_MASK                             0xFF
17422:         
17423:         // Register: INDF0
17424:         extern volatile unsigned char           INDF0               @ 0xFEF;
17425:         #ifndef _LIB_BUILD
17426:         asm("INDF0 equ 0FEFh");
17427:         #endif
17428:         // bitfield definitions
17429:         typedef union {
17430:             struct {
17431:                 unsigned INDF0                  :8;
17432:             };
17433:         } INDF0bits_t;
17434:         extern volatile INDF0bits_t INDF0bits @ 0xFEF;
17435:         // bitfield macros
17436:         #define _INDF0_INDF0_POSN                                   0x0
17437:         #define _INDF0_INDF0_POSITION                               0x0
17438:         #define _INDF0_INDF0_SIZE                                   0x8
17439:         #define _INDF0_INDF0_LENGTH                                 0x8
17440:         #define _INDF0_INDF0_MASK                                   0xFF
17441:         
17442:         // Register: INTCON3
17443:         extern volatile unsigned char           INTCON3             @ 0xFF0;
17444:         #ifndef _LIB_BUILD
17445:         asm("INTCON3 equ 0FF0h");
17446:         #endif
17447:         // bitfield definitions
17448:         typedef union {
17449:             struct {
17450:                 unsigned INT1IF                 :1;
17451:                 unsigned INT2IF                 :1;
17452:                 unsigned                        :1;
17453:                 unsigned INT1IE                 :1;
17454:                 unsigned INT2IE                 :1;
17455:                 unsigned                        :1;
17456:                 unsigned INT1IP                 :1;
17457:                 unsigned INT2IP                 :1;
17458:             };
17459:             struct {
17460:                 unsigned INT1F                  :1;
17461:                 unsigned INT2F                  :1;
17462:                 unsigned                        :1;
17463:                 unsigned INT1E                  :1;
17464:                 unsigned INT2E                  :1;
17465:                 unsigned                        :1;
17466:                 unsigned INT1P                  :1;
17467:                 unsigned INT2P                  :1;
17468:             };
17469:         } INTCON3bits_t;
17470:         extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;
17471:         // bitfield macros
17472:         #define _INTCON3_INT1IF_POSN                                0x0
17473:         #define _INTCON3_INT1IF_POSITION                            0x0
17474:         #define _INTCON3_INT1IF_SIZE                                0x1
17475:         #define _INTCON3_INT1IF_LENGTH                              0x1
17476:         #define _INTCON3_INT1IF_MASK                                0x1
17477:         #define _INTCON3_INT2IF_POSN                                0x1
17478:         #define _INTCON3_INT2IF_POSITION                            0x1
17479:         #define _INTCON3_INT2IF_SIZE                                0x1
17480:         #define _INTCON3_INT2IF_LENGTH                              0x1
17481:         #define _INTCON3_INT2IF_MASK                                0x2
17482:         #define _INTCON3_INT1IE_POSN                                0x3
17483:         #define _INTCON3_INT1IE_POSITION                            0x3
17484:         #define _INTCON3_INT1IE_SIZE                                0x1
17485:         #define _INTCON3_INT1IE_LENGTH                              0x1
17486:         #define _INTCON3_INT1IE_MASK                                0x8
17487:         #define _INTCON3_INT2IE_POSN                                0x4
17488:         #define _INTCON3_INT2IE_POSITION                            0x4
17489:         #define _INTCON3_INT2IE_SIZE                                0x1
17490:         #define _INTCON3_INT2IE_LENGTH                              0x1
17491:         #define _INTCON3_INT2IE_MASK                                0x10
17492:         #define _INTCON3_INT1IP_POSN                                0x6
17493:         #define _INTCON3_INT1IP_POSITION                            0x6
17494:         #define _INTCON3_INT1IP_SIZE                                0x1
17495:         #define _INTCON3_INT1IP_LENGTH                              0x1
17496:         #define _INTCON3_INT1IP_MASK                                0x40
17497:         #define _INTCON3_INT2IP_POSN                                0x7
17498:         #define _INTCON3_INT2IP_POSITION                            0x7
17499:         #define _INTCON3_INT2IP_SIZE                                0x1
17500:         #define _INTCON3_INT2IP_LENGTH                              0x1
17501:         #define _INTCON3_INT2IP_MASK                                0x80
17502:         #define _INTCON3_INT1F_POSN                                 0x0
17503:         #define _INTCON3_INT1F_POSITION                             0x0
17504:         #define _INTCON3_INT1F_SIZE                                 0x1
17505:         #define _INTCON3_INT1F_LENGTH                               0x1
17506:         #define _INTCON3_INT1F_MASK                                 0x1
17507:         #define _INTCON3_INT2F_POSN                                 0x1
17508:         #define _INTCON3_INT2F_POSITION                             0x1
17509:         #define _INTCON3_INT2F_SIZE                                 0x1
17510:         #define _INTCON3_INT2F_LENGTH                               0x1
17511:         #define _INTCON3_INT2F_MASK                                 0x2
17512:         #define _INTCON3_INT1E_POSN                                 0x3
17513:         #define _INTCON3_INT1E_POSITION                             0x3
17514:         #define _INTCON3_INT1E_SIZE                                 0x1
17515:         #define _INTCON3_INT1E_LENGTH                               0x1
17516:         #define _INTCON3_INT1E_MASK                                 0x8
17517:         #define _INTCON3_INT2E_POSN                                 0x4
17518:         #define _INTCON3_INT2E_POSITION                             0x4
17519:         #define _INTCON3_INT2E_SIZE                                 0x1
17520:         #define _INTCON3_INT2E_LENGTH                               0x1
17521:         #define _INTCON3_INT2E_MASK                                 0x10
17522:         #define _INTCON3_INT1P_POSN                                 0x6
17523:         #define _INTCON3_INT1P_POSITION                             0x6
17524:         #define _INTCON3_INT1P_SIZE                                 0x1
17525:         #define _INTCON3_INT1P_LENGTH                               0x1
17526:         #define _INTCON3_INT1P_MASK                                 0x40
17527:         #define _INTCON3_INT2P_POSN                                 0x7
17528:         #define _INTCON3_INT2P_POSITION                             0x7
17529:         #define _INTCON3_INT2P_SIZE                                 0x1
17530:         #define _INTCON3_INT2P_LENGTH                               0x1
17531:         #define _INTCON3_INT2P_MASK                                 0x80
17532:         
17533:         // Register: INTCON2
17534:         extern volatile unsigned char           INTCON2             @ 0xFF1;
17535:         #ifndef _LIB_BUILD
17536:         asm("INTCON2 equ 0FF1h");
17537:         #endif
17538:         // bitfield definitions
17539:         typedef union {
17540:             struct {
17541:                 unsigned                        :7;
17542:                 unsigned NOT_RBPU               :1;
17543:             };
17544:             struct {
17545:                 unsigned RBIP                   :1;
17546:                 unsigned                        :1;
17547:                 unsigned TMR0IP                 :1;
17548:                 unsigned                        :1;
17549:                 unsigned INTEDG2                :1;
17550:                 unsigned INTEDG1                :1;
17551:                 unsigned INTEDG0                :1;
17552:                 unsigned nRBPU                  :1;
17553:             };
17554:             struct {
17555:                 unsigned                        :7;
17556:                 unsigned RBPU                   :1;
17557:             };
17558:         } INTCON2bits_t;
17559:         extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;
17560:         // bitfield macros
17561:         #define _INTCON2_NOT_RBPU_POSN                              0x7
17562:         #define _INTCON2_NOT_RBPU_POSITION                          0x7
17563:         #define _INTCON2_NOT_RBPU_SIZE                              0x1
17564:         #define _INTCON2_NOT_RBPU_LENGTH                            0x1
17565:         #define _INTCON2_NOT_RBPU_MASK                              0x80
17566:         #define _INTCON2_RBIP_POSN                                  0x0
17567:         #define _INTCON2_RBIP_POSITION                              0x0
17568:         #define _INTCON2_RBIP_SIZE                                  0x1
17569:         #define _INTCON2_RBIP_LENGTH                                0x1
17570:         #define _INTCON2_RBIP_MASK                                  0x1
17571:         #define _INTCON2_TMR0IP_POSN                                0x2
17572:         #define _INTCON2_TMR0IP_POSITION                            0x2
17573:         #define _INTCON2_TMR0IP_SIZE                                0x1
17574:         #define _INTCON2_TMR0IP_LENGTH                              0x1
17575:         #define _INTCON2_TMR0IP_MASK                                0x4
17576:         #define _INTCON2_INTEDG2_POSN                               0x4
17577:         #define _INTCON2_INTEDG2_POSITION                           0x4
17578:         #define _INTCON2_INTEDG2_SIZE                               0x1
17579:         #define _INTCON2_INTEDG2_LENGTH                             0x1
17580:         #define _INTCON2_INTEDG2_MASK                               0x10
17581:         #define _INTCON2_INTEDG1_POSN                               0x5
17582:         #define _INTCON2_INTEDG1_POSITION                           0x5
17583:         #define _INTCON2_INTEDG1_SIZE                               0x1
17584:         #define _INTCON2_INTEDG1_LENGTH                             0x1
17585:         #define _INTCON2_INTEDG1_MASK                               0x20
17586:         #define _INTCON2_INTEDG0_POSN                               0x6
17587:         #define _INTCON2_INTEDG0_POSITION                           0x6
17588:         #define _INTCON2_INTEDG0_SIZE                               0x1
17589:         #define _INTCON2_INTEDG0_LENGTH                             0x1
17590:         #define _INTCON2_INTEDG0_MASK                               0x40
17591:         #define _INTCON2_nRBPU_POSN                                 0x7
17592:         #define _INTCON2_nRBPU_POSITION                             0x7
17593:         #define _INTCON2_nRBPU_SIZE                                 0x1
17594:         #define _INTCON2_nRBPU_LENGTH                               0x1
17595:         #define _INTCON2_nRBPU_MASK                                 0x80
17596:         #define _INTCON2_RBPU_POSN                                  0x7
17597:         #define _INTCON2_RBPU_POSITION                              0x7
17598:         #define _INTCON2_RBPU_SIZE                                  0x1
17599:         #define _INTCON2_RBPU_LENGTH                                0x1
17600:         #define _INTCON2_RBPU_MASK                                  0x80
17601:         
17602:         // Register: INTCON
17603:         extern volatile unsigned char           INTCON              @ 0xFF2;
17604:         #ifndef _LIB_BUILD
17605:         asm("INTCON equ 0FF2h");
17606:         #endif
17607:         // bitfield definitions
17608:         typedef union {
17609:             struct {
17610:                 unsigned RBIF                   :1;
17611:                 unsigned INT0IF                 :1;
17612:                 unsigned TMR0IF                 :1;
17613:                 unsigned RBIE                   :1;
17614:                 unsigned INT0IE                 :1;
17615:                 unsigned TMR0IE                 :1;
17616:                 unsigned PEIE_GIEL              :1;
17617:                 unsigned GIE_GIEH               :1;
17618:             };
17619:             struct {
17620:                 unsigned                        :1;
17621:                 unsigned INT0F                  :1;
17622:                 unsigned T0IF                   :1;
17623:                 unsigned                        :1;
17624:                 unsigned INT0E                  :1;
17625:                 unsigned T0IE                   :1;
17626:                 unsigned PEIE                   :1;
17627:                 unsigned GIE                    :1;
17628:             };
17629:             struct {
17630:                 unsigned                        :6;
17631:                 unsigned GIEL                   :1;
17632:                 unsigned GIEH                   :1;
17633:             };
17634:             struct {
17635:                 unsigned                        :1;
17636:                 unsigned INT0F                  :1;
17637:                 unsigned T0IF                   :1;
17638:                 unsigned                        :1;
17639:                 unsigned INT0E                  :1;
17640:                 unsigned T0IE                   :1;
17641:                 unsigned PEIE                   :1;
17642:                 unsigned GIE                    :1;
17643:             };
17644:             struct {
17645:                 unsigned                        :6;
17646:                 unsigned GIEL                   :1;
17647:                 unsigned GIEH                   :1;
17648:             };
17649:         } INTCONbits_t;
17650:         extern volatile INTCONbits_t INTCONbits @ 0xFF2;
17651:         // bitfield macros
17652:         #define _INTCON_RBIF_POSN                                   0x0
17653:         #define _INTCON_RBIF_POSITION                               0x0
17654:         #define _INTCON_RBIF_SIZE                                   0x1
17655:         #define _INTCON_RBIF_LENGTH                                 0x1
17656:         #define _INTCON_RBIF_MASK                                   0x1
17657:         #define _INTCON_INT0IF_POSN                                 0x1
17658:         #define _INTCON_INT0IF_POSITION                             0x1
17659:         #define _INTCON_INT0IF_SIZE                                 0x1
17660:         #define _INTCON_INT0IF_LENGTH                               0x1
17661:         #define _INTCON_INT0IF_MASK                                 0x2
17662:         #define _INTCON_TMR0IF_POSN                                 0x2
17663:         #define _INTCON_TMR0IF_POSITION                             0x2
17664:         #define _INTCON_TMR0IF_SIZE                                 0x1
17665:         #define _INTCON_TMR0IF_LENGTH                               0x1
17666:         #define _INTCON_TMR0IF_MASK                                 0x4
17667:         #define _INTCON_RBIE_POSN                                   0x3
17668:         #define _INTCON_RBIE_POSITION                               0x3
17669:         #define _INTCON_RBIE_SIZE                                   0x1
17670:         #define _INTCON_RBIE_LENGTH                                 0x1
17671:         #define _INTCON_RBIE_MASK                                   0x8
17672:         #define _INTCON_INT0IE_POSN                                 0x4
17673:         #define _INTCON_INT0IE_POSITION                             0x4
17674:         #define _INTCON_INT0IE_SIZE                                 0x1
17675:         #define _INTCON_INT0IE_LENGTH                               0x1
17676:         #define _INTCON_INT0IE_MASK                                 0x10
17677:         #define _INTCON_TMR0IE_POSN                                 0x5
17678:         #define _INTCON_TMR0IE_POSITION                             0x5
17679:         #define _INTCON_TMR0IE_SIZE                                 0x1
17680:         #define _INTCON_TMR0IE_LENGTH                               0x1
17681:         #define _INTCON_TMR0IE_MASK                                 0x20
17682:         #define _INTCON_PEIE_GIEL_POSN                              0x6
17683:         #define _INTCON_PEIE_GIEL_POSITION                          0x6
17684:         #define _INTCON_PEIE_GIEL_SIZE                              0x1
17685:         #define _INTCON_PEIE_GIEL_LENGTH                            0x1
17686:         #define _INTCON_PEIE_GIEL_MASK                              0x40
17687:         #define _INTCON_GIE_GIEH_POSN                               0x7
17688:         #define _INTCON_GIE_GIEH_POSITION                           0x7
17689:         #define _INTCON_GIE_GIEH_SIZE                               0x1
17690:         #define _INTCON_GIE_GIEH_LENGTH                             0x1
17691:         #define _INTCON_GIE_GIEH_MASK                               0x80
17692:         #define _INTCON_INT0F_POSN                                  0x1
17693:         #define _INTCON_INT0F_POSITION                              0x1
17694:         #define _INTCON_INT0F_SIZE                                  0x1
17695:         #define _INTCON_INT0F_LENGTH                                0x1
17696:         #define _INTCON_INT0F_MASK                                  0x2
17697:         #define _INTCON_T0IF_POSN                                   0x2
17698:         #define _INTCON_T0IF_POSITION                               0x2
17699:         #define _INTCON_T0IF_SIZE                                   0x1
17700:         #define _INTCON_T0IF_LENGTH                                 0x1
17701:         #define _INTCON_T0IF_MASK                                   0x4
17702:         #define _INTCON_INT0E_POSN                                  0x4
17703:         #define _INTCON_INT0E_POSITION                              0x4
17704:         #define _INTCON_INT0E_SIZE                                  0x1
17705:         #define _INTCON_INT0E_LENGTH                                0x1
17706:         #define _INTCON_INT0E_MASK                                  0x10
17707:         #define _INTCON_T0IE_POSN                                   0x5
17708:         #define _INTCON_T0IE_POSITION                               0x5
17709:         #define _INTCON_T0IE_SIZE                                   0x1
17710:         #define _INTCON_T0IE_LENGTH                                 0x1
17711:         #define _INTCON_T0IE_MASK                                   0x20
17712:         #define _INTCON_PEIE_POSN                                   0x6
17713:         #define _INTCON_PEIE_POSITION                               0x6
17714:         #define _INTCON_PEIE_SIZE                                   0x1
17715:         #define _INTCON_PEIE_LENGTH                                 0x1
17716:         #define _INTCON_PEIE_MASK                                   0x40
17717:         #define _INTCON_GIE_POSN                                    0x7
17718:         #define _INTCON_GIE_POSITION                                0x7
17719:         #define _INTCON_GIE_SIZE                                    0x1
17720:         #define _INTCON_GIE_LENGTH                                  0x1
17721:         #define _INTCON_GIE_MASK                                    0x80
17722:         #define _INTCON_GIEL_POSN                                   0x6
17723:         #define _INTCON_GIEL_POSITION                               0x6
17724:         #define _INTCON_GIEL_SIZE                                   0x1
17725:         #define _INTCON_GIEL_LENGTH                                 0x1
17726:         #define _INTCON_GIEL_MASK                                   0x40
17727:         #define _INTCON_GIEH_POSN                                   0x7
17728:         #define _INTCON_GIEH_POSITION                               0x7
17729:         #define _INTCON_GIEH_SIZE                                   0x1
17730:         #define _INTCON_GIEH_LENGTH                                 0x1
17731:         #define _INTCON_GIEH_MASK                                   0x80
17732:         
17733:         // Register: PROD
17734:         extern volatile unsigned short          PROD                @ 0xFF3;
17735:         #ifndef _LIB_BUILD
17736:         asm("PROD equ 0FF3h");
17737:         #endif
17738:         
17739:         // Register: PRODL
17740:         extern volatile unsigned char           PRODL               @ 0xFF3;
17741:         #ifndef _LIB_BUILD
17742:         asm("PRODL equ 0FF3h");
17743:         #endif
17744:         // bitfield definitions
17745:         typedef union {
17746:             struct {
17747:                 unsigned PRODL                  :8;
17748:             };
17749:         } PRODLbits_t;
17750:         extern volatile PRODLbits_t PRODLbits @ 0xFF3;
17751:         // bitfield macros
17752:         #define _PRODL_PRODL_POSN                                   0x0
17753:         #define _PRODL_PRODL_POSITION                               0x0
17754:         #define _PRODL_PRODL_SIZE                                   0x8
17755:         #define _PRODL_PRODL_LENGTH                                 0x8
17756:         #define _PRODL_PRODL_MASK                                   0xFF
17757:         
17758:         // Register: PRODH
17759:         extern volatile unsigned char           PRODH               @ 0xFF4;
17760:         #ifndef _LIB_BUILD
17761:         asm("PRODH equ 0FF4h");
17762:         #endif
17763:         // bitfield definitions
17764:         typedef union {
17765:             struct {
17766:                 unsigned PRODH                  :8;
17767:             };
17768:         } PRODHbits_t;
17769:         extern volatile PRODHbits_t PRODHbits @ 0xFF4;
17770:         // bitfield macros
17771:         #define _PRODH_PRODH_POSN                                   0x0
17772:         #define _PRODH_PRODH_POSITION                               0x0
17773:         #define _PRODH_PRODH_SIZE                                   0x8
17774:         #define _PRODH_PRODH_LENGTH                                 0x8
17775:         #define _PRODH_PRODH_MASK                                   0xFF
17776:         
17777:         // Register: TABLAT
17778:         extern volatile unsigned char           TABLAT              @ 0xFF5;
17779:         #ifndef _LIB_BUILD
17780:         asm("TABLAT equ 0FF5h");
17781:         #endif
17782:         // bitfield definitions
17783:         typedef union {
17784:             struct {
17785:                 unsigned TABLAT                 :8;
17786:             };
17787:         } TABLATbits_t;
17788:         extern volatile TABLATbits_t TABLATbits @ 0xFF5;
17789:         // bitfield macros
17790:         #define _TABLAT_TABLAT_POSN                                 0x0
17791:         #define _TABLAT_TABLAT_POSITION                             0x0
17792:         #define _TABLAT_TABLAT_SIZE                                 0x8
17793:         #define _TABLAT_TABLAT_LENGTH                               0x8
17794:         #define _TABLAT_TABLAT_MASK                                 0xFF
17795:         
17796:         // Register: TBLPTR
17797:         #ifndef __CCI__
17798:         extern volatile unsigned short long     TBLPTR              @ 0xFF6;
17799:         #endif
17800:         #ifndef _LIB_BUILD
17801:         asm("TBLPTR equ 0FF6h");
17802:         #endif
17803:         
17804:         // Register: TBLPTRL
17805:         extern volatile unsigned char           TBLPTRL             @ 0xFF6;
17806:         #ifndef _LIB_BUILD
17807:         asm("TBLPTRL equ 0FF6h");
17808:         #endif
17809:         // bitfield definitions
17810:         typedef union {
17811:             struct {
17812:                 unsigned TBLPTRL                :8;
17813:             };
17814:         } TBLPTRLbits_t;
17815:         extern volatile TBLPTRLbits_t TBLPTRLbits @ 0xFF6;
17816:         // bitfield macros
17817:         #define _TBLPTRL_TBLPTRL_POSN                               0x0
17818:         #define _TBLPTRL_TBLPTRL_POSITION                           0x0
17819:         #define _TBLPTRL_TBLPTRL_SIZE                               0x8
17820:         #define _TBLPTRL_TBLPTRL_LENGTH                             0x8
17821:         #define _TBLPTRL_TBLPTRL_MASK                               0xFF
17822:         
17823:         // Register: TBLPTRH
17824:         extern volatile unsigned char           TBLPTRH             @ 0xFF7;
17825:         #ifndef _LIB_BUILD
17826:         asm("TBLPTRH equ 0FF7h");
17827:         #endif
17828:         // bitfield definitions
17829:         typedef union {
17830:             struct {
17831:                 unsigned TBLPTRH                :8;
17832:             };
17833:         } TBLPTRHbits_t;
17834:         extern volatile TBLPTRHbits_t TBLPTRHbits @ 0xFF7;
17835:         // bitfield macros
17836:         #define _TBLPTRH_TBLPTRH_POSN                               0x0
17837:         #define _TBLPTRH_TBLPTRH_POSITION                           0x0
17838:         #define _TBLPTRH_TBLPTRH_SIZE                               0x8
17839:         #define _TBLPTRH_TBLPTRH_LENGTH                             0x8
17840:         #define _TBLPTRH_TBLPTRH_MASK                               0xFF
17841:         
17842:         // Register: TBLPTRU
17843:         extern volatile unsigned char           TBLPTRU             @ 0xFF8;
17844:         #ifndef _LIB_BUILD
17845:         asm("TBLPTRU equ 0FF8h");
17846:         #endif
17847:         // bitfield definitions
17848:         typedef union {
17849:             struct {
17850:                 unsigned TBLPTRU                :6;
17851:             };
17852:             struct {
17853:                 unsigned                        :5;
17854:                 unsigned ACSS                   :1;
17855:             };
17856:         } TBLPTRUbits_t;
17857:         extern volatile TBLPTRUbits_t TBLPTRUbits @ 0xFF8;
17858:         // bitfield macros
17859:         #define _TBLPTRU_TBLPTRU_POSN                               0x0
17860:         #define _TBLPTRU_TBLPTRU_POSITION                           0x0
17861:         #define _TBLPTRU_TBLPTRU_SIZE                               0x6
17862:         #define _TBLPTRU_TBLPTRU_LENGTH                             0x6
17863:         #define _TBLPTRU_TBLPTRU_MASK                               0x3F
17864:         #define _TBLPTRU_ACSS_POSN                                  0x5
17865:         #define _TBLPTRU_ACSS_POSITION                              0x5
17866:         #define _TBLPTRU_ACSS_SIZE                                  0x1
17867:         #define _TBLPTRU_ACSS_LENGTH                                0x1
17868:         #define _TBLPTRU_ACSS_MASK                                  0x20
17869:         
17870:         // Register: PCLAT
17871:         #ifndef __CCI__
17872:         extern volatile unsigned short long     PCLAT               @ 0xFF9;
17873:         #endif
17874:         #ifndef _LIB_BUILD
17875:         asm("PCLAT equ 0FF9h");
17876:         #endif
17877:         // aliases
17878:         #ifndef __CCI__
17879:         extern volatile unsigned short long     PC                  @ 0xFF9;
17880:         #endif
17881:         #ifndef _LIB_BUILD
17882:         asm("PC equ 0FF9h");
17883:         #endif
17884:         
17885:         // Register: PCL
17886:         extern volatile unsigned char           PCL                 @ 0xFF9;
17887:         #ifndef _LIB_BUILD
17888:         asm("PCL equ 0FF9h");
17889:         #endif
17890:         // bitfield definitions
17891:         typedef union {
17892:             struct {
17893:                 unsigned PCL                    :8;
17894:             };
17895:         } PCLbits_t;
17896:         extern volatile PCLbits_t PCLbits @ 0xFF9;
17897:         // bitfield macros
17898:         #define _PCL_PCL_POSN                                       0x0
17899:         #define _PCL_PCL_POSITION                                   0x0
17900:         #define _PCL_PCL_SIZE                                       0x8
17901:         #define _PCL_PCL_LENGTH                                     0x8
17902:         #define _PCL_PCL_MASK                                       0xFF
17903:         
17904:         // Register: PCLATH
17905:         extern volatile unsigned char           PCLATH              @ 0xFFA;
17906:         #ifndef _LIB_BUILD
17907:         asm("PCLATH equ 0FFAh");
17908:         #endif
17909:         // bitfield definitions
17910:         typedef union {
17911:             struct {
17912:                 unsigned PCH                    :8;
17913:             };
17914:         } PCLATHbits_t;
17915:         extern volatile PCLATHbits_t PCLATHbits @ 0xFFA;
17916:         // bitfield macros
17917:         #define _PCLATH_PCH_POSN                                    0x0
17918:         #define _PCLATH_PCH_POSITION                                0x0
17919:         #define _PCLATH_PCH_SIZE                                    0x8
17920:         #define _PCLATH_PCH_LENGTH                                  0x8
17921:         #define _PCLATH_PCH_MASK                                    0xFF
17922:         
17923:         // Register: PCLATU
17924:         extern volatile unsigned char           PCLATU              @ 0xFFB;
17925:         #ifndef _LIB_BUILD
17926:         asm("PCLATU equ 0FFBh");
17927:         #endif
17928:         
17929:         // Register: STKPTR
17930:         extern volatile unsigned char           STKPTR              @ 0xFFC;
17931:         #ifndef _LIB_BUILD
17932:         asm("STKPTR equ 0FFCh");
17933:         #endif
17934:         // bitfield definitions
17935:         typedef union {
17936:             struct {
17937:                 unsigned STKPTR                 :5;
17938:                 unsigned                        :1;
17939:                 unsigned STKUNF                 :1;
17940:                 unsigned STKFUL                 :1;
17941:             };
17942:             struct {
17943:                 unsigned STKPTR0                :1;
17944:                 unsigned STKPTR1                :1;
17945:                 unsigned STKPTR2                :1;
17946:                 unsigned STKPTR3                :1;
17947:                 unsigned STKPTR4                :1;
17948:                 unsigned                        :2;
17949:                 unsigned STKOVF                 :1;
17950:             };
17951:             struct {
17952:                 unsigned SP0                    :1;
17953:                 unsigned SP1                    :1;
17954:                 unsigned SP2                    :1;
17955:                 unsigned SP3                    :1;
17956:                 unsigned SP4                    :1;
17957:             };
17958:         } STKPTRbits_t;
17959:         extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;
17960:         // bitfield macros
17961:         #define _STKPTR_STKPTR_POSN                                 0x0
17962:         #define _STKPTR_STKPTR_POSITION                             0x0
17963:         #define _STKPTR_STKPTR_SIZE                                 0x5
17964:         #define _STKPTR_STKPTR_LENGTH                               0x5
17965:         #define _STKPTR_STKPTR_MASK                                 0x1F
17966:         #define _STKPTR_STKUNF_POSN                                 0x6
17967:         #define _STKPTR_STKUNF_POSITION                             0x6
17968:         #define _STKPTR_STKUNF_SIZE                                 0x1
17969:         #define _STKPTR_STKUNF_LENGTH                               0x1
17970:         #define _STKPTR_STKUNF_MASK                                 0x40
17971:         #define _STKPTR_STKFUL_POSN                                 0x7
17972:         #define _STKPTR_STKFUL_POSITION                             0x7
17973:         #define _STKPTR_STKFUL_SIZE                                 0x1
17974:         #define _STKPTR_STKFUL_LENGTH                               0x1
17975:         #define _STKPTR_STKFUL_MASK                                 0x80
17976:         #define _STKPTR_STKPTR0_POSN                                0x0
17977:         #define _STKPTR_STKPTR0_POSITION                            0x0
17978:         #define _STKPTR_STKPTR0_SIZE                                0x1
17979:         #define _STKPTR_STKPTR0_LENGTH                              0x1
17980:         #define _STKPTR_STKPTR0_MASK                                0x1
17981:         #define _STKPTR_STKPTR1_POSN                                0x1
17982:         #define _STKPTR_STKPTR1_POSITION                            0x1
17983:         #define _STKPTR_STKPTR1_SIZE                                0x1
17984:         #define _STKPTR_STKPTR1_LENGTH                              0x1
17985:         #define _STKPTR_STKPTR1_MASK                                0x2
17986:         #define _STKPTR_STKPTR2_POSN                                0x2
17987:         #define _STKPTR_STKPTR2_POSITION                            0x2
17988:         #define _STKPTR_STKPTR2_SIZE                                0x1
17989:         #define _STKPTR_STKPTR2_LENGTH                              0x1
17990:         #define _STKPTR_STKPTR2_MASK                                0x4
17991:         #define _STKPTR_STKPTR3_POSN                                0x3
17992:         #define _STKPTR_STKPTR3_POSITION                            0x3
17993:         #define _STKPTR_STKPTR3_SIZE                                0x1
17994:         #define _STKPTR_STKPTR3_LENGTH                              0x1
17995:         #define _STKPTR_STKPTR3_MASK                                0x8
17996:         #define _STKPTR_STKPTR4_POSN                                0x4
17997:         #define _STKPTR_STKPTR4_POSITION                            0x4
17998:         #define _STKPTR_STKPTR4_SIZE                                0x1
17999:         #define _STKPTR_STKPTR4_LENGTH                              0x1
18000:         #define _STKPTR_STKPTR4_MASK                                0x10
18001:         #define _STKPTR_STKOVF_POSN                                 0x7
18002:         #define _STKPTR_STKOVF_POSITION                             0x7
18003:         #define _STKPTR_STKOVF_SIZE                                 0x1
18004:         #define _STKPTR_STKOVF_LENGTH                               0x1
18005:         #define _STKPTR_STKOVF_MASK                                 0x80
18006:         #define _STKPTR_SP0_POSN                                    0x0
18007:         #define _STKPTR_SP0_POSITION                                0x0
18008:         #define _STKPTR_SP0_SIZE                                    0x1
18009:         #define _STKPTR_SP0_LENGTH                                  0x1
18010:         #define _STKPTR_SP0_MASK                                    0x1
18011:         #define _STKPTR_SP1_POSN                                    0x1
18012:         #define _STKPTR_SP1_POSITION                                0x1
18013:         #define _STKPTR_SP1_SIZE                                    0x1
18014:         #define _STKPTR_SP1_LENGTH                                  0x1
18015:         #define _STKPTR_SP1_MASK                                    0x2
18016:         #define _STKPTR_SP2_POSN                                    0x2
18017:         #define _STKPTR_SP2_POSITION                                0x2
18018:         #define _STKPTR_SP2_SIZE                                    0x1
18019:         #define _STKPTR_SP2_LENGTH                                  0x1
18020:         #define _STKPTR_SP2_MASK                                    0x4
18021:         #define _STKPTR_SP3_POSN                                    0x3
18022:         #define _STKPTR_SP3_POSITION                                0x3
18023:         #define _STKPTR_SP3_SIZE                                    0x1
18024:         #define _STKPTR_SP3_LENGTH                                  0x1
18025:         #define _STKPTR_SP3_MASK                                    0x8
18026:         #define _STKPTR_SP4_POSN                                    0x4
18027:         #define _STKPTR_SP4_POSITION                                0x4
18028:         #define _STKPTR_SP4_SIZE                                    0x1
18029:         #define _STKPTR_SP4_LENGTH                                  0x1
18030:         #define _STKPTR_SP4_MASK                                    0x10
18031:         
18032:         // Register: TOS
18033:         #ifndef __CCI__
18034:         extern volatile unsigned short long     TOS                 @ 0xFFD;
18035:         #endif
18036:         #ifndef _LIB_BUILD
18037:         asm("TOS equ 0FFDh");
18038:         #endif
18039:         
18040:         // Register: TOSL
18041:         extern volatile unsigned char           TOSL                @ 0xFFD;
18042:         #ifndef _LIB_BUILD
18043:         asm("TOSL equ 0FFDh");
18044:         #endif
18045:         // bitfield definitions
18046:         typedef union {
18047:             struct {
18048:                 unsigned TOSL                   :8;
18049:             };
18050:         } TOSLbits_t;
18051:         extern volatile TOSLbits_t TOSLbits @ 0xFFD;
18052:         // bitfield macros
18053:         #define _TOSL_TOSL_POSN                                     0x0
18054:         #define _TOSL_TOSL_POSITION                                 0x0
18055:         #define _TOSL_TOSL_SIZE                                     0x8
18056:         #define _TOSL_TOSL_LENGTH                                   0x8
18057:         #define _TOSL_TOSL_MASK                                     0xFF
18058:         
18059:         // Register: TOSH
18060:         extern volatile unsigned char           TOSH                @ 0xFFE;
18061:         #ifndef _LIB_BUILD
18062:         asm("TOSH equ 0FFEh");
18063:         #endif
18064:         // bitfield definitions
18065:         typedef union {
18066:             struct {
18067:                 unsigned TOSH                   :8;
18068:             };
18069:         } TOSHbits_t;
18070:         extern volatile TOSHbits_t TOSHbits @ 0xFFE;
18071:         // bitfield macros
18072:         #define _TOSH_TOSH_POSN                                     0x0
18073:         #define _TOSH_TOSH_POSITION                                 0x0
18074:         #define _TOSH_TOSH_SIZE                                     0x8
18075:         #define _TOSH_TOSH_LENGTH                                   0x8
18076:         #define _TOSH_TOSH_MASK                                     0xFF
18077:         
18078:         // Register: TOSU
18079:         extern volatile unsigned char           TOSU                @ 0xFFF;
18080:         #ifndef _LIB_BUILD
18081:         asm("TOSU equ 0FFFh");
18082:         #endif
18083:         
18084:         /*
18085:          * Bit Definitions
18086:          *  */
18087:         #define _DEPRECATED __attribute__((__deprecated__))
18088:         #ifndef BANKMASK
18089:         #define BANKMASK(addr) ((addr)&0FFh)
18090:         #endif
18091:         extern volatile __bit                   ABDEN1              @ (((unsigned) &BAUDCON1)*8) + 0;
18092:         #define                                 ABDEN1_bit          BANKMASK(BAUDCON1), 0
18093:         extern volatile __bit                   ABDEN2              @ (((unsigned) &BAUDCON2)*8) + 0;
18094:         #define                                 ABDEN2_bit          BANKMASK(BAUDCON2), 0
18095:         extern volatile __bit                   ABDOVF1             @ (((unsigned) &BAUDCON1)*8) + 7;
18096:         #define                                 ABDOVF1_bit         BANKMASK(BAUDCON1), 7
18097:         extern volatile __bit                   ABDOVF2             @ (((unsigned) &BAUDCON2)*8) + 7;
18098:         #define                                 ABDOVF2_bit         BANKMASK(BAUDCON2), 7
18099:         extern volatile __bit                   ACKDT1              @ (((unsigned) &SSP1CON2)*8) + 5;
18100:         #define                                 ACKDT1_bit          BANKMASK(SSP1CON2), 5
18101:         extern volatile __bit                   ACKDT2              @ (((unsigned) &SSP2CON2)*8) + 5;
18102:         #define                                 ACKDT2_bit          BANKMASK(SSP2CON2), 5
18103:         extern volatile __bit                   ACKEN1              @ (((unsigned) &SSP1CON2)*8) + 4;
18104:         #define                                 ACKEN1_bit          BANKMASK(SSP1CON2), 4
18105:         extern volatile __bit                   ACKEN2              @ (((unsigned) &SSP2CON2)*8) + 4;
18106:         #define                                 ACKEN2_bit          BANKMASK(SSP2CON2), 4
18107:         extern volatile __bit                   ACKSTAT1            @ (((unsigned) &SSP1CON2)*8) + 6;
18108:         #define                                 ACKSTAT1_bit        BANKMASK(SSP1CON2), 6
18109:         extern volatile __bit                   ACKSTAT2            @ (((unsigned) &SSP2CON2)*8) + 6;
18110:         #define                                 ACKSTAT2_bit        BANKMASK(SSP2CON2), 6
18111:         extern volatile __bit                   ACQT0               @ (((unsigned) &ADCON2)*8) + 3;
18112:         #define                                 ACQT0_bit           BANKMASK(ADCON2), 3
18113:         extern volatile __bit                   ACQT1               @ (((unsigned) &ADCON2)*8) + 4;
18114:         #define                                 ACQT1_bit           BANKMASK(ADCON2), 4
18115:         extern volatile __bit                   ACQT2               @ (((unsigned) &ADCON2)*8) + 5;
18116:         #define                                 ACQT2_bit           BANKMASK(ADCON2), 5
18117:         extern volatile __bit                   ACSS                @ (((unsigned) &TBLPTRU)*8) + 5;
18118:         #define                                 ACSS_bit            BANKMASK(TBLPTRU), 5
18119:         extern volatile __bit                   ADCMD               @ (((unsigned) &PMD2)*8) + 0;
18120:         #define                                 ADCMD_bit           BANKMASK(PMD2), 0
18121:         extern volatile __bit                   ADCS0               @ (((unsigned) &ADCON2)*8) + 0;
18122:         #define                                 ADCS0_bit           BANKMASK(ADCON2), 0
18123:         extern volatile __bit                   ADCS1               @ (((unsigned) &ADCON2)*8) + 1;
18124:         #define                                 ADCS1_bit           BANKMASK(ADCON2), 1
18125:         extern volatile __bit                   ADCS2               @ (((unsigned) &ADCON2)*8) + 2;
18126:         #define                                 ADCS2_bit           BANKMASK(ADCON2), 2
18127:         extern volatile __bit                   ADDEN1              @ (((unsigned) &RCSTA1)*8) + 3;
18128:         #define                                 ADDEN1_bit          BANKMASK(RCSTA1), 3
18129:         extern volatile __bit                   ADDEN2              @ (((unsigned) &RCSTA2)*8) + 3;
18130:         #define                                 ADDEN2_bit          BANKMASK(RCSTA2), 3
18131:         extern volatile __bit                   ADFM                @ (((unsigned) &ADCON2)*8) + 7;
18132:         #define                                 ADFM_bit            BANKMASK(ADCON2), 7
18133:         extern volatile __bit                   ADIE                @ (((unsigned) &PIE1)*8) + 6;
18134:         #define                                 ADIE_bit            BANKMASK(PIE1), 6
18135:         extern volatile __bit                   ADIF                @ (((unsigned) &PIR1)*8) + 6;
18136:         #define                                 ADIF_bit            BANKMASK(PIR1), 6
18137:         extern volatile __bit                   ADIP                @ (((unsigned) &IPR1)*8) + 6;
18138:         #define                                 ADIP_bit            BANKMASK(IPR1), 6
18139:         extern volatile __bit                   ADMSK1              @ (((unsigned) &SSP1CON2)*8) + 1;
18140:         #define                                 ADMSK1_bit          BANKMASK(SSP1CON2), 1
18141:         extern volatile __bit                   ADMSK11             @ (((unsigned) &SSP1CON2)*8) + 1;
18142:         #define                                 ADMSK11_bit         BANKMASK(SSP1CON2), 1
18143:         extern volatile __bit                   ADMSK12             @ (((unsigned) &SSP2CON2)*8) + 1;
18144:         #define                                 ADMSK12_bit         BANKMASK(SSP2CON2), 1
18145:         extern volatile __bit                   ADMSK2              @ (((unsigned) &SSP1CON2)*8) + 2;
18146:         #define                                 ADMSK2_bit          BANKMASK(SSP1CON2), 2
18147:         extern volatile __bit                   ADMSK21             @ (((unsigned) &SSP1CON2)*8) + 2;
18148:         #define                                 ADMSK21_bit         BANKMASK(SSP1CON2), 2
18149:         extern volatile __bit                   ADMSK22             @ (((unsigned) &SSP2CON2)*8) + 2;
18150:         #define                                 ADMSK22_bit         BANKMASK(SSP2CON2), 2
18151:         extern volatile __bit                   ADMSK3              @ (((unsigned) &SSP1CON2)*8) + 3;
18152:         #define                                 ADMSK3_bit          BANKMASK(SSP1CON2), 3
18153:         extern volatile __bit                   ADMSK31             @ (((unsigned) &SSP1CON2)*8) + 3;
18154:         #define                                 ADMSK31_bit         BANKMASK(SSP1CON2), 3
18155:         extern volatile __bit                   ADMSK32             @ (((unsigned) &SSP2CON2)*8) + 3;
18156:         #define                                 ADMSK32_bit         BANKMASK(SSP2CON2), 3
18157:         extern volatile __bit                   ADMSK4              @ (((unsigned) &SSP1CON2)*8) + 4;
18158:         #define                                 ADMSK4_bit          BANKMASK(SSP1CON2), 4
18159:         extern volatile __bit                   ADMSK41             @ (((unsigned) &SSP1CON2)*8) + 4;
18160:         #define                                 ADMSK41_bit         BANKMASK(SSP1CON2), 4
18161:         extern volatile __bit                   ADMSK42             @ (((unsigned) &SSP2CON2)*8) + 4;
18162:         #define                                 ADMSK42_bit         BANKMASK(SSP2CON2), 4
18163:         extern volatile __bit                   ADMSK5              @ (((unsigned) &SSP1CON2)*8) + 5;
18164:         #define                                 ADMSK5_bit          BANKMASK(SSP1CON2), 5
18165:         extern volatile __bit                   ADMSK51             @ (((unsigned) &SSP1CON2)*8) + 5;
18166:         #define                                 ADMSK51_bit         BANKMASK(SSP1CON2), 5
18167:         extern volatile __bit                   ADMSK52             @ (((unsigned) &SSP2CON2)*8) + 5;
18168:         #define                                 ADMSK52_bit         BANKMASK(SSP2CON2), 5
18169:         extern volatile __bit                   ADON                @ (((unsigned) &ADCON0)*8) + 0;
18170:         #define                                 ADON_bit            BANKMASK(ADCON0), 0
18171:         extern volatile __bit                   AN0                 @ (((unsigned) &PORTA)*8) + 0;
18172:         #define                                 AN0_bit             BANKMASK(PORTA), 0
18173:         extern volatile __bit                   AN1                 @ (((unsigned) &PORTA)*8) + 1;
18174:         #define                                 AN1_bit             BANKMASK(PORTA), 1
18175:         extern volatile __bit                   AN10                @ (((unsigned) &PORTB)*8) + 1;
18176:         #define                                 AN10_bit            BANKMASK(PORTB), 1
18177:         extern volatile __bit                   AN11                @ (((unsigned) &PORTB)*8) + 4;
18178:         #define                                 AN11_bit            BANKMASK(PORTB), 4
18179:         extern volatile __bit                   AN12                @ (((unsigned) &PORTB)*8) + 0;
18180:         #define                                 AN12_bit            BANKMASK(PORTB), 0
18181:         extern volatile __bit                   AN13                @ (((unsigned) &PORTB)*8) + 5;
18182:         #define                                 AN13_bit            BANKMASK(PORTB), 5
18183:         extern volatile __bit                   AN14                @ (((unsigned) &PORTC)*8) + 2;
18184:         #define                                 AN14_bit            BANKMASK(PORTC), 2
18185:         extern volatile __bit                   AN15                @ (((unsigned) &PORTC)*8) + 3;
18186:         #define                                 AN15_bit            BANKMASK(PORTC), 3
18187:         extern volatile __bit                   AN16                @ (((unsigned) &PORTC)*8) + 4;
18188:         #define                                 AN16_bit            BANKMASK(PORTC), 4
18189:         extern volatile __bit                   AN17                @ (((unsigned) &PORTC)*8) + 5;
18190:         #define                                 AN17_bit            BANKMASK(PORTC), 5
18191:         extern volatile __bit                   AN18                @ (((unsigned) &PORTC)*8) + 6;
18192:         #define                                 AN18_bit            BANKMASK(PORTC), 6
18193:         extern volatile __bit                   AN19                @ (((unsigned) &PORTC)*8) + 7;
18194:         #define                                 AN19_bit            BANKMASK(PORTC), 7
18195:         extern volatile __bit                   AN2                 @ (((unsigned) &PORTA)*8) + 2;
18196:         #define                                 AN2_bit             BANKMASK(PORTA), 2
18197:         extern volatile __bit                   AN20                @ (((unsigned) &PORTD)*8) + 0;
18198:         #define                                 AN20_bit            BANKMASK(PORTD), 0
18199:         extern volatile __bit                   AN21                @ (((unsigned) &PORTD)*8) + 1;
18200:         #define                                 AN21_bit            BANKMASK(PORTD), 1
18201:         extern volatile __bit                   AN22                @ (((unsigned) &PORTD)*8) + 2;
18202:         #define                                 AN22_bit            BANKMASK(PORTD), 2
18203:         extern volatile __bit                   AN23                @ (((unsigned) &PORTD)*8) + 3;
18204:         #define                                 AN23_bit            BANKMASK(PORTD), 3
18205:         extern volatile __bit                   AN24                @ (((unsigned) &PORTD)*8) + 4;
18206:         #define                                 AN24_bit            BANKMASK(PORTD), 4
18207:         extern volatile __bit                   AN25                @ (((unsigned) &PORTD)*8) + 5;
18208:         #define                                 AN25_bit            BANKMASK(PORTD), 5
18209:         extern volatile __bit                   AN26                @ (((unsigned) &PORTD)*8) + 6;
18210:         #define                                 AN26_bit            BANKMASK(PORTD), 6
18211:         extern volatile __bit                   AN27                @ (((unsigned) &PORTD)*8) + 7;
18212:         #define                                 AN27_bit            BANKMASK(PORTD), 7
18213:         extern volatile __bit                   AN3                 @ (((unsigned) &PORTA)*8) + 3;
18214:         #define                                 AN3_bit             BANKMASK(PORTA), 3
18215:         extern volatile __bit                   AN4                 @ (((unsigned) &PORTA)*8) + 5;
18216:         #define                                 AN4_bit             BANKMASK(PORTA), 5
18217:         extern volatile __bit                   AN5                 @ (((unsigned) &PORTE)*8) + 0;
18218:         #define                                 AN5_bit             BANKMASK(PORTE), 0
18219:         extern volatile __bit                   AN6                 @ (((unsigned) &PORTE)*8) + 1;
18220:         #define                                 AN6_bit             BANKMASK(PORTE), 1
18221:         extern volatile __bit                   AN7                 @ (((unsigned) &PORTE)*8) + 2;
18222:         #define                                 AN7_bit             BANKMASK(PORTE), 2
18223:         extern volatile __bit                   AN8                 @ (((unsigned) &PORTB)*8) + 2;
18224:         #define                                 AN8_bit             BANKMASK(PORTB), 2
18225:         extern volatile __bit                   AN9                 @ (((unsigned) &PORTB)*8) + 3;
18226:         #define                                 AN9_bit             BANKMASK(PORTB), 3
18227:         extern volatile __bit                   ANSA0               @ (((unsigned) &ANSELA)*8) + 0;
18228:         #define                                 ANSA0_bit           BANKMASK(ANSELA), 0
18229:         extern volatile __bit                   ANSA1               @ (((unsigned) &ANSELA)*8) + 1;
18230:         #define                                 ANSA1_bit           BANKMASK(ANSELA), 1
18231:         extern volatile __bit                   ANSA2               @ (((unsigned) &ANSELA)*8) + 2;
18232:         #define                                 ANSA2_bit           BANKMASK(ANSELA), 2
18233:         extern volatile __bit                   ANSA3               @ (((unsigned) &ANSELA)*8) + 3;
18234:         #define                                 ANSA3_bit           BANKMASK(ANSELA), 3
18235:         extern volatile __bit                   ANSA5               @ (((unsigned) &ANSELA)*8) + 5;
18236:         #define                                 ANSA5_bit           BANKMASK(ANSELA), 5
18237:         extern volatile __bit                   ANSB0               @ (((unsigned) &ANSELB)*8) + 0;
18238:         #define                                 ANSB0_bit           BANKMASK(ANSELB), 0
18239:         extern volatile __bit                   ANSB1               @ (((unsigned) &ANSELB)*8) + 1;
18240:         #define                                 ANSB1_bit           BANKMASK(ANSELB), 1
18241:         extern volatile __bit                   ANSB2               @ (((unsigned) &ANSELB)*8) + 2;
18242:         #define                                 ANSB2_bit           BANKMASK(ANSELB), 2
18243:         extern volatile __bit                   ANSB3               @ (((unsigned) &ANSELB)*8) + 3;
18244:         #define                                 ANSB3_bit           BANKMASK(ANSELB), 3
18245:         extern volatile __bit                   ANSB4               @ (((unsigned) &ANSELB)*8) + 4;
18246:         #define                                 ANSB4_bit           BANKMASK(ANSELB), 4
18247:         extern volatile __bit                   ANSB5               @ (((unsigned) &ANSELB)*8) + 5;
18248:         #define                                 ANSB5_bit           BANKMASK(ANSELB), 5
18249:         extern volatile __bit                   ANSC2               @ (((unsigned) &ANSELC)*8) + 2;
18250:         #define                                 ANSC2_bit           BANKMASK(ANSELC), 2
18251:         extern volatile __bit                   ANSC3               @ (((unsigned) &ANSELC)*8) + 3;
18252:         #define                                 ANSC3_bit           BANKMASK(ANSELC), 3
18253:         extern volatile __bit                   ANSC4               @ (((unsigned) &ANSELC)*8) + 4;
18254:         #define                                 ANSC4_bit           BANKMASK(ANSELC), 4
18255:         extern volatile __bit                   ANSC5               @ (((unsigned) &ANSELC)*8) + 5;
18256:         #define                                 ANSC5_bit           BANKMASK(ANSELC), 5
18257:         extern volatile __bit                   ANSC6               @ (((unsigned) &ANSELC)*8) + 6;
18258:         #define                                 ANSC6_bit           BANKMASK(ANSELC), 6
18259:         extern volatile __bit                   ANSC7               @ (((unsigned) &ANSELC)*8) + 7;
18260:         #define                                 ANSC7_bit           BANKMASK(ANSELC), 7
18261:         extern volatile __bit                   ANSD0               @ (((unsigned) &ANSELD)*8) + 0;
18262:         #define                                 ANSD0_bit           BANKMASK(ANSELD), 0
18263:         extern volatile __bit                   ANSD1               @ (((unsigned) &ANSELD)*8) + 1;
18264:         #define                                 ANSD1_bit           BANKMASK(ANSELD), 1
18265:         extern volatile __bit                   ANSD2               @ (((unsigned) &ANSELD)*8) + 2;
18266:         #define                                 ANSD2_bit           BANKMASK(ANSELD), 2
18267:         extern volatile __bit                   ANSD3               @ (((unsigned) &ANSELD)*8) + 3;
18268:         #define                                 ANSD3_bit           BANKMASK(ANSELD), 3
18269:         extern volatile __bit                   ANSD4               @ (((unsigned) &ANSELD)*8) + 4;
18270:         #define                                 ANSD4_bit           BANKMASK(ANSELD), 4
18271:         extern volatile __bit                   ANSD5               @ (((unsigned) &ANSELD)*8) + 5;
18272:         #define                                 ANSD5_bit           BANKMASK(ANSELD), 5
18273:         extern volatile __bit                   ANSD6               @ (((unsigned) &ANSELD)*8) + 6;
18274:         #define                                 ANSD6_bit           BANKMASK(ANSELD), 6
18275:         extern volatile __bit                   ANSD7               @ (((unsigned) &ANSELD)*8) + 7;
18276:         #define                                 ANSD7_bit           BANKMASK(ANSELD), 7
18277:         extern volatile __bit                   ANSE0               @ (((unsigned) &ANSELE)*8) + 0;
18278:         #define                                 ANSE0_bit           BANKMASK(ANSELE), 0
18279:         extern volatile __bit                   ANSE1               @ (((unsigned) &ANSELE)*8) + 1;
18280:         #define                                 ANSE1_bit           BANKMASK(ANSELE), 1
18281:         extern volatile __bit                   ANSE2               @ (((unsigned) &ANSELE)*8) + 2;
18282:         #define                                 ANSE2_bit           BANKMASK(ANSELE), 2
18283:         extern volatile __bit                   BCL1IE              @ (((unsigned) &PIE2)*8) + 3;
18284:         #define                                 BCL1IE_bit          BANKMASK(PIE2), 3
18285:         extern volatile __bit                   BCL1IF              @ (((unsigned) &PIR2)*8) + 3;
18286:         #define                                 BCL1IF_bit          BANKMASK(PIR2), 3
18287:         extern volatile __bit                   BCL1IP              @ (((unsigned) &IPR2)*8) + 3;
18288:         #define                                 BCL1IP_bit          BANKMASK(IPR2), 3
18289:         extern volatile __bit                   BCL2IE              @ (((unsigned) &PIE3)*8) + 6;
18290:         #define                                 BCL2IE_bit          BANKMASK(PIE3), 6
18291:         extern volatile __bit                   BCL2IF              @ (((unsigned) &PIR3)*8) + 6;
18292:         #define                                 BCL2IF_bit          BANKMASK(PIR3), 6
18293:         extern volatile __bit                   BCL2IP              @ (((unsigned) &IPR3)*8) + 6;
18294:         #define                                 BCL2IP_bit          BANKMASK(IPR3), 6
18295:         extern volatile __bit                   BCLIE               @ (((unsigned) &PIE2)*8) + 3;
18296:         #define                                 BCLIE_bit           BANKMASK(PIE2), 3
18297:         extern volatile __bit                   BCLIF               @ (((unsigned) &PIR2)*8) + 3;
18298:         #define                                 BCLIF_bit           BANKMASK(PIR2), 3
18299:         extern volatile __bit                   BCLIP               @ (((unsigned) &IPR2)*8) + 3;
18300:         #define                                 BCLIP_bit           BANKMASK(IPR2), 3
18301:         extern volatile __bit                   BF1                 @ (((unsigned) &SSP1STAT)*8) + 0;
18302:         #define                                 BF1_bit             BANKMASK(SSP1STAT), 0
18303:         extern volatile __bit                   BF2                 @ (((unsigned) &SSP2STAT)*8) + 0;
18304:         #define                                 BF2_bit             BANKMASK(SSP2STAT), 0
18305:         extern volatile __bit                   BGST                @ (((unsigned) &HLVDCON)*8) + 5;
18306:         #define                                 BGST_bit            BANKMASK(HLVDCON), 5
18307:         extern volatile __bit                   BGVST               @ (((unsigned) &HLVDCON)*8) + 6;
18308:         #define                                 BGVST_bit           BANKMASK(HLVDCON), 6
18309:         extern volatile __bit                   BOR                 @ (((unsigned) &RCON)*8) + 0;
18310:         #define                                 BOR_bit             BANKMASK(RCON), 0
18311:         extern volatile __bit                   BRG161              @ (((unsigned) &BAUDCON1)*8) + 3;
18312:         #define                                 BRG161_bit          BANKMASK(BAUDCON1), 3
18313:         extern volatile __bit                   BRG162              @ (((unsigned) &BAUDCON2)*8) + 3;
18314:         #define                                 BRG162_bit          BANKMASK(BAUDCON2), 3
18315:         extern volatile __bit                   BRGH1               @ (((unsigned) &TXSTA1)*8) + 2;
18316:         #define                                 BRGH1_bit           BANKMASK(TXSTA1), 2
18317:         extern volatile __bit                   BRGH2               @ (((unsigned) &TXSTA2)*8) + 2;
18318:         #define                                 BRGH2_bit           BANKMASK(TXSTA2), 2
18319:         extern volatile __bit                   C12IN0M             @ (((unsigned) &PORTA)*8) + 0;
18320:         #define                                 C12IN0M_bit         BANKMASK(PORTA), 0
18321:         extern volatile __bit                   C12IN0N             @ (((unsigned) &PORTA)*8) + 0;
18322:         #define                                 C12IN0N_bit         BANKMASK(PORTA), 0
18323:         extern volatile __bit                   C12IN1M             @ (((unsigned) &PORTA)*8) + 1;
18324:         #define                                 C12IN1M_bit         BANKMASK(PORTA), 1
18325:         extern volatile __bit                   C12IN1N             @ (((unsigned) &PORTA)*8) + 1;
18326:         #define                                 C12IN1N_bit         BANKMASK(PORTA), 1
18327:         extern volatile __bit                   C12IN2M             @ (((unsigned) &PORTB)*8) + 3;
18328:         #define                                 C12IN2M_bit         BANKMASK(PORTB), 3
18329:         extern volatile __bit                   C12IN2N             @ (((unsigned) &PORTB)*8) + 3;
18330:         #define                                 C12IN2N_bit         BANKMASK(PORTB), 3
18331:         extern volatile __bit                   C12IN3M             @ (((unsigned) &PORTB)*8) + 1;
18332:         #define                                 C12IN3M_bit         BANKMASK(PORTB), 1
18333:         extern volatile __bit                   C12IN3N             @ (((unsigned) &PORTB)*8) + 1;
18334:         #define                                 C12IN3N_bit         BANKMASK(PORTB), 1
18335:         extern volatile __bit                   C1CH0               @ (((unsigned) &CM1CON0)*8) + 0;
18336:         #define                                 C1CH0_bit           BANKMASK(CM1CON0), 0
18337:         extern volatile __bit                   C1CH1               @ (((unsigned) &CM1CON0)*8) + 1;
18338:         #define                                 C1CH1_bit           BANKMASK(CM1CON0), 1
18339:         extern volatile __bit                   C1HYS               @ (((unsigned) &CM2CON1)*8) + 3;
18340:         #define                                 C1HYS_bit           BANKMASK(CM2CON1), 3
18341:         extern volatile __bit                   C1IE                @ (((unsigned) &PIE2)*8) + 6;
18342:         #define                                 C1IE_bit            BANKMASK(PIE2), 6
18343:         extern volatile __bit                   C1IF                @ (((unsigned) &PIR2)*8) + 6;
18344:         #define                                 C1IF_bit            BANKMASK(PIR2), 6
18345:         extern volatile __bit                   C1INP               @ (((unsigned) &PORTA)*8) + 3;
18346:         #define                                 C1INP_bit           BANKMASK(PORTA), 3
18347:         extern volatile __bit                   C1IP                @ (((unsigned) &IPR2)*8) + 6;
18348:         #define                                 C1IP_bit            BANKMASK(IPR2), 6
18349:         extern volatile __bit                   C1OE                @ (((unsigned) &CM1CON0)*8) + 5;
18350:         #define                                 C1OE_bit            BANKMASK(CM1CON0), 5
18351:         extern volatile __bit                   C1ON                @ (((unsigned) &CM1CON0)*8) + 7;
18352:         #define                                 C1ON_bit            BANKMASK(CM1CON0), 7
18353:         extern volatile __bit                   C1POL               @ (((unsigned) &CM1CON0)*8) + 4;
18354:         #define                                 C1POL_bit           BANKMASK(CM1CON0), 4
18355:         extern volatile __bit                   C1R                 @ (((unsigned) &CM1CON0)*8) + 2;
18356:         #define                                 C1R_bit             BANKMASK(CM1CON0), 2
18357:         extern volatile __bit                   C1RSEL              @ (((unsigned) &CM2CON1)*8) + 5;
18358:         #define                                 C1RSEL_bit          BANKMASK(CM2CON1), 5
18359:         extern volatile __bit                   C1SP                @ (((unsigned) &CM1CON0)*8) + 3;
18360:         #define                                 C1SP_bit            BANKMASK(CM1CON0), 3
18361:         extern volatile __bit                   C1SYNC              @ (((unsigned) &CM2CON1)*8) + 1;
18362:         #define                                 C1SYNC_bit          BANKMASK(CM2CON1), 1
18363:         extern volatile __bit                   C1TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 0;
18364:         #define                                 C1TSEL0_bit         BANKMASK(CCPTMRS0), 0
18365:         extern volatile __bit                   C1TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 1;
18366:         #define                                 C1TSEL1_bit         BANKMASK(CCPTMRS0), 1
18367:         extern volatile __bit                   C2CH0               @ (((unsigned) &CM2CON0)*8) + 0;
18368:         #define                                 C2CH0_bit           BANKMASK(CM2CON0), 0
18369:         extern volatile __bit                   C2CH1               @ (((unsigned) &CM2CON0)*8) + 1;
18370:         #define                                 C2CH1_bit           BANKMASK(CM2CON0), 1
18371:         extern volatile __bit                   C2HYS               @ (((unsigned) &CM2CON1)*8) + 2;
18372:         #define                                 C2HYS_bit           BANKMASK(CM2CON1), 2
18373:         extern volatile __bit                   C2IE                @ (((unsigned) &PIE2)*8) + 5;
18374:         #define                                 C2IE_bit            BANKMASK(PIE2), 5
18375:         extern volatile __bit                   C2IF                @ (((unsigned) &PIR2)*8) + 5;
18376:         #define                                 C2IF_bit            BANKMASK(PIR2), 5
18377:         extern volatile __bit                   C2INP               @ (((unsigned) &PORTA)*8) + 2;
18378:         #define                                 C2INP_bit           BANKMASK(PORTA), 2
18379:         extern volatile __bit                   C2IP                @ (((unsigned) &IPR2)*8) + 5;
18380:         #define                                 C2IP_bit            BANKMASK(IPR2), 5
18381:         extern volatile __bit                   C2OE                @ (((unsigned) &CM2CON0)*8) + 5;
18382:         #define                                 C2OE_bit            BANKMASK(CM2CON0), 5
18383:         extern volatile __bit                   C2ON                @ (((unsigned) &CM2CON0)*8) + 7;
18384:         #define                                 C2ON_bit            BANKMASK(CM2CON0), 7
18385:         extern volatile __bit                   C2POL               @ (((unsigned) &CM2CON0)*8) + 4;
18386:         #define                                 C2POL_bit           BANKMASK(CM2CON0), 4
18387:         extern volatile __bit                   C2R                 @ (((unsigned) &CM2CON0)*8) + 2;
18388:         #define                                 C2R_bit             BANKMASK(CM2CON0), 2
18389:         extern volatile __bit                   C2RSEL              @ (((unsigned) &CM2CON1)*8) + 4;
18390:         #define                                 C2RSEL_bit          BANKMASK(CM2CON1), 4
18391:         extern volatile __bit                   C2SP                @ (((unsigned) &CM2CON0)*8) + 3;
18392:         #define                                 C2SP_bit            BANKMASK(CM2CON0), 3
18393:         extern volatile __bit                   C2SYNC              @ (((unsigned) &CM2CON1)*8) + 0;
18394:         #define                                 C2SYNC_bit          BANKMASK(CM2CON1), 0
18395:         extern volatile __bit                   C2TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 3;
18396:         #define                                 C2TSEL0_bit         BANKMASK(CCPTMRS0), 3
18397:         extern volatile __bit                   C2TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 4;
18398:         #define                                 C2TSEL1_bit         BANKMASK(CCPTMRS0), 4
18399:         extern volatile __bit                   C3TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 6;
18400:         #define                                 C3TSEL0_bit         BANKMASK(CCPTMRS0), 6
18401:         extern volatile __bit                   C3TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 7;
18402:         #define                                 C3TSEL1_bit         BANKMASK(CCPTMRS0), 7
18403:         extern volatile __bit                   C4TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 0;
18404:         #define                                 C4TSEL0_bit         BANKMASK(CCPTMRS1), 0
18405:         extern volatile __bit                   C4TSEL1             @ (((unsigned) &CCPTMRS1)*8) + 1;
18406:         #define                                 C4TSEL1_bit         BANKMASK(CCPTMRS1), 1
18407:         extern volatile __bit                   C5TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 2;
18408:         #define                                 C5TSEL0_bit         BANKMASK(CCPTMRS1), 2
18409:         extern volatile __bit                   C5TSEL1             @ (((unsigned) &CCPTMRS1)*8) + 3;
18410:         #define                                 C5TSEL1_bit         BANKMASK(CCPTMRS1), 3
18411:         extern volatile __bit                   CARRY               @ (((unsigned) &STATUS)*8) + 0;
18412:         #define                                 CARRY_bit           BANKMASK(STATUS), 0
18413:         extern volatile __bit                   CCH0                @ (((unsigned) &CM1CON0)*8) + 0;
18414:         #define                                 CCH0_bit            BANKMASK(CM1CON0), 0
18415:         extern volatile __bit                   CCH01               @ (((unsigned) &CM1CON0)*8) + 0;
18416:         #define                                 CCH01_bit           BANKMASK(CM1CON0), 0
18417:         extern volatile __bit                   CCH02               @ (((unsigned) &CM2CON0)*8) + 0;
18418:         #define                                 CCH02_bit           BANKMASK(CM2CON0), 0
18419:         extern volatile __bit                   CCH05               @ (((unsigned) &IPR5)*8) + 0;
18420:         #define                                 CCH05_bit           BANKMASK(IPR5), 0
18421:         extern volatile __bit                   CCH1                @ (((unsigned) &CM1CON0)*8) + 1;
18422:         #define                                 CCH1_bit            BANKMASK(CM1CON0), 1
18423:         extern volatile __bit                   CCH11               @ (((unsigned) &CM1CON0)*8) + 1;
18424:         #define                                 CCH11_bit           BANKMASK(CM1CON0), 1
18425:         extern volatile __bit                   CCH12               @ (((unsigned) &CM2CON0)*8) + 1;
18426:         #define                                 CCH12_bit           BANKMASK(CM2CON0), 1
18427:         extern volatile __bit                   CCH15               @ (((unsigned) &IPR5)*8) + 1;
18428:         #define                                 CCH15_bit           BANKMASK(IPR5), 1
18429:         extern volatile __bit                   CCIP3IP             @ (((unsigned) &IPR4)*8) + 0;
18430:         #define                                 CCIP3IP_bit         BANKMASK(IPR4), 0
18431:         extern volatile __bit                   CCP1                @ (((unsigned) &PORTC)*8) + 2;
18432:         #define                                 CCP1_bit            BANKMASK(PORTC), 2
18433:         extern volatile __bit                   CCP10               @ (((unsigned) &PORTE)*8) + 2;
18434:         #define                                 CCP10_bit           BANKMASK(PORTE), 2
18435:         extern volatile __bit                   CCP1AS0             @ (((unsigned) &ECCP1AS)*8) + 4;
18436:         #define                                 CCP1AS0_bit         BANKMASK(ECCP1AS), 4
18437:         extern volatile __bit                   CCP1AS1             @ (((unsigned) &ECCP1AS)*8) + 5;
18438:         #define                                 CCP1AS1_bit         BANKMASK(ECCP1AS), 5
18439:         extern volatile __bit                   CCP1AS2             @ (((unsigned) &ECCP1AS)*8) + 6;
18440:         #define                                 CCP1AS2_bit         BANKMASK(ECCP1AS), 6
18441:         extern volatile __bit                   CCP1ASE             @ (((unsigned) &ECCP1AS)*8) + 7;
18442:         #define                                 CCP1ASE_bit         BANKMASK(ECCP1AS), 7
18443:         extern volatile __bit                   CCP1IE              @ (((unsigned) &PIE1)*8) + 2;
18444:         #define                                 CCP1IE_bit          BANKMASK(PIE1), 2
18445:         extern volatile __bit                   CCP1IF              @ (((unsigned) &PIR1)*8) + 2;
18446:         #define                                 CCP1IF_bit          BANKMASK(PIR1), 2
18447:         extern volatile __bit                   CCP1IP              @ (((unsigned) &IPR1)*8) + 2;
18448:         #define                                 CCP1IP_bit          BANKMASK(IPR1), 2
18449:         extern volatile __bit                   CCP1M0              @ (((unsigned) &CCP1CON)*8) + 0;
18450:         #define                                 CCP1M0_bit          BANKMASK(CCP1CON), 0
18451:         extern volatile __bit                   CCP1M1              @ (((unsigned) &CCP1CON)*8) + 1;
18452:         #define                                 CCP1M1_bit          BANKMASK(CCP1CON), 1
18453:         extern volatile __bit                   CCP1M2              @ (((unsigned) &CCP1CON)*8) + 2;
18454:         #define                                 CCP1M2_bit          BANKMASK(CCP1CON), 2
18455:         extern volatile __bit                   CCP1M3              @ (((unsigned) &CCP1CON)*8) + 3;
18456:         #define                                 CCP1M3_bit          BANKMASK(CCP1CON), 3
18457:         extern volatile __bit                   CCP1MD              @ (((unsigned) &PMD1)*8) + 0;
18458:         #define                                 CCP1MD_bit          BANKMASK(PMD1), 0
18459:         extern volatile __bit                   CCP2AS0             @ (((unsigned) &ECCP2AS)*8) + 4;
18460:         #define                                 CCP2AS0_bit         BANKMASK(ECCP2AS), 4
18461:         extern volatile __bit                   CCP2AS1             @ (((unsigned) &ECCP2AS)*8) + 5;
18462:         #define                                 CCP2AS1_bit         BANKMASK(ECCP2AS), 5
18463:         extern volatile __bit                   CCP2AS2             @ (((unsigned) &ECCP2AS)*8) + 6;
18464:         #define                                 CCP2AS2_bit         BANKMASK(ECCP2AS), 6
18465:         extern volatile __bit                   CCP2ASE             @ (((unsigned) &ECCP2AS)*8) + 7;
18466:         #define                                 CCP2ASE_bit         BANKMASK(ECCP2AS), 7
18467:         extern volatile __bit                   CCP2E               @ (((unsigned) &PORTE)*8) + 7;
18468:         #define                                 CCP2E_bit           BANKMASK(PORTE), 7
18469:         extern volatile __bit                   CCP2IE              @ (((unsigned) &PIE2)*8) + 0;
18470:         #define                                 CCP2IE_bit          BANKMASK(PIE2), 0
18471:         extern volatile __bit                   CCP2IF              @ (((unsigned) &PIR2)*8) + 0;
18472:         #define                                 CCP2IF_bit          BANKMASK(PIR2), 0
18473:         extern volatile __bit                   CCP2IP              @ (((unsigned) &IPR2)*8) + 0;
18474:         #define                                 CCP2IP_bit          BANKMASK(IPR2), 0
18475:         extern volatile __bit                   CCP2M0              @ (((unsigned) &CCP2CON)*8) + 0;
18476:         #define                                 CCP2M0_bit          BANKMASK(CCP2CON), 0
18477:         extern volatile __bit                   CCP2M1              @ (((unsigned) &CCP2CON)*8) + 1;
18478:         #define                                 CCP2M1_bit          BANKMASK(CCP2CON), 1
18479:         extern volatile __bit                   CCP2M2              @ (((unsigned) &CCP2CON)*8) + 2;
18480:         #define                                 CCP2M2_bit          BANKMASK(CCP2CON), 2
18481:         extern volatile __bit                   CCP2M3              @ (((unsigned) &CCP2CON)*8) + 3;
18482:         #define                                 CCP2M3_bit          BANKMASK(CCP2CON), 3
18483:         extern volatile __bit                   CCP2MD              @ (((unsigned) &PMD1)*8) + 1;
18484:         #define                                 CCP2MD_bit          BANKMASK(PMD1), 1
18485:         extern volatile __bit                   CCP2_PA2            @ (((unsigned) &PORTB)*8) + 3;
18486:         #define                                 CCP2_PA2_bit        BANKMASK(PORTB), 3
18487:         extern volatile __bit                   CCP3AS0             @ (((unsigned) &ECCP3AS)*8) + 4;
18488:         #define                                 CCP3AS0_bit         BANKMASK(ECCP3AS), 4
18489:         extern volatile __bit                   CCP3AS1             @ (((unsigned) &ECCP3AS)*8) + 5;
18490:         #define                                 CCP3AS1_bit         BANKMASK(ECCP3AS), 5
18491:         extern volatile __bit                   CCP3AS2             @ (((unsigned) &ECCP3AS)*8) + 6;
18492:         #define                                 CCP3AS2_bit         BANKMASK(ECCP3AS), 6
18493:         extern volatile __bit                   CCP3ASE             @ (((unsigned) &ECCP3AS)*8) + 7;
18494:         #define                                 CCP3ASE_bit         BANKMASK(ECCP3AS), 7
18495:         extern volatile __bit                   CCP3IE              @ (((unsigned) &PIE4)*8) + 0;
18496:         #define                                 CCP3IE_bit          BANKMASK(PIE4), 0
18497:         extern volatile __bit                   CCP3IF              @ (((unsigned) &PIR4)*8) + 0;
18498:         #define                                 CCP3IF_bit          BANKMASK(PIR4), 0
18499:         extern volatile __bit                   CCP3IP              @ (((unsigned) &IPR4)*8) + 0;
18500:         #define                                 CCP3IP_bit          BANKMASK(IPR4), 0
18501:         extern volatile __bit                   CCP3M0              @ (((unsigned) &CCP3CON)*8) + 0;
18502:         #define                                 CCP3M0_bit          BANKMASK(CCP3CON), 0
18503:         extern volatile __bit                   CCP3M1              @ (((unsigned) &CCP3CON)*8) + 1;
18504:         #define                                 CCP3M1_bit          BANKMASK(CCP3CON), 1
18505:         extern volatile __bit                   CCP3M2              @ (((unsigned) &CCP3CON)*8) + 2;
18506:         #define                                 CCP3M2_bit          BANKMASK(CCP3CON), 2
18507:         extern volatile __bit                   CCP3M3              @ (((unsigned) &CCP3CON)*8) + 3;
18508:         #define                                 CCP3M3_bit          BANKMASK(CCP3CON), 3
18509:         extern volatile __bit                   CCP3MD              @ (((unsigned) &PMD1)*8) + 2;
18510:         #define                                 CCP3MD_bit          BANKMASK(PMD1), 2
18511:         extern volatile __bit                   CCP4                @ (((unsigned) &PORTD)*8) + 1;
18512:         #define                                 CCP4_bit            BANKMASK(PORTD), 1
18513:         extern volatile __bit                   CCP4IE              @ (((unsigned) &PIE4)*8) + 1;
18514:         #define                                 CCP4IE_bit          BANKMASK(PIE4), 1
18515:         extern volatile __bit                   CCP4IF              @ (((unsigned) &PIR4)*8) + 1;
18516:         #define                                 CCP4IF_bit          BANKMASK(PIR4), 1
18517:         extern volatile __bit                   CCP4IP              @ (((unsigned) &IPR4)*8) + 1;
18518:         #define                                 CCP4IP_bit          BANKMASK(IPR4), 1
18519:         extern volatile __bit                   CCP4M0              @ (((unsigned) &CCP4CON)*8) + 0;
18520:         #define                                 CCP4M0_bit          BANKMASK(CCP4CON), 0
18521:         extern volatile __bit                   CCP4M1              @ (((unsigned) &CCP4CON)*8) + 1;
18522:         #define                                 CCP4M1_bit          BANKMASK(CCP4CON), 1
18523:         extern volatile __bit                   CCP4M2              @ (((unsigned) &CCP4CON)*8) + 2;
18524:         #define                                 CCP4M2_bit          BANKMASK(CCP4CON), 2
18525:         extern volatile __bit                   CCP4M3              @ (((unsigned) &CCP4CON)*8) + 3;
18526:         #define                                 CCP4M3_bit          BANKMASK(CCP4CON), 3
18527:         extern volatile __bit                   CCP4MD              @ (((unsigned) &PMD1)*8) + 3;
18528:         #define                                 CCP4MD_bit          BANKMASK(PMD1), 3
18529:         extern volatile __bit                   CCP5                @ (((unsigned) &PORTE)*8) + 2;
18530:         #define                                 CCP5_bit            BANKMASK(PORTE), 2
18531:         extern volatile __bit                   CCP5IE              @ (((unsigned) &PIE4)*8) + 2;
18532:         #define                                 CCP5IE_bit          BANKMASK(PIE4), 2
18533:         extern volatile __bit                   CCP5IF              @ (((unsigned) &PIR4)*8) + 2;
18534:         #define                                 CCP5IF_bit          BANKMASK(PIR4), 2
18535:         extern volatile __bit                   CCP5IP              @ (((unsigned) &IPR4)*8) + 2;
18536:         #define                                 CCP5IP_bit          BANKMASK(IPR4), 2
18537:         extern volatile __bit                   CCP5M0              @ (((unsigned) &CCP5CON)*8) + 0;
18538:         #define                                 CCP5M0_bit          BANKMASK(CCP5CON), 0
18539:         extern volatile __bit                   CCP5M1              @ (((unsigned) &CCP5CON)*8) + 1;
18540:         #define                                 CCP5M1_bit          BANKMASK(CCP5CON), 1
18541:         extern volatile __bit                   CCP5M2              @ (((unsigned) &CCP5CON)*8) + 2;
18542:         #define                                 CCP5M2_bit          BANKMASK(CCP5CON), 2
18543:         extern volatile __bit                   CCP5M3              @ (((unsigned) &CCP5CON)*8) + 3;
18544:         #define                                 CCP5M3_bit          BANKMASK(CCP5CON), 3
18545:         extern volatile __bit                   CCP5MD              @ (((unsigned) &PMD1)*8) + 4;
18546:         #define                                 CCP5MD_bit          BANKMASK(PMD1), 4
18547:         extern volatile __bit                   CCP6E               @ (((unsigned) &PORTE)*8) + 6;
18548:         #define                                 CCP6E_bit           BANKMASK(PORTE), 6
18549:         extern volatile __bit                   CCP7E               @ (((unsigned) &PORTE)*8) + 5;
18550:         #define                                 CCP7E_bit           BANKMASK(PORTE), 5
18551:         extern volatile __bit                   CCP8E               @ (((unsigned) &PORTE)*8) + 4;
18552:         #define                                 CCP8E_bit           BANKMASK(PORTE), 4
18553:         extern volatile __bit                   CCP9E               @ (((unsigned) &PORTE)*8) + 3;
18554:         #define                                 CCP9E_bit           BANKMASK(PORTE), 3
18555:         extern volatile __bit                   CFGS                @ (((unsigned) &EECON1)*8) + 6;
18556:         #define                                 CFGS_bit            BANKMASK(EECON1), 6
18557:         extern volatile __bit                   CHS0                @ (((unsigned) &ADCON0)*8) + 2;
18558:         #define                                 CHS0_bit            BANKMASK(ADCON0), 2
18559:         extern volatile __bit                   CHS1                @ (((unsigned) &ADCON0)*8) + 3;
18560:         #define                                 CHS1_bit            BANKMASK(ADCON0), 3
18561:         extern volatile __bit                   CHS2                @ (((unsigned) &ADCON0)*8) + 4;
18562:         #define                                 CHS2_bit            BANKMASK(ADCON0), 4
18563:         extern volatile __bit                   CHS3                @ (((unsigned) &ADCON0)*8) + 5;
18564:         #define                                 CHS3_bit            BANKMASK(ADCON0), 5
18565:         extern volatile __bit                   CHS4                @ (((unsigned) &ADCON0)*8) + 6;
18566:         #define                                 CHS4_bit            BANKMASK(ADCON0), 6
18567:         extern volatile __bit                   CHSN3               @ (((unsigned) &ADCON1)*8) + 3;
18568:         #define                                 CHSN3_bit           BANKMASK(ADCON1), 3
18569:         extern volatile __bit                   CK                  @ (((unsigned) &PORTC)*8) + 6;
18570:         #define                                 CK_bit              BANKMASK(PORTC), 6
18571:         extern volatile __bit                   CK1                 @ (((unsigned) &PORTC)*8) + 6;
18572:         #define                                 CK1_bit             BANKMASK(PORTC), 6
18573:         extern volatile __bit                   CK2                 @ (((unsigned) &PORTD)*8) + 6;
18574:         #define                                 CK2_bit             BANKMASK(PORTD), 6
18575:         extern volatile __bit                   CKE1                @ (((unsigned) &SSP1STAT)*8) + 6;
18576:         #define                                 CKE1_bit            BANKMASK(SSP1STAT), 6
18577:         extern volatile __bit                   CKE2                @ (((unsigned) &SSP2STAT)*8) + 6;
18578:         #define                                 CKE2_bit            BANKMASK(SSP2STAT), 6
18579:         extern volatile __bit                   CKP1                @ (((unsigned) &SSP1CON1)*8) + 4;
18580:         #define                                 CKP1_bit            BANKMASK(SSP1CON1), 4
18581:         extern volatile __bit                   CKP2                @ (((unsigned) &SSP2CON1)*8) + 4;
18582:         #define                                 CKP2_bit            BANKMASK(SSP2CON1), 4
18583:         extern volatile __bit                   CMIE                @ (((unsigned) &PIE2)*8) + 6;
18584:         #define                                 CMIE_bit            BANKMASK(PIE2), 6
18585:         extern volatile __bit                   CMIF                @ (((unsigned) &PIR2)*8) + 6;
18586:         #define                                 CMIF_bit            BANKMASK(PIR2), 6
18587:         extern volatile __bit                   CMIP                @ (((unsigned) &IPR2)*8) + 6;
18588:         #define                                 CMIP_bit            BANKMASK(IPR2), 6
18589:         extern volatile __bit                   CMP1MD              @ (((unsigned) &PMD2)*8) + 1;
18590:         #define                                 CMP1MD_bit          BANKMASK(PMD2), 1
18591:         extern volatile __bit                   CMP2MD              @ (((unsigned) &PMD2)*8) + 2;
18592:         #define                                 CMP2MD_bit          BANKMASK(PMD2), 2
18593:         extern volatile __bit                   COE                 @ (((unsigned) &CM1CON0)*8) + 6;
18594:         #define                                 COE_bit             BANKMASK(CM1CON0), 6
18595:         extern volatile __bit                   COE1                @ (((unsigned) &CM1CON0)*8) + 6;
18596:         #define                                 COE1_bit            BANKMASK(CM1CON0), 6
18597:         extern volatile __bit                   COE2                @ (((unsigned) &CM2CON0)*8) + 6;
18598:         #define                                 COE2_bit            BANKMASK(CM2CON0), 6
18599:         extern volatile __bit                   CON                 @ (((unsigned) &CM1CON0)*8) + 7;
18600:         #define                                 CON_bit             BANKMASK(CM1CON0), 7
18601:         extern volatile __bit                   CON1                @ (((unsigned) &CM1CON0)*8) + 7;
18602:         #define                                 CON1_bit            BANKMASK(CM1CON0), 7
18603:         extern volatile __bit                   CON2                @ (((unsigned) &CM2CON0)*8) + 7;
18604:         #define                                 CON2_bit            BANKMASK(CM2CON0), 7
18605:         extern volatile __bit                   CPOL                @ (((unsigned) &CM1CON0)*8) + 5;
18606:         #define                                 CPOL_bit            BANKMASK(CM1CON0), 5
18607:         extern volatile __bit                   CPOL1               @ (((unsigned) &CM1CON0)*8) + 5;
18608:         #define                                 CPOL1_bit           BANKMASK(CM1CON0), 5
18609:         extern volatile __bit                   CPOL2               @ (((unsigned) &CM2CON0)*8) + 5;
18610:         #define                                 CPOL2_bit           BANKMASK(CM2CON0), 5
18611:         extern volatile __bit                   CREF                @ (((unsigned) &CM1CON0)*8) + 2;
18612:         #define                                 CREF_bit            BANKMASK(CM1CON0), 2
18613:         extern volatile __bit                   CREF1               @ (((unsigned) &CM1CON0)*8) + 2;
18614:         #define                                 CREF1_bit           BANKMASK(CM1CON0), 2
18615:         extern volatile __bit                   CREF2               @ (((unsigned) &CM2CON0)*8) + 2;
18616:         #define                                 CREF2_bit           BANKMASK(CM2CON0), 2
18617:         extern volatile __bit                   CREN1               @ (((unsigned) &RCSTA1)*8) + 4;
18618:         #define                                 CREN1_bit           BANKMASK(RCSTA1), 4
18619:         extern volatile __bit                   CREN2               @ (((unsigned) &RCSTA2)*8) + 4;
18620:         #define                                 CREN2_bit           BANKMASK(RCSTA2), 4
18621:         extern volatile __bit                   CS                  @ (((unsigned) &PORTE)*8) + 2;
18622:         #define                                 CS_bit              BANKMASK(PORTE), 2
18623:         extern volatile __bit                   CSRC1               @ (((unsigned) &TXSTA1)*8) + 7;
18624:         #define                                 CSRC1_bit           BANKMASK(TXSTA1), 7
18625:         extern volatile __bit                   CSRC2               @ (((unsigned) &TXSTA2)*8) + 7;
18626:         #define                                 CSRC2_bit           BANKMASK(TXSTA2), 7
18627:         extern volatile __bit                   CTED1               @ (((unsigned) &PORTB)*8) + 2;
18628:         #define                                 CTED1_bit           BANKMASK(PORTB), 2
18629:         extern volatile __bit                   CTED2               @ (((unsigned) &PORTB)*8) + 3;
18630:         #define                                 CTED2_bit           BANKMASK(PORTB), 3
18631:         extern volatile __bit                   CTMUEN              @ (((unsigned) &CTMUCONH)*8) + 7;
18632:         #define                                 CTMUEN_bit          BANKMASK(CTMUCONH), 7
18633:         extern volatile __bit                   CTMUIE              @ (((unsigned) &PIE3)*8) + 3;
18634:         #define                                 CTMUIE_bit          BANKMASK(PIE3), 3
18635:         extern volatile __bit                   CTMUIF              @ (((unsigned) &PIR3)*8) + 3;
18636:         #define                                 CTMUIF_bit          BANKMASK(PIR3), 3
18637:         extern volatile __bit                   CTMUIP              @ (((unsigned) &IPR3)*8) + 3;
18638:         #define                                 CTMUIP_bit          BANKMASK(IPR3), 3
18639:         extern volatile __bit                   CTMUMD              @ (((unsigned) &PMD2)*8) + 3;
18640:         #define                                 CTMUMD_bit          BANKMASK(PMD2), 3
18641:         extern volatile __bit                   CTMUSIDL            @ (((unsigned) &CTMUCONH)*8) + 5;
18642:         #define                                 CTMUSIDL_bit        BANKMASK(CTMUCONH), 5
18643:         extern volatile __bit                   CTPLS               @ (((unsigned) &PORTC)*8) + 2;
18644:         #define                                 CTPLS_bit           BANKMASK(PORTC), 2
18645:         extern volatile __bit                   CTTRIG              @ (((unsigned) &CTMUCONH)*8) + 0;
18646:         #define                                 CTTRIG_bit          BANKMASK(CTMUCONH), 0
18647:         extern volatile __bit                   CVREF               @ (((unsigned) &PORTA)*8) + 2;
18648:         #define                                 CVREF_bit           BANKMASK(PORTA), 2
18649:         extern volatile __bit                   DA                  @ (((unsigned) &SSP1STAT)*8) + 5;
18650:         #define                                 DA_bit              BANKMASK(SSP1STAT), 5
18651:         extern volatile __bit                   DA1                 @ (((unsigned) &SSP1STAT)*8) + 5;
18652:         #define                                 DA1_bit             BANKMASK(SSP1STAT), 5
18653:         extern volatile __bit                   DA2                 @ (((unsigned) &SSP2STAT)*8) + 5;
18654:         #define                                 DA2_bit             BANKMASK(SSP2STAT), 5
18655:         extern volatile __bit                   DACEN               @ (((unsigned) &VREFCON1)*8) + 7;
18656:         #define                                 DACEN_bit           BANKMASK(VREFCON1), 7
18657:         extern volatile __bit                   DACLPS              @ (((unsigned) &VREFCON1)*8) + 6;
18658:         #define                                 DACLPS_bit          BANKMASK(VREFCON1), 6
18659:         extern volatile __bit                   DACNSS              @ (((unsigned) &VREFCON1)*8) + 0;
18660:         #define                                 DACNSS_bit          BANKMASK(VREFCON1), 0
18661:         extern volatile __bit                   DACOE               @ (((unsigned) &VREFCON1)*8) + 5;
18662:         #define                                 DACOE_bit           BANKMASK(VREFCON1), 5
18663:         extern volatile __bit                   DACOUT              @ (((unsigned) &PORTA)*8) + 2;
18664:         #define                                 DACOUT_bit          BANKMASK(PORTA), 2
18665:         extern volatile __bit                   DACPSS0             @ (((unsigned) &VREFCON1)*8) + 2;
18666:         #define                                 DACPSS0_bit         BANKMASK(VREFCON1), 2
18667:         extern volatile __bit                   DACPSS1             @ (((unsigned) &VREFCON1)*8) + 3;
18668:         #define                                 DACPSS1_bit         BANKMASK(VREFCON1), 3
18669:         extern volatile __bit                   DACR0               @ (((unsigned) &VREFCON2)*8) + 0;
18670:         #define                                 DACR0_bit           BANKMASK(VREFCON2), 0
18671:         extern volatile __bit                   DACR1               @ (((unsigned) &VREFCON2)*8) + 1;
18672:         #define                                 DACR1_bit           BANKMASK(VREFCON2), 1
18673:         extern volatile __bit                   DACR2               @ (((unsigned) &VREFCON2)*8) + 2;
18674:         #define                                 DACR2_bit           BANKMASK(VREFCON2), 2
18675:         extern volatile __bit                   DACR3               @ (((unsigned) &VREFCON2)*8) + 3;
18676:         #define                                 DACR3_bit           BANKMASK(VREFCON2), 3
18677:         extern volatile __bit                   DACR4               @ (((unsigned) &VREFCON2)*8) + 4;
18678:         #define                                 DACR4_bit           BANKMASK(VREFCON2), 4
18679:         extern volatile __bit                   DATA_ADDRESS        @ (((unsigned) &SSP1STAT)*8) + 5;
18680:         #define                                 DATA_ADDRESS_bit    BANKMASK(SSP1STAT), 5
18681:         extern volatile __bit                   DATA_ADDRESS2       @ (((unsigned) &SSP2STAT)*8) + 5;
18682:         #define                                 DATA_ADDRESS2_bit   BANKMASK(SSP2STAT), 5
18683:         extern volatile __bit                   DC                  @ (((unsigned) &STATUS)*8) + 1;
18684:         #define                                 DC_bit              BANKMASK(STATUS), 1
18685:         extern volatile __bit                   DC1B0               @ (((unsigned) &CCP1CON)*8) + 4;
18686:         #define                                 DC1B0_bit           BANKMASK(CCP1CON), 4
18687:         extern volatile __bit                   DC1B1               @ (((unsigned) &CCP1CON)*8) + 5;
18688:         #define                                 DC1B1_bit           BANKMASK(CCP1CON), 5
18689:         extern volatile __bit                   DC2B0               @ (((unsigned) &CCP2CON)*8) + 4;
18690:         #define                                 DC2B0_bit           BANKMASK(CCP2CON), 4
18691:         extern volatile __bit                   DC2B1               @ (((unsigned) &CCP2CON)*8) + 5;
18692:         #define                                 DC2B1_bit           BANKMASK(CCP2CON), 5
18693:         extern volatile __bit                   DC3B0               @ (((unsigned) &CCP3CON)*8) + 4;
18694:         #define                                 DC3B0_bit           BANKMASK(CCP3CON), 4
18695:         extern volatile __bit                   DC3B1               @ (((unsigned) &CCP3CON)*8) + 5;
18696:         #define                                 DC3B1_bit           BANKMASK(CCP3CON), 5
18697:         extern volatile __bit                   DC4B0               @ (((unsigned) &CCP4CON)*8) + 4;
18698:         #define                                 DC4B0_bit           BANKMASK(CCP4CON), 4
18699:         extern volatile __bit                   DC4B1               @ (((unsigned) &CCP4CON)*8) + 5;
18700:         #define                                 DC4B1_bit           BANKMASK(CCP4CON), 5
18701:         extern volatile __bit                   DC5B0               @ (((unsigned) &CCP5CON)*8) + 4;
18702:         #define                                 DC5B0_bit           BANKMASK(CCP5CON), 4
18703:         extern volatile __bit                   DC5B1               @ (((unsigned) &CCP5CON)*8) + 5;
18704:         #define                                 DC5B1_bit           BANKMASK(CCP5CON), 5
18705:         extern volatile __bit                   DONE                @ (((unsigned) &ADCON0)*8) + 1;
18706:         #define                                 DONE_bit            BANKMASK(ADCON0), 1
18707:         extern volatile __bit                   DT                  @ (((unsigned) &PORTC)*8) + 7;
18708:         #define                                 DT_bit              BANKMASK(PORTC), 7
18709:         extern volatile __bit                   DT1                 @ (((unsigned) &PORTC)*8) + 7;
18710:         #define                                 DT1_bit             BANKMASK(PORTC), 7
18711:         extern volatile __bit                   DT2                 @ (((unsigned) &PORTD)*8) + 7;
18712:         #define                                 DT2_bit             BANKMASK(PORTD), 7
18713:         extern volatile __bit                   DTRXP1              @ (((unsigned) &BAUDCON1)*8) + 5;
18714:         #define                                 DTRXP1_bit          BANKMASK(BAUDCON1), 5
18715:         extern volatile __bit                   DTRXP2              @ (((unsigned) &BAUDCON2)*8) + 5;
18716:         #define                                 DTRXP2_bit          BANKMASK(BAUDCON2), 5
18717:         extern volatile __bit                   D_A2                @ (((unsigned) &SSP2STAT)*8) + 5;
18718:         #define                                 D_A2_bit            BANKMASK(SSP2STAT), 5
18719:         extern volatile __bit                   D_nA2               @ (((unsigned) &SSP2STAT)*8) + 5;
18720:         #define                                 D_nA2_bit           BANKMASK(SSP2STAT), 5
18721:         extern volatile __bit                   ECCPAS0             @ (((unsigned) &ECCP1AS)*8) + 4;
18722:         #define                                 ECCPAS0_bit         BANKMASK(ECCP1AS), 4
18723:         extern volatile __bit                   ECCPAS1             @ (((unsigned) &ECCP1AS)*8) + 5;
18724:         #define                                 ECCPAS1_bit         BANKMASK(ECCP1AS), 5
18725:         extern volatile __bit                   ECCPAS2             @ (((unsigned) &ECCP1AS)*8) + 6;
18726:         #define                                 ECCPAS2_bit         BANKMASK(ECCP1AS), 6
18727:         extern volatile __bit                   ECCPASE             @ (((unsigned) &ECCP1AS)*8) + 7;
18728:         #define                                 ECCPASE_bit         BANKMASK(ECCP1AS), 7
18729:         extern volatile __bit                   EDG1POL             @ (((unsigned) &CTMUCONL)*8) + 4;
18730:         #define                                 EDG1POL_bit         BANKMASK(CTMUCONL), 4
18731:         extern volatile __bit                   EDG1SEL0            @ (((unsigned) &CTMUCONL)*8) + 2;
18732:         #define                                 EDG1SEL0_bit        BANKMASK(CTMUCONL), 2
18733:         extern volatile __bit                   EDG1SEL1            @ (((unsigned) &CTMUCONL)*8) + 3;
18734:         #define                                 EDG1SEL1_bit        BANKMASK(CTMUCONL), 3
18735:         extern volatile __bit                   EDG1STAT            @ (((unsigned) &CTMUCONL)*8) + 0;
18736:         #define                                 EDG1STAT_bit        BANKMASK(CTMUCONL), 0
18737:         extern volatile __bit                   EDG2POL             @ (((unsigned) &CTMUCONL)*8) + 7;
18738:         #define                                 EDG2POL_bit         BANKMASK(CTMUCONL), 7
18739:         extern volatile __bit                   EDG2SEL0            @ (((unsigned) &CTMUCONL)*8) + 5;
18740:         #define                                 EDG2SEL0_bit        BANKMASK(CTMUCONL), 5
18741:         extern volatile __bit                   EDG2SEL1            @ (((unsigned) &CTMUCONL)*8) + 6;
18742:         #define                                 EDG2SEL1_bit        BANKMASK(CTMUCONL), 6
18743:         extern volatile __bit                   EDG2STAT            @ (((unsigned) &CTMUCONL)*8) + 1;
18744:         #define                                 EDG2STAT_bit        BANKMASK(CTMUCONL), 1
18745:         extern volatile __bit                   EDGEN               @ (((unsigned) &CTMUCONH)*8) + 3;
18746:         #define                                 EDGEN_bit           BANKMASK(CTMUCONH), 3
18747:         extern volatile __bit                   EDGSEQEN            @ (((unsigned) &CTMUCONH)*8) + 2;
18748:         #define                                 EDGSEQEN_bit        BANKMASK(CTMUCONH), 2
18749:         extern volatile __bit                   EEADR0              @ (((unsigned) &EEADR)*8) + 0;
18750:         #define                                 EEADR0_bit          BANKMASK(EEADR), 0
18751:         extern volatile __bit                   EEADR1              @ (((unsigned) &EEADR)*8) + 1;
18752:         #define                                 EEADR1_bit          BANKMASK(EEADR), 1
18753:         extern volatile __bit                   EEADR2              @ (((unsigned) &EEADR)*8) + 2;
18754:         #define                                 EEADR2_bit          BANKMASK(EEADR), 2
18755:         extern volatile __bit                   EEADR3              @ (((unsigned) &EEADR)*8) + 3;
18756:         #define                                 EEADR3_bit          BANKMASK(EEADR), 3
18757:         extern volatile __bit                   EEADR4              @ (((unsigned) &EEADR)*8) + 4;
18758:         #define                                 EEADR4_bit          BANKMASK(EEADR), 4
18759:         extern volatile __bit                   EEADR5              @ (((unsigned) &EEADR)*8) + 5;
18760:         #define                                 EEADR5_bit          BANKMASK(EEADR), 5
18761:         extern volatile __bit                   EEADR6              @ (((unsigned) &EEADR)*8) + 6;
18762:         #define                                 EEADR6_bit          BANKMASK(EEADR), 6
18763:         extern volatile __bit                   EEADR7              @ (((unsigned) &EEADR)*8) + 7;
18764:         #define                                 EEADR7_bit          BANKMASK(EEADR), 7
18765:         extern volatile __bit                   EEFS                @ (((unsigned) &EECON1)*8) + 6;
18766:         #define                                 EEFS_bit            BANKMASK(EECON1), 6
18767:         extern volatile __bit                   EEIE                @ (((unsigned) &PIE2)*8) + 4;
18768:         #define                                 EEIE_bit            BANKMASK(PIE2), 4
18769:         extern volatile __bit                   EEIF                @ (((unsigned) &PIR2)*8) + 4;
18770:         #define                                 EEIF_bit            BANKMASK(PIR2), 4
18771:         extern volatile __bit                   EEIP                @ (((unsigned) &IPR2)*8) + 4;
18772:         #define                                 EEIP_bit            BANKMASK(IPR2), 4
18773:         extern volatile __bit                   EEPGD               @ (((unsigned) &EECON1)*8) + 7;
18774:         #define                                 EEPGD_bit           BANKMASK(EECON1), 7
18775:         extern volatile __bit                   EMBMD               @ (((unsigned) &PMD1)*8) + 0;
18776:         #define                                 EMBMD_bit           BANKMASK(PMD1), 0
18777:         extern volatile __bit                   EVPOL0              @ (((unsigned) &CM1CON0)*8) + 3;
18778:         #define                                 EVPOL0_bit          BANKMASK(CM1CON0), 3
18779:         extern volatile __bit                   EVPOL01             @ (((unsigned) &CM1CON0)*8) + 3;
18780:         #define                                 EVPOL01_bit         BANKMASK(CM1CON0), 3
18781:         extern volatile __bit                   EVPOL02             @ (((unsigned) &CM2CON0)*8) + 3;
18782:         #define                                 EVPOL02_bit         BANKMASK(CM2CON0), 3
18783:         extern volatile __bit                   EVPOL1              @ (((unsigned) &CM1CON0)*8) + 4;
18784:         #define                                 EVPOL1_bit          BANKMASK(CM1CON0), 4
18785:         extern volatile __bit                   EVPOL11             @ (((unsigned) &CM1CON0)*8) + 4;
18786:         #define                                 EVPOL11_bit         BANKMASK(CM1CON0), 4
18787:         extern volatile __bit                   EVPOL12             @ (((unsigned) &CM2CON0)*8) + 4;
18788:         #define                                 EVPOL12_bit         BANKMASK(CM2CON0), 4
18789:         extern volatile __bit                   FERR1               @ (((unsigned) &RCSTA1)*8) + 2;
18790:         #define                                 FERR1_bit           BANKMASK(RCSTA1), 2
18791:         extern volatile __bit                   FERR2               @ (((unsigned) &RCSTA2)*8) + 2;
18792:         #define                                 FERR2_bit           BANKMASK(RCSTA2), 2
18793:         extern volatile __bit                   FLT0                @ (((unsigned) &PORTB)*8) + 0;
18794:         #define                                 FLT0_bit            BANKMASK(PORTB), 0
18795:         extern volatile __bit                   FREE                @ (((unsigned) &EECON1)*8) + 4;
18796:         #define                                 FREE_bit            BANKMASK(EECON1), 4
18797:         extern volatile __bit                   FVREN               @ (((unsigned) &VREFCON0)*8) + 7;
18798:         #define                                 FVREN_bit           BANKMASK(VREFCON0), 7
18799:         extern volatile __bit                   FVRS0               @ (((unsigned) &VREFCON0)*8) + 4;
18800:         #define                                 FVRS0_bit           BANKMASK(VREFCON0), 4
18801:         extern volatile __bit                   FVRS1               @ (((unsigned) &VREFCON0)*8) + 5;
18802:         #define                                 FVRS1_bit           BANKMASK(VREFCON0), 5
18803:         extern volatile __bit                   FVRST               @ (((unsigned) &VREFCON0)*8) + 6;
18804:         #define                                 FVRST_bit           BANKMASK(VREFCON0), 6
18805:         extern volatile __bit                   GCEN1               @ (((unsigned) &SSP1CON2)*8) + 7;
18806:         #define                                 GCEN1_bit           BANKMASK(SSP1CON2), 7
18807:         extern volatile __bit                   GCEN2               @ (((unsigned) &SSP2CON2)*8) + 7;
18808:         #define                                 GCEN2_bit           BANKMASK(SSP2CON2), 7
18809:         extern volatile __bit                   GIE                 @ (((unsigned) &INTCON)*8) + 7;
18810:         #define                                 GIE_bit             BANKMASK(INTCON), 7
18811:         extern volatile __bit                   GIEH                @ (((unsigned) &INTCON)*8) + 7;
18812:         #define                                 GIEH_bit            BANKMASK(INTCON), 7
18813:         extern volatile __bit                   GIEL                @ (((unsigned) &INTCON)*8) + 6;
18814:         #define                                 GIEL_bit            BANKMASK(INTCON), 6
18815:         extern volatile __bit                   GIE_GIEH            @ (((unsigned) &INTCON)*8) + 7;
18816:         #define                                 GIE_GIEH_bit        BANKMASK(INTCON), 7
18817:         extern volatile __bit                   GO                  @ (((unsigned) &ADCON0)*8) + 1;
18818:         #define                                 GO_bit              BANKMASK(ADCON0), 1
18819:         extern volatile __bit                   GODONE              @ (((unsigned) &ADCON0)*8) + 1;
18820:         #define                                 GODONE_bit          BANKMASK(ADCON0), 1
18821:         extern volatile __bit                   GO_DONE             @ (((unsigned) &ADCON0)*8) + 1;
18822:         #define                                 GO_DONE_bit         BANKMASK(ADCON0), 1
18823:         extern volatile __bit                   GO_NOT_DONE         @ (((unsigned) &ADCON0)*8) + 1;
18824:         #define                                 GO_NOT_DONE_bit     BANKMASK(ADCON0), 1
18825:         extern volatile __bit                   GO_nDONE            @ (((unsigned) &ADCON0)*8) + 1;
18826:         #define                                 GO_nDONE_bit        BANKMASK(ADCON0), 1
18827:         extern volatile __bit                   HFIOFS              @ (((unsigned) &OSCCON)*8) + 2;
18828:         #define                                 HFIOFS_bit          BANKMASK(OSCCON), 2
18829:         extern volatile __bit                   HLVDEN              @ (((unsigned) &HLVDCON)*8) + 4;
18830:         #define                                 HLVDEN_bit          BANKMASK(HLVDCON), 4
18831:         extern volatile __bit                   HLVDIE              @ (((unsigned) &PIE2)*8) + 2;
18832:         #define                                 HLVDIE_bit          BANKMASK(PIE2), 2
18833:         extern volatile __bit                   HLVDIF              @ (((unsigned) &PIR2)*8) + 2;
18834:         #define                                 HLVDIF_bit          BANKMASK(PIR2), 2
18835:         extern volatile __bit                   HLVDIN              @ (((unsigned) &PORTA)*8) + 5;
18836:         #define                                 HLVDIN_bit          BANKMASK(PORTA), 5
18837:         extern volatile __bit                   HLVDIP              @ (((unsigned) &IPR2)*8) + 2;
18838:         #define                                 HLVDIP_bit          BANKMASK(IPR2), 2
18839:         extern volatile __bit                   HLVDL0              @ (((unsigned) &HLVDCON)*8) + 0;
18840:         #define                                 HLVDL0_bit          BANKMASK(HLVDCON), 0
18841:         extern volatile __bit                   HLVDL1              @ (((unsigned) &HLVDCON)*8) + 1;
18842:         #define                                 HLVDL1_bit          BANKMASK(HLVDCON), 1
18843:         extern volatile __bit                   HLVDL2              @ (((unsigned) &HLVDCON)*8) + 2;
18844:         #define                                 HLVDL2_bit          BANKMASK(HLVDCON), 2
18845:         extern volatile __bit                   HLVDL3              @ (((unsigned) &HLVDCON)*8) + 3;
18846:         #define                                 HLVDL3_bit          BANKMASK(HLVDCON), 3
18847:         extern volatile __bit                   I2C_DAT             @ (((unsigned) &SSP1STAT)*8) + 5;
18848:         #define                                 I2C_DAT_bit         BANKMASK(SSP1STAT), 5
18849:         extern volatile __bit                   I2C_DAT2            @ (((unsigned) &SSP2STAT)*8) + 5;
18850:         #define                                 I2C_DAT2_bit        BANKMASK(SSP2STAT), 5
18851:         extern volatile __bit                   I2C_READ            @ (((unsigned) &SSP1STAT)*8) + 2;
18852:         #define                                 I2C_READ_bit        BANKMASK(SSP1STAT), 2
18853:         extern volatile __bit                   I2C_READ2           @ (((unsigned) &SSP2STAT)*8) + 2;
18854:         #define                                 I2C_READ2_bit       BANKMASK(SSP2STAT), 2
18855:         extern volatile __bit                   I2C_START           @ (((unsigned) &SSP1STAT)*8) + 3;
18856:         #define                                 I2C_START_bit       BANKMASK(SSP1STAT), 3
18857:         extern volatile __bit                   I2C_START2          @ (((unsigned) &SSP2STAT)*8) + 3;
18858:         #define                                 I2C_START2_bit      BANKMASK(SSP2STAT), 3
18859:         extern volatile __bit                   I2C_STOP            @ (((unsigned) &SSP1STAT)*8) + 4;
18860:         #define                                 I2C_STOP_bit        BANKMASK(SSP1STAT), 4
18861:         extern volatile __bit                   I2C_STOP2           @ (((unsigned) &SSP2STAT)*8) + 4;
18862:         #define                                 I2C_STOP2_bit       BANKMASK(SSP2STAT), 4
18863:         extern volatile __bit                   IDISSEN             @ (((unsigned) &CTMUCONH)*8) + 1;
18864:         #define                                 IDISSEN_bit         BANKMASK(CTMUCONH), 1
18865:         extern volatile __bit                   IDLEN               @ (((unsigned) &OSCCON)*8) + 7;
18866:         #define                                 IDLEN_bit           BANKMASK(OSCCON), 7
18867:         extern volatile __bit                   INT0                @ (((unsigned) &PORTB)*8) + 0;
18868:         #define                                 INT0_bit            BANKMASK(PORTB), 0
18869:         extern volatile __bit                   INT0E               @ (((unsigned) &INTCON)*8) + 4;
18870:         #define                                 INT0E_bit           BANKMASK(INTCON), 4
18871:         extern volatile __bit                   INT0F               @ (((unsigned) &INTCON)*8) + 1;
18872:         #define                                 INT0F_bit           BANKMASK(INTCON), 1
18873:         extern volatile __bit                   INT0IE              @ (((unsigned) &INTCON)*8) + 4;
18874:         #define                                 INT0IE_bit          BANKMASK(INTCON), 4
18875:         extern volatile __bit                   INT0IF              @ (((unsigned) &INTCON)*8) + 1;
18876:         #define                                 INT0IF_bit          BANKMASK(INTCON), 1
18877:         extern volatile __bit                   INT1                @ (((unsigned) &PORTB)*8) + 1;
18878:         #define                                 INT1_bit            BANKMASK(PORTB), 1
18879:         extern volatile __bit                   INT1E               @ (((unsigned) &INTCON3)*8) + 3;
18880:         #define                                 INT1E_bit           BANKMASK(INTCON3), 3
18881:         extern volatile __bit                   INT1F               @ (((unsigned) &INTCON3)*8) + 0;
18882:         #define                                 INT1F_bit           BANKMASK(INTCON3), 0
18883:         extern volatile __bit                   INT1IE              @ (((unsigned) &INTCON3)*8) + 3;
18884:         #define                                 INT1IE_bit          BANKMASK(INTCON3), 3
18885:         extern volatile __bit                   INT1IF              @ (((unsigned) &INTCON3)*8) + 0;
18886:         #define                                 INT1IF_bit          BANKMASK(INTCON3), 0
18887:         extern volatile __bit                   INT1IP              @ (((unsigned) &INTCON3)*8) + 6;
18888:         #define                                 INT1IP_bit          BANKMASK(INTCON3), 6
18889:         extern volatile __bit                   INT1P               @ (((unsigned) &INTCON3)*8) + 6;
18890:         #define                                 INT1P_bit           BANKMASK(INTCON3), 6
18891:         extern volatile __bit                   INT2                @ (((unsigned) &PORTB)*8) + 2;
18892:         #define                                 INT2_bit            BANKMASK(PORTB), 2
18893:         extern volatile __bit                   INT2E               @ (((unsigned) &INTCON3)*8) + 4;
18894:         #define                                 INT2E_bit           BANKMASK(INTCON3), 4
18895:         extern volatile __bit                   INT2F               @ (((unsigned) &INTCON3)*8) + 1;
18896:         #define                                 INT2F_bit           BANKMASK(INTCON3), 1
18897:         extern volatile __bit                   INT2IE              @ (((unsigned) &INTCON3)*8) + 4;
18898:         #define                                 INT2IE_bit          BANKMASK(INTCON3), 4
18899:         extern volatile __bit                   INT2IF              @ (((unsigned) &INTCON3)*8) + 1;
18900:         #define                                 INT2IF_bit          BANKMASK(INTCON3), 1
18901:         extern volatile __bit                   INT2IP              @ (((unsigned) &INTCON3)*8) + 7;
18902:         #define                                 INT2IP_bit          BANKMASK(INTCON3), 7
18903:         extern volatile __bit                   INT2P               @ (((unsigned) &INTCON3)*8) + 7;
18904:         #define                                 INT2P_bit           BANKMASK(INTCON3), 7
18905:         extern volatile __bit                   INTEDG0             @ (((unsigned) &INTCON2)*8) + 6;
18906:         #define                                 INTEDG0_bit         BANKMASK(INTCON2), 6
18907:         extern volatile __bit                   INTEDG1             @ (((unsigned) &INTCON2)*8) + 5;
18908:         #define                                 INTEDG1_bit         BANKMASK(INTCON2), 5
18909:         extern volatile __bit                   INTEDG2             @ (((unsigned) &INTCON2)*8) + 4;
18910:         #define                                 INTEDG2_bit         BANKMASK(INTCON2), 4
18911:         extern volatile __bit                   INTSRC              @ (((unsigned) &OSCTUNE)*8) + 7;
18912:         #define                                 INTSRC_bit          BANKMASK(OSCTUNE), 7
18913:         extern volatile __bit                   IOCB4               @ (((unsigned) &IOCB)*8) + 4;
18914:         #define                                 IOCB4_bit           BANKMASK(IOCB), 4
18915:         extern volatile __bit                   IOCB5               @ (((unsigned) &IOCB)*8) + 5;
18916:         #define                                 IOCB5_bit           BANKMASK(IOCB), 5
18917:         extern volatile __bit                   IOCB6               @ (((unsigned) &IOCB)*8) + 6;
18918:         #define                                 IOCB6_bit           BANKMASK(IOCB), 6
18919:         extern volatile __bit                   IOCB7               @ (((unsigned) &IOCB)*8) + 7;
18920:         #define                                 IOCB7_bit           BANKMASK(IOCB), 7
18921:         extern volatile __bit                   IOFS                @ (((unsigned) &OSCCON)*8) + 2;
18922:         #define                                 IOFS_bit            BANKMASK(OSCCON), 2
18923:         extern volatile __bit                   IPEN                @ (((unsigned) &RCON)*8) + 7;
18924:         #define                                 IPEN_bit            BANKMASK(RCON), 7
18925:         extern volatile __bit                   IRCF0               @ (((unsigned) &OSCCON)*8) + 4;
18926:         #define                                 IRCF0_bit           BANKMASK(OSCCON), 4
18927:         extern volatile __bit                   IRCF1               @ (((unsigned) &OSCCON)*8) + 5;
18928:         #define                                 IRCF1_bit           BANKMASK(OSCCON), 5
18929:         extern volatile __bit                   IRCF2               @ (((unsigned) &OSCCON)*8) + 6;
18930:         #define                                 IRCF2_bit           BANKMASK(OSCCON), 6
18931:         extern volatile __bit                   IRNG0               @ (((unsigned) &CTMUICON)*8) + 0;
18932:         #define                                 IRNG0_bit           BANKMASK(CTMUICON), 0
18933:         extern volatile __bit                   IRNG1               @ (((unsigned) &CTMUICON)*8) + 1;
18934:         #define                                 IRNG1_bit           BANKMASK(CTMUICON), 1
18935:         extern volatile __bit                   IRVST               @ (((unsigned) &HLVDCON)*8) + 5;
18936:         #define                                 IRVST_bit           BANKMASK(HLVDCON), 5
18937:         extern volatile __bit                   ITRIM0              @ (((unsigned) &CTMUICON)*8) + 2;
18938:         #define                                 ITRIM0_bit          BANKMASK(CTMUICON), 2
18939:         extern volatile __bit                   ITRIM1              @ (((unsigned) &CTMUICON)*8) + 3;
18940:         #define                                 ITRIM1_bit          BANKMASK(CTMUICON), 3
18941:         extern volatile __bit                   ITRIM2              @ (((unsigned) &CTMUICON)*8) + 4;
18942:         #define                                 ITRIM2_bit          BANKMASK(CTMUICON), 4
18943:         extern volatile __bit                   ITRIM3              @ (((unsigned) &CTMUICON)*8) + 5;
18944:         #define                                 ITRIM3_bit          BANKMASK(CTMUICON), 5
18945:         extern volatile __bit                   ITRIM4              @ (((unsigned) &CTMUICON)*8) + 6;
18946:         #define                                 ITRIM4_bit          BANKMASK(CTMUICON), 6
18947:         extern volatile __bit                   ITRIM5              @ (((unsigned) &CTMUICON)*8) + 7;
18948:         #define                                 ITRIM5_bit          BANKMASK(CTMUICON), 7
18949:         extern volatile __bit                   IVRST               @ (((unsigned) &HLVDCON)*8) + 5;
18950:         #define                                 IVRST_bit           BANKMASK(HLVDCON), 5
18951:         extern volatile __bit                   KBI0                @ (((unsigned) &PORTB)*8) + 4;
18952:         #define                                 KBI0_bit            BANKMASK(PORTB), 4
18953:         extern volatile __bit                   KBI1                @ (((unsigned) &PORTB)*8) + 5;
18954:         #define                                 KBI1_bit            BANKMASK(PORTB), 5
18955:         extern volatile __bit                   KBI2                @ (((unsigned) &PORTB)*8) + 6;
18956:         #define                                 KBI2_bit            BANKMASK(PORTB), 6
18957:         extern volatile __bit                   KBI3                @ (((unsigned) &PORTB)*8) + 7;
18958:         #define                                 KBI3_bit            BANKMASK(PORTB), 7
18959:         extern volatile __bit                   LA0                 @ (((unsigned) &LATA)*8) + 0;
18960:         #define                                 LA0_bit             BANKMASK(LATA), 0
18961:         extern volatile __bit                   LA1                 @ (((unsigned) &LATA)*8) + 1;
18962:         #define                                 LA1_bit             BANKMASK(LATA), 1
18963:         extern volatile __bit                   LA2                 @ (((unsigned) &LATA)*8) + 2;
18964:         #define                                 LA2_bit             BANKMASK(LATA), 2
18965:         extern volatile __bit                   LA3                 @ (((unsigned) &LATA)*8) + 3;
18966:         #define                                 LA3_bit             BANKMASK(LATA), 3
18967:         extern volatile __bit                   LA4                 @ (((unsigned) &LATA)*8) + 4;
18968:         #define                                 LA4_bit             BANKMASK(LATA), 4
18969:         extern volatile __bit                   LA5                 @ (((unsigned) &LATA)*8) + 5;
18970:         #define                                 LA5_bit             BANKMASK(LATA), 5
18971:         extern volatile __bit                   LA6                 @ (((unsigned) &LATA)*8) + 6;
18972:         #define                                 LA6_bit             BANKMASK(LATA), 6
18973:         extern volatile __bit                   LA7                 @ (((unsigned) &LATA)*8) + 7;
18974:         #define                                 LA7_bit             BANKMASK(LATA), 7
18975:         extern volatile __bit                   LATA0               @ (((unsigned) &LATA)*8) + 0;
18976:         #define                                 LATA0_bit           BANKMASK(LATA), 0
18977:         extern volatile __bit                   LATA1               @ (((unsigned) &LATA)*8) + 1;
18978:         #define                                 LATA1_bit           BANKMASK(LATA), 1
18979:         extern volatile __bit                   LATA2               @ (((unsigned) &LATA)*8) + 2;
18980:         #define                                 LATA2_bit           BANKMASK(LATA), 2
18981:         extern volatile __bit                   LATA3               @ (((unsigned) &LATA)*8) + 3;
18982:         #define                                 LATA3_bit           BANKMASK(LATA), 3
18983:         extern volatile __bit                   LATA4               @ (((unsigned) &LATA)*8) + 4;
18984:         #define                                 LATA4_bit           BANKMASK(LATA), 4
18985:         extern volatile __bit                   LATA5               @ (((unsigned) &LATA)*8) + 5;
18986:         #define                                 LATA5_bit           BANKMASK(LATA), 5
18987:         extern volatile __bit                   LATA6               @ (((unsigned) &LATA)*8) + 6;
18988:         #define                                 LATA6_bit           BANKMASK(LATA), 6
18989:         extern volatile __bit                   LATA7               @ (((unsigned) &LATA)*8) + 7;
18990:         #define                                 LATA7_bit           BANKMASK(LATA), 7
18991:         extern volatile __bit                   LATB0               @ (((unsigned) &LATB)*8) + 0;
18992:         #define                                 LATB0_bit           BANKMASK(LATB), 0
18993:         extern volatile __bit                   LATB1               @ (((unsigned) &LATB)*8) + 1;
18994:         #define                                 LATB1_bit           BANKMASK(LATB), 1
18995:         extern volatile __bit                   LATB2               @ (((unsigned) &LATB)*8) + 2;
18996:         #define                                 LATB2_bit           BANKMASK(LATB), 2
18997:         extern volatile __bit                   LATB3               @ (((unsigned) &LATB)*8) + 3;
18998:         #define                                 LATB3_bit           BANKMASK(LATB), 3
18999:         extern volatile __bit                   LATB4               @ (((unsigned) &LATB)*8) + 4;
19000:         #define                                 LATB4_bit           BANKMASK(LATB), 4
19001:         extern volatile __bit                   LATB5               @ (((unsigned) &LATB)*8) + 5;
19002:         #define                                 LATB5_bit           BANKMASK(LATB), 5
19003:         extern volatile __bit                   LATB6               @ (((unsigned) &LATB)*8) + 6;
19004:         #define                                 LATB6_bit           BANKMASK(LATB), 6
19005:         extern volatile __bit                   LATB7               @ (((unsigned) &LATB)*8) + 7;
19006:         #define                                 LATB7_bit           BANKMASK(LATB), 7
19007:         extern volatile __bit                   LATC0               @ (((unsigned) &LATC)*8) + 0;
19008:         #define                                 LATC0_bit           BANKMASK(LATC), 0
19009:         extern volatile __bit                   LATC1               @ (((unsigned) &LATC)*8) + 1;
19010:         #define                                 LATC1_bit           BANKMASK(LATC), 1
19011:         extern volatile __bit                   LATC2               @ (((unsigned) &LATC)*8) + 2;
19012:         #define                                 LATC2_bit           BANKMASK(LATC), 2
19013:         extern volatile __bit                   LATC3               @ (((unsigned) &LATC)*8) + 3;
19014:         #define                                 LATC3_bit           BANKMASK(LATC), 3
19015:         extern volatile __bit                   LATC4               @ (((unsigned) &LATC)*8) + 4;
19016:         #define                                 LATC4_bit           BANKMASK(LATC), 4
19017:         extern volatile __bit                   LATC5               @ (((unsigned) &LATC)*8) + 5;
19018:         #define                                 LATC5_bit           BANKMASK(LATC), 5
19019:         extern volatile __bit                   LATC6               @ (((unsigned) &LATC)*8) + 6;
19020:         #define                                 LATC6_bit           BANKMASK(LATC), 6
19021:         extern volatile __bit                   LATC7               @ (((unsigned) &LATC)*8) + 7;
19022:         #define                                 LATC7_bit           BANKMASK(LATC), 7
19023:         extern volatile __bit                   LATD0               @ (((unsigned) &LATD)*8) + 0;
19024:         #define                                 LATD0_bit           BANKMASK(LATD), 0
19025:         extern volatile __bit                   LATD1               @ (((unsigned) &LATD)*8) + 1;
19026:         #define                                 LATD1_bit           BANKMASK(LATD), 1
19027:         extern volatile __bit                   LATD2               @ (((unsigned) &LATD)*8) + 2;
19028:         #define                                 LATD2_bit           BANKMASK(LATD), 2
19029:         extern volatile __bit                   LATD3               @ (((unsigned) &LATD)*8) + 3;
19030:         #define                                 LATD3_bit           BANKMASK(LATD), 3
19031:         extern volatile __bit                   LATD4               @ (((unsigned) &LATD)*8) + 4;
19032:         #define                                 LATD4_bit           BANKMASK(LATD), 4
19033:         extern volatile __bit                   LATD5               @ (((unsigned) &LATD)*8) + 5;
19034:         #define                                 LATD5_bit           BANKMASK(LATD), 5
19035:         extern volatile __bit                   LATD6               @ (((unsigned) &LATD)*8) + 6;
19036:         #define                                 LATD6_bit           BANKMASK(LATD), 6
19037:         extern volatile __bit                   LATD7               @ (((unsigned) &LATD)*8) + 7;
19038:         #define                                 LATD7_bit           BANKMASK(LATD), 7
19039:         extern volatile __bit                   LATE0               @ (((unsigned) &LATE)*8) + 0;
19040:         #define                                 LATE0_bit           BANKMASK(LATE), 0
19041:         extern volatile __bit                   LATE1               @ (((unsigned) &LATE)*8) + 1;
19042:         #define                                 LATE1_bit           BANKMASK(LATE), 1
19043:         extern volatile __bit                   LATE2               @ (((unsigned) &LATE)*8) + 2;
19044:         #define                                 LATE2_bit           BANKMASK(LATE), 2
19045:         extern volatile __bit                   LB0                 @ (((unsigned) &LATB)*8) + 0;
19046:         #define                                 LB0_bit             BANKMASK(LATB), 0
19047:         extern volatile __bit                   LB1                 @ (((unsigned) &LATB)*8) + 1;
19048:         #define                                 LB1_bit             BANKMASK(LATB), 1
19049:         extern volatile __bit                   LB2                 @ (((unsigned) &LATB)*8) + 2;
19050:         #define                                 LB2_bit             BANKMASK(LATB), 2
19051:         extern volatile __bit                   LB3                 @ (((unsigned) &LATB)*8) + 3;
19052:         #define                                 LB3_bit             BANKMASK(LATB), 3
19053:         extern volatile __bit                   LB4                 @ (((unsigned) &LATB)*8) + 4;
19054:         #define                                 LB4_bit             BANKMASK(LATB), 4
19055:         extern volatile __bit                   LB5                 @ (((unsigned) &LATB)*8) + 5;
19056:         #define                                 LB5_bit             BANKMASK(LATB), 5
19057:         extern volatile __bit                   LB6                 @ (((unsigned) &LATB)*8) + 6;
19058:         #define                                 LB6_bit             BANKMASK(LATB), 6
19059:         extern volatile __bit                   LB7                 @ (((unsigned) &LATB)*8) + 7;
19060:         #define                                 LB7_bit             BANKMASK(LATB), 7
19061:         extern volatile __bit                   LC0                 @ (((unsigned) &LATC)*8) + 0;
19062:         #define                                 LC0_bit             BANKMASK(LATC), 0
19063:         extern volatile __bit                   LC1                 @ (((unsigned) &LATC)*8) + 1;
19064:         #define                                 LC1_bit             BANKMASK(LATC), 1
19065:         extern volatile __bit                   LC2                 @ (((unsigned) &LATC)*8) + 2;
19066:         #define                                 LC2_bit             BANKMASK(LATC), 2
19067:         extern volatile __bit                   LC3                 @ (((unsigned) &LATC)*8) + 3;
19068:         #define                                 LC3_bit             BANKMASK(LATC), 3
19069:         extern volatile __bit                   LC4                 @ (((unsigned) &LATC)*8) + 4;
19070:         #define                                 LC4_bit             BANKMASK(LATC), 4
19071:         extern volatile __bit                   LC5                 @ (((unsigned) &LATC)*8) + 5;
19072:         #define                                 LC5_bit             BANKMASK(LATC), 5
19073:         extern volatile __bit                   LC6                 @ (((unsigned) &LATC)*8) + 6;
19074:         #define                                 LC6_bit             BANKMASK(LATC), 6
19075:         extern volatile __bit                   LC7                 @ (((unsigned) &LATC)*8) + 7;
19076:         #define                                 LC7_bit             BANKMASK(LATC), 7
19077:         extern volatile __bit                   LD0                 @ (((unsigned) &LATD)*8) + 0;
19078:         #define                                 LD0_bit             BANKMASK(LATD), 0
19079:         extern volatile __bit                   LD1                 @ (((unsigned) &LATD)*8) + 1;
19080:         #define                                 LD1_bit             BANKMASK(LATD), 1
19081:         extern volatile __bit                   LD2                 @ (((unsigned) &LATD)*8) + 2;
19082:         #define                                 LD2_bit             BANKMASK(LATD), 2
19083:         extern volatile __bit                   LD3                 @ (((unsigned) &LATD)*8) + 3;
19084:         #define                                 LD3_bit             BANKMASK(LATD), 3
19085:         extern volatile __bit                   LD4                 @ (((unsigned) &LATD)*8) + 4;
19086:         #define                                 LD4_bit             BANKMASK(LATD), 4
19087:         extern volatile __bit                   LD5                 @ (((unsigned) &LATD)*8) + 5;
19088:         #define                                 LD5_bit             BANKMASK(LATD), 5
19089:         extern volatile __bit                   LD6                 @ (((unsigned) &LATD)*8) + 6;
19090:         #define                                 LD6_bit             BANKMASK(LATD), 6
19091:         extern volatile __bit                   LD7                 @ (((unsigned) &LATD)*8) + 7;
19092:         #define                                 LD7_bit             BANKMASK(LATD), 7
19093:         extern volatile __bit                   LE0                 @ (((unsigned) &LATE)*8) + 0;
19094:         #define                                 LE0_bit             BANKMASK(LATE), 0
19095:         extern volatile __bit                   LE1                 @ (((unsigned) &LATE)*8) + 1;
19096:         #define                                 LE1_bit             BANKMASK(LATE), 1
19097:         extern volatile __bit                   LE2                 @ (((unsigned) &LATE)*8) + 2;
19098:         #define                                 LE2_bit             BANKMASK(LATE), 2
19099:         extern volatile __bit                   LE3                 @ (((unsigned) &LATE)*8) + 3;
19100:         #define                                 LE3_bit             BANKMASK(LATE), 3
19101:         extern volatile __bit                   LE4                 @ (((unsigned) &LATE)*8) + 4;
19102:         #define                                 LE4_bit             BANKMASK(LATE), 4
19103:         extern volatile __bit                   LE5                 @ (((unsigned) &LATE)*8) + 5;
19104:         #define                                 LE5_bit             BANKMASK(LATE), 5
19105:         extern volatile __bit                   LE6                 @ (((unsigned) &LATE)*8) + 6;
19106:         #define                                 LE6_bit             BANKMASK(LATE), 6
19107:         extern volatile __bit                   LE7                 @ (((unsigned) &LATE)*8) + 7;
19108:         #define                                 LE7_bit             BANKMASK(LATE), 7
19109:         extern volatile __bit                   LFIOFS              @ (((unsigned) &OSCCON2)*8) + 0;
19110:         #define                                 LFIOFS_bit          BANKMASK(OSCCON2), 0
19111:         extern volatile __bit                   LVDEN               @ (((unsigned) &HLVDCON)*8) + 4;
19112:         #define                                 LVDEN_bit           BANKMASK(HLVDCON), 4
19113:         extern volatile __bit                   LVDIE               @ (((unsigned) &PIE2)*8) + 2;
19114:         #define                                 LVDIE_bit           BANKMASK(PIE2), 2
19115:         extern volatile __bit                   LVDIF               @ (((unsigned) &PIR2)*8) + 2;
19116:         #define                                 LVDIF_bit           BANKMASK(PIR2), 2
19117:         extern volatile __bit                   LVDIN               @ (((unsigned) &PORTA)*8) + 5;
19118:         #define                                 LVDIN_bit           BANKMASK(PORTA), 5
19119:         extern volatile __bit                   LVDIP               @ (((unsigned) &IPR2)*8) + 2;
19120:         #define                                 LVDIP_bit           BANKMASK(IPR2), 2
19121:         extern volatile __bit                   LVDL0               @ (((unsigned) &HLVDCON)*8) + 0;
19122:         #define                                 LVDL0_bit           BANKMASK(HLVDCON), 0
19123:         extern volatile __bit                   LVDL1               @ (((unsigned) &HLVDCON)*8) + 1;
19124:         #define                                 LVDL1_bit           BANKMASK(HLVDCON), 1
19125:         extern volatile __bit                   LVDL2               @ (((unsigned) &HLVDCON)*8) + 2;
19126:         #define                                 LVDL2_bit           BANKMASK(HLVDCON), 2
19127:         extern volatile __bit                   LVDL3               @ (((unsigned) &HLVDCON)*8) + 3;
19128:         #define                                 LVDL3_bit           BANKMASK(HLVDCON), 3
19129:         extern volatile __bit                   LVV0                @ (((unsigned) &HLVDCON)*8) + 0;
19130:         #define                                 LVV0_bit            BANKMASK(HLVDCON), 0
19131:         extern volatile __bit                   LVV1                @ (((unsigned) &HLVDCON)*8) + 1;
19132:         #define                                 LVV1_bit            BANKMASK(HLVDCON), 1
19133:         extern volatile __bit                   LVV2                @ (((unsigned) &HLVDCON)*8) + 2;
19134:         #define                                 LVV2_bit            BANKMASK(HLVDCON), 2
19135:         extern volatile __bit                   LVV3                @ (((unsigned) &HLVDCON)*8) + 3;
19136:         #define                                 LVV3_bit            BANKMASK(HLVDCON), 3
19137:         extern volatile __bit                   MC1OUT              @ (((unsigned) &CM2CON1)*8) + 7;
19138:         #define                                 MC1OUT_bit          BANKMASK(CM2CON1), 7
19139:         extern volatile __bit                   MC2OUT              @ (((unsigned) &CM2CON1)*8) + 6;
19140:         #define                                 MC2OUT_bit          BANKMASK(CM2CON1), 6
19141:         extern volatile __bit                   MCLR                @ (((unsigned) &PORTE)*8) + 3;
19142:         #define                                 MCLR_bit            BANKMASK(PORTE), 3
19143:         extern volatile __bit                   MFIOFS              @ (((unsigned) &OSCCON2)*8) + 1;
19144:         #define                                 MFIOFS_bit          BANKMASK(OSCCON2), 1
19145:         extern volatile __bit                   MFIOSEL             @ (((unsigned) &OSCCON2)*8) + 4;
19146:         #define                                 MFIOSEL_bit         BANKMASK(OSCCON2), 4
19147:         extern volatile __bit                   MSK01               @ (((unsigned) &SSP1ADD)*8) + 0;
19148:         #define                                 MSK01_bit           BANKMASK(SSP1ADD), 0
19149:         extern volatile __bit                   MSK02               @ (((unsigned) &SSP2ADD)*8) + 0;
19150:         #define                                 MSK02_bit           BANKMASK(SSP2ADD), 0
19151:         extern volatile __bit                   MSK11               @ (((unsigned) &SSP1ADD)*8) + 1;
19152:         #define                                 MSK11_bit           BANKMASK(SSP1ADD), 1
19153:         extern volatile __bit                   MSK12               @ (((unsigned) &SSP2ADD)*8) + 1;
19154:         #define                                 MSK12_bit           BANKMASK(SSP2ADD), 1
19155:         extern volatile __bit                   MSK21               @ (((unsigned) &SSP1ADD)*8) + 2;
19156:         #define                                 MSK21_bit           BANKMASK(SSP1ADD), 2
19157:         extern volatile __bit                   MSK22               @ (((unsigned) &SSP2ADD)*8) + 2;
19158:         #define                                 MSK22_bit           BANKMASK(SSP2ADD), 2
19159:         extern volatile __bit                   MSK31               @ (((unsigned) &SSP1ADD)*8) + 3;
19160:         #define                                 MSK31_bit           BANKMASK(SSP1ADD), 3
19161:         extern volatile __bit                   MSK32               @ (((unsigned) &SSP2ADD)*8) + 3;
19162:         #define                                 MSK32_bit           BANKMASK(SSP2ADD), 3
19163:         extern volatile __bit                   MSK41               @ (((unsigned) &SSP1ADD)*8) + 4;
19164:         #define                                 MSK41_bit           BANKMASK(SSP1ADD), 4
19165:         extern volatile __bit                   MSK42               @ (((unsigned) &SSP2ADD)*8) + 4;
19166:         #define                                 MSK42_bit           BANKMASK(SSP2ADD), 4
19167:         extern volatile __bit                   MSK51               @ (((unsigned) &SSP1ADD)*8) + 5;
19168:         #define                                 MSK51_bit           BANKMASK(SSP1ADD), 5
19169:         extern volatile __bit                   MSK52               @ (((unsigned) &SSP2ADD)*8) + 5;
19170:         #define                                 MSK52_bit           BANKMASK(SSP2ADD), 5
19171:         extern volatile __bit                   MSK61               @ (((unsigned) &SSP1ADD)*8) + 6;
19172:         #define                                 MSK61_bit           BANKMASK(SSP1ADD), 6
19173:         extern volatile __bit                   MSK62               @ (((unsigned) &SSP2ADD)*8) + 6;
19174:         #define                                 MSK62_bit           BANKMASK(SSP2ADD), 6
19175:         extern volatile __bit                   MSK71               @ (((unsigned) &SSP1ADD)*8) + 7;
19176:         #define                                 MSK71_bit           BANKMASK(SSP1ADD), 7
19177:         extern volatile __bit                   MSK72               @ (((unsigned) &SSP2ADD)*8) + 7;
19178:         #define                                 MSK72_bit           BANKMASK(SSP2ADD), 7
19179:         extern volatile __bit                   MSSP1MD             @ (((unsigned) &PMD1)*8) + 6;
19180:         #define                                 MSSP1MD_bit         BANKMASK(PMD1), 6
19181:         extern volatile __bit                   MSSP2MD             @ (((unsigned) &PMD1)*8) + 7;
19182:         #define                                 MSSP2MD_bit         BANKMASK(PMD1), 7
19183:         extern volatile __bit                   NEGATIVE            @ (((unsigned) &STATUS)*8) + 4;
19184:         #define                                 NEGATIVE_bit        BANKMASK(STATUS), 4
19185:         extern volatile __bit                   NOT_A               @ (((unsigned) &SSP1STAT)*8) + 5;
19186:         #define                                 NOT_A_bit           BANKMASK(SSP1STAT), 5
19187:         extern volatile __bit                   NOT_BOR             @ (((unsigned) &RCON)*8) + 0;
19188:         #define                                 NOT_BOR_bit         BANKMASK(RCON), 0
19189:         extern volatile __bit                   NOT_DONE            @ (((unsigned) &ADCON0)*8) + 1;
19190:         #define                                 NOT_DONE_bit        BANKMASK(ADCON0), 1
19191:         extern volatile __bit                   NOT_MCLR            @ (((unsigned) &PORTE)*8) + 3;
19192:         #define                                 NOT_MCLR_bit        BANKMASK(PORTE), 3
19193:         extern volatile __bit                   NOT_PD              @ (((unsigned) &RCON)*8) + 2;
19194:         #define                                 NOT_PD_bit          BANKMASK(RCON), 2
19195:         extern volatile __bit                   NOT_POR             @ (((unsigned) &RCON)*8) + 1;
19196:         #define                                 NOT_POR_bit         BANKMASK(RCON), 1
19197:         extern volatile __bit                   NOT_RBPU            @ (((unsigned) &INTCON2)*8) + 7;
19198:         #define                                 NOT_RBPU_bit        BANKMASK(INTCON2), 7
19199:         extern volatile __bit                   NOT_RI              @ (((unsigned) &RCON)*8) + 4;
19200:         #define                                 NOT_RI_bit          BANKMASK(RCON), 4
19201:         extern volatile __bit                   NOT_SS              @ (((unsigned) &PORTA)*8) + 5;
19202:         #define                                 NOT_SS_bit          BANKMASK(PORTA), 5
19203:         extern volatile __bit                   NOT_SS1             @ (((unsigned) &PORTA)*8) + 5;
19204:         #define                                 NOT_SS1_bit         BANKMASK(PORTA), 5
19205:         extern volatile __bit                   NOT_SS2             @ (((unsigned) &PORTD)*8) + 3;
19206:         #define                                 NOT_SS2_bit         BANKMASK(PORTD), 3
19207:         extern volatile __bit                   NOT_T1SYNC          @ (((unsigned) &T1CON)*8) + 2;
19208:         #define                                 NOT_T1SYNC_bit      BANKMASK(T1CON), 2
19209:         extern volatile __bit                   NOT_T3SYNC          @ (((unsigned) &T3CON)*8) + 2;
19210:         #define                                 NOT_T3SYNC_bit      BANKMASK(T3CON), 2
19211:         extern volatile __bit                   NOT_T5SYNC          @ (((unsigned) &T5CON)*8) + 2;
19212:         #define                                 NOT_T5SYNC_bit      BANKMASK(T5CON), 2
19213:         extern volatile __bit                   NOT_TO              @ (((unsigned) &RCON)*8) + 3;
19214:         #define                                 NOT_TO_bit          BANKMASK(RCON), 3
19215:         extern volatile __bit                   NOT_W               @ (((unsigned) &SSP1STAT)*8) + 2;
19216:         #define                                 NOT_W_bit           BANKMASK(SSP1STAT), 2
19217:         extern volatile __bit                   NVCFG0              @ (((unsigned) &ADCON1)*8) + 0;
19218:         #define                                 NVCFG0_bit          BANKMASK(ADCON1), 0
19219:         extern volatile __bit                   NVCFG1              @ (((unsigned) &ADCON1)*8) + 1;
19220:         #define                                 NVCFG1_bit          BANKMASK(ADCON1), 1
19221:         extern volatile __bit                   OERR1               @ (((unsigned) &RCSTA1)*8) + 1;
19222:         #define                                 OERR1_bit           BANKMASK(RCSTA1), 1
19223:         extern volatile __bit                   OERR2               @ (((unsigned) &RCSTA2)*8) + 1;
19224:         #define                                 OERR2_bit           BANKMASK(RCSTA2), 1
19225:         extern volatile __bit                   OSCFIE              @ (((unsigned) &PIE2)*8) + 7;
19226:         #define                                 OSCFIE_bit          BANKMASK(PIE2), 7
19227:         extern volatile __bit                   OSCFIF              @ (((unsigned) &PIR2)*8) + 7;
19228:         #define                                 OSCFIF_bit          BANKMASK(PIR2), 7
19229:         extern volatile __bit                   OSCFIP              @ (((unsigned) &IPR2)*8) + 7;
19230:         #define                                 OSCFIP_bit          BANKMASK(IPR2), 7
19231:         extern volatile __bit                   OSTS                @ (((unsigned) &OSCCON)*8) + 3;
19232:         #define                                 OSTS_bit            BANKMASK(OSCCON), 3
19233:         extern volatile __bit                   OV                  @ (((unsigned) &STATUS)*8) + 3;
19234:         #define                                 OV_bit              BANKMASK(STATUS), 3
19235:         extern volatile __bit                   OVERFLOW            @ (((unsigned) &STATUS)*8) + 3;
19236:         #define                                 OVERFLOW_bit        BANKMASK(STATUS), 3
19237:         extern volatile __bit                   P1A                 @ (((unsigned) &PORTC)*8) + 2;
19238:         #define                                 P1A_bit             BANKMASK(PORTC), 2
19239:         extern volatile __bit                   P1B                 @ (((unsigned) &PORTD)*8) + 5;
19240:         #define                                 P1B_bit             BANKMASK(PORTD), 5
19241:         extern volatile __bit                   P1C                 @ (((unsigned) &PORTD)*8) + 6;
19242:         #define                                 P1C_bit             BANKMASK(PORTD), 6
19243:         extern volatile __bit                   P1D                 @ (((unsigned) &PORTD)*8) + 7;
19244:         #define                                 P1D_bit             BANKMASK(PORTD), 7
19245:         extern volatile __bit                   P1DC0               @ (((unsigned) &PWM1CON)*8) + 0;
19246:         #define                                 P1DC0_bit           BANKMASK(PWM1CON), 0
19247:         extern volatile __bit                   P1DC1               @ (((unsigned) &PWM1CON)*8) + 1;
19248:         #define                                 P1DC1_bit           BANKMASK(PWM1CON), 1
19249:         extern volatile __bit                   P1DC2               @ (((unsigned) &PWM1CON)*8) + 2;
19250:         #define                                 P1DC2_bit           BANKMASK(PWM1CON), 2
19251:         extern volatile __bit                   P1DC3               @ (((unsigned) &PWM1CON)*8) + 3;
19252:         #define                                 P1DC3_bit           BANKMASK(PWM1CON), 3
19253:         extern volatile __bit                   P1DC4               @ (((unsigned) &PWM1CON)*8) + 4;
19254:         #define                                 P1DC4_bit           BANKMASK(PWM1CON), 4
19255:         extern volatile __bit                   P1DC5               @ (((unsigned) &PWM1CON)*8) + 5;
19256:         #define                                 P1DC5_bit           BANKMASK(PWM1CON), 5
19257:         extern volatile __bit                   P1DC6               @ (((unsigned) &PWM1CON)*8) + 6;
19258:         #define                                 P1DC6_bit           BANKMASK(PWM1CON), 6
19259:         extern volatile __bit                   P1M0                @ (((unsigned) &CCP1CON)*8) + 6;
19260:         #define                                 P1M0_bit            BANKMASK(CCP1CON), 6
19261:         extern volatile __bit                   P1M1                @ (((unsigned) &CCP1CON)*8) + 7;
19262:         #define                                 P1M1_bit            BANKMASK(CCP1CON), 7
19263:         extern volatile __bit                   P1RSEN              @ (((unsigned) &PWM1CON)*8) + 7;
19264:         #define                                 P1RSEN_bit          BANKMASK(PWM1CON), 7
19265:         extern volatile __bit                   P1SSAC0             @ (((unsigned) &ECCP1AS)*8) + 2;
19266:         #define                                 P1SSAC0_bit         BANKMASK(ECCP1AS), 2
19267:         extern volatile __bit                   P1SSAC1             @ (((unsigned) &ECCP1AS)*8) + 3;
19268:         #define                                 P1SSAC1_bit         BANKMASK(ECCP1AS), 3
19269:         extern volatile __bit                   P1SSBD0             @ (((unsigned) &ECCP1AS)*8) + 0;
19270:         #define                                 P1SSBD0_bit         BANKMASK(ECCP1AS), 0
19271:         extern volatile __bit                   P1SSBD1             @ (((unsigned) &ECCP1AS)*8) + 1;
19272:         #define                                 P1SSBD1_bit         BANKMASK(ECCP1AS), 1
19273:         extern volatile __bit                   P2                  @ (((unsigned) &SSP2STAT)*8) + 4;
19274:         #define                                 P2_bit              BANKMASK(SSP2STAT), 4
19275:         extern volatile __bit                   P2C                 @ (((unsigned) &PORTD)*8) + 3;
19276:         #define                                 P2C_bit             BANKMASK(PORTD), 3
19277:         extern volatile __bit                   P2D                 @ (((unsigned) &PORTD)*8) + 4;
19278:         #define                                 P2D_bit             BANKMASK(PORTD), 4
19279:         extern volatile __bit                   P2DC0               @ (((unsigned) &PWM2CON)*8) + 0;
19280:         #define                                 P2DC0_bit           BANKMASK(PWM2CON), 0
19281:         extern volatile __bit                   P2DC02              @ (((unsigned) &PSTR2CON)*8) + 0;
19282:         #define                                 P2DC02_bit          BANKMASK(PSTR2CON), 0
19283:         extern volatile __bit                   P2DC0CON            @ (((unsigned) &PSTR2CON)*8) + 0;
19284:         #define                                 P2DC0CON_bit        BANKMASK(PSTR2CON), 0
19285:         extern volatile __bit                   P2DC1               @ (((unsigned) &PWM2CON)*8) + 1;
19286:         #define                                 P2DC1_bit           BANKMASK(PWM2CON), 1
19287:         extern volatile __bit                   P2DC12              @ (((unsigned) &PSTR2CON)*8) + 1;
19288:         #define                                 P2DC12_bit          BANKMASK(PSTR2CON), 1
19289:         extern volatile __bit                   P2DC1CON            @ (((unsigned) &PSTR2CON)*8) + 1;
19290:         #define                                 P2DC1CON_bit        BANKMASK(PSTR2CON), 1
19291:         extern volatile __bit                   P2DC2               @ (((unsigned) &PWM2CON)*8) + 2;
19292:         #define                                 P2DC2_bit           BANKMASK(PWM2CON), 2
19293:         extern volatile __bit                   P2DC22              @ (((unsigned) &PSTR2CON)*8) + 2;
19294:         #define                                 P2DC22_bit          BANKMASK(PSTR2CON), 2
19295:         extern volatile __bit                   P2DC2CON            @ (((unsigned) &PSTR2CON)*8) + 2;
19296:         #define                                 P2DC2CON_bit        BANKMASK(PSTR2CON), 2
19297:         extern volatile __bit                   P2DC3               @ (((unsigned) &PWM2CON)*8) + 3;
19298:         #define                                 P2DC3_bit           BANKMASK(PWM2CON), 3
19299:         extern volatile __bit                   P2DC32              @ (((unsigned) &PSTR2CON)*8) + 3;
19300:         #define                                 P2DC32_bit          BANKMASK(PSTR2CON), 3
19301:         extern volatile __bit                   P2DC3CON            @ (((unsigned) &PSTR2CON)*8) + 3;
19302:         #define                                 P2DC3CON_bit        BANKMASK(PSTR2CON), 3
19303:         extern volatile __bit                   P2DC4               @ (((unsigned) &PWM2CON)*8) + 4;
19304:         #define                                 P2DC4_bit           BANKMASK(PWM2CON), 4
19305:         extern volatile __bit                   P2DC42              @ (((unsigned) &PSTR2CON)*8) + 4;
19306:         #define                                 P2DC42_bit          BANKMASK(PSTR2CON), 4
19307:         extern volatile __bit                   P2DC4CON            @ (((unsigned) &PSTR2CON)*8) + 4;
19308:         #define                                 P2DC4CON_bit        BANKMASK(PSTR2CON), 4
19309:         extern volatile __bit                   P2DC5               @ (((unsigned) &PWM2CON)*8) + 5;
19310:         #define                                 P2DC5_bit           BANKMASK(PWM2CON), 5
19311:         extern volatile __bit                   P2DC6               @ (((unsigned) &PWM2CON)*8) + 6;
19312:         #define                                 P2DC6_bit           BANKMASK(PWM2CON), 6
19313:         extern volatile __bit                   P2M0                @ (((unsigned) &CCP2CON)*8) + 6;
19314:         #define                                 P2M0_bit            BANKMASK(CCP2CON), 6
19315:         extern volatile __bit                   P2M1                @ (((unsigned) &CCP2CON)*8) + 7;
19316:         #define                                 P2M1_bit            BANKMASK(CCP2CON), 7
19317:         extern volatile __bit                   P2RSEN              @ (((unsigned) &PWM2CON)*8) + 7;
19318:         #define                                 P2RSEN_bit          BANKMASK(PWM2CON), 7
19319:         extern volatile __bit                   P2SSAC0             @ (((unsigned) &ECCP2AS)*8) + 2;
19320:         #define                                 P2SSAC0_bit         BANKMASK(ECCP2AS), 2
19321:         extern volatile __bit                   P2SSAC1             @ (((unsigned) &ECCP2AS)*8) + 3;
19322:         #define                                 P2SSAC1_bit         BANKMASK(ECCP2AS), 3
19323:         extern volatile __bit                   P2SSBD0             @ (((unsigned) &ECCP2AS)*8) + 0;
19324:         #define                                 P2SSBD0_bit         BANKMASK(ECCP2AS), 0
19325:         extern volatile __bit                   P2SSBD1             @ (((unsigned) &ECCP2AS)*8) + 1;
19326:         #define                                 P2SSBD1_bit         BANKMASK(ECCP2AS), 1
19327:         extern volatile __bit                   P3B                 @ (((unsigned) &PORTE)*8) + 1;
19328:         #define                                 P3B_bit             BANKMASK(PORTE), 1
19329:         extern volatile __bit                   P3DC0               @ (((unsigned) &PWM3CON)*8) + 0;
19330:         #define                                 P3DC0_bit           BANKMASK(PWM3CON), 0
19331:         extern volatile __bit                   P3DC1               @ (((unsigned) &PWM3CON)*8) + 1;
19332:         #define                                 P3DC1_bit           BANKMASK(PWM3CON), 1
19333:         extern volatile __bit                   P3DC2               @ (((unsigned) &PWM3CON)*8) + 2;
19334:         #define                                 P3DC2_bit           BANKMASK(PWM3CON), 2
19335:         extern volatile __bit                   P3DC3               @ (((unsigned) &PWM3CON)*8) + 3;
19336:         #define                                 P3DC3_bit           BANKMASK(PWM3CON), 3
19337:         extern volatile __bit                   P3DC4               @ (((unsigned) &PWM3CON)*8) + 4;
19338:         #define                                 P3DC4_bit           BANKMASK(PWM3CON), 4
19339:         extern volatile __bit                   P3DC5               @ (((unsigned) &PWM3CON)*8) + 5;
19340:         #define                                 P3DC5_bit           BANKMASK(PWM3CON), 5
19341:         extern volatile __bit                   P3DC6               @ (((unsigned) &PWM3CON)*8) + 6;
19342:         #define                                 P3DC6_bit           BANKMASK(PWM3CON), 6
19343:         extern volatile __bit                   P3M0                @ (((unsigned) &CCP3CON)*8) + 6;
19344:         #define                                 P3M0_bit            BANKMASK(CCP3CON), 6
19345:         extern volatile __bit                   P3M1                @ (((unsigned) &CCP3CON)*8) + 7;
19346:         #define                                 P3M1_bit            BANKMASK(CCP3CON), 7
19347:         extern volatile __bit                   P3RSEN              @ (((unsigned) &PWM3CON)*8) + 7;
19348:         #define                                 P3RSEN_bit          BANKMASK(PWM3CON), 7
19349:         extern volatile __bit                   P3SSAC0             @ (((unsigned) &ECCP3AS)*8) + 2;
19350:         #define                                 P3SSAC0_bit         BANKMASK(ECCP3AS), 2
19351:         extern volatile __bit                   P3SSAC1             @ (((unsigned) &ECCP3AS)*8) + 3;
19352:         #define                                 P3SSAC1_bit         BANKMASK(ECCP3AS), 3
19353:         extern volatile __bit                   P3SSBD0             @ (((unsigned) &ECCP3AS)*8) + 0;
19354:         #define                                 P3SSBD0_bit         BANKMASK(ECCP3AS), 0
19355:         extern volatile __bit                   P3SSBD1             @ (((unsigned) &ECCP3AS)*8) + 1;
19356:         #define                                 P3SSBD1_bit         BANKMASK(ECCP3AS), 1
19357:         extern volatile __bit                   PA1                 @ (((unsigned) &PORTC)*8) + 2;
19358:         #define                                 PA1_bit             BANKMASK(PORTC), 2
19359:         extern volatile __bit                   PA2                 @ (((unsigned) &PORTC)*8) + 1;
19360:         #define                                 PA2_bit             BANKMASK(PORTC), 1
19361:         extern volatile __bit                   PA2E                @ (((unsigned) &PORTE)*8) + 7;
19362:         #define                                 PA2E_bit            BANKMASK(PORTE), 7
19363:         extern volatile __bit                   PB1E                @ (((unsigned) &PORTE)*8) + 6;
19364:         #define                                 PB1E_bit            BANKMASK(PORTE), 6
19365:         extern volatile __bit                   PB2                 @ (((unsigned) &PORTE)*8) + 2;
19366:         #define                                 PB2_bit             BANKMASK(PORTE), 2
19367:         extern volatile __bit                   PB3E                @ (((unsigned) &PORTE)*8) + 4;
19368:         #define                                 PB3E_bit            BANKMASK(PORTE), 4
19369:         extern volatile __bit                   PC1E                @ (((unsigned) &PORTE)*8) + 5;
19370:         #define                                 PC1E_bit            BANKMASK(PORTE), 5
19371:         extern volatile __bit                   PC2                 @ (((unsigned) &PORTE)*8) + 1;
19372:         #define                                 PC2_bit             BANKMASK(PORTE), 1
19373:         extern volatile __bit                   PC3E                @ (((unsigned) &PORTE)*8) + 3;
19374:         #define                                 PC3E_bit            BANKMASK(PORTE), 3
19375:         extern volatile __bit                   PD                  @ (((unsigned) &RCON)*8) + 2;
19376:         #define                                 PD_bit              BANKMASK(RCON), 2
19377:         extern volatile __bit                   PD2                 @ (((unsigned) &PORTE)*8) + 0;
19378:         #define                                 PD2_bit             BANKMASK(PORTE), 0
19379:         extern volatile __bit                   PDC0                @ (((unsigned) &PWM1CON)*8) + 0;
19380:         #define                                 PDC0_bit            BANKMASK(PWM1CON), 0
19381:         extern volatile __bit                   PDC1                @ (((unsigned) &PWM1CON)*8) + 1;
19382:         #define                                 PDC1_bit            BANKMASK(PWM1CON), 1
19383:         extern volatile __bit                   PDC2                @ (((unsigned) &PWM1CON)*8) + 2;
19384:         #define                                 PDC2_bit            BANKMASK(PWM1CON), 2
19385:         extern volatile __bit                   PDC3                @ (((unsigned) &PWM1CON)*8) + 3;
19386:         #define                                 PDC3_bit            BANKMASK(PWM1CON), 3
19387:         extern volatile __bit                   PDC4                @ (((unsigned) &PWM1CON)*8) + 4;
19388:         #define                                 PDC4_bit            BANKMASK(PWM1CON), 4
19389:         extern volatile __bit                   PDC5                @ (((unsigned) &PWM1CON)*8) + 5;
19390:         #define                                 PDC5_bit            BANKMASK(PWM1CON), 5
19391:         extern volatile __bit                   PDC6                @ (((unsigned) &PWM1CON)*8) + 6;
19392:         #define                                 PDC6_bit            BANKMASK(PWM1CON), 6
19393:         extern volatile __bit                   PEIE                @ (((unsigned) &INTCON)*8) + 6;
19394:         #define                                 PEIE_bit            BANKMASK(INTCON), 6
19395:         extern volatile __bit                   PEIE_GIEL           @ (((unsigned) &INTCON)*8) + 6;
19396:         #define                                 PEIE_GIEL_bit       BANKMASK(INTCON), 6
19397:         extern volatile __bit                   PEN1                @ (((unsigned) &SSP1CON2)*8) + 2;
19398:         #define                                 PEN1_bit            BANKMASK(SSP1CON2), 2
19399:         extern volatile __bit                   PEN2                @ (((unsigned) &SSP2CON2)*8) + 2;
19400:         #define                                 PEN2_bit            BANKMASK(SSP2CON2), 2
19401:         extern volatile __bit                   PGC                 @ (((unsigned) &PORTB)*8) + 6;
19402:         #define                                 PGC_bit             BANKMASK(PORTB), 6
19403:         extern volatile __bit                   PGD                 @ (((unsigned) &PORTB)*8) + 7;
19404:         #define                                 PGD_bit             BANKMASK(PORTB), 7
19405:         extern volatile __bit                   PLLEN               @ (((unsigned) &OSCTUNE)*8) + 6;
19406:         #define                                 PLLEN_bit           BANKMASK(OSCTUNE), 6
19407:         extern volatile __bit                   PLLRDY              @ (((unsigned) &OSCCON2)*8) + 7;
19408:         #define                                 PLLRDY_bit          BANKMASK(OSCCON2), 7
19409:         extern volatile __bit                   POR                 @ (((unsigned) &RCON)*8) + 1;
19410:         #define                                 POR_bit             BANKMASK(RCON), 1
19411:         extern volatile __bit                   PRISD               @ (((unsigned) &OSCCON2)*8) + 2;
19412:         #define                                 PRISD_bit           BANKMASK(OSCCON2), 2
19413:         extern volatile __bit                   PRSEN               @ (((unsigned) &PWM1CON)*8) + 7;
19414:         #define                                 PRSEN_bit           BANKMASK(PWM1CON), 7
19415:         extern volatile __bit                   PSA                 @ (((unsigned) &T0CON)*8) + 3;
19416:         #define                                 PSA_bit             BANKMASK(T0CON), 3
19417:         extern volatile __bit                   PSS1AC0             @ (((unsigned) &ECCP1AS)*8) + 2;
19418:         #define                                 PSS1AC0_bit         BANKMASK(ECCP1AS), 2
19419:         extern volatile __bit                   PSS1AC1             @ (((unsigned) &ECCP1AS)*8) + 3;
19420:         #define                                 PSS1AC1_bit         BANKMASK(ECCP1AS), 3
19421:         extern volatile __bit                   PSS1BD0             @ (((unsigned) &ECCP1AS)*8) + 0;
19422:         #define                                 PSS1BD0_bit         BANKMASK(ECCP1AS), 0
19423:         extern volatile __bit                   PSS1BD1             @ (((unsigned) &ECCP1AS)*8) + 1;
19424:         #define                                 PSS1BD1_bit         BANKMASK(ECCP1AS), 1
19425:         extern volatile __bit                   PSS2AC0             @ (((unsigned) &ECCP2AS)*8) + 2;
19426:         #define                                 PSS2AC0_bit         BANKMASK(ECCP2AS), 2
19427:         extern volatile __bit                   PSS2AC1             @ (((unsigned) &ECCP2AS)*8) + 3;
19428:         #define                                 PSS2AC1_bit         BANKMASK(ECCP2AS), 3
19429:         extern volatile __bit                   PSS2BD0             @ (((unsigned) &ECCP2AS)*8) + 0;
19430:         #define                                 PSS2BD0_bit         BANKMASK(ECCP2AS), 0
19431:         extern volatile __bit                   PSS2BD1             @ (((unsigned) &ECCP2AS)*8) + 1;
19432:         #define                                 PSS2BD1_bit         BANKMASK(ECCP2AS), 1
19433:         extern volatile __bit                   PSS3AC0             @ (((unsigned) &ECCP3AS)*8) + 2;
19434:         #define                                 PSS3AC0_bit         BANKMASK(ECCP3AS), 2
19435:         extern volatile __bit                   PSS3AC1             @ (((unsigned) &ECCP3AS)*8) + 3;
19436:         #define                                 PSS3AC1_bit         BANKMASK(ECCP3AS), 3
19437:         extern volatile __bit                   PSS3BD0             @ (((unsigned) &ECCP3AS)*8) + 0;
19438:         #define                                 PSS3BD0_bit         BANKMASK(ECCP3AS), 0
19439:         extern volatile __bit                   PSS3BD1             @ (((unsigned) &ECCP3AS)*8) + 1;
19440:         #define                                 PSS3BD1_bit         BANKMASK(ECCP3AS), 1
19441:         extern volatile __bit                   PSSAC0              @ (((unsigned) &ECCP1AS)*8) + 2;
19442:         #define                                 PSSAC0_bit          BANKMASK(ECCP1AS), 2
19443:         extern volatile __bit                   PSSAC1              @ (((unsigned) &ECCP1AS)*8) + 3;
19444:         #define                                 PSSAC1_bit          BANKMASK(ECCP1AS), 3
19445:         extern volatile __bit                   PSSBD0              @ (((unsigned) &ECCP1AS)*8) + 0;
19446:         #define                                 PSSBD0_bit          BANKMASK(ECCP1AS), 0
19447:         extern volatile __bit                   PSSBD1              @ (((unsigned) &ECCP1AS)*8) + 1;
19448:         #define                                 PSSBD1_bit          BANKMASK(ECCP1AS), 1
19449:         extern volatile __bit                   PVCFG0              @ (((unsigned) &ADCON1)*8) + 2;
19450:         #define                                 PVCFG0_bit          BANKMASK(ADCON1), 2
19451:         extern volatile __bit                   PVCFG1              @ (((unsigned) &ADCON1)*8) + 3;
19452:         #define                                 PVCFG1_bit          BANKMASK(ADCON1), 3
19453:         extern volatile __bit                   RBIE                @ (((unsigned) &INTCON)*8) + 3;
19454:         #define                                 RBIE_bit            BANKMASK(INTCON), 3
19455:         extern volatile __bit                   RBIF                @ (((unsigned) &INTCON)*8) + 0;
19456:         #define                                 RBIF_bit            BANKMASK(INTCON), 0
19457:         extern volatile __bit                   RBIP                @ (((unsigned) &INTCON2)*8) + 0;
19458:         #define                                 RBIP_bit            BANKMASK(INTCON2), 0
19459:         extern volatile __bit                   RBPU                @ (((unsigned) &INTCON2)*8) + 7;
19460:         #define                                 RBPU_bit            BANKMASK(INTCON2), 7
19461:         extern volatile __bit                   RC1IE               @ (((unsigned) &PIE1)*8) + 5;
19462:         #define                                 RC1IE_bit           BANKMASK(PIE1), 5
19463:         extern volatile __bit                   RC1IF               @ (((unsigned) &PIR1)*8) + 5;
19464:         #define                                 RC1IF_bit           BANKMASK(PIR1), 5
19465:         extern volatile __bit                   RC1IP               @ (((unsigned) &IPR1)*8) + 5;
19466:         #define                                 RC1IP_bit           BANKMASK(IPR1), 5
19467:         extern volatile __bit                   RC2IE               @ (((unsigned) &PIE3)*8) + 5;
19468:         #define                                 RC2IE_bit           BANKMASK(PIE3), 5
19469:         extern volatile __bit                   RC2IF               @ (((unsigned) &PIR3)*8) + 5;
19470:         #define                                 RC2IF_bit           BANKMASK(PIR3), 5
19471:         extern volatile __bit                   RC2IP               @ (((unsigned) &IPR3)*8) + 5;
19472:         #define                                 RC2IP_bit           BANKMASK(IPR3), 5
19473:         extern volatile __bit                   RC8_9               @ (((unsigned) &RCSTA1)*8) + 6;
19474:         #define                                 RC8_9_bit           BANKMASK(RCSTA1), 6
19475:         extern volatile __bit                   RC8_92              @ (((unsigned) &RCSTA2)*8) + 6;
19476:         #define                                 RC8_92_bit          BANKMASK(RCSTA2), 6
19477:         extern volatile __bit                   RC9                 @ (((unsigned) &RCSTA1)*8) + 6;
19478:         #define                                 RC9_bit             BANKMASK(RCSTA1), 6
19479:         extern volatile __bit                   RC92                @ (((unsigned) &RCSTA2)*8) + 6;
19480:         #define                                 RC92_bit            BANKMASK(RCSTA2), 6
19481:         extern volatile __bit                   RCD8                @ (((unsigned) &RCSTA1)*8) + 0;
19482:         #define                                 RCD8_bit            BANKMASK(RCSTA1), 0
19483:         extern volatile __bit                   RCD82               @ (((unsigned) &RCSTA2)*8) + 0;
19484:         #define                                 RCD82_bit           BANKMASK(RCSTA2), 0
19485:         extern volatile __bit                   RCEN1               @ (((unsigned) &SSP1CON2)*8) + 3;
19486:         #define                                 RCEN1_bit           BANKMASK(SSP1CON2), 3
19487:         extern volatile __bit                   RCEN2               @ (((unsigned) &SSP2CON2)*8) + 3;
19488:         #define                                 RCEN2_bit           BANKMASK(SSP2CON2), 3
19489:         extern volatile __bit                   RCIDL1              @ (((unsigned) &BAUDCON1)*8) + 6;
19490:         #define                                 RCIDL1_bit          BANKMASK(BAUDCON1), 6
19491:         extern volatile __bit                   RCIDL2              @ (((unsigned) &BAUDCON2)*8) + 6;
19492:         #define                                 RCIDL2_bit          BANKMASK(BAUDCON2), 6
19493:         extern volatile __bit                   RCIE                @ (((unsigned) &PIE1)*8) + 5;
19494:         #define                                 RCIE_bit            BANKMASK(PIE1), 5
19495:         extern volatile __bit                   RCIF                @ (((unsigned) &PIR1)*8) + 5;
19496:         #define                                 RCIF_bit            BANKMASK(PIR1), 5
19497:         extern volatile __bit                   RCIP                @ (((unsigned) &IPR1)*8) + 5;
19498:         #define                                 RCIP_bit            BANKMASK(IPR1), 5
19499:         extern volatile __bit                   RCMT                @ (((unsigned) &BAUDCON1)*8) + 6;
19500:         #define                                 RCMT_bit            BANKMASK(BAUDCON1), 6
19501:         extern volatile __bit                   RCMT1               @ (((unsigned) &BAUDCON1)*8) + 6;
19502:         #define                                 RCMT1_bit           BANKMASK(BAUDCON1), 6
19503:         extern volatile __bit                   RCMT2               @ (((unsigned) &BAUDCON2)*8) + 6;
19504:         #define                                 RCMT2_bit           BANKMASK(BAUDCON2), 6
19505:         extern volatile __bit                   RD                  @ (((unsigned) &EECON1)*8) + 0;
19506:         #define                                 RD_bit              BANKMASK(EECON1), 0
19507:         extern volatile __bit                   RD16                @ (((unsigned) &T1CON)*8) + 1;
19508:         #define                                 RD16_bit            BANKMASK(T1CON), 1
19509:         extern volatile __bit                   RD163               @ (((unsigned) &T3CON)*8) + 7;
19510:         #define                                 RD163_bit           BANKMASK(T3CON), 7
19511:         extern volatile __bit                   RD165               @ (((unsigned) &T5CON)*8) + 1;
19512:         #define                                 RD165_bit           BANKMASK(T5CON), 1
19513:         extern volatile __bit                   RDE                 @ (((unsigned) &PORTE)*8) + 0;
19514:         #define                                 RDE_bit             BANKMASK(PORTE), 0
19515:         extern volatile __bit                   RE3                 @ (((unsigned) &PORTE)*8) + 3;
19516:         #define                                 RE3_bit             BANKMASK(PORTE), 3
19517:         extern volatile __bit                   RE4                 @ (((unsigned) &PORTE)*8) + 4;
19518:         #define                                 RE4_bit             BANKMASK(PORTE), 4
19519:         extern volatile __bit                   RE5                 @ (((unsigned) &PORTE)*8) + 5;
19520:         #define                                 RE5_bit             BANKMASK(PORTE), 5
19521:         extern volatile __bit                   RE6                 @ (((unsigned) &PORTE)*8) + 6;
19522:         #define                                 RE6_bit             BANKMASK(PORTE), 6
19523:         extern volatile __bit                   RE7                 @ (((unsigned) &PORTE)*8) + 7;
19524:         #define                                 RE7_bit             BANKMASK(PORTE), 7
19525:         extern volatile __bit                   READ_WRITE          @ (((unsigned) &SSP1STAT)*8) + 2;
19526:         #define                                 READ_WRITE_bit      BANKMASK(SSP1STAT), 2
19527:         extern volatile __bit                   READ_WRITE2         @ (((unsigned) &SSP2STAT)*8) + 2;
19528:         #define                                 READ_WRITE2_bit     BANKMASK(SSP2STAT), 2
19529:         extern volatile __bit                   RI                  @ (((unsigned) &RCON)*8) + 4;
19530:         #define                                 RI_bit              BANKMASK(RCON), 4
19531:         extern volatile __bit                   RJPU                @ (((unsigned) &PORTA)*8) + 7;
19532:         #define                                 RJPU_bit            BANKMASK(PORTA), 7
19533:         extern volatile __bit                   RSEN1               @ (((unsigned) &SSP1CON2)*8) + 1;
19534:         #define                                 RSEN1_bit           BANKMASK(SSP1CON2), 1
19535:         extern volatile __bit                   RSEN2               @ (((unsigned) &SSP2CON2)*8) + 1;
19536:         #define                                 RSEN2_bit           BANKMASK(SSP2CON2), 1
19537:         extern volatile __bit                   RW                  @ (((unsigned) &SSP1STAT)*8) + 2;
19538:         #define                                 RW_bit              BANKMASK(SSP1STAT), 2
19539:         extern volatile __bit                   RW1                 @ (((unsigned) &SSP1STAT)*8) + 2;
19540:         #define                                 RW1_bit             BANKMASK(SSP1STAT), 2
19541:         extern volatile __bit                   RW2                 @ (((unsigned) &SSP2STAT)*8) + 2;
19542:         #define                                 RW2_bit             BANKMASK(SSP2STAT), 2
19543:         extern volatile __bit                   RX                  @ (((unsigned) &PORTC)*8) + 7;
19544:         #define                                 RX_bit              BANKMASK(PORTC), 7
19545:         extern volatile __bit                   RX1                 @ (((unsigned) &PORTC)*8) + 7;
19546:         #define                                 RX1_bit             BANKMASK(PORTC), 7
19547:         extern volatile __bit                   RX2                 @ (((unsigned) &PORTD)*8) + 7;
19548:         #define                                 RX2_bit             BANKMASK(PORTD), 7
19549:         extern volatile __bit                   RX91                @ (((unsigned) &RCSTA1)*8) + 6;
19550:         #define                                 RX91_bit            BANKMASK(RCSTA1), 6
19551:         extern volatile __bit                   RX92                @ (((unsigned) &RCSTA2)*8) + 6;
19552:         #define                                 RX92_bit            BANKMASK(RCSTA2), 6
19553:         extern volatile __bit                   RX9D1               @ (((unsigned) &RCSTA1)*8) + 0;
19554:         #define                                 RX9D1_bit           BANKMASK(RCSTA1), 0
19555:         extern volatile __bit                   RX9D2               @ (((unsigned) &RCSTA2)*8) + 0;
19556:         #define                                 RX9D2_bit           BANKMASK(RCSTA2), 0
19557:         extern volatile __bit                   RXB0IE              @ (((unsigned) &PIE3)*8) + 0;
19558:         #define                                 RXB0IE_bit          BANKMASK(PIE3), 0
19559:         extern volatile __bit                   RXB1IE              @ (((unsigned) &PIE3)*8) + 1;
19560:         #define                                 RXB1IE_bit          BANKMASK(PIE3), 1
19561:         extern volatile __bit                   RXBNIE              @ (((unsigned) &PIE3)*8) + 1;
19562:         #define                                 RXBNIE_bit          BANKMASK(PIE3), 1
19563:         extern volatile __bit                   RXBNIF              @ (((unsigned) &PIR3)*8) + 1;
19564:         #define                                 RXBNIF_bit          BANKMASK(PIR3), 1
19565:         extern volatile __bit                   RXBNIP              @ (((unsigned) &IPR3)*8) + 1;
19566:         #define                                 RXBNIP_bit          BANKMASK(IPR3), 1
19567:         extern volatile __bit                   RXCKP               @ (((unsigned) &BAUDCON1)*8) + 5;
19568:         #define                                 RXCKP_bit           BANKMASK(BAUDCON1), 5
19569:         extern volatile __bit                   RXDTP               @ (((unsigned) &BAUDCON1)*8) + 5;
19570:         #define                                 RXDTP_bit           BANKMASK(BAUDCON1), 5
19571:         extern volatile __bit                   RXDTP1              @ (((unsigned) &BAUDCON1)*8) + 5;
19572:         #define                                 RXDTP1_bit          BANKMASK(BAUDCON1), 5
19573:         extern volatile __bit                   RXDTP2              @ (((unsigned) &BAUDCON2)*8) + 5;
19574:         #define                                 RXDTP2_bit          BANKMASK(BAUDCON2), 5
19575:         extern volatile __bit                   R_W2                @ (((unsigned) &SSP2STAT)*8) + 2;
19576:         #define                                 R_W2_bit            BANKMASK(SSP2STAT), 2
19577:         extern volatile __bit                   R_nW2               @ (((unsigned) &SSP2STAT)*8) + 2;
19578:         #define                                 R_nW2_bit           BANKMASK(SSP2STAT), 2
19579:         extern volatile __bit                   S2                  @ (((unsigned) &SSP2STAT)*8) + 3;
19580:         #define                                 S2_bit              BANKMASK(SSP2STAT), 3
19581:         extern volatile __bit                   SBOREN              @ (((unsigned) &RCON)*8) + 6;
19582:         #define                                 SBOREN_bit          BANKMASK(RCON), 6
19583:         extern volatile __bit                   SCK                 @ (((unsigned) &PORTC)*8) + 3;
19584:         #define                                 SCK_bit             BANKMASK(PORTC), 3
19585:         extern volatile __bit                   SCK1                @ (((unsigned) &PORTC)*8) + 3;
19586:         #define                                 SCK1_bit            BANKMASK(PORTC), 3
19587:         extern volatile __bit                   SCK2                @ (((unsigned) &PORTD)*8) + 0;
19588:         #define                                 SCK2_bit            BANKMASK(PORTD), 0
19589:         extern volatile __bit                   SCKP1               @ (((unsigned) &BAUDCON1)*8) + 4;
19590:         #define                                 SCKP1_bit           BANKMASK(BAUDCON1), 4
19591:         extern volatile __bit                   SCKP2               @ (((unsigned) &BAUDCON2)*8) + 4;
19592:         #define                                 SCKP2_bit           BANKMASK(BAUDCON2), 4
19593:         extern volatile __bit                   SCL                 @ (((unsigned) &PORTC)*8) + 3;
19594:         #define                                 SCL_bit             BANKMASK(PORTC), 3
19595:         extern volatile __bit                   SCL1                @ (((unsigned) &PORTC)*8) + 3;
19596:         #define                                 SCL1_bit            BANKMASK(PORTC), 3
19597:         extern volatile __bit                   SCL2                @ (((unsigned) &PORTD)*8) + 0;
19598:         #define                                 SCL2_bit            BANKMASK(PORTD), 0
19599:         extern volatile __bit                   SCS0                @ (((unsigned) &OSCCON)*8) + 0;
19600:         #define                                 SCS0_bit            BANKMASK(OSCCON), 0
19601:         extern volatile __bit                   SCS1                @ (((unsigned) &OSCCON)*8) + 1;
19602:         #define                                 SCS1_bit            BANKMASK(OSCCON), 1
19603:         extern volatile __bit                   SDA                 @ (((unsigned) &PORTC)*8) + 4;
19604:         #define                                 SDA_bit             BANKMASK(PORTC), 4
19605:         extern volatile __bit                   SDA1                @ (((unsigned) &PORTC)*8) + 4;
19606:         #define                                 SDA1_bit            BANKMASK(PORTC), 4
19607:         extern volatile __bit                   SDA2                @ (((unsigned) &PORTD)*8) + 1;
19608:         #define                                 SDA2_bit            BANKMASK(PORTD), 1
19609:         extern volatile __bit                   SDI                 @ (((unsigned) &PORTC)*8) + 4;
19610:         #define                                 SDI_bit             BANKMASK(PORTC), 4
19611:         extern volatile __bit                   SDI1                @ (((unsigned) &PORTC)*8) + 4;
19612:         #define                                 SDI1_bit            BANKMASK(PORTC), 4
19613:         extern volatile __bit                   SDI2                @ (((unsigned) &PORTD)*8) + 1;
19614:         #define                                 SDI2_bit            BANKMASK(PORTD), 1
19615:         extern volatile __bit                   SDO                 @ (((unsigned) &PORTC)*8) + 5;
19616:         #define                                 SDO_bit             BANKMASK(PORTC), 5
19617:         extern volatile __bit                   SDO1                @ (((unsigned) &PORTC)*8) + 5;
19618:         #define                                 SDO1_bit            BANKMASK(PORTC), 5
19619:         extern volatile __bit                   SDO2                @ (((unsigned) &PORTD)*8) + 4;
19620:         #define                                 SDO2_bit            BANKMASK(PORTD), 4
19621:         extern volatile __bit                   SEN1                @ (((unsigned) &SSP1CON2)*8) + 0;
19622:         #define                                 SEN1_bit            BANKMASK(SSP1CON2), 0
19623:         extern volatile __bit                   SEN2                @ (((unsigned) &SSP2CON2)*8) + 0;
19624:         #define                                 SEN2_bit            BANKMASK(SSP2CON2), 0
19625:         extern volatile __bit                   SENDB1              @ (((unsigned) &TXSTA1)*8) + 3;
19626:         #define                                 SENDB1_bit          BANKMASK(TXSTA1), 3
19627:         extern volatile __bit                   SENDB2              @ (((unsigned) &TXSTA2)*8) + 3;
19628:         #define                                 SENDB2_bit          BANKMASK(TXSTA2), 3
19629:         extern volatile __bit                   SLRA                @ (((unsigned) &SLRCON)*8) + 0;
19630:         #define                                 SLRA_bit            BANKMASK(SLRCON), 0
19631:         extern volatile __bit                   SLRB                @ (((unsigned) &SLRCON)*8) + 1;
19632:         #define                                 SLRB_bit            BANKMASK(SLRCON), 1
19633:         extern volatile __bit                   SLRC                @ (((unsigned) &SLRCON)*8) + 2;
19634:         #define                                 SLRC_bit            BANKMASK(SLRCON), 2
19635:         extern volatile __bit                   SLRD                @ (((unsigned) &SLRCON)*8) + 3;
19636:         #define                                 SLRD_bit            BANKMASK(SLRCON), 3
19637:         extern volatile __bit                   SLRE                @ (((unsigned) &SLRCON)*8) + 4;
19638:         #define                                 SLRE_bit            BANKMASK(SLRCON), 4
19639:         extern volatile __bit                   SMP1                @ (((unsigned) &SSP1STAT)*8) + 7;
19640:         #define                                 SMP1_bit            BANKMASK(SSP1STAT), 7
19641:         extern volatile __bit                   SMP2                @ (((unsigned) &SSP2STAT)*8) + 7;
19642:         #define                                 SMP2_bit            BANKMASK(SSP2STAT), 7
19643:         extern volatile __bit                   SOSCEN              @ (((unsigned) &T1CON)*8) + 3;
19644:         #define                                 SOSCEN_bit          BANKMASK(T1CON), 3
19645:         extern volatile __bit                   SOSCEN3             @ (((unsigned) &T3CON)*8) + 3;
19646:         #define                                 SOSCEN3_bit         BANKMASK(T3CON), 3
19647:         extern volatile __bit                   SOSCEN5             @ (((unsigned) &T5CON)*8) + 3;
19648:         #define                                 SOSCEN5_bit         BANKMASK(T5CON), 3
19649:         extern volatile __bit                   SOSCGO              @ (((unsigned) &OSCCON2)*8) + 3;
19650:         #define                                 SOSCGO_bit          BANKMASK(OSCCON2), 3
19651:         extern volatile __bit                   SOSCRUN             @ (((unsigned) &OSCCON2)*8) + 6;
19652:         #define                                 SOSCRUN_bit         BANKMASK(OSCCON2), 6
19653:         extern volatile __bit                   SP0                 @ (((unsigned) &STKPTR)*8) + 0;
19654:         #define                                 SP0_bit             BANKMASK(STKPTR), 0
19655:         extern volatile __bit                   SP1                 @ (((unsigned) &STKPTR)*8) + 1;
19656:         #define                                 SP1_bit             BANKMASK(STKPTR), 1
19657:         extern volatile __bit                   SP2                 @ (((unsigned) &STKPTR)*8) + 2;
19658:         #define                                 SP2_bit             BANKMASK(STKPTR), 2
19659:         extern volatile __bit                   SP3                 @ (((unsigned) &STKPTR)*8) + 3;
19660:         #define                                 SP3_bit             BANKMASK(STKPTR), 3
19661:         extern volatile __bit                   SP4                 @ (((unsigned) &STKPTR)*8) + 4;
19662:         #define                                 SP4_bit             BANKMASK(STKPTR), 4
19663:         extern volatile __bit                   SPEN1               @ (((unsigned) &RCSTA1)*8) + 7;
19664:         #define                                 SPEN1_bit           BANKMASK(RCSTA1), 7
19665:         extern volatile __bit                   SPEN2               @ (((unsigned) &RCSTA2)*8) + 7;
19666:         #define                                 SPEN2_bit           BANKMASK(RCSTA2), 7
19667:         extern volatile __bit                   SPI1MD              @ (((unsigned) &PMD0)*8) + 1;
19668:         #define                                 SPI1MD_bit          BANKMASK(PMD0), 1
19669:         extern volatile __bit                   SPI2MD              @ (((unsigned) &PMD0)*8) + 2;
19670:         #define                                 SPI2MD_bit          BANKMASK(PMD0), 2
19671:         extern volatile __bit                   SRCLK0              @ (((unsigned) &SRCON0)*8) + 4;
19672:         #define                                 SRCLK0_bit          BANKMASK(SRCON0), 4
19673:         extern volatile __bit                   SRCLK1              @ (((unsigned) &SRCON0)*8) + 5;
19674:         #define                                 SRCLK1_bit          BANKMASK(SRCON0), 5
19675:         extern volatile __bit                   SRCLK2              @ (((unsigned) &SRCON0)*8) + 6;
19676:         #define                                 SRCLK2_bit          BANKMASK(SRCON0), 6
19677:         extern volatile __bit                   SREN1               @ (((unsigned) &RCSTA1)*8) + 5;
19678:         #define                                 SREN1_bit           BANKMASK(RCSTA1), 5
19679:         extern volatile __bit                   SREN2               @ (((unsigned) &RCSTA2)*8) + 5;
19680:         #define                                 SREN2_bit           BANKMASK(RCSTA2), 5
19681:         extern volatile __bit                   SRENA               @ (((unsigned) &RCSTA1)*8) + 5;
19682:         #define                                 SRENA_bit           BANKMASK(RCSTA1), 5
19683:         extern volatile __bit                   SRI                 @ (((unsigned) &PORTB)*8) + 0;
19684:         #define                                 SRI_bit             BANKMASK(PORTB), 0
19685:         extern volatile __bit                   SRLEN               @ (((unsigned) &SRCON0)*8) + 7;
19686:         #define                                 SRLEN_bit           BANKMASK(SRCON0), 7
19687:         extern volatile __bit                   SRNQ                @ (((unsigned) &PORTA)*8) + 5;
19688:         #define                                 SRNQ_bit            BANKMASK(PORTA), 5
19689:         extern volatile __bit                   SRNQEN              @ (((unsigned) &SRCON0)*8) + 2;
19690:         #define                                 SRNQEN_bit          BANKMASK(SRCON0), 2
19691:         extern volatile __bit                   SRPR                @ (((unsigned) &SRCON0)*8) + 0;
19692:         #define                                 SRPR_bit            BANKMASK(SRCON0), 0
19693:         extern volatile __bit                   SRPS                @ (((unsigned) &SRCON0)*8) + 1;
19694:         #define                                 SRPS_bit            BANKMASK(SRCON0), 1
19695:         extern volatile __bit                   SRQ                 @ (((unsigned) &PORTA)*8) + 4;
19696:         #define                                 SRQ_bit             BANKMASK(PORTA), 4
19697:         extern volatile __bit                   SRQEN               @ (((unsigned) &SRCON0)*8) + 3;
19698:         #define                                 SRQEN_bit           BANKMASK(SRCON0), 3
19699:         extern volatile __bit                   SRRC1E              @ (((unsigned) &SRCON1)*8) + 0;
19700:         #define                                 SRRC1E_bit          BANKMASK(SRCON1), 0
19701:         extern volatile __bit                   SRRC2E              @ (((unsigned) &SRCON1)*8) + 1;
19702:         #define                                 SRRC2E_bit          BANKMASK(SRCON1), 1
19703:         extern volatile __bit                   SRRCKE              @ (((unsigned) &SRCON1)*8) + 2;
19704:         #define                                 SRRCKE_bit          BANKMASK(SRCON1), 2
19705:         extern volatile __bit                   SRRPE               @ (((unsigned) &SRCON1)*8) + 3;
19706:         #define                                 SRRPE_bit           BANKMASK(SRCON1), 3
19707:         extern volatile __bit                   SRSC1E              @ (((unsigned) &SRCON1)*8) + 4;
19708:         #define                                 SRSC1E_bit          BANKMASK(SRCON1), 4
19709:         extern volatile __bit                   SRSC2E              @ (((unsigned) &SRCON1)*8) + 5;
19710:         #define                                 SRSC2E_bit          BANKMASK(SRCON1), 5
19711:         extern volatile __bit                   SRSCKE              @ (((unsigned) &SRCON1)*8) + 6;
19712:         #define                                 SRSCKE_bit          BANKMASK(SRCON1), 6
19713:         extern volatile __bit                   SRSPE               @ (((unsigned) &SRCON1)*8) + 7;
19714:         #define                                 SRSPE_bit           BANKMASK(SRCON1), 7
19715:         extern volatile __bit                   SS                  @ (((unsigned) &PORTA)*8) + 5;
19716:         #define                                 SS_bit              BANKMASK(PORTA), 5
19717:         extern volatile __bit                   SS1                 @ (((unsigned) &PORTA)*8) + 5;
19718:         #define                                 SS1_bit             BANKMASK(PORTA), 5
19719:         extern volatile __bit                   SS2                 @ (((unsigned) &PORTD)*8) + 3;
19720:         #define                                 SS2_bit             BANKMASK(PORTD), 3
19721:         extern volatile __bit                   SSP1IE              @ (((unsigned) &PIE1)*8) + 3;
19722:         #define                                 SSP1IE_bit          BANKMASK(PIE1), 3
19723:         extern volatile __bit                   SSP1IF              @ (((unsigned) &PIR1)*8) + 3;
19724:         #define                                 SSP1IF_bit          BANKMASK(PIR1), 3
19725:         extern volatile __bit                   SSP1IP              @ (((unsigned) &IPR1)*8) + 3;
19726:         #define                                 SSP1IP_bit          BANKMASK(IPR1), 3
19727:         extern volatile __bit                   SSP2IE              @ (((unsigned) &PIE3)*8) + 7;
19728:         #define                                 SSP2IE_bit          BANKMASK(PIE3), 7
19729:         extern volatile __bit                   SSP2IF              @ (((unsigned) &PIR3)*8) + 7;
19730:         #define                                 SSP2IF_bit          BANKMASK(PIR3), 7
19731:         extern volatile __bit                   SSP2IP              @ (((unsigned) &IPR3)*8) + 7;
19732:         #define                                 SSP2IP_bit          BANKMASK(IPR3), 7
19733:         extern volatile __bit                   SSPEN1              @ (((unsigned) &SSP1CON1)*8) + 5;
19734:         #define                                 SSPEN1_bit          BANKMASK(SSP1CON1), 5
19735:         extern volatile __bit                   SSPEN2              @ (((unsigned) &SSP2CON1)*8) + 5;
19736:         #define                                 SSPEN2_bit          BANKMASK(SSP2CON1), 5
19737:         extern volatile __bit                   SSPIE               @ (((unsigned) &PIE1)*8) + 3;
19738:         #define                                 SSPIE_bit           BANKMASK(PIE1), 3
19739:         extern volatile __bit                   SSPIF               @ (((unsigned) &PIR1)*8) + 3;
19740:         #define                                 SSPIF_bit           BANKMASK(PIR1), 3
19741:         extern volatile __bit                   SSPIP               @ (((unsigned) &IPR1)*8) + 3;
19742:         #define                                 SSPIP_bit           BANKMASK(IPR1), 3
19743:         extern volatile __bit                   SSPM01              @ (((unsigned) &SSP1CON1)*8) + 0;
19744:         #define                                 SSPM01_bit          BANKMASK(SSP1CON1), 0
19745:         extern volatile __bit                   SSPM02              @ (((unsigned) &SSP2CON1)*8) + 0;
19746:         #define                                 SSPM02_bit          BANKMASK(SSP2CON1), 0
19747:         extern volatile __bit                   SSPM11              @ (((unsigned) &SSP1CON1)*8) + 1;
19748:         #define                                 SSPM11_bit          BANKMASK(SSP1CON1), 1
19749:         extern volatile __bit                   SSPM12              @ (((unsigned) &SSP2CON1)*8) + 1;
19750:         #define                                 SSPM12_bit          BANKMASK(SSP2CON1), 1
19751:         extern volatile __bit                   SSPM21              @ (((unsigned) &SSP1CON1)*8) + 2;
19752:         #define                                 SSPM21_bit          BANKMASK(SSP1CON1), 2
19753:         extern volatile __bit                   SSPM22              @ (((unsigned) &SSP2CON1)*8) + 2;
19754:         #define                                 SSPM22_bit          BANKMASK(SSP2CON1), 2
19755:         extern volatile __bit                   SSPM31              @ (((unsigned) &SSP1CON1)*8) + 3;
19756:         #define                                 SSPM31_bit          BANKMASK(SSP1CON1), 3
19757:         extern volatile __bit                   SSPM32              @ (((unsigned) &SSP2CON1)*8) + 3;
19758:         #define                                 SSPM32_bit          BANKMASK(SSP2CON1), 3
19759:         extern volatile __bit                   SSPOV1              @ (((unsigned) &SSP1CON1)*8) + 6;
19760:         #define                                 SSPOV1_bit          BANKMASK(SSP1CON1), 6
19761:         extern volatile __bit                   SSPOV2              @ (((unsigned) &SSP2CON1)*8) + 6;
19762:         #define                                 SSPOV2_bit          BANKMASK(SSP2CON1), 6
19763:         extern volatile __bit                   START               @ (((unsigned) &SSP1STAT)*8) + 3;
19764:         #define                                 START_bit           BANKMASK(SSP1STAT), 3
19765:         extern volatile __bit                   START1              @ (((unsigned) &SSP1STAT)*8) + 3;
19766:         #define                                 START1_bit          BANKMASK(SSP1STAT), 3
19767:         extern volatile __bit                   START2              @ (((unsigned) &SSP2STAT)*8) + 3;
19768:         #define                                 START2_bit          BANKMASK(SSP2STAT), 3
19769:         extern volatile __bit                   STKFUL              @ (((unsigned) &STKPTR)*8) + 7;
19770:         #define                                 STKFUL_bit          BANKMASK(STKPTR), 7
19771:         extern volatile __bit                   STKOVF              @ (((unsigned) &STKPTR)*8) + 7;
19772:         #define                                 STKOVF_bit          BANKMASK(STKPTR), 7
19773:         extern volatile __bit                   STKPTR0             @ (((unsigned) &STKPTR)*8) + 0;
19774:         #define                                 STKPTR0_bit         BANKMASK(STKPTR), 0
19775:         extern volatile __bit                   STKPTR1             @ (((unsigned) &STKPTR)*8) + 1;
19776:         #define                                 STKPTR1_bit         BANKMASK(STKPTR), 1
19777:         extern volatile __bit                   STKPTR2             @ (((unsigned) &STKPTR)*8) + 2;
19778:         #define                                 STKPTR2_bit         BANKMASK(STKPTR), 2
19779:         extern volatile __bit                   STKPTR3             @ (((unsigned) &STKPTR)*8) + 3;
19780:         #define                                 STKPTR3_bit         BANKMASK(STKPTR), 3
19781:         extern volatile __bit                   STKPTR4             @ (((unsigned) &STKPTR)*8) + 4;
19782:         #define                                 STKPTR4_bit         BANKMASK(STKPTR), 4
19783:         extern volatile __bit                   STKUNF              @ (((unsigned) &STKPTR)*8) + 6;
19784:         #define                                 STKUNF_bit          BANKMASK(STKPTR), 6
19785:         extern volatile __bit                   STOP                @ (((unsigned) &SSP1STAT)*8) + 4;
19786:         #define                                 STOP_bit            BANKMASK(SSP1STAT), 4
19787:         extern volatile __bit                   STOP1               @ (((unsigned) &SSP1STAT)*8) + 4;
19788:         #define                                 STOP1_bit           BANKMASK(SSP1STAT), 4
19789:         extern volatile __bit                   STOP2               @ (((unsigned) &SSP2STAT)*8) + 4;
19790:         #define                                 STOP2_bit           BANKMASK(SSP2STAT), 4
19791:         extern volatile __bit                   STR1A               @ (((unsigned) &PSTR1CON)*8) + 0;
19792:         #define                                 STR1A_bit           BANKMASK(PSTR1CON), 0
19793:         extern volatile __bit                   STR1B               @ (((unsigned) &PSTR1CON)*8) + 1;
19794:         #define                                 STR1B_bit           BANKMASK(PSTR1CON), 1
19795:         extern volatile __bit                   STR1C               @ (((unsigned) &PSTR1CON)*8) + 2;
19796:         #define                                 STR1C_bit           BANKMASK(PSTR1CON), 2
19797:         extern volatile __bit                   STR1D               @ (((unsigned) &PSTR1CON)*8) + 3;
19798:         #define                                 STR1D_bit           BANKMASK(PSTR1CON), 3
19799:         extern volatile __bit                   STR1SYNC            @ (((unsigned) &PSTR1CON)*8) + 4;
19800:         #define                                 STR1SYNC_bit        BANKMASK(PSTR1CON), 4
19801:         extern volatile __bit                   STR2A               @ (((unsigned) &PSTR2CON)*8) + 0;
19802:         #define                                 STR2A_bit           BANKMASK(PSTR2CON), 0
19803:         extern volatile __bit                   STR2B               @ (((unsigned) &PSTR2CON)*8) + 1;
19804:         #define                                 STR2B_bit           BANKMASK(PSTR2CON), 1
19805:         extern volatile __bit                   STR2C               @ (((unsigned) &PSTR2CON)*8) + 2;
19806:         #define                                 STR2C_bit           BANKMASK(PSTR2CON), 2
19807:         extern volatile __bit                   STR2D               @ (((unsigned) &PSTR2CON)*8) + 3;
19808:         #define                                 STR2D_bit           BANKMASK(PSTR2CON), 3
19809:         extern volatile __bit                   STR2SYNC            @ (((unsigned) &PSTR2CON)*8) + 4;
19810:         #define                                 STR2SYNC_bit        BANKMASK(PSTR2CON), 4
19811:         extern volatile __bit                   STR3A               @ (((unsigned) &PSTR3CON)*8) + 0;
19812:         #define                                 STR3A_bit           BANKMASK(PSTR3CON), 0
19813:         extern volatile __bit                   STR3B               @ (((unsigned) &PSTR3CON)*8) + 1;
19814:         #define                                 STR3B_bit           BANKMASK(PSTR3CON), 1
19815:         extern volatile __bit                   STR3C               @ (((unsigned) &PSTR3CON)*8) + 2;
19816:         #define                                 STR3C_bit           BANKMASK(PSTR3CON), 2
19817:         extern volatile __bit                   STR3D               @ (((unsigned) &PSTR3CON)*8) + 3;
19818:         #define                                 STR3D_bit           BANKMASK(PSTR3CON), 3
19819:         extern volatile __bit                   STR3SYNC            @ (((unsigned) &PSTR3CON)*8) + 4;
19820:         #define                                 STR3SYNC_bit        BANKMASK(PSTR3CON), 4
19821:         extern volatile __bit                   STRA                @ (((unsigned) &PSTR1CON)*8) + 0;
19822:         #define                                 STRA_bit            BANKMASK(PSTR1CON), 0
19823:         extern volatile __bit                   STRA2               @ (((unsigned) &PSTR2CON)*8) + 0;
19824:         #define                                 STRA2_bit           BANKMASK(PSTR2CON), 0
19825:         extern volatile __bit                   STRA3               @ (((unsigned) &PSTR3CON)*8) + 0;
19826:         #define                                 STRA3_bit           BANKMASK(PSTR3CON), 0
19827:         extern volatile __bit                   STRB                @ (((unsigned) &PSTR1CON)*8) + 1;
19828:         #define                                 STRB_bit            BANKMASK(PSTR1CON), 1
19829:         extern volatile __bit                   STRB2               @ (((unsigned) &PSTR2CON)*8) + 1;
19830:         #define                                 STRB2_bit           BANKMASK(PSTR2CON), 1
19831:         extern volatile __bit                   STRB3               @ (((unsigned) &PSTR3CON)*8) + 1;
19832:         #define                                 STRB3_bit           BANKMASK(PSTR3CON), 1
19833:         extern volatile __bit                   STRC                @ (((unsigned) &PSTR1CON)*8) + 2;
19834:         #define                                 STRC_bit            BANKMASK(PSTR1CON), 2
19835:         extern volatile __bit                   STRC2               @ (((unsigned) &PSTR2CON)*8) + 2;
19836:         #define                                 STRC2_bit           BANKMASK(PSTR2CON), 2
19837:         extern volatile __bit                   STRC3               @ (((unsigned) &PSTR3CON)*8) + 2;
19838:         #define                                 STRC3_bit           BANKMASK(PSTR3CON), 2
19839:         extern volatile __bit                   STRD                @ (((unsigned) &PSTR1CON)*8) + 3;
19840:         #define                                 STRD_bit            BANKMASK(PSTR1CON), 3
19841:         extern volatile __bit                   STRD2               @ (((unsigned) &PSTR2CON)*8) + 3;
19842:         #define                                 STRD2_bit           BANKMASK(PSTR2CON), 3
19843:         extern volatile __bit                   STRD3               @ (((unsigned) &PSTR3CON)*8) + 3;
19844:         #define                                 STRD3_bit           BANKMASK(PSTR3CON), 3
19845:         extern volatile __bit                   STRSYNC             @ (((unsigned) &PSTR1CON)*8) + 4;
19846:         #define                                 STRSYNC_bit         BANKMASK(PSTR1CON), 4
19847:         extern volatile __bit                   STRSYNC2            @ (((unsigned) &PSTR2CON)*8) + 4;
19848:         #define                                 STRSYNC2_bit        BANKMASK(PSTR2CON), 4
19849:         extern volatile __bit                   STRSYNC3            @ (((unsigned) &PSTR3CON)*8) + 4;
19850:         #define                                 STRSYNC3_bit        BANKMASK(PSTR3CON), 4
19851:         extern volatile __bit                   SWDTE               @ (((unsigned) &WDTCON)*8) + 0;
19852:         #define                                 SWDTE_bit           BANKMASK(WDTCON), 0
19853:         extern volatile __bit                   SWDTEN              @ (((unsigned) &WDTCON)*8) + 0;
19854:         #define                                 SWDTEN_bit          BANKMASK(WDTCON), 0
19855:         extern volatile __bit                   SYNC1               @ (((unsigned) &TXSTA1)*8) + 4;
19856:         #define                                 SYNC1_bit           BANKMASK(TXSTA1), 4
19857:         extern volatile __bit                   SYNC2               @ (((unsigned) &TXSTA2)*8) + 4;
19858:         #define                                 SYNC2_bit           BANKMASK(TXSTA2), 4
19859:         extern volatile __bit                   T08BIT              @ (((unsigned) &T0CON)*8) + 6;
19860:         #define                                 T08BIT_bit          BANKMASK(T0CON), 6
19861:         extern volatile __bit                   T0CKI               @ (((unsigned) &PORTA)*8) + 4;
19862:         #define                                 T0CKI_bit           BANKMASK(PORTA), 4
19863:         extern volatile __bit                   T0CS                @ (((unsigned) &T0CON)*8) + 5;
19864:         #define                                 T0CS_bit            BANKMASK(T0CON), 5
19865:         extern volatile __bit                   T0IE                @ (((unsigned) &INTCON)*8) + 5;
19866:         #define                                 T0IE_bit            BANKMASK(INTCON), 5
19867:         extern volatile __bit                   T0IF                @ (((unsigned) &INTCON)*8) + 2;
19868:         #define                                 T0IF_bit            BANKMASK(INTCON), 2
19869:         extern volatile __bit                   T0PS0               @ (((unsigned) &T0CON)*8) + 0;
19870:         #define                                 T0PS0_bit           BANKMASK(T0CON), 0
19871:         extern volatile __bit                   T0PS1               @ (((unsigned) &T0CON)*8) + 1;
19872:         #define                                 T0PS1_bit           BANKMASK(T0CON), 1
19873:         extern volatile __bit                   T0PS2               @ (((unsigned) &T0CON)*8) + 2;
19874:         #define                                 T0PS2_bit           BANKMASK(T0CON), 2
19875:         extern volatile __bit                   T0SE                @ (((unsigned) &T0CON)*8) + 4;
19876:         #define                                 T0SE_bit            BANKMASK(T0CON), 4
19877:         extern volatile __bit                   T1CKI               @ (((unsigned) &PORTC)*8) + 0;
19878:         #define                                 T1CKI_bit           BANKMASK(PORTC), 0
19879:         extern volatile __bit                   T1CKPS0             @ (((unsigned) &T1CON)*8) + 4;
19880:         #define                                 T1CKPS0_bit         BANKMASK(T1CON), 4
19881:         extern volatile __bit                   T1CKPS1             @ (((unsigned) &T1CON)*8) + 5;
19882:         #define                                 T1CKPS1_bit         BANKMASK(T1CON), 5
19883:         extern volatile __bit                   T1G                 @ (((unsigned) &PORTB)*8) + 5;
19884:         #define                                 T1G_bit             BANKMASK(PORTB), 5
19885:         extern volatile __bit                   T1GGO               @ (((unsigned) &T1GCON)*8) + 3;
19886:         #define                                 T1GGO_bit           BANKMASK(T1GCON), 3
19887:         extern volatile __bit                   T1GGO_NOT_DONE      @ (((unsigned) &T1GCON)*8) + 3;
19888:         #define                                 T1GGO_NOT_DONE_bit  BANKMASK(T1GCON), 3
19889:         extern volatile __bit                   T1GGO_nDONE         @ (((unsigned) &T1GCON)*8) + 3;
19890:         #define                                 T1GGO_nDONE_bit     BANKMASK(T1GCON), 3
19891:         extern volatile __bit                   T1GPOL              @ (((unsigned) &T1GCON)*8) + 6;
19892:         #define                                 T1GPOL_bit          BANKMASK(T1GCON), 6
19893:         extern volatile __bit                   T1GSPM              @ (((unsigned) &T1GCON)*8) + 4;
19894:         #define                                 T1GSPM_bit          BANKMASK(T1GCON), 4
19895:         extern volatile __bit                   T1GSS0              @ (((unsigned) &T1GCON)*8) + 0;
19896:         #define                                 T1GSS0_bit          BANKMASK(T1GCON), 0
19897:         extern volatile __bit                   T1GSS1              @ (((unsigned) &T1GCON)*8) + 1;
19898:         #define                                 T1GSS1_bit          BANKMASK(T1GCON), 1
19899:         extern volatile __bit                   T1GTM               @ (((unsigned) &T1GCON)*8) + 5;
19900:         #define                                 T1GTM_bit           BANKMASK(T1GCON), 5
19901:         extern volatile __bit                   T1GVAL              @ (((unsigned) &T1GCON)*8) + 2;
19902:         #define                                 T1GVAL_bit          BANKMASK(T1GCON), 2
19903:         extern volatile __bit                   T1G_DONE            @ (((unsigned) &T1GCON)*8) + 3;
19904:         #define                                 T1G_DONE_bit        BANKMASK(T1GCON), 3
19905:         extern volatile __bit                   T1OSCEN             @ (((unsigned) &T1CON)*8) + 3;
19906:         #define                                 T1OSCEN_bit         BANKMASK(T1CON), 3
19907:         extern volatile __bit                   T1OSI               @ (((unsigned) &PORTC)*8) + 1;
19908:         #define                                 T1OSI_bit           BANKMASK(PORTC), 1
19909:         extern volatile __bit                   T1OSO               @ (((unsigned) &PORTC)*8) + 0;
19910:         #define                                 T1OSO_bit           BANKMASK(PORTC), 0
19911:         extern volatile __bit                   T1RD16              @ (((unsigned) &T1CON)*8) + 1;
19912:         #define                                 T1RD16_bit          BANKMASK(T1CON), 1
19913:         extern volatile __bit                   T1SOSCEN            @ (((unsigned) &T1CON)*8) + 3;
19914:         #define                                 T1SOSCEN_bit        BANKMASK(T1CON), 3
19915:         extern volatile __bit                   T1SYNC              @ (((unsigned) &T1CON)*8) + 2;
19916:         #define                                 T1SYNC_bit          BANKMASK(T1CON), 2
19917:         extern volatile __bit                   T2CKPS0             @ (((unsigned) &T2CON)*8) + 0;
19918:         #define                                 T2CKPS0_bit         BANKMASK(T2CON), 0
19919:         extern volatile __bit                   T2CKPS1             @ (((unsigned) &T2CON)*8) + 1;
19920:         #define                                 T2CKPS1_bit         BANKMASK(T2CON), 1
19921:         extern volatile __bit                   T2OUTPS0            @ (((unsigned) &T2CON)*8) + 3;
19922:         #define                                 T2OUTPS0_bit        BANKMASK(T2CON), 3
19923:         extern volatile __bit                   T2OUTPS1            @ (((unsigned) &T2CON)*8) + 4;
19924:         #define                                 T2OUTPS1_bit        BANKMASK(T2CON), 4
19925:         extern volatile __bit                   T2OUTPS2            @ (((unsigned) &T2CON)*8) + 5;
19926:         #define                                 T2OUTPS2_bit        BANKMASK(T2CON), 5
19927:         extern volatile __bit                   T2OUTPS3            @ (((unsigned) &T2CON)*8) + 6;
19928:         #define                                 T2OUTPS3_bit        BANKMASK(T2CON), 6
19929:         extern volatile __bit                   T3CKPS0             @ (((unsigned) &T3CON)*8) + 4;
19930:         #define                                 T3CKPS0_bit         BANKMASK(T3CON), 4
19931:         extern volatile __bit                   T3CKPS1             @ (((unsigned) &T3CON)*8) + 5;
19932:         #define                                 T3CKPS1_bit         BANKMASK(T3CON), 5
19933:         extern volatile __bit                   T3G                 @ (((unsigned) &PORTC)*8) + 0;
19934:         #define                                 T3G_bit             BANKMASK(PORTC), 0
19935:         extern volatile __bit                   T3GGO               @ (((unsigned) &T3GCON)*8) + 3;
19936:         #define                                 T3GGO_bit           BANKMASK(T3GCON), 3
19937:         extern volatile __bit                   T3GGO_NOT_DONE      @ (((unsigned) &T3GCON)*8) + 3;
19938:         #define                                 T3GGO_NOT_DONE_bit  BANKMASK(T3GCON), 3
19939:         extern volatile __bit                   T3GGO_nDONE         @ (((unsigned) &T3GCON)*8) + 3;
19940:         #define                                 T3GGO_nDONE_bit     BANKMASK(T3GCON), 3
19941:         extern volatile __bit                   T3GPOL              @ (((unsigned) &T3GCON)*8) + 6;
19942:         #define                                 T3GPOL_bit          BANKMASK(T3GCON), 6
19943:         extern volatile __bit                   T3GSPM              @ (((unsigned) &T3GCON)*8) + 4;
19944:         #define                                 T3GSPM_bit          BANKMASK(T3GCON), 4
19945:         extern volatile __bit                   T3GSS0              @ (((unsigned) &T3GCON)*8) + 0;
19946:         #define                                 T3GSS0_bit          BANKMASK(T3GCON), 0
19947:         extern volatile __bit                   T3GSS1              @ (((unsigned) &T3GCON)*8) + 1;
19948:         #define                                 T3GSS1_bit          BANKMASK(T3GCON), 1
19949:         extern volatile __bit                   T3GTM               @ (((unsigned) &T3GCON)*8) + 5;
19950:         #define                                 T3GTM_bit           BANKMASK(T3GCON), 5
19951:         extern volatile __bit                   T3GVAL              @ (((unsigned) &T3GCON)*8) + 2;
19952:         #define                                 T3GVAL_bit          BANKMASK(T3GCON), 2
19953:         extern volatile __bit                   T3G_DONE            @ (((unsigned) &T3GCON)*8) + 3;
19954:         #define                                 T3G_DONE_bit        BANKMASK(T3GCON), 3
19955:         extern volatile __bit                   T3OSCEN             @ (((unsigned) &T3CON)*8) + 3;
19956:         #define                                 T3OSCEN_bit         BANKMASK(T3CON), 3
19957:         extern volatile __bit                   T3RD16              @ (((unsigned) &T3CON)*8) + 1;
19958:         #define                                 T3RD16_bit          BANKMASK(T3CON), 1
19959:         extern volatile __bit                   T3SOSCEN            @ (((unsigned) &T3CON)*8) + 3;
19960:         #define                                 T3SOSCEN_bit        BANKMASK(T3CON), 3
19961:         extern volatile __bit                   T4CKPS0             @ (((unsigned) &T4CON)*8) + 0;
19962:         #define                                 T4CKPS0_bit         BANKMASK(T4CON), 0
19963:         extern volatile __bit                   T4CKPS1             @ (((unsigned) &T4CON)*8) + 1;
19964:         #define                                 T4CKPS1_bit         BANKMASK(T4CON), 1
19965:         extern volatile __bit                   T4OUTPS0            @ (((unsigned) &T4CON)*8) + 3;
19966:         #define                                 T4OUTPS0_bit        BANKMASK(T4CON), 3
19967:         extern volatile __bit                   T4OUTPS1            @ (((unsigned) &T4CON)*8) + 4;
19968:         #define                                 T4OUTPS1_bit        BANKMASK(T4CON), 4
19969:         extern volatile __bit                   T4OUTPS2            @ (((unsigned) &T4CON)*8) + 5;
19970:         #define                                 T4OUTPS2_bit        BANKMASK(T4CON), 5
19971:         extern volatile __bit                   T4OUTPS3            @ (((unsigned) &T4CON)*8) + 6;
19972:         #define                                 T4OUTPS3_bit        BANKMASK(T4CON), 6
19973:         extern volatile __bit                   T5CKI               @ (((unsigned) &PORTC)*8) + 2;
19974:         #define                                 T5CKI_bit           BANKMASK(PORTC), 2
19975:         extern volatile __bit                   T5CKPS0             @ (((unsigned) &T5CON)*8) + 4;
19976:         #define                                 T5CKPS0_bit         BANKMASK(T5CON), 4
19977:         extern volatile __bit                   T5CKPS1             @ (((unsigned) &T5CON)*8) + 5;
19978:         #define                                 T5CKPS1_bit         BANKMASK(T5CON), 5
19979:         extern volatile __bit                   T5G                 @ (((unsigned) &PORTB)*8) + 4;
19980:         #define                                 T5G_bit             BANKMASK(PORTB), 4
19981:         extern volatile __bit                   T5GGO               @ (((unsigned) &T5GCON)*8) + 3;
19982:         #define                                 T5GGO_bit           BANKMASK(T5GCON), 3
19983:         extern volatile __bit                   T5GGO_NOT_DONE      @ (((unsigned) &T5GCON)*8) + 3;
19984:         #define                                 T5GGO_NOT_DONE_bit  BANKMASK(T5GCON), 3
19985:         extern volatile __bit                   T5GGO_nDONE         @ (((unsigned) &T5GCON)*8) + 3;
19986:         #define                                 T5GGO_nDONE_bit     BANKMASK(T5GCON), 3
19987:         extern volatile __bit                   T5GPOL              @ (((unsigned) &T5GCON)*8) + 6;
19988:         #define                                 T5GPOL_bit          BANKMASK(T5GCON), 6
19989:         extern volatile __bit                   T5GSPM              @ (((unsigned) &T5GCON)*8) + 4;
19990:         #define                                 T5GSPM_bit          BANKMASK(T5GCON), 4
19991:         extern volatile __bit                   T5GSS0              @ (((unsigned) &T5GCON)*8) + 0;
19992:         #define                                 T5GSS0_bit          BANKMASK(T5GCON), 0
19993:         extern volatile __bit                   T5GSS1              @ (((unsigned) &T5GCON)*8) + 1;
19994:         #define                                 T5GSS1_bit          BANKMASK(T5GCON), 1
19995:         extern volatile __bit                   T5GTM               @ (((unsigned) &T5GCON)*8) + 5;
19996:         #define                                 T5GTM_bit           BANKMASK(T5GCON), 5
19997:         extern volatile __bit                   T5GVAL              @ (((unsigned) &T5GCON)*8) + 2;
19998:         #define                                 T5GVAL_bit          BANKMASK(T5GCON), 2
19999:         extern volatile __bit                   T5G_DONE            @ (((unsigned) &T5GCON)*8) + 3;
20000:         #define                                 T5G_DONE_bit        BANKMASK(T5GCON), 3
20001:         extern volatile __bit                   T5RD16              @ (((unsigned) &T5CON)*8) + 1;
20002:         #define                                 T5RD16_bit          BANKMASK(T5CON), 1
20003:         extern volatile __bit                   T5SOSCEN            @ (((unsigned) &T5CON)*8) + 3;
20004:         #define                                 T5SOSCEN_bit        BANKMASK(T5CON), 3
20005:         extern volatile __bit                   T5SYNC              @ (((unsigned) &T5CON)*8) + 2;
20006:         #define                                 T5SYNC_bit          BANKMASK(T5CON), 2
20007:         extern volatile __bit                   T6CKPS0             @ (((unsigned) &T6CON)*8) + 0;
20008:         #define                                 T6CKPS0_bit         BANKMASK(T6CON), 0
20009:         extern volatile __bit                   T6CKPS1             @ (((unsigned) &T6CON)*8) + 1;
20010:         #define                                 T6CKPS1_bit         BANKMASK(T6CON), 1
20011:         extern volatile __bit                   T6OUTPS0            @ (((unsigned) &T6CON)*8) + 3;
20012:         #define                                 T6OUTPS0_bit        BANKMASK(T6CON), 3
20013:         extern volatile __bit                   T6OUTPS1            @ (((unsigned) &T6CON)*8) + 4;
20014:         #define                                 T6OUTPS1_bit        BANKMASK(T6CON), 4
20015:         extern volatile __bit                   T6OUTPS2            @ (((unsigned) &T6CON)*8) + 5;
20016:         #define                                 T6OUTPS2_bit        BANKMASK(T6CON), 5
20017:         extern volatile __bit                   T6OUTPS3            @ (((unsigned) &T6CON)*8) + 6;
20018:         #define                                 T6OUTPS3_bit        BANKMASK(T6CON), 6
20019:         extern volatile __bit                   TGEN                @ (((unsigned) &CTMUCONH)*8) + 4;
20020:         #define                                 TGEN_bit            BANKMASK(CTMUCONH), 4
20021:         extern volatile __bit                   TMR0IE              @ (((unsigned) &INTCON)*8) + 5;
20022:         #define                                 TMR0IE_bit          BANKMASK(INTCON), 5
20023:         extern volatile __bit                   TMR0IF              @ (((unsigned) &INTCON)*8) + 2;
20024:         #define                                 TMR0IF_bit          BANKMASK(INTCON), 2
20025:         extern volatile __bit                   TMR0IP              @ (((unsigned) &INTCON2)*8) + 2;
20026:         #define                                 TMR0IP_bit          BANKMASK(INTCON2), 2
20027:         extern volatile __bit                   TMR0ON              @ (((unsigned) &T0CON)*8) + 7;
20028:         #define                                 TMR0ON_bit          BANKMASK(T0CON), 7
20029:         extern volatile __bit                   TMR1CS0             @ (((unsigned) &T1CON)*8) + 6;
20030:         #define                                 TMR1CS0_bit         BANKMASK(T1CON), 6
20031:         extern volatile __bit                   TMR1CS1             @ (((unsigned) &T1CON)*8) + 7;
20032:         #define                                 TMR1CS1_bit         BANKMASK(T1CON), 7
20033:         extern volatile __bit                   TMR1GE              @ (((unsigned) &T1GCON)*8) + 7;
20034:         #define                                 TMR1GE_bit          BANKMASK(T1GCON), 7
20035:         extern volatile __bit                   TMR1GIE             @ (((unsigned) &PIE3)*8) + 0;
20036:         #define                                 TMR1GIE_bit         BANKMASK(PIE3), 0
20037:         extern volatile __bit                   TMR1GIF             @ (((unsigned) &PIR3)*8) + 0;
20038:         #define                                 TMR1GIF_bit         BANKMASK(PIR3), 0
20039:         extern volatile __bit                   TMR1GIP             @ (((unsigned) &IPR3)*8) + 0;
20040:         #define                                 TMR1GIP_bit         BANKMASK(IPR3), 0
20041:         extern volatile __bit                   TMR1IE              @ (((unsigned) &PIE1)*8) + 0;
20042:         #define                                 TMR1IE_bit          BANKMASK(PIE1), 0
20043:         extern volatile __bit                   TMR1IF              @ (((unsigned) &PIR1)*8) + 0;
20044:         #define                                 TMR1IF_bit          BANKMASK(PIR1), 0
20045:         extern volatile __bit                   TMR1IP              @ (((unsigned) &IPR1)*8) + 0;
20046:         #define                                 TMR1IP_bit          BANKMASK(IPR1), 0
20047:         extern volatile __bit                   TMR1MD              @ (((unsigned) &PMD0)*8) + 0;
20048:         #define                                 TMR1MD_bit          BANKMASK(PMD0), 0
20049:         extern volatile __bit                   TMR1ON              @ (((unsigned) &T1CON)*8) + 0;
20050:         #define                                 TMR1ON_bit          BANKMASK(T1CON), 0
20051:         extern volatile __bit                   TMR2IE              @ (((unsigned) &PIE1)*8) + 1;
20052:         #define                                 TMR2IE_bit          BANKMASK(PIE1), 1
20053:         extern volatile __bit                   TMR2IF              @ (((unsigned) &PIR1)*8) + 1;
20054:         #define                                 TMR2IF_bit          BANKMASK(PIR1), 1
20055:         extern volatile __bit                   TMR2IP              @ (((unsigned) &IPR1)*8) + 1;
20056:         #define                                 TMR2IP_bit          BANKMASK(IPR1), 1
20057:         extern volatile __bit                   TMR2MD              @ (((unsigned) &PMD0)*8) + 1;
20058:         #define                                 TMR2MD_bit          BANKMASK(PMD0), 1
20059:         extern volatile __bit                   TMR2ON              @ (((unsigned) &T2CON)*8) + 2;
20060:         #define                                 TMR2ON_bit          BANKMASK(T2CON), 2
20061:         extern volatile __bit                   TMR3CS0             @ (((unsigned) &T3CON)*8) + 6;
20062:         #define                                 TMR3CS0_bit         BANKMASK(T3CON), 6
20063:         extern volatile __bit                   TMR3CS1             @ (((unsigned) &T3CON)*8) + 7;
20064:         #define                                 TMR3CS1_bit         BANKMASK(T3CON), 7
20065:         extern volatile __bit                   TMR3GE              @ (((unsigned) &T3GCON)*8) + 7;
20066:         #define                                 TMR3GE_bit          BANKMASK(T3GCON), 7
20067:         extern volatile __bit                   TMR3GIE             @ (((unsigned) &PIE3)*8) + 1;
20068:         #define                                 TMR3GIE_bit         BANKMASK(PIE3), 1
20069:         extern volatile __bit                   TMR3GIF             @ (((unsigned) &PIR3)*8) + 1;
20070:         #define                                 TMR3GIF_bit         BANKMASK(PIR3), 1
20071:         extern volatile __bit                   TMR3GIP             @ (((unsigned) &IPR3)*8) + 1;
20072:         #define                                 TMR3GIP_bit         BANKMASK(IPR3), 1
20073:         extern volatile __bit                   TMR3IE              @ (((unsigned) &PIE2)*8) + 1;
20074:         #define                                 TMR3IE_bit          BANKMASK(PIE2), 1
20075:         extern volatile __bit                   TMR3IF              @ (((unsigned) &PIR2)*8) + 1;
20076:         #define                                 TMR3IF_bit          BANKMASK(PIR2), 1
20077:         extern volatile __bit                   TMR3IP              @ (((unsigned) &IPR2)*8) + 1;
20078:         #define                                 TMR3IP_bit          BANKMASK(IPR2), 1
20079:         extern volatile __bit                   TMR3MD              @ (((unsigned) &PMD0)*8) + 2;
20080:         #define                                 TMR3MD_bit          BANKMASK(PMD0), 2
20081:         extern volatile __bit                   TMR3ON              @ (((unsigned) &T3CON)*8) + 0;
20082:         #define                                 TMR3ON_bit          BANKMASK(T3CON), 0
20083:         extern volatile __bit                   TMR4IE              @ (((unsigned) &PIE5)*8) + 0;
20084:         #define                                 TMR4IE_bit          BANKMASK(PIE5), 0
20085:         extern volatile __bit                   TMR4IF              @ (((unsigned) &PIR5)*8) + 0;
20086:         #define                                 TMR4IF_bit          BANKMASK(PIR5), 0
20087:         extern volatile __bit                   TMR4IP              @ (((unsigned) &IPR5)*8) + 0;
20088:         #define                                 TMR4IP_bit          BANKMASK(IPR5), 0
20089:         extern volatile __bit                   TMR4MD              @ (((unsigned) &PMD0)*8) + 3;
20090:         #define                                 TMR4MD_bit          BANKMASK(PMD0), 3
20091:         extern volatile __bit                   TMR4ON              @ (((unsigned) &T4CON)*8) + 2;
20092:         #define                                 TMR4ON_bit          BANKMASK(T4CON), 2
20093:         extern volatile __bit                   TMR5CS0             @ (((unsigned) &T5CON)*8) + 6;
20094:         #define                                 TMR5CS0_bit         BANKMASK(T5CON), 6
20095:         extern volatile __bit                   TMR5CS1             @ (((unsigned) &T5CON)*8) + 7;
20096:         #define                                 TMR5CS1_bit         BANKMASK(T5CON), 7
20097:         extern volatile __bit                   TMR5GE              @ (((unsigned) &T5GCON)*8) + 7;
20098:         #define                                 TMR5GE_bit          BANKMASK(T5GCON), 7
20099:         extern volatile __bit                   TMR5GIE             @ (((unsigned) &PIE3)*8) + 2;
20100:         #define                                 TMR5GIE_bit         BANKMASK(PIE3), 2
20101:         extern volatile __bit                   TMR5GIF             @ (((unsigned) &PIR3)*8) + 2;
20102:         #define                                 TMR5GIF_bit         BANKMASK(PIR3), 2
20103:         extern volatile __bit                   TMR5GIP             @ (((unsigned) &IPR3)*8) + 2;
20104:         #define                                 TMR5GIP_bit         BANKMASK(IPR3), 2
20105:         extern volatile __bit                   TMR5IE              @ (((unsigned) &PIE5)*8) + 1;
20106:         #define                                 TMR5IE_bit          BANKMASK(PIE5), 1
20107:         extern volatile __bit                   TMR5IF              @ (((unsigned) &PIR5)*8) + 1;
20108:         #define                                 TMR5IF_bit          BANKMASK(PIR5), 1
20109:         extern volatile __bit                   TMR5IP              @ (((unsigned) &IPR5)*8) + 1;
20110:         #define                                 TMR5IP_bit          BANKMASK(IPR5), 1
20111:         extern volatile __bit                   TMR5MD              @ (((unsigned) &PMD0)*8) + 4;
20112:         #define                                 TMR5MD_bit          BANKMASK(PMD0), 4
20113:         extern volatile __bit                   TMR5ON              @ (((unsigned) &T5CON)*8) + 0;
20114:         #define                                 TMR5ON_bit          BANKMASK(T5CON), 0
20115:         extern volatile __bit                   TMR6IE              @ (((unsigned) &PIE5)*8) + 2;
20116:         #define                                 TMR6IE_bit          BANKMASK(PIE5), 2
20117:         extern volatile __bit                   TMR6IF              @ (((unsigned) &PIR5)*8) + 2;
20118:         #define                                 TMR6IF_bit          BANKMASK(PIR5), 2
20119:         extern volatile __bit                   TMR6IP              @ (((unsigned) &IPR5)*8) + 2;
20120:         #define                                 TMR6IP_bit          BANKMASK(IPR5), 2
20121:         extern volatile __bit                   TMR6MD              @ (((unsigned) &PMD0)*8) + 5;
20122:         #define                                 TMR6MD_bit          BANKMASK(PMD0), 5
20123:         extern volatile __bit                   TMR6ON              @ (((unsigned) &T6CON)*8) + 2;
20124:         #define                                 TMR6ON_bit          BANKMASK(T6CON), 2
20125:         extern volatile __bit                   TO                  @ (((unsigned) &RCON)*8) + 3;
20126:         #define                                 TO_bit              BANKMASK(RCON), 3
20127:         extern volatile __bit                   TRIGSEL             @ (((unsigned) &ADCON1)*8) + 7;
20128:         #define                                 TRIGSEL_bit         BANKMASK(ADCON1), 7
20129:         extern volatile __bit                   TRISA0              @ (((unsigned) &TRISA)*8) + 0;
20130:         #define                                 TRISA0_bit          BANKMASK(TRISA), 0
20131:         extern volatile __bit                   TRISA1              @ (((unsigned) &TRISA)*8) + 1;
20132:         #define                                 TRISA1_bit          BANKMASK(TRISA), 1
20133:         extern volatile __bit                   TRISA2              @ (((unsigned) &TRISA)*8) + 2;
20134:         #define                                 TRISA2_bit          BANKMASK(TRISA), 2
20135:         extern volatile __bit                   TRISA3              @ (((unsigned) &TRISA)*8) + 3;
20136:         #define                                 TRISA3_bit          BANKMASK(TRISA), 3
20137:         extern volatile __bit                   TRISA4              @ (((unsigned) &TRISA)*8) + 4;
20138:         #define                                 TRISA4_bit          BANKMASK(TRISA), 4
20139:         extern volatile __bit                   TRISA5              @ (((unsigned) &TRISA)*8) + 5;
20140:         #define                                 TRISA5_bit          BANKMASK(TRISA), 5
20141:         extern volatile __bit                   TRISA6              @ (((unsigned) &TRISA)*8) + 6;
20142:         #define                                 TRISA6_bit          BANKMASK(TRISA), 6
20143:         extern volatile __bit                   TRISA7              @ (((unsigned) &TRISA)*8) + 7;
20144:         #define                                 TRISA7_bit          BANKMASK(TRISA), 7
20145:         extern volatile __bit                   TRISB0              @ (((unsigned) &TRISB)*8) + 0;
20146:         #define                                 TRISB0_bit          BANKMASK(TRISB), 0
20147:         extern volatile __bit                   TRISB1              @ (((unsigned) &TRISB)*8) + 1;
20148:         #define                                 TRISB1_bit          BANKMASK(TRISB), 1
20149:         extern volatile __bit                   TRISB2              @ (((unsigned) &TRISB)*8) + 2;
20150:         #define                                 TRISB2_bit          BANKMASK(TRISB), 2
20151:         extern volatile __bit                   TRISB3              @ (((unsigned) &TRISB)*8) + 3;
20152:         #define                                 TRISB3_bit          BANKMASK(TRISB), 3
20153:         extern volatile __bit                   TRISB4              @ (((unsigned) &TRISB)*8) + 4;
20154:         #define                                 TRISB4_bit          BANKMASK(TRISB), 4
20155:         extern volatile __bit                   TRISB5              @ (((unsigned) &TRISB)*8) + 5;
20156:         #define                                 TRISB5_bit          BANKMASK(TRISB), 5
20157:         extern volatile __bit                   TRISB6              @ (((unsigned) &TRISB)*8) + 6;
20158:         #define                                 TRISB6_bit          BANKMASK(TRISB), 6
20159:         extern volatile __bit                   TRISB7              @ (((unsigned) &TRISB)*8) + 7;
20160:         #define                                 TRISB7_bit          BANKMASK(TRISB), 7
20161:         extern volatile __bit                   TRISC0              @ (((unsigned) &TRISC)*8) + 0;
20162:         #define                                 TRISC0_bit          BANKMASK(TRISC), 0
20163:         extern volatile __bit                   TRISC1              @ (((unsigned) &TRISC)*8) + 1;
20164:         #define                                 TRISC1_bit          BANKMASK(TRISC), 1
20165:         extern volatile __bit                   TRISC2              @ (((unsigned) &TRISC)*8) + 2;
20166:         #define                                 TRISC2_bit          BANKMASK(TRISC), 2
20167:         extern volatile __bit                   TRISC3              @ (((unsigned) &TRISC)*8) + 3;
20168:         #define                                 TRISC3_bit          BANKMASK(TRISC), 3
20169:         extern volatile __bit                   TRISC4              @ (((unsigned) &TRISC)*8) + 4;
20170:         #define                                 TRISC4_bit          BANKMASK(TRISC), 4
20171:         extern volatile __bit                   TRISC5              @ (((unsigned) &TRISC)*8) + 5;
20172:         #define                                 TRISC5_bit          BANKMASK(TRISC), 5
20173:         extern volatile __bit                   TRISC6              @ (((unsigned) &TRISC)*8) + 6;
20174:         #define                                 TRISC6_bit          BANKMASK(TRISC), 6
20175:         extern volatile __bit                   TRISC7              @ (((unsigned) &TRISC)*8) + 7;
20176:         #define                                 TRISC7_bit          BANKMASK(TRISC), 7
20177:         extern volatile __bit                   TRISD0              @ (((unsigned) &TRISD)*8) + 0;
20178:         #define                                 TRISD0_bit          BANKMASK(TRISD), 0
20179:         extern volatile __bit                   TRISD1              @ (((unsigned) &TRISD)*8) + 1;
20180:         #define                                 TRISD1_bit          BANKMASK(TRISD), 1
20181:         extern volatile __bit                   TRISD2              @ (((unsigned) &TRISD)*8) + 2;
20182:         #define                                 TRISD2_bit          BANKMASK(TRISD), 2
20183:         extern volatile __bit                   TRISD3              @ (((unsigned) &TRISD)*8) + 3;
20184:         #define                                 TRISD3_bit          BANKMASK(TRISD), 3
20185:         extern volatile __bit                   TRISD4              @ (((unsigned) &TRISD)*8) + 4;
20186:         #define                                 TRISD4_bit          BANKMASK(TRISD), 4
20187:         extern volatile __bit                   TRISD5              @ (((unsigned) &TRISD)*8) + 5;
20188:         #define                                 TRISD5_bit          BANKMASK(TRISD), 5
20189:         extern volatile __bit                   TRISD6              @ (((unsigned) &TRISD)*8) + 6;
20190:         #define                                 TRISD6_bit          BANKMASK(TRISD), 6
20191:         extern volatile __bit                   TRISD7              @ (((unsigned) &TRISD)*8) + 7;
20192:         #define                                 TRISD7_bit          BANKMASK(TRISD), 7
20193:         extern volatile __bit                   TRISE0              @ (((unsigned) &TRISE)*8) + 0;
20194:         #define                                 TRISE0_bit          BANKMASK(TRISE), 0
20195:         extern volatile __bit                   TRISE1              @ (((unsigned) &TRISE)*8) + 1;
20196:         #define                                 TRISE1_bit          BANKMASK(TRISE), 1
20197:         extern volatile __bit                   TRISE2              @ (((unsigned) &TRISE)*8) + 2;
20198:         #define                                 TRISE2_bit          BANKMASK(TRISE), 2
20199:         extern volatile __bit                   TRMT1               @ (((unsigned) &TXSTA1)*8) + 1;
20200:         #define                                 TRMT1_bit           BANKMASK(TXSTA1), 1
20201:         extern volatile __bit                   TRMT2               @ (((unsigned) &TXSTA2)*8) + 1;
20202:         #define                                 TRMT2_bit           BANKMASK(TXSTA2), 1
20203:         extern volatile __bit                   TUN0                @ (((unsigned) &OSCTUNE)*8) + 0;
20204:         #define                                 TUN0_bit            BANKMASK(OSCTUNE), 0
20205:         extern volatile __bit                   TUN1                @ (((unsigned) &OSCTUNE)*8) + 1;
20206:         #define                                 TUN1_bit            BANKMASK(OSCTUNE), 1
20207:         extern volatile __bit                   TUN2                @ (((unsigned) &OSCTUNE)*8) + 2;
20208:         #define                                 TUN2_bit            BANKMASK(OSCTUNE), 2
20209:         extern volatile __bit                   TUN3                @ (((unsigned) &OSCTUNE)*8) + 3;
20210:         #define                                 TUN3_bit            BANKMASK(OSCTUNE), 3
20211:         extern volatile __bit                   TUN4                @ (((unsigned) &OSCTUNE)*8) + 4;
20212:         #define                                 TUN4_bit            BANKMASK(OSCTUNE), 4
20213:         extern volatile __bit                   TUN5                @ (((unsigned) &OSCTUNE)*8) + 5;
20214:         #define                                 TUN5_bit            BANKMASK(OSCTUNE), 5
20215:         extern volatile __bit                   TX                  @ (((unsigned) &PORTC)*8) + 6;
20216:         #define                                 TX_bit              BANKMASK(PORTC), 6
20217:         extern volatile __bit                   TX1                 @ (((unsigned) &PORTC)*8) + 6;
20218:         #define                                 TX1_bit             BANKMASK(PORTC), 6
20219:         extern volatile __bit                   TX1IE               @ (((unsigned) &PIE1)*8) + 4;
20220:         #define                                 TX1IE_bit           BANKMASK(PIE1), 4
20221:         extern volatile __bit                   TX1IF               @ (((unsigned) &PIR1)*8) + 4;
20222:         #define                                 TX1IF_bit           BANKMASK(PIR1), 4
20223:         extern volatile __bit                   TX1IP               @ (((unsigned) &IPR1)*8) + 4;
20224:         #define                                 TX1IP_bit           BANKMASK(IPR1), 4
20225:         extern volatile __bit                   TX2                 @ (((unsigned) &PORTD)*8) + 6;
20226:         #define                                 TX2_bit             BANKMASK(PORTD), 6
20227:         extern volatile __bit                   TX2IE               @ (((unsigned) &PIE3)*8) + 4;
20228:         #define                                 TX2IE_bit           BANKMASK(PIE3), 4
20229:         extern volatile __bit                   TX2IF               @ (((unsigned) &PIR3)*8) + 4;
20230:         #define                                 TX2IF_bit           BANKMASK(PIR3), 4
20231:         extern volatile __bit                   TX2IP               @ (((unsigned) &IPR3)*8) + 4;
20232:         #define                                 TX2IP_bit           BANKMASK(IPR3), 4
20233:         extern volatile __bit                   TX8_9               @ (((unsigned) &TXSTA1)*8) + 6;
20234:         #define                                 TX8_9_bit           BANKMASK(TXSTA1), 6
20235:         extern volatile __bit                   TX8_92              @ (((unsigned) &TXSTA2)*8) + 6;
20236:         #define                                 TX8_92_bit          BANKMASK(TXSTA2), 6
20237:         extern volatile __bit                   TX91                @ (((unsigned) &TXSTA1)*8) + 6;
20238:         #define                                 TX91_bit            BANKMASK(TXSTA1), 6
20239:         extern volatile __bit                   TX92                @ (((unsigned) &TXSTA2)*8) + 6;
20240:         #define                                 TX92_bit            BANKMASK(TXSTA2), 6
20241:         extern volatile __bit                   TX9D1               @ (((unsigned) &TXSTA1)*8) + 0;
20242:         #define                                 TX9D1_bit           BANKMASK(TXSTA1), 0
20243:         extern volatile __bit                   TX9D2               @ (((unsigned) &TXSTA2)*8) + 0;
20244:         #define                                 TX9D2_bit           BANKMASK(TXSTA2), 0
20245:         extern volatile __bit                   TXB0IE              @ (((unsigned) &PIE3)*8) + 2;
20246:         #define                                 TXB0IE_bit          BANKMASK(PIE3), 2
20247:         extern volatile __bit                   TXB1IE              @ (((unsigned) &PIE3)*8) + 3;
20248:         #define                                 TXB1IE_bit          BANKMASK(PIE3), 3
20249:         extern volatile __bit                   TXB2IE              @ (((unsigned) &PIE3)*8) + 4;
20250:         #define                                 TXB2IE_bit          BANKMASK(PIE3), 4
20251:         extern volatile __bit                   TXBNIE              @ (((unsigned) &PIE3)*8) + 4;
20252:         #define                                 TXBNIE_bit          BANKMASK(PIE3), 4
20253:         extern volatile __bit                   TXBNIF              @ (((unsigned) &PIR3)*8) + 4;
20254:         #define                                 TXBNIF_bit          BANKMASK(PIR3), 4
20255:         extern volatile __bit                   TXBNIP              @ (((unsigned) &IPR3)*8) + 4;
20256:         #define                                 TXBNIP_bit          BANKMASK(IPR3), 4
20257:         extern volatile __bit                   TXCKP               @ (((unsigned) &BAUDCON1)*8) + 4;
20258:         #define                                 TXCKP_bit           BANKMASK(BAUDCON1), 4
20259:         extern volatile __bit                   TXCKP1              @ (((unsigned) &BAUDCON1)*8) + 4;
20260:         #define                                 TXCKP1_bit          BANKMASK(BAUDCON1), 4
20261:         extern volatile __bit                   TXCKP2              @ (((unsigned) &BAUDCON2)*8) + 4;
20262:         #define                                 TXCKP2_bit          BANKMASK(BAUDCON2), 4
20263:         extern volatile __bit                   TXD8                @ (((unsigned) &TXSTA1)*8) + 0;
20264:         #define                                 TXD8_bit            BANKMASK(TXSTA1), 0
20265:         extern volatile __bit                   TXD82               @ (((unsigned) &TXSTA2)*8) + 0;
20266:         #define                                 TXD82_bit           BANKMASK(TXSTA2), 0
20267:         extern volatile __bit                   TXEN1               @ (((unsigned) &TXSTA1)*8) + 5;
20268:         #define                                 TXEN1_bit           BANKMASK(TXSTA1), 5
20269:         extern volatile __bit                   TXEN2               @ (((unsigned) &TXSTA2)*8) + 5;
20270:         #define                                 TXEN2_bit           BANKMASK(TXSTA2), 5
20271:         extern volatile __bit                   TXIE                @ (((unsigned) &PIE1)*8) + 4;
20272:         #define                                 TXIE_bit            BANKMASK(PIE1), 4
20273:         extern volatile __bit                   TXIF                @ (((unsigned) &PIR1)*8) + 4;
20274:         #define                                 TXIF_bit            BANKMASK(PIR1), 4
20275:         extern volatile __bit                   TXIP                @ (((unsigned) &IPR1)*8) + 4;
20276:         #define                                 TXIP_bit            BANKMASK(IPR1), 4
20277:         extern volatile __bit                   UA1                 @ (((unsigned) &SSP1STAT)*8) + 1;
20278:         #define                                 UA1_bit             BANKMASK(SSP1STAT), 1
20279:         extern volatile __bit                   UA2                 @ (((unsigned) &SSP2STAT)*8) + 1;
20280:         #define                                 UA2_bit             BANKMASK(SSP2STAT), 1
20281:         extern volatile __bit                   UART1MD             @ (((unsigned) &PMD0)*8) + 6;
20282:         #define                                 UART1MD_bit         BANKMASK(PMD0), 6
20283:         extern volatile __bit                   UART2MD             @ (((unsigned) &PMD0)*8) + 7;
20284:         #define                                 UART2MD_bit         BANKMASK(PMD0), 7
20285:         extern volatile __bit                   ULPWUIN             @ (((unsigned) &PORTA)*8) + 0;
20286:         #define                                 ULPWUIN_bit         BANKMASK(PORTA), 0
20287:         extern volatile __bit                   VDIRMAG             @ (((unsigned) &HLVDCON)*8) + 7;
20288:         #define                                 VDIRMAG_bit         BANKMASK(HLVDCON), 7
20289:         extern volatile __bit                   VPP                 @ (((unsigned) &PORTE)*8) + 3;
20290:         #define                                 VPP_bit             BANKMASK(PORTE), 3
20291:         extern volatile __bit                   VREFM               @ (((unsigned) &PORTA)*8) + 2;
20292:         #define                                 VREFM_bit           BANKMASK(PORTA), 2
20293:         extern volatile __bit                   VREFN               @ (((unsigned) &PORTA)*8) + 2;
20294:         #define                                 VREFN_bit           BANKMASK(PORTA), 2
20295:         extern volatile __bit                   VREFP               @ (((unsigned) &PORTA)*8) + 3;
20296:         #define                                 VREFP_bit           BANKMASK(PORTA), 3
20297:         extern volatile __bit                   W4E                 @ (((unsigned) &BAUDCON1)*8) + 1;
20298:         #define                                 W4E_bit             BANKMASK(BAUDCON1), 1
20299:         extern volatile __bit                   WCOL1               @ (((unsigned) &SSP1CON1)*8) + 7;
20300:         #define                                 WCOL1_bit           BANKMASK(SSP1CON1), 7
20301:         extern volatile __bit                   WCOL2               @ (((unsigned) &SSP2CON1)*8) + 7;
20302:         #define                                 WCOL2_bit           BANKMASK(SSP2CON1), 7
20303:         extern volatile __bit                   WPUB0               @ (((unsigned) &WPUB)*8) + 0;
20304:         #define                                 WPUB0_bit           BANKMASK(WPUB), 0
20305:         extern volatile __bit                   WPUB1               @ (((unsigned) &WPUB)*8) + 1;
20306:         #define                                 WPUB1_bit           BANKMASK(WPUB), 1
20307:         extern volatile __bit                   WPUB2               @ (((unsigned) &WPUB)*8) + 2;
20308:         #define                                 WPUB2_bit           BANKMASK(WPUB), 2
20309:         extern volatile __bit                   WPUB3               @ (((unsigned) &WPUB)*8) + 3;
20310:         #define                                 WPUB3_bit           BANKMASK(WPUB), 3
20311:         extern volatile __bit                   WPUB4               @ (((unsigned) &WPUB)*8) + 4;
20312:         #define                                 WPUB4_bit           BANKMASK(WPUB), 4
20313:         extern volatile __bit                   WPUB5               @ (((unsigned) &WPUB)*8) + 5;
20314:         #define                                 WPUB5_bit           BANKMASK(WPUB), 5
20315:         extern volatile __bit                   WPUB6               @ (((unsigned) &WPUB)*8) + 6;
20316:         #define                                 WPUB6_bit           BANKMASK(WPUB), 6
20317:         extern volatile __bit                   WPUB7               @ (((unsigned) &WPUB)*8) + 7;
20318:         #define                                 WPUB7_bit           BANKMASK(WPUB), 7
20319:         extern volatile __bit                   WPUE3               @ (((unsigned) &TRISE)*8) + 7;
20320:         #define                                 WPUE3_bit           BANKMASK(TRISE), 7
20321:         extern volatile __bit                   WR                  @ (((unsigned) &EECON1)*8) + 1;
20322:         #define                                 WR_bit              BANKMASK(EECON1), 1
20323:         extern volatile __bit                   WRE                 @ (((unsigned) &PORTE)*8) + 1;
20324:         #define                                 WRE_bit             BANKMASK(PORTE), 1
20325:         extern volatile __bit                   WREN                @ (((unsigned) &EECON1)*8) + 2;
20326:         #define                                 WREN_bit            BANKMASK(EECON1), 2
20327:         extern volatile __bit                   WRERR               @ (((unsigned) &EECON1)*8) + 3;
20328:         #define                                 WRERR_bit           BANKMASK(EECON1), 3
20329:         extern volatile __bit                   WUE1                @ (((unsigned) &BAUDCON1)*8) + 1;
20330:         #define                                 WUE1_bit            BANKMASK(BAUDCON1), 1
20331:         extern volatile __bit                   WUE2                @ (((unsigned) &BAUDCON2)*8) + 1;
20332:         #define                                 WUE2_bit            BANKMASK(BAUDCON2), 1
20333:         extern volatile __bit                   ZERO                @ (((unsigned) &STATUS)*8) + 2;
20334:         #define                                 ZERO_bit            BANKMASK(STATUS), 2
20335:         extern volatile __bit                   nA2                 @ (((unsigned) &SSP2STAT)*8) + 5;
20336:         #define                                 nA2_bit             BANKMASK(SSP2STAT), 5
20337:         extern volatile __bit                   nADDRESS2           @ (((unsigned) &SSP2STAT)*8) + 5;
20338:         #define                                 nADDRESS2_bit       BANKMASK(SSP2STAT), 5
20339:         extern volatile __bit                   nBOR                @ (((unsigned) &RCON)*8) + 0;
20340:         #define                                 nBOR_bit            BANKMASK(RCON), 0
20341:         extern volatile __bit                   nDONE               @ (((unsigned) &ADCON0)*8) + 1;
20342:         #define                                 nDONE_bit           BANKMASK(ADCON0), 1
20343:         extern volatile __bit                   nMCLR               @ (((unsigned) &PORTE)*8) + 3;
20344:         #define                                 nMCLR_bit           BANKMASK(PORTE), 3
20345:         extern volatile __bit                   nPD                 @ (((unsigned) &RCON)*8) + 2;
20346:         #define                                 nPD_bit             BANKMASK(RCON), 2
20347:         extern volatile __bit                   nPOR                @ (((unsigned) &RCON)*8) + 1;
20348:         #define                                 nPOR_bit            BANKMASK(RCON), 1
20349:         extern volatile __bit                   nRBPU               @ (((unsigned) &INTCON2)*8) + 7;
20350:         #define                                 nRBPU_bit           BANKMASK(INTCON2), 7
20351:         extern volatile __bit                   nRI                 @ (((unsigned) &RCON)*8) + 4;
20352:         #define                                 nRI_bit             BANKMASK(RCON), 4
20353:         extern volatile __bit                   nSS                 @ (((unsigned) &PORTA)*8) + 5;
20354:         #define                                 nSS_bit             BANKMASK(PORTA), 5
20355:         extern volatile __bit                   nSS1                @ (((unsigned) &PORTA)*8) + 5;
20356:         #define                                 nSS1_bit            BANKMASK(PORTA), 5
20357:         extern volatile __bit                   nSS2                @ (((unsigned) &PORTD)*8) + 3;
20358:         #define                                 nSS2_bit            BANKMASK(PORTD), 3
20359:         extern volatile __bit                   nT1SYNC             @ (((unsigned) &T1CON)*8) + 2;
20360:         #define                                 nT1SYNC_bit         BANKMASK(T1CON), 2
20361:         extern volatile __bit                   nT3SYNC             @ (((unsigned) &T3CON)*8) + 2;
20362:         #define                                 nT3SYNC_bit         BANKMASK(T3CON), 2
20363:         extern volatile __bit                   nT5SYNC             @ (((unsigned) &T5CON)*8) + 2;
20364:         #define                                 nT5SYNC_bit         BANKMASK(T5CON), 2
20365:         extern volatile __bit                   nTO                 @ (((unsigned) &RCON)*8) + 3;
20366:         #define                                 nTO_bit             BANKMASK(RCON), 3
20367:         extern volatile __bit                   nW2                 @ (((unsigned) &SSP2STAT)*8) + 2;
20368:         #define                                 nW2_bit             BANKMASK(SSP2STAT), 2
20369:         extern volatile __bit                   nWRITE2             @ (((unsigned) &SSP2STAT)*8) + 2;
20370:         #define                                 nWRITE2_bit         BANKMASK(SSP2STAT), 2
20371:         
20372:         #endif // _PIC18F44K22_H_
