

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Jun 28 15:43:27 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	mediumconst
    24  003DFE                     __pmediumconst:
    25                           	opt stack 0
    26  003DFE  00                 	db	0
    27  003DFF                     _dpowers:
    28                           	opt stack 0
    29  003DFF  0001               	dw	1
    30  003E01  0000               	dw	0
    31  003E03  000A               	dw	10
    32  003E05  0000               	dw	0
    33  003E07  0064               	dw	100
    34  003E09  0000               	dw	0
    35  003E0B  03E8               	dw	1000
    36  003E0D  0000               	dw	0
    37  003E0F  2710               	dw	10000
    38  003E11  0000               	dw	0
    39  003E13  86A0               	dw	34464
    40  003E15  0001               	dw	1
    41  003E17  4240               	dw	16960
    42  003E19  000F               	dw	15
    43  003E1B  9680               	dw	38528
    44  003E1D  0098               	dw	152
    45  003E1F  E100               	dw	57600
    46  003E21  05F5               	dw	1525
    47  003E23  CA00               	dw	51712
    48  003E25  3B9A               	dw	15258
    49  003E27                     __end_of_dpowers:
    50                           	opt stack 0
    51  0000                     _ANSELA	set	3896
    52  0000                     _ANSELB	set	3897
    53  0000                     _ANSELC	set	3898
    54  0000                     _ANSELD	set	3899
    55  0000                     _ANSELE	set	3900
    56  0000                     _ADCON0	set	4034
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON2	set	4032
    59  0000                     _ADRESH	set	4036
    60  0000                     _ADRESL	set	4035
    61  0000                     _BAUDCON1	set	4024
    62  0000                     _INTCON	set	4082
    63  0000                     _OSCCON	set	4051
    64  0000                     _OSCCON2	set	4050
    65  0000                     _OSCTUNEbits	set	3995
    66  0000                     _PIR1bits	set	3998
    67  0000                     _PORTA	set	3968
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTC	set	3970
    70  0000                     _PORTD	set	3971
    71  0000                     _PORTE	set	3972
    72  0000                     _RCREG1	set	4014
    73  0000                     _RCSTA1	set	4011
    74  0000                     _SPBRG1	set	4015
    75  0000                     _SPBRGH1	set	4016
    76  0000                     _T0CON	set	4053
    77  0000                     _TMR0H	set	4055
    78  0000                     _TMR0L	set	4054
    79  0000                     _TRISA	set	3986
    80  0000                     _TRISB	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISE	set	3990
    84  0000                     _TXREG1	set	4013
    85  0000                     _TXSTA1	set	4012
    86  0000                     _TMR0IF	set	32658
    87  0000                     _TMR0ON	set	32431
    88  003E27                     STR_28:
    89  003E27  0D                 	db	13
    90  003E28  0A                 	db	10
    91  003E29  4C                 	db	76	;'L'
    92  003E2A  50                 	db	80	;'P'
    93  003E2B  52                 	db	82	;'R'
    94  003E2C  4F                 	db	79	;'O'
    95  003E2D  20                 	db	32
    96  003E2E  43                 	db	67	;'C'
    97  003E2F  61                 	db	97	;'a'
    98  003E30  73                 	db	115	;'s'
    99  003E31  65                 	db	101	;'e'
   100  003E32  20                 	db	32
   101  003E33  74                 	db	116	;'t'
   102  003E34  65                 	db	101	;'e'
   103  003E35  6D                 	db	109	;'m'
   104  003E36  70                 	db	112	;'p'
   105  003E37  65                 	db	101	;'e'
   106  003E38  72                 	db	114	;'r'
   107  003E39  61                 	db	97	;'a'
   108  003E3A  74                 	db	116	;'t'
   109  003E3B  75                 	db	117	;'u'
   110  003E3C  72                 	db	114	;'r'
   111  003E3D  65                 	db	101	;'e'
   112  003E3E  20                 	db	32
   113  003E3F  3D                 	db	61	;'='
   114  003E40  20                 	db	32
   115  003E41  25                 	db	37
   116  003E42  75                 	db	117	;'u'
   117  003E43  20                 	db	32
   118  003E44  43                 	db	67	;'C'
   119  003E45  00                 	db	0
   120  003E46                     STR_9:
   121  003E46  0D                 	db	13
   122  003E47  0A                 	db	10
   123  003E48  52                 	db	82	;'R'
   124  003E49  42                 	db	66	;'B'
   125  003E4A  31                 	db	49	;'1'
   126  003E4B  30                 	db	48	;'0'
   127  003E4C  20                 	db	32
   128  003E4D  55                 	db	85	;'U'
   129  003E4E  70                 	db	112	;'p'
   130  003E4F  74                 	db	116	;'t'
   131  003E50  69                 	db	105	;'i'
   132  003E51  6D                 	db	109	;'m'
   133  003E52  65                 	db	101	;'e'
   134  003E53  20                 	db	32
   135  003E54  3D                 	db	61	;'='
   136  003E55  20                 	db	32
   137  003E56  25                 	db	37
   138  003E57  6C                 	db	108	;'l'
   139  003E58  64                 	db	100	;'d'
   140  003E59  20                 	db	32
   141  003E5A  73                 	db	115	;'s'
   142  003E5B  65                 	db	101	;'e'
   143  003E5C  63                 	db	99	;'c'
   144  003E5D  6F                 	db	111	;'o'
   145  003E5E  6E                 	db	110	;'n'
   146  003E5F  64                 	db	100	;'d'
   147  003E60  73                 	db	115	;'s'
   148  003E61  00                 	db	0
   149  003E62                     STR_27:
   150  003E62  0D                 	db	13
   151  003E63  0A                 	db	10
   152  003E64  54                 	db	84	;'T'
   153  003E65  65                 	db	101	;'e'
   154  003E66  6D                 	db	109	;'m'
   155  003E67  70                 	db	112	;'p'
   156  003E68  20                 	db	32
   157  003E69  53                 	db	83	;'S'
   158  003E6A  65                 	db	101	;'e'
   159  003E6B  6E                 	db	110	;'n'
   160  003E6C  73                 	db	115	;'s'
   161  003E6D  6F                 	db	111	;'o'
   162  003E6E  72                 	db	114	;'r'
   163  003E6F  20                 	db	32
   164  003E70  6F                 	db	111	;'o'
   165  003E71  75                 	db	117	;'u'
   166  003E72  74                 	db	116	;'t'
   167  003E73  2D                 	db	45
   168  003E74  6F                 	db	111	;'o'
   169  003E75  66                 	db	102	;'f'
   170  003E76  2D                 	db	45
   171  003E77  72                 	db	114	;'r'
   172  003E78  61                 	db	97	;'a'
   173  003E79  6E                 	db	110	;'n'
   174  003E7A  67                 	db	103	;'g'
   175  003E7B  65                 	db	101	;'e'
   176  003E7C  00                 	db	0
   177  003E7D                     STR_8:
   178  003E7D  0D                 	db	13
   179  003E7E  0A                 	db	10
   180  003E7F  46                 	db	70	;'F'
   181  003E80  69                 	db	105	;'i'
   182  003E81  72                 	db	114	;'r'
   183  003E82  6D                 	db	109	;'m'
   184  003E83  77                 	db	119	;'w'
   185  003E84  61                 	db	97	;'a'
   186  003E85  72                 	db	114	;'r'
   187  003E86  65                 	db	101	;'e'
   188  003E87  20                 	db	32
   189  003E88  56                 	db	86	;'V'
   190  003E89  65                 	db	101	;'e'
   191  003E8A  72                 	db	114	;'r'
   192  003E8B  73                 	db	115	;'s'
   193  003E8C  69                 	db	105	;'i'
   194  003E8D  6F                 	db	111	;'o'
   195  003E8E  6E                 	db	110	;'n'
   196  003E8F  20                 	db	32
   197  003E90  3D                 	db	61	;'='
   198  003E91  20                 	db	32
   199  003E92  25                 	db	37
   200  003E93  75                 	db	117	;'u'
   201  003E94  2E                 	db	46
   202  003E95  25                 	db	37
   203  003E96  75                 	db	117	;'u'
   204  003E97  00                 	db	0
   205  003E98                     STR_33:
   206  003E98  0D                 	db	13
   207  003E99  0A                 	db	10
   208  003E9A  43                 	db	67	;'C'
   209  003E9B  6F                 	db	111	;'o'
   210  003E9C  6D                 	db	109	;'m'
   211  003E9D  62                 	db	98	;'b'
   212  003E9E  20                 	db	32
   213  003E9F  67                 	db	103	;'g'
   214  003EA0  65                 	db	101	;'e'
   215  003EA1  6E                 	db	110	;'n'
   216  003EA2  65                 	db	101	;'e'
   217  003EA3  72                 	db	114	;'r'
   218  003EA4  61                 	db	97	;'a'
   219  003EA5  74                 	db	116	;'t'
   220  003EA6  6F                 	db	111	;'o'
   221  003EA7  72                 	db	114	;'r'
   222  003EA8  20                 	db	32
   223  003EA9  72                 	db	114	;'r'
   224  003EAA  61                 	db	97	;'a'
   225  003EAB  74                 	db	116	;'t'
   226  003EAC  65                 	db	101	;'e'
   227  003EAD  20                 	db	32
   228  003EAE  00                 	db	0
   229  003EAF                     STR_1:
   230  003EAF  0A                 	db	10
   231  003EB0  0A                 	db	10
   232  003EB1  0D                 	db	13
   233  003EB2  3E                 	db	62	;'>'
   234  003EB3  3E                 	db	62	;'>'
   235  003EB4  3E                 	db	62	;'>'
   236  003EB5  3E                 	db	62	;'>'
   237  003EB6  3E                 	db	62	;'>'
   238  003EB7  0D                 	db	13
   239  003EB8  0A                 	db	10
   240  003EB9  53                 	db	83	;'S'
   241  003EBA  74                 	db	116	;'t'
   242  003EBB  61                 	db	97	;'a'
   243  003EBC  74                 	db	116	;'t'
   244  003EBD  65                 	db	101	;'e'
   245  003EBE  20                 	db	32
   246  003EBF  28                 	db	40
   247  003EC0  25                 	db	37
   248  003EC1  75                 	db	117	;'u'
   249  003EC2  29                 	db	41
   250  003EC3  20                 	db	32
   251  003EC4  00                 	db	0
   252  003EC5                     STR_21:
   253  003EC5  0D                 	db	13
   254  003EC6  0A                 	db	10
   255  003EC7  38                 	db	56	;'8'
   256  003EC8  56                 	db	86	;'V'
   257  003EC9  20                 	db	32
   258  003ECA  53                 	db	83	;'S'
   259  003ECB  75                 	db	117	;'u'
   260  003ECC  70                 	db	112	;'p'
   261  003ECD  70                 	db	112	;'p'
   262  003ECE  6C                 	db	108	;'l'
   263  003ECF  79                 	db	121	;'y'
   264  003ED0  20                 	db	32
   265  003ED1  72                 	db	114	;'r'
   266  003ED2  61                 	db	97	;'a'
   267  003ED3  69                 	db	105	;'i'
   268  003ED4  6C                 	db	108	;'l'
   269  003ED5  20                 	db	32
   270  003ED6  4F                 	db	79	;'O'
   271  003ED7  46                 	db	70	;'F'
   272  003ED8  46                 	db	70	;'F'
   273  003ED9  00                 	db	0
   274  003EDA                     STR_10:
   275  003EDA  0D                 	db	13
   276  003EDB  0A                 	db	10
   277  003EDC  49                 	db	73	;'I'
   278  003EDD  6E                 	db	110	;'n'
   279  003EDE  70                 	db	112	;'p'
   280  003EDF  75                 	db	117	;'u'
   281  003EE0  74                 	db	116	;'t'
   282  003EE1  20                 	db	32
   283  003EE2  76                 	db	118	;'v'
   284  003EE3  6F                 	db	111	;'o'
   285  003EE4  6C                 	db	108	;'l'
   286  003EE5  74                 	db	116	;'t'
   287  003EE6  61                 	db	97	;'a'
   288  003EE7  67                 	db	103	;'g'
   289  003EE8  65                 	db	101	;'e'
   290  003EE9  20                 	db	32
   291  003EEA  3D                 	db	61	;'='
   292  003EEB  20                 	db	32
   293  003EEC  25                 	db	37
   294  003EED  75                 	db	117	;'u'
   295  003EEE  00                 	db	0
   296  003EEF                     STR_46:
   297  003EEF  0D                 	db	13
   298  003EF0  0A                 	db	10
   299  003EF1  43                 	db	67	;'C'
   300  003EF2  4F                 	db	79	;'O'
   301  003EF3  4D                 	db	77	;'M'
   302  003EF4  42                 	db	66	;'B'
   303  003EF5  20                 	db	32
   304  003EF6  73                 	db	115	;'s'
   305  003EF7  77                 	db	119	;'w'
   306  003EF8  69                 	db	105	;'i'
   307  003EF9  74                 	db	116	;'t'
   308  003EFA  63                 	db	99	;'c'
   309  003EFB  68                 	db	104	;'h'
   310  003EFC  20                 	db	32
   311  003EFD  28                 	db	40
   312  003EFE  25                 	db	37
   313  003EFF  75                 	db	117	;'u'
   314  003F00  29                 	db	41
   315  003F01  20                 	db	32
   316  003F02  00                 	db	0
   317  003F03                     STR_43:
   318  003F03  0D                 	db	13
   319  003F04  0A                 	db	10
   320  003F05  43                 	db	67	;'C'
   321  003F06  4D                 	db	77	;'M'
   322  003F07  4F                 	db	79	;'O'
   323  003F08  53                 	db	83	;'S'
   324  003F09  20                 	db	32
   325  003F0A  73                 	db	115	;'s'
   326  003F0B  77                 	db	119	;'w'
   327  003F0C  69                 	db	105	;'i'
   328  003F0D  74                 	db	116	;'t'
   329  003F0E  63                 	db	99	;'c'
   330  003F0F  68                 	db	104	;'h'
   331  003F10  20                 	db	32
   332  003F11  28                 	db	40
   333  003F12  25                 	db	37
   334  003F13  75                 	db	117	;'u'
   335  003F14  29                 	db	41
   336  003F15  20                 	db	32
   337  003F16  00                 	db	0
   338  003F17                     STR_40:
   339  003F17  0D                 	db	13
   340  003F18  0A                 	db	10
   341  003F19  44                 	db	68	;'D'
   342  003F1A  49                 	db	73	;'I'
   343  003F1B  53                 	db	83	;'S'
   344  003F1C  54                 	db	84	;'T'
   345  003F1D  20                 	db	32
   346  003F1E  73                 	db	115	;'s'
   347  003F1F  77                 	db	119	;'w'
   348  003F20  69                 	db	105	;'i'
   349  003F21  74                 	db	116	;'t'
   350  003F22  63                 	db	99	;'c'
   351  003F23  68                 	db	104	;'h'
   352  003F24  20                 	db	32
   353  003F25  28                 	db	40
   354  003F26  25                 	db	37
   355  003F27  75                 	db	117	;'u'
   356  003F28  29                 	db	41
   357  003F29  20                 	db	32
   358  003F2A  00                 	db	0
   359  003F2B                     STR_20:
   360  003F2B  0D                 	db	13
   361  003F2C  0A                 	db	10
   362  003F2D  38                 	db	56	;'8'
   363  003F2E  56                 	db	86	;'V'
   364  003F2F  20                 	db	32
   365  003F30  53                 	db	83	;'S'
   366  003F31  75                 	db	117	;'u'
   367  003F32  70                 	db	112	;'p'
   368  003F33  70                 	db	112	;'p'
   369  003F34  6C                 	db	108	;'l'
   370  003F35  79                 	db	121	;'y'
   371  003F36  20                 	db	32
   372  003F37  72                 	db	114	;'r'
   373  003F38  61                 	db	97	;'a'
   374  003F39  69                 	db	105	;'i'
   375  003F3A  6C                 	db	108	;'l'
   376  003F3B  20                 	db	32
   377  003F3C  4F                 	db	79	;'O'
   378  003F3D  4E                 	db	78	;'N'
   379  003F3E  00                 	db	0
   380  003F3F                     STR_15:
   381  003F3F  0D                 	db	13
   382  003F40  0A                 	db	10
   383  003F41  4C                 	db	76	;'L'
   384  003F42  50                 	db	80	;'P'
   385  003F43  52                 	db	82	;'R'
   386  003F44  4F                 	db	79	;'O'
   387  003F45  20                 	db	32
   388  003F46  76                 	db	118	;'v'
   389  003F47  6F                 	db	111	;'o'
   390  003F48  6C                 	db	108	;'l'
   391  003F49  74                 	db	116	;'t'
   392  003F4A  61                 	db	97	;'a'
   393  003F4B  67                 	db	103	;'g'
   394  003F4C  65                 	db	101	;'e'
   395  003F4D  20                 	db	32
   396  003F4E  3D                 	db	61	;'='
   397  003F4F  20                 	db	32
   398  003F50  25                 	db	37
   399  003F51  75                 	db	117	;'u'
   400  003F52  00                 	db	0
   401  003F53                     STR_22:
   402  003F53  0D                 	db	13
   403  003F54  0A                 	db	10
   404  003F55  4C                 	db	76	;'L'
   405  003F56  61                 	db	97	;'a'
   406  003F57  6D                 	db	109	;'m'
   407  003F58  70                 	db	112	;'p'
   408  003F59  20                 	db	32
   409  003F5A  76                 	db	118	;'v'
   410  003F5B  6F                 	db	111	;'o'
   411  003F5C  6C                 	db	108	;'l'
   412  003F5D  74                 	db	116	;'t'
   413  003F5E  61                 	db	97	;'a'
   414  003F5F  67                 	db	103	;'g'
   415  003F60  65                 	db	101	;'e'
   416  003F61  20                 	db	32
   417  003F62  3D                 	db	61	;'='
   418  003F63  20                 	db	32
   419  003F64  25                 	db	37
   420  003F65  75                 	db	117	;'u'
   421  003F66  00                 	db	0
   422  003F67                     STR_31:
   423  003F67  0D                 	db	13
   424  003F68  0A                 	db	10
   425  003F69  44                 	db	68	;'D'
   426  003F6A  69                 	db	105	;'i'
   427  003F6B  76                 	db	118	;'v'
   428  003F6C  69                 	db	105	;'i'
   429  003F6D  64                 	db	100	;'d'
   430  003F6E  65                 	db	101	;'e'
   431  003F6F  72                 	db	114	;'r'
   432  003F70  20                 	db	32
   433  003F71  4F                 	db	79	;'O'
   434  003F72  46                 	db	70	;'F'
   435  003F73  46                 	db	70	;'F'
   436  003F74  00                 	db	0
   437  003F75                     STR_32:
   438  003F75  0D                 	db	13
   439  003F76  0A                 	db	10
   440  003F77  44                 	db	68	;'D'
   441  003F78  69                 	db	105	;'i'
   442  003F79  76                 	db	118	;'v'
   443  003F7A  69                 	db	105	;'i'
   444  003F7B  64                 	db	100	;'d'
   445  003F7C  65                 	db	101	;'e'
   446  003F7D  72                 	db	114	;'r'
   447  003F7E  20                 	db	32
   448  003F7F  4F                 	db	79	;'O'
   449  003F80  4E                 	db	78	;'N'
   450  003F81  00                 	db	0
   451  003F82                     STR_30:
   452  003F82  0D                 	db	13
   453  003F83  0A                 	db	10
   454  003F84  43                 	db	67	;'C'
   455  003F85  4D                 	db	77	;'M'
   456  003F86  4F                 	db	79	;'O'
   457  003F87  53                 	db	83	;'S'
   458  003F88  20                 	db	32
   459  003F89  4F                 	db	79	;'O'
   460  003F8A  46                 	db	70	;'F'
   461  003F8B  46                 	db	70	;'F'
   462  003F8C  00                 	db	0
   463  003F8D                     STR_29:
   464  003F8D  0D                 	db	13
   465  003F8E  0A                 	db	10
   466  003F8F  43                 	db	67	;'C'
   467  003F90  4D                 	db	77	;'M'
   468  003F91  4F                 	db	79	;'O'
   469  003F92  53                 	db	83	;'S'
   470  003F93  20                 	db	32
   471  003F94  4F                 	db	79	;'O'
   472  003F95  4E                 	db	78	;'N'
   473  003F96  00                 	db	0
   474  003F97                     STR_11:
   475  003F97  2E                 	db	46
   476  003F98  30                 	db	48	;'0'
   477  003F99  30                 	db	48	;'0'
   478  003F9A  20                 	db	32
   479  003F9B  56                 	db	86	;'V'
   480  003F9C  44                 	db	68	;'D'
   481  003F9D  43                 	db	67	;'C'
   482  003F9E  00                 	db	0
   483  003F9F                     STR_13:
   484  003F9F  2E                 	db	46
   485  003FA0  35                 	db	53	;'5'
   486  003FA1  30                 	db	48	;'0'
   487  003FA2  20                 	db	32
   488  003FA3  56                 	db	86	;'V'
   489  003FA4  44                 	db	68	;'D'
   490  003FA5  43                 	db	67	;'C'
   491  003FA6  00                 	db	0
   492  003FA7                     STR_12:
   493  003FA7  2E                 	db	46
   494  003FA8  32                 	db	50	;'2'
   495  003FA9  35                 	db	53	;'5'
   496  003FAA  20                 	db	32
   497  003FAB  56                 	db	86	;'V'
   498  003FAC  44                 	db	68	;'D'
   499  003FAD  43                 	db	67	;'C'
   500  003FAE  00                 	db	0
   501  003FAF                     STR_14:
   502  003FAF  2E                 	db	46
   503  003FB0  37                 	db	55	;'7'
   504  003FB1  35                 	db	53	;'5'
   505  003FB2  20                 	db	32
   506  003FB3  56                 	db	86	;'V'
   507  003FB4  44                 	db	68	;'D'
   508  003FB5  43                 	db	67	;'C'
   509  003FB6  00                 	db	0
   510  003FB7                     STR_5:
   511  003FB7  4F                 	db	79	;'O'
   512  003FB8  50                 	db	80	;'P'
   513  003FB9  45                 	db	69	;'E'
   514  003FBA  52                 	db	82	;'R'
   515  003FBB  41                 	db	65	;'A'
   516  003FBC  54                 	db	84	;'T'
   517  003FBD  45                 	db	69	;'E'
   518  003FBE  00                 	db	0
   519  003FBF                     STR_6:
   520  003FBF  53                 	db	83	;'S'
   521  003FC0  54                 	db	84	;'T'
   522  003FC1  41                 	db	65	;'A'
   523  003FC2  4E                 	db	78	;'N'
   524  003FC3  44                 	db	68	;'D'
   525  003FC4  42                 	db	66	;'B'
   526  003FC5  59                 	db	89	;'Y'
   527  003FC6  00                 	db	0
   528  003FC7                     STR_4:
   529  003FC7  57                 	db	87	;'W'
   530  003FC8  41                 	db	65	;'A'
   531  003FC9  52                 	db	82	;'R'
   532  003FCA  4D                 	db	77	;'M'
   533  003FCB  55                 	db	85	;'U'
   534  003FCC  50                 	db	80	;'P'
   535  003FCD  00                 	db	0
   536  003FCE                     STR_39:
   537  003FCE  31                 	db	49	;'1'
   538  003FCF  30                 	db	48	;'0'
   539  003FD0  30                 	db	48	;'0'
   540  003FD1  4B                 	db	75	;'K'
   541  003FD2  48                 	db	72	;'H'
   542  003FD3  7A                 	db	122	;'z'
   543  003FD4  00                 	db	0
   544  003FD5                     STR_38:
   545  003FD5  35                 	db	53	;'5'
   546  003FD6  30                 	db	48	;'0'
   547  003FD7  30                 	db	48	;'0'
   548  003FD8  4B                 	db	75	;'K'
   549  003FD9  48                 	db	72	;'H'
   550  003FDA  7A                 	db	122	;'z'
   551  003FDB  00                 	db	0
   552  003FDC                     STR_3:
   553  003FDC  50                 	db	80	;'P'
   554  003FDD  52                 	db	82	;'R'
   555  003FDE  4F                 	db	79	;'O'
   556  003FDF  56                 	db	86	;'V'
   557  003FE0  45                 	db	69	;'E'
   558  003FE1  00                 	db	0
   559  003FE2                     STR_2:
   560  003FE2  52                 	db	82	;'R'
   561  003FE3  45                 	db	69	;'E'
   562  003FE4  53                 	db	83	;'S'
   563  003FE5  45                 	db	69	;'E'
   564  003FE6  54                 	db	84	;'T'
   565  003FE7  00                 	db	0
   566  003FE8                     STR_7:
   567  003FE8  46                 	db	70	;'F'
   568  003FE9  41                 	db	65	;'A'
   569  003FEA  55                 	db	85	;'U'
   570  003FEB  4C                 	db	76	;'L'
   571  003FEC  54                 	db	84	;'T'
   572  003FED  00                 	db	0
   573  003FEE                     STR_35:
   574  003FEE  31                 	db	49	;'1'
   575  003FEF  30                 	db	48	;'0'
   576  003FF0  4D                 	db	77	;'M'
   577  003FF1  48                 	db	72	;'H'
   578  003FF2  7A                 	db	122	;'z'
   579  003FF3  00                 	db	0
   580  003FF4                     STR_37:
   581  003FF4  31                 	db	49	;'1'
   582  003FF5  4D                 	db	77	;'M'
   583  003FF6  48                 	db	72	;'H'
   584  003FF7  7A                 	db	122	;'z'
   585  003FF8  00                 	db	0
   586  003FF9                     STR_36:
   587  003FF9  35                 	db	53	;'5'
   588  003FFA  4D                 	db	77	;'M'
   589  003FFB  48                 	db	72	;'H'
   590  003FFC  7A                 	db	122	;'z'
   591  003FFD  00                 	db	0
   592  0000                     
   593                           ; #config settings
   594  003FFE  00                 	db	0	; dummy byte at the end
   595  0000                     
   596                           	psect	cinit
   597  002DF6                     __pcinit:
   598                           	opt stack 0
   599  002DF6                     start_initialization:
   600                           	opt stack 0
   601  002DF6                     __initialization:
   602                           	opt stack 0
   603                           
   604                           ; Clear objects allocated to COMRAM (4 bytes)
   605  002DF6  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   606  002DF8  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   607  002DFA  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   608  002DFC  6A57               	clrf	__pbssCOMRAM& (0+255),c
   609  002DFE                     end_of_initialization:
   610                           	opt stack 0
   611  002DFE                     __end_of__initialization:
   612                           	opt stack 0
   613  002DFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   614  002E00  6EF8               	movwf	tblptru,c
   615  002E02  0100               	movlb	0
   616  002E04  EF18  F019         	goto	_main	;jump to C main() function
   617                           tblptru	equ	0xFF8
   618                           
   619                           	psect	bssCOMRAM
   620  000057                     __pbssCOMRAM:
   621                           	opt stack 0
   622  000057                     _comb_rate:
   623                           	opt stack 0
   624  000057                     	ds	1
   625  000058                     _fault_code:
   626                           	opt stack 0
   627  000058                     	ds	1
   628  000059                     _prev_state:
   629                           	opt stack 0
   630  000059                     	ds	1
   631  00005A                     _state:
   632                           	opt stack 0
   633  00005A                     	ds	1
   634                           tblptru	equ	0xFF8
   635                           
   636                           	psect	cstackCOMRAM
   637  000001                     __pcstackCOMRAM:
   638                           	opt stack 0
   639  000001                     ?_adc_measure:
   640                           	opt stack 0
   641  000001                     ?___lwdiv:
   642                           	opt stack 0
   643  000001                     ?___lldiv:
   644                           	opt stack 0
   645  000001                     usart1_putchar@ch:
   646                           	opt stack 0
   647  000001                     usart1_init@brgval:
   648                           	opt stack 0
   649  000001                     ___lwdiv@dividend:
   650                           	opt stack 0
   651  000001                     ws2812_send@led:
   652                           	opt stack 0
   653  000001                     ___lldiv@dividend:
   654                           	opt stack 0
   655                           
   656                           ; 4 bytes @ 0x0
   657  000001                     	ds	1
   658  000002                     putch@data:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x1
   662  000002                     	ds	1
   663  000003                     ??_adc_measure:
   664  000003                     ___lwdiv@divisor:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x2
   668  000003                     	ds	1
   669  000004                     adc_measure@channel:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x3
   673  000004                     	ds	1
   674  000005                     ??_ws2812_send:
   675  000005                     adc_measure@retval:
   676                           	opt stack 0
   677  000005                     ___lwdiv@quotient:
   678                           	opt stack 0
   679  000005                     ___lldiv@divisor:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000005                     	ds	2
   684  000007                     ___lwdiv@counter:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x6
   688  000007                     	ds	2
   689  000009                     ws2812_send@j:
   690                           	opt stack 0
   691  000009                     ___lldiv@quotient:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x8
   695  000009                     	ds	4
   696  00000D                     ___lldiv@counter:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0xC
   700  00000D                     	ds	1
   701  00000E                     ?___llmod:
   702                           	opt stack 0
   703  00000E                     ___llmod@dividend:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0xD
   707  00000E                     	ds	4
   708  000012                     ___llmod@divisor:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x11
   712  000012                     	ds	4
   713  000016                     ___llmod@counter:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x15
   717  000016                     	ds	1
   718  000017                     ?_printf:
   719                           	opt stack 0
   720  000017                     printf@f:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x16
   724  000017                     	ds	6
   725  00001D                     ??_printf:
   726                           
   727                           ; 0 bytes @ 0x1C
   728  00001D                     	ds	2
   729  00001F                     printf@prec:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x1E
   733  00001F                     	ds	2
   734  000021                     printf@val:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x20
   738  000021                     	ds	4
   739  000025                     printf@ap:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x24
   743  000025                     	ds	2
   744  000027                     printf@flag:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x26
   748  000027                     	ds	1
   749  000028                     printf@c:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x27
   753  000028                     	ds	1
   754  000029                     ??_main:
   755                           
   756                           ; 0 bytes @ 0x28
   757  000029                     	ds	4
   758  00002D                     _main$780:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x2C
   762  00002D                     	ds	4
   763  000031                     main@temp_int_171:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x30
   767  000031                     	ds	2
   768  000033                     main@prev_color:
   769                           	opt stack 0
   770                           
   771                           ; 4 bytes @ 0x32
   772  000033                     	ds	4
   773  000037                     main@temp_int_165:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x36
   777  000037                     	ds	2
   778  000039                     main@temp_int:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x38
   782  000039                     	ds	2
   783  00003B                     main@temp_int_157:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x3A
   787  00003B                     	ds	2
   788  00003D                     main@run_counter:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x3C
   792  00003D                     	ds	4
   793  000041                     main@meas_v24:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x40
   797  000041                     	ds	2
   798  000043                     main@meas_caset:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x42
   802  000043                     	ds	2
   803  000045                     main@sw_comb_ready:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x44
   807  000045                     	ds	1
   808  000046                     main@meas_lampv:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x45
   812  000046                     	ds	2
   813  000048                     main@led_color:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x47
   817  000048                     	ds	4
   818  00004C                     main@diag_bite_count:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x4B
   822  00004C                     	ds	1
   823  00004D                     main@read_portd:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x4C
   827  00004D                     	ds	1
   828  00004E                     main@meas_v24sw:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x4D
   832  00004E                     	ds	2
   833  000050                     main@sw_dist_count:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x4F
   837  000050                     	ds	1
   838  000051                     main@sw_cmos_count:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x50
   842  000051                     	ds	1
   843  000052                     main@sw_comb_count:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x51
   847  000052                     	ds	1
   848  000053                     main@iter_counter:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x52
   852  000053                     	ds	2
   853  000055                     main@st_counter:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x54
   857  000055                     	ds	2
   858                           tblptru	equ	0xFF8
   859                           
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 41 in file "rb_main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  temp_int        2   48[COMRAM] unsigned int 
   870 ;;  temp_int        2   54[COMRAM] unsigned int 
   871 ;;  temp_int        2   58[COMRAM] unsigned int 
   872 ;;  temp_int        2   56[COMRAM] unsigned int 
   873 ;;  led_color       4   71[COMRAM] unsigned long 
   874 ;;  run_counter     4   60[COMRAM] unsigned long 
   875 ;;  prev_color      4   50[COMRAM] unsigned long 
   876 ;;  st_counter      2   84[COMRAM] unsigned int 
   877 ;;  iter_counter    2   82[COMRAM] unsigned int 
   878 ;;  meas_v24sw      2   77[COMRAM] unsigned int 
   879 ;;  meas_lampv      2   69[COMRAM] unsigned int 
   880 ;;  meas_caset      2   66[COMRAM] unsigned int 
   881 ;;  meas_v24        2   64[COMRAM] unsigned int 
   882 ;;  sw_comb_coun    1   81[COMRAM] unsigned char 
   883 ;;  sw_cmos_coun    1   80[COMRAM] unsigned char 
   884 ;;  sw_dist_coun    1   79[COMRAM] unsigned char 
   885 ;;  read_portd      1   76[COMRAM] unsigned char 
   886 ;;  diag_bite_co    1   75[COMRAM] unsigned char 
   887 ;;  sw_comb_read    1   68[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;		None               void
   890 ;; Registers used:
   891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   897 ;;      Params:         0       0       0       0
   898 ;;      Locals:        42       0       0       0
   899 ;;      Temps:          4       0       0       0
   900 ;;      Totals:        46       0       0       0
   901 ;;Total ram usage:       46 bytes
   902 ;; Hardware stack levels required when called:    3
   903 ;; This function calls:
   904 ;;		___lldiv
   905 ;;		___lwdiv
   906 ;;		_adc_init
   907 ;;		_adc_measure
   908 ;;		_printf
   909 ;;		_usart1_init
   910 ;;		_ws2812_send
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917  003230                     __ptext0:
   918                           	opt stack 0
   919  003230                     _main:
   920                           	opt stack 28
   921                           
   922                           ;rb_main.c: 43: unsigned int st_counter = 0;
   923                           
   924                           ;incstack = 0
   925  003230  0E00               	movlw	0
   926  003232  6E56               	movwf	main@st_counter+1,c
   927  003234  0E00               	movlw	0
   928  003236  6E55               	movwf	main@st_counter,c
   929                           
   930                           ;rb_main.c: 44: unsigned int iter_counter = 0;
   931  003238  0E00               	movlw	0
   932  00323A  6E54               	movwf	main@iter_counter+1,c
   933  00323C  0E00               	movlw	0
   934  00323E  6E53               	movwf	main@iter_counter,c
   935                           
   936                           ;rb_main.c: 45: unsigned long run_counter = 0;
   937  003240  0E00               	movlw	0
   938  003242  6E3D               	movwf	main@run_counter,c
   939  003244  0E00               	movlw	0
   940  003246  6E3E               	movwf	main@run_counter+1,c
   941  003248  0E00               	movlw	0
   942  00324A  6E3F               	movwf	main@run_counter+2,c
   943  00324C  0E00               	movlw	0
   944  00324E  6E40               	movwf	main@run_counter+3,c
   945                           
   946                           ;rb_main.c: 47: unsigned long led_color = (0);
   947  003250  0E00               	movlw	0
   948  003252  6E48               	movwf	main@led_color,c
   949  003254  0E00               	movlw	0
   950  003256  6E49               	movwf	main@led_color+1,c
   951  003258  0E00               	movlw	0
   952  00325A  6E4A               	movwf	main@led_color+2,c
   953  00325C  0E00               	movlw	0
   954  00325E  6E4B               	movwf	main@led_color+3,c
   955                           
   956                           ;rb_main.c: 48: unsigned long prev_color = (0)+1;
   957  003260  0E01               	movlw	1
   958  003262  6E33               	movwf	main@prev_color,c
   959  003264  0E00               	movlw	0
   960  003266  6E34               	movwf	main@prev_color+1,c
   961  003268  0E00               	movlw	0
   962  00326A  6E35               	movwf	main@prev_color+2,c
   963  00326C  0E00               	movlw	0
   964  00326E  6E36               	movwf	main@prev_color+3,c
   965                           
   966                           ;rb_main.c: 50: unsigned char sw_dist_count = (0);
   967  003270  0E00               	movlw	0
   968  003272  6E50               	movwf	main@sw_dist_count,c
   969                           
   970                           ;rb_main.c: 51: unsigned char sw_cmos_count = (0);
   971  003274  0E00               	movlw	0
   972  003276  6E51               	movwf	main@sw_cmos_count,c
   973                           
   974                           ;rb_main.c: 52: unsigned char sw_comb_count = (0);
   975  003278  0E00               	movlw	0
   976  00327A  6E52               	movwf	main@sw_comb_count,c
   977                           
   978                           ;rb_main.c: 53: unsigned char sw_comb_ready = (1);
   979  00327C  0E01               	movlw	1
   980  00327E  6E45               	movwf	main@sw_comb_ready,c
   981                           
   982                           ;rb_main.c: 55: unsigned char diag_bite_count = (0);
   983  003280  0E00               	movlw	0
   984  003282  6E4C               	movwf	main@diag_bite_count,c
   985                           
   986                           ;rb_main.c: 57: unsigned char read_portd;
   987                           ;rb_main.c: 59: unsigned int meas_v24 = 0;
   988  003284  0E00               	movlw	0
   989  003286  6E42               	movwf	main@meas_v24+1,c
   990  003288  0E00               	movlw	0
   991  00328A  6E41               	movwf	main@meas_v24,c
   992                           
   993                           ;rb_main.c: 60: unsigned int meas_v24sw = 0;
   994  00328C  0E00               	movlw	0
   995  00328E  6E4F               	movwf	main@meas_v24sw+1,c
   996  003290  0E00               	movlw	0
   997  003292  6E4E               	movwf	main@meas_v24sw,c
   998                           
   999                           ;rb_main.c: 61: unsigned int meas_lampv = 0;
  1000  003294  0E00               	movlw	0
  1001  003296  6E47               	movwf	main@meas_lampv+1,c
  1002  003298  0E00               	movlw	0
  1003  00329A  6E46               	movwf	main@meas_lampv,c
  1004                           
  1005                           ;rb_main.c: 62: unsigned int meas_caset = 0;
  1006  00329C  0E00               	movlw	0
  1007  00329E  6E44               	movwf	main@meas_caset+1,c
  1008  0032A0  0E00               	movlw	0
  1009  0032A2  6E43               	movwf	main@meas_caset,c
  1010                           
  1011                           ;rb_main.c: 65: OSCCON = (0b01110000);
  1012  0032A4  0E70               	movlw	112
  1013  0032A6  6ED3               	movwf	4051,c	;volatile
  1014                           
  1015                           ;rb_main.c: 66: OSCCON2 = (0b00000000);
  1016  0032A8  0E00               	movlw	0
  1017  0032AA  6ED2               	movwf	4050,c	;volatile
  1018                           
  1019                           ;rb_main.c: 70: T0CON = (0b00001001);
  1020  0032AC  0E09               	movlw	9
  1021  0032AE  6ED5               	movwf	4053,c	;volatile
  1022                           
  1023                           ;rb_main.c: 72: state = RESET;
  1024  0032B0  0E00               	movlw	0
  1025  0032B2  6E5A               	movwf	_state,c
  1026                           
  1027                           ;rb_main.c: 73: prev_state = RESET;
  1028  0032B4  0E00               	movlw	0
  1029  0032B6  6E59               	movwf	_prev_state,c
  1030  0032B8                     l74:
  1031                           
  1032                           ;rb_main.c: 76: {
  1033                           ;rb_main.c: 78: OSCCON = (0b01110000);
  1034  0032B8  0E70               	movlw	112
  1035  0032BA  6ED3               	movwf	4051,c	;volatile
  1036                           
  1037                           ;rb_main.c: 79: OSCCON2 = (0b00000000);
  1038  0032BC  0E00               	movlw	0
  1039  0032BE  6ED2               	movwf	4050,c	;volatile
  1040                           
  1041                           ;rb_main.c: 82: TMR0H = (65536-40000) / 256;
  1042  0032C0  0E63               	movlw	99
  1043  0032C2  6ED7               	movwf	4055,c	;volatile
  1044                           
  1045                           ;rb_main.c: 83: TMR0L = (65536-40000) % 256;
  1046  0032C4  0EC0               	movlw	192
  1047  0032C6  6ED6               	movwf	4054,c	;volatile
  1048                           
  1049                           ;rb_main.c: 86: INTCON = (0);
  1050  0032C8  0E00               	movlw	0
  1051  0032CA  6EF2               	movwf	intcon,c	;volatile
  1052                           
  1053                           ;rb_main.c: 89: TMR0ON = 1;
  1054  0032CC  8ED5               	bsf	4053,7,c	;volatile
  1055                           
  1056                           ;rb_main.c: 92: TRISA = (0x0f);
  1057  0032CE  0E0F               	movlw	15
  1058  0032D0  6E92               	movwf	3986,c	;volatile
  1059                           
  1060                           ;rb_main.c: 93: TRISB = (0x1f);
  1061  0032D2  0E1F               	movlw	31
  1062  0032D4  6E93               	movwf	3987,c	;volatile
  1063                           
  1064                           ;rb_main.c: 94: TRISC = (0xC1);
  1065  0032D6  0EC1               	movlw	193
  1066  0032D8  6E94               	movwf	3988,c	;volatile
  1067                           
  1068                           ;rb_main.c: 95: TRISD = (0);
  1069  0032DA  0E00               	movlw	0
  1070  0032DC  6E95               	movwf	3989,c	;volatile
  1071                           
  1072                           ;rb_main.c: 96: TRISE = (0);
  1073  0032DE  0E00               	movlw	0
  1074  0032E0  6E96               	movwf	3990,c	;volatile
  1075                           
  1076                           ;rb_main.c: 99: ANSELA = (0b00001110);
  1077  0032E2  0E0E               	movlw	14
  1078  0032E4  010F               	movlb	15	; () banked
  1079  0032E6  6F38               	movwf	56,b	;volatile
  1080                           
  1081                           ;rb_main.c: 100: ANSELB = (0b00010000);
  1082  0032E8  0E10               	movlw	16
  1083  0032EA  010F               	movlb	15	; () banked
  1084  0032EC  6F39               	movwf	57,b	;volatile
  1085                           
  1086                           ;rb_main.c: 101: ANSELC = (0);
  1087  0032EE  0E00               	movlw	0
  1088  0032F0  010F               	movlb	15	; () banked
  1089  0032F2  6F3A               	movwf	58,b	;volatile
  1090                           
  1091                           ;rb_main.c: 102: ANSELD = (0);
  1092  0032F4  0E00               	movlw	0
  1093  0032F6  010F               	movlb	15	; () banked
  1094  0032F8  6F3B               	movwf	59,b	;volatile
  1095                           
  1096                           ;rb_main.c: 103: ANSELE = (0);
  1097  0032FA  0E00               	movlw	0
  1098  0032FC  010F               	movlb	15	; () banked
  1099  0032FE  6F3C               	movwf	60,b	;volatile
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;rb_main.c: 106: usart1_init((68));
  1103  003300  0E00               	movlw	0
  1104  003302  6E02               	movwf	usart1_init@brgval+1,c
  1105  003304  0E44               	movlw	68
  1106  003306  6E01               	movwf	usart1_init@brgval,c
  1107  003308  EC04  F017         	call	_usart1_init	;wreg free
  1108                           
  1109                           ;rb_main.c: 113: if ((0 == (PORTB & (8))) && (sw_dist_count < (7)))
  1110  00330C  B681               	btfsc	3969,3,c	;volatile
  1111  00330E  D005               	goto	l1779
  1112  003310  0E07               	movlw	7
  1113  003312  6050               	cpfslt	main@sw_dist_count,c
  1114  003314  D002               	goto	l1779
  1115                           
  1116                           ;rb_main.c: 114: sw_dist_count++;
  1117  003316  2A50               	incf	main@sw_dist_count,f,c
  1118  003318  D000               	goto	l1779
  1119  00331A                     l1779:
  1120                           
  1121                           ;rb_main.c: 115: if ((0 != (PORTB & (8))) && (sw_dist_count > (0)))
  1122  00331A  A681               	btfss	3969,3,c	;volatile
  1123  00331C  D005               	goto	l1785
  1124  00331E  5050               	movf	main@sw_dist_count,w,c
  1125  003320  B4D8               	btfsc	status,2,c
  1126  003322  D002               	goto	l1785
  1127                           
  1128                           ;rb_main.c: 116: sw_dist_count--;
  1129  003324  0650               	decf	main@sw_dist_count,f,c
  1130  003326  D000               	goto	l1785
  1131  003328                     l1785:
  1132                           
  1133                           ;rb_main.c: 118: if ((0 == (PORTB & (4))) && (sw_cmos_count < (7)))
  1134  003328  B481               	btfsc	3969,2,c	;volatile
  1135  00332A  D005               	goto	l1791
  1136  00332C  0E07               	movlw	7
  1137  00332E  6051               	cpfslt	main@sw_cmos_count,c
  1138  003330  D002               	goto	l1791
  1139                           
  1140                           ;rb_main.c: 119: sw_cmos_count++;
  1141  003332  2A51               	incf	main@sw_cmos_count,f,c
  1142  003334  D000               	goto	l1791
  1143  003336                     l1791:
  1144                           
  1145                           ;rb_main.c: 120: if ((0 != (PORTB & (4))) && (sw_cmos_count > (0)))
  1146  003336  A481               	btfss	3969,2,c	;volatile
  1147  003338  D005               	goto	l1797
  1148  00333A  5051               	movf	main@sw_cmos_count,w,c
  1149  00333C  B4D8               	btfsc	status,2,c
  1150  00333E  D002               	goto	l1797
  1151                           
  1152                           ;rb_main.c: 121: sw_cmos_count--;
  1153  003340  0651               	decf	main@sw_cmos_count,f,c
  1154  003342  D000               	goto	l1797
  1155  003344                     l1797:
  1156                           
  1157                           ;rb_main.c: 123: if ((0 == (PORTB & (2))) && (sw_comb_count < (7)))
  1158  003344  B281               	btfsc	3969,1,c	;volatile
  1159  003346  D005               	goto	l1803
  1160  003348  0E07               	movlw	7
  1161  00334A  6052               	cpfslt	main@sw_comb_count,c
  1162  00334C  D002               	goto	l1803
  1163                           
  1164                           ;rb_main.c: 124: sw_comb_count++;
  1165  00334E  2A52               	incf	main@sw_comb_count,f,c
  1166  003350  D000               	goto	l1803
  1167  003352                     l1803:
  1168                           
  1169                           ;rb_main.c: 125: if ((0 != (PORTB & (2))) && (sw_comb_count > (0)))
  1170  003352  A281               	btfss	3969,1,c	;volatile
  1171  003354  D005               	goto	l1809
  1172  003356  5052               	movf	main@sw_comb_count,w,c
  1173  003358  B4D8               	btfsc	status,2,c
  1174  00335A  D002               	goto	l1809
  1175                           
  1176                           ;rb_main.c: 126: sw_comb_count--;
  1177  00335C  0652               	decf	main@sw_comb_count,f,c
  1178  00335E  D000               	goto	l1809
  1179  003360                     l1809:
  1180                           
  1181                           ;rb_main.c: 129: if ((0 == (PORTA & (1))) && (diag_bite_count < (20)))
  1182  003360  B080               	btfsc	3968,0,c	;volatile
  1183  003362  D005               	goto	l1815
  1184  003364  0E14               	movlw	20
  1185  003366  604C               	cpfslt	main@diag_bite_count,c
  1186  003368  D002               	goto	l1815
  1187                           
  1188                           ;rb_main.c: 130: diag_bite_count++;
  1189  00336A  2A4C               	incf	main@diag_bite_count,f,c
  1190  00336C  D000               	goto	l1815
  1191  00336E                     l1815:
  1192                           
  1193                           ;rb_main.c: 131: if ((0 != (PORTA & (1))) && (diag_bite_count > (0)))
  1194  00336E  A080               	btfss	3968,0,c	;volatile
  1195  003370  D005               	goto	l1821
  1196  003372  504C               	movf	main@diag_bite_count,w,c
  1197  003374  B4D8               	btfsc	status,2,c
  1198  003376  D002               	goto	l1821
  1199                           
  1200                           ;rb_main.c: 132: diag_bite_count--;
  1201  003378  064C               	decf	main@diag_bite_count,f,c
  1202  00337A  D000               	goto	l1821
  1203  00337C                     l1821:
  1204                           
  1205                           ;rb_main.c: 140: if (OPERATE == state)
  1206  00337C  0E03               	movlw	3
  1207  00337E  185A               	xorwf	_state,w,c
  1208  003380  A4D8               	btfss	status,2,c
  1209  003382  D0AF               	goto	l1909
  1210                           
  1211                           ;rb_main.c: 141: {
  1212                           ;rb_main.c: 143: if (prev_state != OPERATE)
  1213  003384  0E03               	movlw	3
  1214  003386  1859               	xorwf	_prev_state,w,c
  1215  003388  B4D8               	btfsc	status,2,c
  1216  00338A  D004               	goto	l84
  1217                           
  1218                           ;rb_main.c: 144: st_counter = 0;
  1219  00338C  0E00               	movlw	0
  1220  00338E  6E56               	movwf	main@st_counter+1,c
  1221  003390  0E00               	movlw	0
  1222  003392  6E55               	movwf	main@st_counter,c
  1223  003394                     l84:
  1224                           
  1225                           ;rb_main.c: 145: prev_state = OPERATE;
  1226  003394  0E03               	movlw	3
  1227  003396  6E59               	movwf	_prev_state,c
  1228                           
  1229                           ;rb_main.c: 148: led_color = (0x0000f800);
  1230  003398  0E00               	movlw	0
  1231  00339A  6E48               	movwf	main@led_color,c
  1232  00339C  0EF8               	movlw	248
  1233  00339E  6E49               	movwf	main@led_color+1,c
  1234  0033A0  0E00               	movlw	0
  1235  0033A2  6E4A               	movwf	main@led_color+2,c
  1236  0033A4  0E00               	movlw	0
  1237  0033A6  6E4B               	movwf	main@led_color+3,c
  1238                           
  1239                           ;rb_main.c: 151: PORTA |= (16);
  1240  0033A8  8880               	bsf	3968,4,c	;volatile
  1241                           
  1242                           ;rb_main.c: 154: if (sw_dist_count >= (7))
  1243  0033AA  0E06               	movlw	6
  1244  0033AC  6450               	cpfsgt	main@sw_dist_count,c
  1245  0033AE  D002               	goto	l1833
  1246                           
  1247                           ;rb_main.c: 155: PORTD |= (8);
  1248  0033B0  8683               	bsf	3971,3,c	;volatile
  1249  0033B2  D002               	goto	l1835
  1250  0033B4                     l1833:
  1251                           
  1252                           ;rb_main.c: 156: else
  1253                           ;rb_main.c: 157: PORTD &= ~(8);
  1254  0033B4  9683               	bcf	3971,3,c	;volatile
  1255  0033B6  D000               	goto	l1835
  1256  0033B8                     l1835:
  1257                           
  1258                           ;rb_main.c: 160: if (sw_cmos_count >= (7))
  1259  0033B8  0E06               	movlw	6
  1260  0033BA  6451               	cpfsgt	main@sw_cmos_count,c
  1261  0033BC  D002               	goto	l1839
  1262                           
  1263                           ;rb_main.c: 161: PORTE |= (1);
  1264  0033BE  8084               	bsf	3972,0,c	;volatile
  1265  0033C0  D002               	goto	l1841
  1266  0033C2                     l1839:
  1267                           
  1268                           ;rb_main.c: 162: else
  1269                           ;rb_main.c: 163: PORTE &= ~(1);
  1270  0033C2  9084               	bcf	3972,0,c	;volatile
  1271  0033C4  D000               	goto	l1841
  1272  0033C6                     l1841:
  1273                           
  1274                           ;rb_main.c: 166: if ((sw_comb_count >= (7)) && (sw_comb_ready == (1)))
  1275  0033C6  0E06               	movlw	6
  1276  0033C8  6452               	cpfsgt	main@sw_comb_count,c
  1277  0033CA  D00D               	goto	l1851
  1278  0033CC  0445               	decf	main@sw_comb_ready,w,c
  1279  0033CE  A4D8               	btfss	status,2,c
  1280  0033D0  D00A               	goto	l1851
  1281                           
  1282                           ;rb_main.c: 167: {
  1283                           ;rb_main.c: 168: sw_comb_ready = (0);
  1284  0033D2  0E00               	movlw	0
  1285  0033D4  6E45               	movwf	main@sw_comb_ready,c
  1286                           
  1287                           ;rb_main.c: 169: if (comb_rate == CG10M)
  1288  0033D6  5057               	movf	_comb_rate,w,c
  1289  0033D8  A4D8               	btfss	status,2,c
  1290  0033DA  D003               	goto	l1849
  1291                           
  1292                           ;rb_main.c: 170: comb_rate = CGOFF;
  1293  0033DC  0E05               	movlw	5
  1294  0033DE  6E57               	movwf	_comb_rate,c
  1295  0033E0  D002               	goto	l1851
  1296  0033E2                     l1849:
  1297                           
  1298                           ;rb_main.c: 171: else
  1299                           ;rb_main.c: 172: comb_rate -= 1;
  1300  0033E2  0657               	decf	_comb_rate,f,c
  1301  0033E4  D000               	goto	l1851
  1302  0033E6                     l1851:
  1303                           
  1304                           ;rb_main.c: 173: }
  1305                           ;rb_main.c: 175: if (sw_comb_count == (0))
  1306  0033E6  5052               	movf	main@sw_comb_count,w,c
  1307  0033E8  A4D8               	btfss	status,2,c
  1308  0033EA  D003               	goto	l1855
  1309                           
  1310                           ;rb_main.c: 176: sw_comb_ready = (1);
  1311  0033EC  0E01               	movlw	1
  1312  0033EE  6E45               	movwf	main@sw_comb_ready,c
  1313  0033F0  D000               	goto	l1855
  1314  0033F2                     l1855:
  1315                           
  1316                           ;rb_main.c: 180: read_portd = PORTD & 0xf8;
  1317  0033F2  5083               	movf	3971,w,c	;volatile
  1318  0033F4  0BF8               	andlw	248
  1319  0033F6  6E4D               	movwf	main@read_portd,c
  1320                           
  1321                           ;rb_main.c: 181: switch (comb_rate)
  1322  0033F8  D012               	goto	l1869
  1323  0033FA                     l94:
  1324                           
  1325                           ;rb_main.c: 185: PORTD = read_portd;
  1326  0033FA  C04D  FF83         	movff	main@read_portd,3971	;volatile
  1327                           
  1328                           ;rb_main.c: 186: break;
  1329  0033FE  D020               	goto	l1871
  1330  003400                     l1857:
  1331                           
  1332                           ;rb_main.c: 189: PORTD = read_portd + 1;
  1333  003400  284D               	incf	main@read_portd,w,c
  1334  003402  D00B               	goto	L4
  1335  003404                     l1859:
  1336                           
  1337                           ;rb_main.c: 193: PORTD = read_portd + 2;
  1338  003404  504D               	movf	main@read_portd,w,c
  1339  003406  0F02               	addlw	2
  1340  003408  D008               	goto	L4
  1341  00340A                     l1861:
  1342                           
  1343                           ;rb_main.c: 197: PORTD = read_portd + 3;
  1344  00340A  504D               	movf	main@read_portd,w,c
  1345  00340C  0F03               	addlw	3
  1346  00340E  D005               	goto	L4
  1347  003410                     l1863:
  1348                           
  1349                           ;rb_main.c: 201: PORTD = read_portd + 4;
  1350  003410  504D               	movf	main@read_portd,w,c
  1351  003412  0F04               	addlw	4
  1352  003414  D002               	goto	L4
  1353  003416                     l1865:
  1354                           
  1355                           ;rb_main.c: 205: PORTD = read_portd + 7;
  1356  003416  504D               	movf	main@read_portd,w,c
  1357  003418  0F07               	addlw	7
  1358  00341A                     L4:
  1359  00341A  6E83               	movwf	3971,c	;volatile
  1360                           
  1361                           ;rb_main.c: 207: }
  1362                           
  1363                           ;rb_main.c: 206: break;
  1364  00341C  D011               	goto	l1871
  1365  00341E                     l1869:
  1366  00341E  5057               	movf	_comb_rate,w,c
  1367                           
  1368                           ; Switch size 1, requested type "space"
  1369                           ; Number of cases is 5, Range of values is 0 to 4
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte           16     9 (average)
  1373                           ;	Chosen strategy is simple_byte
  1374  003420  0A00               	xorlw	0	; case 0
  1375  003422  B4D8               	btfsc	status,2,c
  1376  003424  D7EA               	goto	l94
  1377  003426  0A01               	xorlw	1	; case 1
  1378  003428  B4D8               	btfsc	status,2,c
  1379  00342A  D7EA               	goto	l1857
  1380  00342C  0A03               	xorlw	3	; case 2
  1381  00342E  B4D8               	btfsc	status,2,c
  1382  003430  D7E9               	goto	l1859
  1383  003432  0A01               	xorlw	1	; case 3
  1384  003434  B4D8               	btfsc	status,2,c
  1385  003436  D7E9               	goto	l1861
  1386  003438  0A07               	xorlw	7	; case 4
  1387  00343A  B4D8               	btfsc	status,2,c
  1388  00343C  D7E9               	goto	l1863
  1389  00343E  D7EB               	goto	l1865
  1390  003440                     l1871:
  1391                           
  1392                           ;rb_main.c: 210: if (comb_rate != CGOFF)
  1393  003440  0E05               	movlw	5
  1394  003442  1857               	xorwf	_comb_rate,w,c
  1395  003444  B4D8               	btfsc	status,2,c
  1396  003446  D002               	goto	l1875
  1397                           
  1398                           ;rb_main.c: 211: PORTE &= ~(2);
  1399  003448  9284               	bcf	3972,1,c	;volatile
  1400  00344A  D002               	goto	l1877
  1401  00344C                     l1875:
  1402                           
  1403                           ;rb_main.c: 212: else
  1404                           ;rb_main.c: 213: PORTE |= (2);
  1405  00344C  8284               	bsf	3972,1,c	;volatile
  1406  00344E  D000               	goto	l1877
  1407  003450                     l1877:
  1408                           
  1409                           ;rb_main.c: 216: if ((sw_cmos_count == (0)) && (sw_dist_count == (0)) && (comb_rate == C
      +                          GOFF) && (sw_comb_ready == (1)))
  1410  003450  5051               	movf	main@sw_cmos_count,w,c
  1411  003452  A4D8               	btfss	status,2,c
  1412  003454  D00D               	goto	l1887
  1413  003456  5050               	movf	main@sw_dist_count,w,c
  1414  003458  A4D8               	btfss	status,2,c
  1415  00345A  D00A               	goto	l1887
  1416  00345C  0E05               	movlw	5
  1417  00345E  1857               	xorwf	_comb_rate,w,c
  1418  003460  A4D8               	btfss	status,2,c
  1419  003462  D006               	goto	l1887
  1420  003464  0445               	decf	main@sw_comb_ready,w,c
  1421  003466  A4D8               	btfss	status,2,c
  1422  003468  D003               	goto	l1887
  1423                           
  1424                           ;rb_main.c: 217: state = STANDBY;
  1425  00346A  0E04               	movlw	4
  1426  00346C  6E5A               	movwf	_state,c
  1427  00346E  D000               	goto	l1887
  1428  003470                     l1887:
  1429                           
  1430                           ;rb_main.c: 221: if (st_counter > (1000))
  1431  003470  0EE9               	movlw	233
  1432  003472  5C55               	subwf	main@st_counter,w,c
  1433  003474  0E03               	movlw	3
  1434  003476  5856               	subwfb	main@st_counter+1,w,c
  1435  003478  A0D8               	btfss	status,0,c
  1436  00347A  D029               	goto	l1903
  1437                           
  1438                           ;rb_main.c: 222: {
  1439                           ;rb_main.c: 224: if ((meas_v24sw < (158)) || (meas_v24sw > (345)))
  1440  00347C  504F               	movf	main@meas_v24sw+1,w,c
  1441  00347E  E104               	bnz	u1850
  1442  003480  0E9E               	movlw	158
  1443  003482  5C4E               	subwf	main@meas_v24sw,w,c
  1444  003484  A0D8               	btfss	status,0,c
  1445  003486  D006               	goto	l1893
  1446  003488                     u1850:
  1447  003488  0E5A               	movlw	90
  1448  00348A  5C4E               	subwf	main@meas_v24sw,w,c
  1449  00348C  0E01               	movlw	1
  1450  00348E  584F               	subwfb	main@meas_v24sw+1,w,c
  1451  003490  A0D8               	btfss	status,0,c
  1452  003492  D004               	goto	l105
  1453  003494                     l1893:
  1454                           
  1455                           ;rb_main.c: 225: {
  1456                           ;rb_main.c: 226: state = FAULT;
  1457  003494  0E05               	movlw	5
  1458  003496  6E5A               	movwf	_state,c
  1459                           
  1460                           ;rb_main.c: 227: fault_code = V24SW_FAULT;
  1461  003498  0E03               	movlw	3
  1462  00349A  6E58               	movwf	_fault_code,c
  1463  00349C                     l105:
  1464                           
  1465                           ;rb_main.c: 228: }
  1466                           ;rb_main.c: 231: if (diag_bite_count == (0))
  1467  00349C  504C               	movf	main@diag_bite_count,w,c
  1468  00349E  A4D8               	btfss	status,2,c
  1469  0034A0  D005               	goto	l1897
  1470                           
  1471                           ;rb_main.c: 232: {
  1472                           ;rb_main.c: 233: state = FAULT;
  1473  0034A2  0E05               	movlw	5
  1474  0034A4  6E5A               	movwf	_state,c
  1475                           
  1476                           ;rb_main.c: 234: fault_code = BITE_FAULT;
  1477  0034A6  0E04               	movlw	4
  1478  0034A8  6E58               	movwf	_fault_code,c
  1479  0034AA  D000               	goto	l1897
  1480  0034AC                     l1897:
  1481                           
  1482                           ;rb_main.c: 235: }
  1483                           ;rb_main.c: 238: if ((meas_lampv < (180)) || (meas_lampv > (756)))
  1484  0034AC  5047               	movf	main@meas_lampv+1,w,c
  1485  0034AE  E104               	bnz	u1880
  1486  0034B0  0EB4               	movlw	180
  1487  0034B2  5C46               	subwf	main@meas_lampv,w,c
  1488  0034B4  A0D8               	btfss	status,0,c
  1489  0034B6  D006               	goto	l1901
  1490  0034B8                     u1880:
  1491  0034B8  0EF5               	movlw	245
  1492  0034BA  5C46               	subwf	main@meas_lampv,w,c
  1493  0034BC  0E02               	movlw	2
  1494  0034BE  5847               	subwfb	main@meas_lampv+1,w,c
  1495  0034C0  A0D8               	btfss	status,0,c
  1496  0034C2  D005               	goto	l1903
  1497  0034C4                     l1901:
  1498                           
  1499                           ;rb_main.c: 239: {
  1500                           ;rb_main.c: 240: state = FAULT;
  1501  0034C4  0E05               	movlw	5
  1502  0034C6  6E5A               	movwf	_state,c
  1503                           
  1504                           ;rb_main.c: 241: fault_code = LAMPV_FAULT;
  1505  0034C8  0E05               	movlw	5
  1506  0034CA  6E58               	movwf	_fault_code,c
  1507  0034CC  D000               	goto	l1903
  1508  0034CE                     l1903:
  1509                           
  1510                           ;rb_main.c: 242: }
  1511                           ;rb_main.c: 243: }
  1512                           ;rb_main.c: 245: st_counter += 1;
  1513  0034CE  4A55               	infsnz	main@st_counter,f,c
  1514  0034D0  2A56               	incf	main@st_counter+1,f,c
  1515                           
  1516                           ;rb_main.c: 246: if (st_counter == 0)
  1517  0034D2  5055               	movf	main@st_counter,w,c
  1518  0034D4  1056               	iorwf	main@st_counter+1,w,c
  1519  0034D6  A4D8               	btfss	status,2,c
  1520  0034D8  D004               	goto	l1909
  1521                           
  1522                           ;rb_main.c: 247: st_counter -= 1;
  1523  0034DA  0655               	decf	main@st_counter,f,c
  1524  0034DC  A0D8               	btfss	status,0,c
  1525  0034DE  0656               	decf	main@st_counter+1,f,c
  1526  0034E0  D000               	goto	l1909
  1527  0034E2                     l1909:
  1528                           
  1529                           ;rb_main.c: 248: }
  1530                           ;rb_main.c: 256: if (STANDBY == state)
  1531  0034E2  0E04               	movlw	4
  1532  0034E4  185A               	xorwf	_state,w,c
  1533  0034E6  A4D8               	btfss	status,2,c
  1534  0034E8  D05E               	goto	l1953
  1535                           
  1536                           ;rb_main.c: 257: {
  1537                           ;rb_main.c: 259: if (prev_state != STANDBY)
  1538  0034EA  0E04               	movlw	4
  1539  0034EC  1859               	xorwf	_prev_state,w,c
  1540  0034EE  B4D8               	btfsc	status,2,c
  1541  0034F0  D004               	goto	l114
  1542                           
  1543                           ;rb_main.c: 260: st_counter = 0;
  1544  0034F2  0E00               	movlw	0
  1545  0034F4  6E56               	movwf	main@st_counter+1,c
  1546  0034F6  0E00               	movlw	0
  1547  0034F8  6E55               	movwf	main@st_counter,c
  1548  0034FA                     l114:
  1549                           
  1550                           ;rb_main.c: 261: prev_state = STANDBY;
  1551  0034FA  0E04               	movlw	4
  1552  0034FC  6E59               	movwf	_prev_state,c
  1553                           
  1554                           ;rb_main.c: 264: led_color = (0x0000e8e8);
  1555  0034FE  0EE8               	movlw	232
  1556  003500  6E48               	movwf	main@led_color,c
  1557  003502  0EE8               	movlw	232
  1558  003504  6E49               	movwf	main@led_color+1,c
  1559  003506  0E00               	movlw	0
  1560  003508  6E4A               	movwf	main@led_color+2,c
  1561  00350A  0E00               	movlw	0
  1562  00350C  6E4B               	movwf	main@led_color+3,c
  1563                           
  1564                           ;rb_main.c: 267: PORTA |= (16);
  1565  00350E  8880               	bsf	3968,4,c	;volatile
  1566                           
  1567                           ;rb_main.c: 270: PORTD &= ~(8);
  1568  003510  9683               	bcf	3971,3,c	;volatile
  1569                           
  1570                           ;rb_main.c: 273: PORTE |= (2);
  1571  003512  8284               	bsf	3972,1,c	;volatile
  1572                           
  1573                           ;rb_main.c: 276: PORTE &= ~(1);
  1574  003514  9084               	bcf	3972,0,c	;volatile
  1575                           
  1576                           ;rb_main.c: 279: sw_comb_ready = (1);
  1577  003516  0E01               	movlw	1
  1578  003518  6E45               	movwf	main@sw_comb_ready,c
  1579                           
  1580                           ;rb_main.c: 281: if ((sw_cmos_count >= (7)) || (sw_dist_count >= (7)) || (sw_comb_count 
      +                          >= (7)))
  1581  00351A  0E07               	movlw	7
  1582  00351C  6051               	cpfslt	main@sw_cmos_count,c
  1583  00351E  D007               	goto	l1929
  1584  003520  0E07               	movlw	7
  1585  003522  6050               	cpfslt	main@sw_dist_count,c
  1586  003524  D004               	goto	l1929
  1587  003526  0E06               	movlw	6
  1588  003528  6452               	cpfsgt	main@sw_comb_count,c
  1589  00352A  D004               	goto	l1931
  1590  00352C  D000               	goto	l1929
  1591  00352E                     l1929:
  1592                           
  1593                           ;rb_main.c: 282: {
  1594                           ;rb_main.c: 283: state = OPERATE;
  1595  00352E  0E03               	movlw	3
  1596  003530  6E5A               	movwf	_state,c
  1597  003532  D000               	goto	l1931
  1598  003534                     l1931:
  1599                           
  1600                           ;rb_main.c: 284: }
  1601                           ;rb_main.c: 288: if (st_counter > (1000))
  1602  003534  0EE9               	movlw	233
  1603  003536  5C55               	subwf	main@st_counter,w,c
  1604  003538  0E03               	movlw	3
  1605  00353A  5856               	subwfb	main@st_counter+1,w,c
  1606  00353C  A0D8               	btfss	status,0,c
  1607  00353E  D029               	goto	l1947
  1608                           
  1609                           ;rb_main.c: 289: {
  1610                           ;rb_main.c: 291: if ((meas_v24sw < (158)) || (meas_v24sw > (345)))
  1611  003540  504F               	movf	main@meas_v24sw+1,w,c
  1612  003542  E104               	bnz	u1970
  1613  003544  0E9E               	movlw	158
  1614  003546  5C4E               	subwf	main@meas_v24sw,w,c
  1615  003548  A0D8               	btfss	status,0,c
  1616  00354A  D006               	goto	l1937
  1617  00354C                     u1970:
  1618  00354C  0E5A               	movlw	90
  1619  00354E  5C4E               	subwf	main@meas_v24sw,w,c
  1620  003550  0E01               	movlw	1
  1621  003552  584F               	subwfb	main@meas_v24sw+1,w,c
  1622  003554  A0D8               	btfss	status,0,c
  1623  003556  D004               	goto	l119
  1624  003558                     l1937:
  1625                           
  1626                           ;rb_main.c: 292: {
  1627                           ;rb_main.c: 293: state = FAULT;
  1628  003558  0E05               	movlw	5
  1629  00355A  6E5A               	movwf	_state,c
  1630                           
  1631                           ;rb_main.c: 294: fault_code = V24SW_FAULT;
  1632  00355C  0E03               	movlw	3
  1633  00355E  6E58               	movwf	_fault_code,c
  1634  003560                     l119:
  1635                           
  1636                           ;rb_main.c: 295: }
  1637                           ;rb_main.c: 298: if (diag_bite_count == (0))
  1638  003560  504C               	movf	main@diag_bite_count,w,c
  1639  003562  A4D8               	btfss	status,2,c
  1640  003564  D005               	goto	l1941
  1641                           
  1642                           ;rb_main.c: 299: {
  1643                           ;rb_main.c: 300: state = FAULT;
  1644  003566  0E05               	movlw	5
  1645  003568  6E5A               	movwf	_state,c
  1646                           
  1647                           ;rb_main.c: 301: fault_code = BITE_FAULT;
  1648  00356A  0E04               	movlw	4
  1649  00356C  6E58               	movwf	_fault_code,c
  1650  00356E  D000               	goto	l1941
  1651  003570                     l1941:
  1652                           
  1653                           ;rb_main.c: 302: }
  1654                           ;rb_main.c: 305: if ((meas_lampv < (180)) || (meas_lampv > (756)))
  1655  003570  5047               	movf	main@meas_lampv+1,w,c
  1656  003572  E104               	bnz	u2000
  1657  003574  0EB4               	movlw	180
  1658  003576  5C46               	subwf	main@meas_lampv,w,c
  1659  003578  A0D8               	btfss	status,0,c
  1660  00357A  D006               	goto	l1945
  1661  00357C                     u2000:
  1662  00357C  0EF5               	movlw	245
  1663  00357E  5C46               	subwf	main@meas_lampv,w,c
  1664  003580  0E02               	movlw	2
  1665  003582  5847               	subwfb	main@meas_lampv+1,w,c
  1666  003584  A0D8               	btfss	status,0,c
  1667  003586  D005               	goto	l1947
  1668  003588                     l1945:
  1669                           
  1670                           ;rb_main.c: 306: {
  1671                           ;rb_main.c: 307: state = FAULT;
  1672  003588  0E05               	movlw	5
  1673  00358A  6E5A               	movwf	_state,c
  1674                           
  1675                           ;rb_main.c: 308: fault_code = LAMPV_FAULT;
  1676  00358C  0E05               	movlw	5
  1677  00358E  6E58               	movwf	_fault_code,c
  1678  003590  D000               	goto	l1947
  1679  003592                     l1947:
  1680                           
  1681                           ;rb_main.c: 309: }
  1682                           ;rb_main.c: 310: }
  1683                           ;rb_main.c: 312: st_counter += 1;
  1684  003592  4A55               	infsnz	main@st_counter,f,c
  1685  003594  2A56               	incf	main@st_counter+1,f,c
  1686                           
  1687                           ;rb_main.c: 313: if (st_counter == 0)
  1688  003596  5055               	movf	main@st_counter,w,c
  1689  003598  1056               	iorwf	main@st_counter+1,w,c
  1690  00359A  A4D8               	btfss	status,2,c
  1691  00359C  D004               	goto	l1953
  1692                           
  1693                           ;rb_main.c: 314: st_counter -= 1;
  1694  00359E  0655               	decf	main@st_counter,f,c
  1695  0035A0  A0D8               	btfss	status,0,c
  1696  0035A2  0656               	decf	main@st_counter+1,f,c
  1697  0035A4  D000               	goto	l1953
  1698  0035A6                     l1953:
  1699                           
  1700                           ;rb_main.c: 315: }
  1701                           ;rb_main.c: 322: if (WARMUP == state)
  1702  0035A6  0E02               	movlw	2
  1703  0035A8  185A               	xorwf	_state,w,c
  1704  0035AA  A4D8               	btfss	status,2,c
  1705  0035AC  D04E               	goto	l1991
  1706                           
  1707                           ;rb_main.c: 323: {
  1708                           ;rb_main.c: 325: if (prev_state != WARMUP)
  1709  0035AE  0E02               	movlw	2
  1710  0035B0  1859               	xorwf	_prev_state,w,c
  1711  0035B2  B4D8               	btfsc	status,2,c
  1712  0035B4  D004               	goto	l128
  1713                           
  1714                           ;rb_main.c: 326: st_counter = 0;
  1715  0035B6  0E00               	movlw	0
  1716  0035B8  6E56               	movwf	main@st_counter+1,c
  1717  0035BA  0E00               	movlw	0
  1718  0035BC  6E55               	movwf	main@st_counter,c
  1719  0035BE                     l128:
  1720                           
  1721                           ;rb_main.c: 327: prev_state = WARMUP;
  1722  0035BE  0E02               	movlw	2
  1723  0035C0  6E59               	movwf	_prev_state,c
  1724                           
  1725                           ;rb_main.c: 330: led_color = (0x0000c8e4);
  1726  0035C2  0EE4               	movlw	228
  1727  0035C4  6E48               	movwf	main@led_color,c
  1728  0035C6  0EC8               	movlw	200
  1729  0035C8  6E49               	movwf	main@led_color+1,c
  1730  0035CA  0E00               	movlw	0
  1731  0035CC  6E4A               	movwf	main@led_color+2,c
  1732  0035CE  0E00               	movlw	0
  1733  0035D0  6E4B               	movwf	main@led_color+3,c
  1734                           
  1735                           ;rb_main.c: 333: PORTA |= (16);
  1736  0035D2  8880               	bsf	3968,4,c	;volatile
  1737                           
  1738                           ;rb_main.c: 336: PORTD &= ~(8);
  1739  0035D4  9683               	bcf	3971,3,c	;volatile
  1740                           
  1741                           ;rb_main.c: 339: PORTE |= (2);
  1742  0035D6  8284               	bsf	3972,1,c	;volatile
  1743                           
  1744                           ;rb_main.c: 342: PORTE &= ~(1);
  1745  0035D8  9084               	bcf	3972,0,c	;volatile
  1746                           
  1747                           ;rb_main.c: 346: if (st_counter > (1000))
  1748  0035DA  0EE9               	movlw	233
  1749  0035DC  5C55               	subwf	main@st_counter,w,c
  1750  0035DE  0E03               	movlw	3
  1751  0035E0  5856               	subwfb	main@st_counter+1,w,c
  1752  0035E2  A0D8               	btfss	status,0,c
  1753  0035E4  D011               	goto	l1975
  1754                           
  1755                           ;rb_main.c: 347: {
  1756                           ;rb_main.c: 349: if ((meas_v24sw < (158)) || (meas_v24sw > (345)))
  1757  0035E6  504F               	movf	main@meas_v24sw+1,w,c
  1758  0035E8  E104               	bnz	u2060
  1759  0035EA  0E9E               	movlw	158
  1760  0035EC  5C4E               	subwf	main@meas_v24sw,w,c
  1761  0035EE  A0D8               	btfss	status,0,c
  1762  0035F0  D006               	goto	l1973
  1763  0035F2                     u2060:
  1764  0035F2  0E5A               	movlw	90
  1765  0035F4  5C4E               	subwf	main@meas_v24sw,w,c
  1766  0035F6  0E01               	movlw	1
  1767  0035F8  584F               	subwfb	main@meas_v24sw+1,w,c
  1768  0035FA  A0D8               	btfss	status,0,c
  1769  0035FC  D005               	goto	l1975
  1770  0035FE                     l1973:
  1771                           
  1772                           ;rb_main.c: 350: {
  1773                           ;rb_main.c: 351: state = FAULT;
  1774  0035FE  0E05               	movlw	5
  1775  003600  6E5A               	movwf	_state,c
  1776                           
  1777                           ;rb_main.c: 352: fault_code = V24SW_FAULT;
  1778  003602  0E03               	movlw	3
  1779  003604  6E58               	movwf	_fault_code,c
  1780  003606  D000               	goto	l1975
  1781  003608                     l1975:
  1782                           
  1783                           ;rb_main.c: 353: }
  1784                           ;rb_main.c: 354: }
  1785                           ;rb_main.c: 356: if (st_counter > (6000))
  1786  003608  0E71               	movlw	113
  1787  00360A  5C55               	subwf	main@st_counter,w,c
  1788  00360C  0E17               	movlw	23
  1789  00360E  5856               	subwfb	main@st_counter+1,w,c
  1790  003610  A0D8               	btfss	status,0,c
  1791  003612  D006               	goto	l1981
  1792                           
  1793                           ;rb_main.c: 357: {
  1794                           ;rb_main.c: 359: if (diag_bite_count != (0))
  1795  003614  504C               	movf	main@diag_bite_count,w,c
  1796  003616  B4D8               	btfsc	status,2,c
  1797  003618  D003               	goto	l1981
  1798                           
  1799                           ;rb_main.c: 360: state = STANDBY;
  1800  00361A  0E04               	movlw	4
  1801  00361C  6E5A               	movwf	_state,c
  1802  00361E  D000               	goto	l1981
  1803  003620                     l1981:
  1804                           
  1805                           ;rb_main.c: 361: }
  1806                           ;rb_main.c: 365: if (st_counter > (30000))
  1807  003620  0E31               	movlw	49
  1808  003622  5C55               	subwf	main@st_counter,w,c
  1809  003624  0E75               	movlw	117
  1810  003626  5856               	subwfb	main@st_counter+1,w,c
  1811  003628  A0D8               	btfss	status,0,c
  1812  00362A  D005               	goto	l1985
  1813                           
  1814                           ;rb_main.c: 366: {
  1815                           ;rb_main.c: 367: state = FAULT;
  1816  00362C  0E05               	movlw	5
  1817  00362E  6E5A               	movwf	_state,c
  1818                           
  1819                           ;rb_main.c: 368: fault_code = BITE_TIMEOUT;
  1820  003630  0E02               	movlw	2
  1821  003632  6E58               	movwf	_fault_code,c
  1822  003634  D000               	goto	l1985
  1823  003636                     l1985:
  1824                           
  1825                           ;rb_main.c: 369: }
  1826                           ;rb_main.c: 371: st_counter += 1;
  1827  003636  4A55               	infsnz	main@st_counter,f,c
  1828  003638  2A56               	incf	main@st_counter+1,f,c
  1829                           
  1830                           ;rb_main.c: 372: if (st_counter == 0)
  1831  00363A  5055               	movf	main@st_counter,w,c
  1832  00363C  1056               	iorwf	main@st_counter+1,w,c
  1833  00363E  A4D8               	btfss	status,2,c
  1834  003640  D004               	goto	l1991
  1835                           
  1836                           ;rb_main.c: 373: st_counter -= 1;
  1837  003642  0655               	decf	main@st_counter,f,c
  1838  003644  A0D8               	btfss	status,0,c
  1839  003646  0656               	decf	main@st_counter+1,f,c
  1840  003648  D000               	goto	l1991
  1841  00364A                     l1991:
  1842                           
  1843                           ;rb_main.c: 375: }
  1844                           ;rb_main.c: 382: if (PROVE == state)
  1845  00364A  045A               	decf	_state,w,c
  1846  00364C  A4D8               	btfss	status,2,c
  1847  00364E  D039               	goto	l2021
  1848                           
  1849                           ;rb_main.c: 383: {
  1850                           ;rb_main.c: 385: if (prev_state != PROVE)
  1851  003650  0459               	decf	_prev_state,w,c
  1852  003652  B4D8               	btfsc	status,2,c
  1853  003654  D004               	goto	l138
  1854                           
  1855                           ;rb_main.c: 386: st_counter = 0;
  1856  003656  0E00               	movlw	0
  1857  003658  6E56               	movwf	main@st_counter+1,c
  1858  00365A  0E00               	movlw	0
  1859  00365C  6E55               	movwf	main@st_counter,c
  1860  00365E                     l138:
  1861                           
  1862                           ;rb_main.c: 387: prev_state = PROVE;
  1863  00365E  0E01               	movlw	1
  1864  003660  6E59               	movwf	_prev_state,c
  1865                           
  1866                           ;rb_main.c: 390: led_color = (0x00f800f0);
  1867  003662  0EF0               	movlw	240
  1868  003664  6E48               	movwf	main@led_color,c
  1869  003666  0E00               	movlw	0
  1870  003668  6E49               	movwf	main@led_color+1,c
  1871  00366A  0EF8               	movlw	248
  1872  00366C  6E4A               	movwf	main@led_color+2,c
  1873  00366E  0E00               	movlw	0
  1874  003670  6E4B               	movwf	main@led_color+3,c
  1875                           
  1876                           ;rb_main.c: 393: PORTA &= ~(16);
  1877  003672  9880               	bcf	3968,4,c	;volatile
  1878                           
  1879                           ;rb_main.c: 396: PORTD &= ~(8);
  1880  003674  9683               	bcf	3971,3,c	;volatile
  1881                           
  1882                           ;rb_main.c: 399: PORTE |= (2);
  1883  003676  8284               	bsf	3972,1,c	;volatile
  1884                           
  1885                           ;rb_main.c: 402: PORTE &= ~(1);
  1886  003678  9084               	bcf	3972,0,c	;volatile
  1887                           
  1888                           ;rb_main.c: 404: if (st_counter >= (200))
  1889  00367A  5056               	movf	main@st_counter+1,w,c
  1890  00367C  E104               	bnz	u2140
  1891  00367E  0EC8               	movlw	200
  1892  003680  5C55               	subwf	main@st_counter,w,c
  1893  003682  A0D8               	btfss	status,0,c
  1894  003684  D014               	goto	l2015
  1895  003686                     u2140:
  1896                           
  1897                           ;rb_main.c: 405: {
  1898                           ;rb_main.c: 406: if ((meas_v24 < (158)) || (meas_v24 > (345)))
  1899  003686  5042               	movf	main@meas_v24+1,w,c
  1900  003688  E104               	bnz	u2150
  1901  00368A  0E9E               	movlw	158
  1902  00368C  5C41               	subwf	main@meas_v24,w,c
  1903  00368E  A0D8               	btfss	status,0,c
  1904  003690  D006               	goto	l2011
  1905  003692                     u2150:
  1906  003692  0E5A               	movlw	90
  1907  003694  5C41               	subwf	main@meas_v24,w,c
  1908  003696  0E01               	movlw	1
  1909  003698  5842               	subwfb	main@meas_v24+1,w,c
  1910  00369A  A0D8               	btfss	status,0,c
  1911  00369C  D005               	goto	l2013
  1912  00369E                     l2011:
  1913                           
  1914                           ;rb_main.c: 407: {
  1915                           ;rb_main.c: 408: state = FAULT;
  1916  00369E  0E05               	movlw	5
  1917  0036A0  6E5A               	movwf	_state,c
  1918                           
  1919                           ;rb_main.c: 409: fault_code = V24_FAULT;
  1920  0036A2  0E01               	movlw	1
  1921  0036A4  6E58               	movwf	_fault_code,c
  1922                           
  1923                           ;rb_main.c: 410: }
  1924  0036A6  D003               	goto	l2015
  1925  0036A8                     l2013:
  1926                           
  1927                           ;rb_main.c: 411: else
  1928                           ;rb_main.c: 412: state = WARMUP;
  1929  0036A8  0E02               	movlw	2
  1930  0036AA  6E5A               	movwf	_state,c
  1931  0036AC  D000               	goto	l2015
  1932  0036AE                     l2015:
  1933                           
  1934                           ;rb_main.c: 413: }
  1935                           ;rb_main.c: 415: st_counter += 1;
  1936  0036AE  4A55               	infsnz	main@st_counter,f,c
  1937  0036B0  2A56               	incf	main@st_counter+1,f,c
  1938                           
  1939                           ;rb_main.c: 416: if (st_counter == 0)
  1940  0036B2  5055               	movf	main@st_counter,w,c
  1941  0036B4  1056               	iorwf	main@st_counter+1,w,c
  1942  0036B6  A4D8               	btfss	status,2,c
  1943  0036B8  D004               	goto	l2021
  1944                           
  1945                           ;rb_main.c: 417: st_counter -= 1;
  1946  0036BA  0655               	decf	main@st_counter,f,c
  1947  0036BC  A0D8               	btfss	status,0,c
  1948  0036BE  0656               	decf	main@st_counter+1,f,c
  1949  0036C0  D000               	goto	l2021
  1950  0036C2                     l2021:
  1951                           
  1952                           ;rb_main.c: 418: }
  1953                           ;rb_main.c: 425: if (FAULT == state)
  1954  0036C2  0E05               	movlw	5
  1955  0036C4  185A               	xorwf	_state,w,c
  1956  0036C6  A4D8               	btfss	status,2,c
  1957  0036C8  D053               	goto	l145
  1958                           
  1959                           ;rb_main.c: 426: {
  1960                           ;rb_main.c: 428: if (prev_state != FAULT)
  1961  0036CA  0E05               	movlw	5
  1962  0036CC  1859               	xorwf	_prev_state,w,c
  1963  0036CE  B4D8               	btfsc	status,2,c
  1964  0036D0  D004               	goto	l146
  1965                           
  1966                           ;rb_main.c: 429: st_counter = 0;
  1967  0036D2  0E00               	movlw	0
  1968  0036D4  6E56               	movwf	main@st_counter+1,c
  1969  0036D6  0E00               	movlw	0
  1970  0036D8  6E55               	movwf	main@st_counter,c
  1971  0036DA                     l146:
  1972                           
  1973                           ;rb_main.c: 430: prev_state = FAULT;
  1974  0036DA  0E05               	movlw	5
  1975  0036DC  6E59               	movwf	_prev_state,c
  1976                           
  1977                           ;rb_main.c: 433: if (st_counter <= (200)/2)
  1978  0036DE  5056               	movf	main@st_counter+1,w,c
  1979  0036E0  E108               	bnz	l2031
  1980  0036E2  0E65               	movlw	101
  1981  0036E4  5C55               	subwf	main@st_counter,w,c
  1982  0036E6  B0D8               	btfsc	status,0,c
  1983  0036E8  D004               	goto	l2031
  1984                           
  1985                           ;rb_main.c: 434: led_color = (0x000000fc);
  1986  0036EA  0EFC               	movlw	252
  1987  0036EC  6E48               	movwf	main@led_color,c
  1988  0036EE  0E00               	movlw	0
  1989  0036F0  D028               	goto	L5
  1990  0036F2                     l2031:
  1991                           
  1992                           ;rb_main.c: 435: else {
  1993                           ;rb_main.c: 436: led_color = (0);
  1994  0036F2  0E00               	movlw	0
  1995  0036F4  6E48               	movwf	main@led_color,c
  1996  0036F6  0E00               	movlw	0
  1997  0036F8  6E49               	movwf	main@led_color+1,c
  1998  0036FA  0E00               	movlw	0
  1999  0036FC  6E4A               	movwf	main@led_color+2,c
  2000  0036FE  0E00               	movlw	0
  2001  003700  6E4B               	movwf	main@led_color+3,c
  2002                           
  2003                           ;rb_main.c: 437: if (fault_code == V24_FAULT)
  2004  003702  0458               	decf	_fault_code,w,c
  2005  003704  A4D8               	btfss	status,2,c
  2006  003706  D009               	goto	l2037
  2007                           
  2008                           ;rb_main.c: 438: led_color = (0x00f800f0);
  2009  003708  0EF0               	movlw	240
  2010  00370A  6E48               	movwf	main@led_color,c
  2011  00370C  0E00               	movlw	0
  2012  00370E  6E49               	movwf	main@led_color+1,c
  2013  003710  0EF8               	movlw	248
  2014  003712  6E4A               	movwf	main@led_color+2,c
  2015  003714  0E00               	movlw	0
  2016  003716  6E4B               	movwf	main@led_color+3,c
  2017  003718  D000               	goto	l2037
  2018  00371A                     l2037:
  2019                           
  2020                           ;rb_main.c: 439: if (fault_code == V24SW_FAULT)
  2021  00371A  0E03               	movlw	3
  2022  00371C  1858               	xorwf	_fault_code,w,c
  2023  00371E  A4D8               	btfss	status,2,c
  2024  003720  D009               	goto	l2041
  2025                           
  2026                           ;rb_main.c: 440: led_color = (0x00f800f0);
  2027  003722  0EF0               	movlw	240
  2028  003724  6E48               	movwf	main@led_color,c
  2029  003726  0E00               	movlw	0
  2030  003728  6E49               	movwf	main@led_color+1,c
  2031  00372A  0EF8               	movlw	248
  2032  00372C  6E4A               	movwf	main@led_color+2,c
  2033  00372E  0E00               	movlw	0
  2034  003730  6E4B               	movwf	main@led_color+3,c
  2035  003732  D000               	goto	l2041
  2036  003734                     l2041:
  2037                           
  2038                           ;rb_main.c: 441: if (fault_code == BITE_FAULT)
  2039  003734  0E04               	movlw	4
  2040  003736  1858               	xorwf	_fault_code,w,c
  2041  003738  A4D8               	btfss	status,2,c
  2042  00373A  D009               	goto	l2049
  2043                           
  2044                           ;rb_main.c: 442: led_color = (0x0000e8e8);
  2045  00373C  0EE8               	movlw	232
  2046  00373E  6E48               	movwf	main@led_color,c
  2047  003740  0EE8               	movlw	232
  2048  003742                     L5:
  2049  003742  6E49               	movwf	main@led_color+1,c
  2050  003744  0E00               	movlw	0
  2051  003746  6E4A               	movwf	main@led_color+2,c
  2052  003748  0E00               	movlw	0
  2053  00374A  6E4B               	movwf	main@led_color+3,c
  2054  00374C  D000               	goto	l2049
  2055  00374E                     l2049:
  2056                           
  2057                           ;rb_main.c: 447: }
  2058                           ;rb_main.c: 450: PORTA &= ~(16);
  2059  00374E  9880               	bcf	3968,4,c	;volatile
  2060                           
  2061                           ;rb_main.c: 453: PORTD &= ~(8);
  2062  003750  9683               	bcf	3971,3,c	;volatile
  2063                           
  2064                           ;rb_main.c: 456: PORTE |= (2);
  2065  003752  8284               	bsf	3972,1,c	;volatile
  2066                           
  2067                           ;rb_main.c: 459: PORTE &= ~(1);
  2068  003754  9084               	bcf	3972,0,c	;volatile
  2069                           
  2070                           ;rb_main.c: 461: st_counter += 1;
  2071  003756  4A55               	infsnz	main@st_counter,f,c
  2072  003758  2A56               	incf	main@st_counter+1,f,c
  2073                           
  2074                           ;rb_main.c: 462: if (st_counter >= (200))
  2075  00375A  5056               	movf	main@st_counter+1,w,c
  2076  00375C  E104               	bnz	u2240
  2077  00375E  0EC8               	movlw	200
  2078  003760  5C55               	subwf	main@st_counter,w,c
  2079  003762  A0D8               	btfss	status,0,c
  2080  003764  D005               	goto	l145
  2081  003766                     u2240:
  2082                           
  2083                           ;rb_main.c: 463: st_counter = 0;
  2084  003766  0E00               	movlw	0
  2085  003768  6E56               	movwf	main@st_counter+1,c
  2086  00376A  0E00               	movlw	0
  2087  00376C  6E55               	movwf	main@st_counter,c
  2088  00376E  D000               	goto	l145
  2089  003770                     l145:
  2090                           
  2091                           ;rb_main.c: 465: }
  2092                           ;rb_main.c: 468: if (RESET == state)
  2093  003770  505A               	movf	_state,w,c
  2094  003772  A4D8               	btfss	status,2,c
  2095  003774  D029               	goto	l2057
  2096                           
  2097                           ;rb_main.c: 469: {
  2098                           ;rb_main.c: 470: PORTA = (0);
  2099  003776  0E00               	movlw	0
  2100  003778  6E80               	movwf	3968,c	;volatile
  2101                           
  2102                           ;rb_main.c: 471: PORTB = (0);
  2103  00377A  0E00               	movlw	0
  2104  00377C  6E81               	movwf	3969,c	;volatile
  2105                           
  2106                           ;rb_main.c: 472: PORTC = (0);
  2107  00377E  0E00               	movlw	0
  2108  003780  6E82               	movwf	3970,c	;volatile
  2109                           
  2110                           ;rb_main.c: 473: PORTD = (0x07);
  2111  003782  0E07               	movlw	7
  2112  003784  6E83               	movwf	3971,c	;volatile
  2113                           
  2114                           ;rb_main.c: 474: PORTE = (0);
  2115  003786  0E00               	movlw	0
  2116  003788  6E84               	movwf	3972,c	;volatile
  2117                           
  2118                           ;rb_main.c: 476: run_counter = 0;
  2119  00378A  0E00               	movlw	0
  2120  00378C  6E3D               	movwf	main@run_counter,c
  2121  00378E  0E00               	movlw	0
  2122  003790  6E3E               	movwf	main@run_counter+1,c
  2123  003792  0E00               	movlw	0
  2124  003794  6E3F               	movwf	main@run_counter+2,c
  2125  003796  0E00               	movlw	0
  2126  003798  6E40               	movwf	main@run_counter+3,c
  2127                           
  2128                           ;rb_main.c: 478: sw_dist_count = (0);
  2129  00379A  0E00               	movlw	0
  2130  00379C  6E50               	movwf	main@sw_dist_count,c
  2131                           
  2132                           ;rb_main.c: 479: sw_cmos_count = (0);
  2133  00379E  0E00               	movlw	0
  2134  0037A0  6E51               	movwf	main@sw_cmos_count,c
  2135                           
  2136                           ;rb_main.c: 480: sw_comb_count = (0);
  2137  0037A2  0E00               	movlw	0
  2138  0037A4  6E52               	movwf	main@sw_comb_count,c
  2139                           
  2140                           ;rb_main.c: 481: sw_comb_ready = (0);
  2141  0037A6  0E00               	movlw	0
  2142  0037A8  6E45               	movwf	main@sw_comb_ready,c
  2143                           
  2144                           ;rb_main.c: 482: comb_rate = CGOFF;
  2145  0037AA  0E05               	movlw	5
  2146  0037AC  6E57               	movwf	_comb_rate,c
  2147                           
  2148                           ;rb_main.c: 484: prev_state = RESET;
  2149  0037AE  0E00               	movlw	0
  2150  0037B0  6E59               	movwf	_prev_state,c
  2151                           
  2152                           ;rb_main.c: 485: state = PROVE;
  2153  0037B2  0E01               	movlw	1
  2154  0037B4  6E5A               	movwf	_state,c
  2155                           
  2156                           ;rb_main.c: 487: led_color = (0);
  2157  0037B6  0E00               	movlw	0
  2158  0037B8  6E48               	movwf	main@led_color,c
  2159  0037BA  0E00               	movlw	0
  2160  0037BC  6E49               	movwf	main@led_color+1,c
  2161  0037BE  0E00               	movlw	0
  2162  0037C0  6E4A               	movwf	main@led_color+2,c
  2163  0037C2  0E00               	movlw	0
  2164  0037C4  6E4B               	movwf	main@led_color+3,c
  2165  0037C6  D000               	goto	l2057
  2166  0037C8                     l2057:
  2167                           
  2168                           ;rb_main.c: 488: }
  2169                           ;rb_main.c: 492: if (PORTA & (16))
  2170  0037C8  A880               	btfss	3968,4,c	;volatile
  2171  0037CA  D012               	goto	l156
  2172                           
  2173                           ;rb_main.c: 493: {
  2174                           ;rb_main.c: 494: run_counter += 1;
  2175  0037CC  0E01               	movlw	1
  2176  0037CE  263D               	addwf	main@run_counter,f,c
  2177  0037D0  0E00               	movlw	0
  2178  0037D2  223E               	addwfc	main@run_counter+1,f,c
  2179  0037D4  223F               	addwfc	main@run_counter+2,f,c
  2180  0037D6  2240               	addwfc	main@run_counter+3,f,c
  2181                           
  2182                           ;rb_main.c: 495: if (run_counter == 0)
  2183  0037D8  503D               	movf	main@run_counter,w,c
  2184  0037DA  103E               	iorwf	main@run_counter+1,w,c
  2185  0037DC  103F               	iorwf	main@run_counter+2,w,c
  2186  0037DE  1040               	iorwf	main@run_counter+3,w,c
  2187  0037E0  A4D8               	btfss	status,2,c
  2188  0037E2  D006               	goto	l156
  2189                           
  2190                           ;rb_main.c: 496: run_counter--;
  2191  0037E4  063D               	decf	main@run_counter,f,c
  2192  0037E6  0E00               	movlw	0
  2193  0037E8  5A3E               	subwfb	main@run_counter+1,f,c
  2194  0037EA  5A3F               	subwfb	main@run_counter+2,f,c
  2195  0037EC  5A40               	subwfb	main@run_counter+3,f,c
  2196  0037EE  D000               	goto	l156
  2197  0037F0                     l156:
  2198                           
  2199                           ;rb_main.c: 497: }
  2200                           ;rb_main.c: 500: PORTD ^= (16);
  2201  0037F0  0E10               	movlw	16
  2202  0037F2  1A83               	xorwf	3971,f,c	;volatile
  2203                           
  2204                           ;rb_main.c: 503: adc_init();
  2205  0037F4  ECEC  F016         	call	_adc_init	;wreg free
  2206                           
  2207                           ;rb_main.c: 507: meas_v24 = adc_measure((2));
  2208  0037F8  0E02               	movlw	2
  2209  0037FA  EC11  F017         	call	_adc_measure
  2210  0037FE  C001  F041         	movff	?_adc_measure,main@meas_v24
  2211  003802  C002  F042         	movff	?_adc_measure+1,main@meas_v24+1
  2212                           
  2213                           ;rb_main.c: 508: meas_v24sw = adc_measure((1));
  2214  003806  0E01               	movlw	1
  2215  003808  EC11  F017         	call	_adc_measure
  2216  00380C  C001  F04E         	movff	?_adc_measure,main@meas_v24sw
  2217  003810  C002  F04F         	movff	?_adc_measure+1,main@meas_v24sw+1
  2218                           
  2219                           ;rb_main.c: 509: meas_lampv = adc_measure((3));
  2220  003814  0E03               	movlw	3
  2221  003816  EC11  F017         	call	_adc_measure
  2222  00381A  C001  F046         	movff	?_adc_measure,main@meas_lampv
  2223  00381E  C002  F047         	movff	?_adc_measure+1,main@meas_lampv+1
  2224                           
  2225                           ;rb_main.c: 510: meas_caset = adc_measure((11));
  2226  003822  0E0B               	movlw	11
  2227  003824  EC11  F017         	call	_adc_measure
  2228  003828  C001  F043         	movff	?_adc_measure,main@meas_caset
  2229  00382C  C002  F044         	movff	?_adc_measure+1,main@meas_caset+1
  2230                           
  2231                           ;rb_main.c: 513: iter_counter += 1;
  2232  003830  4A53               	infsnz	main@iter_counter,f,c
  2233  003832  2A54               	incf	main@iter_counter+1,f,c
  2234                           
  2235                           ;rb_main.c: 514: if (iter_counter >= (100))
  2236  003834  5054               	movf	main@iter_counter+1,w,c
  2237  003836  E104               	bnz	u2280
  2238  003838  0E64               	movlw	100
  2239  00383A  5C53               	subwf	main@iter_counter,w,c
  2240  00383C  A0D8               	btfss	status,0,c
  2241  00383E  D005               	goto	l2079
  2242  003840                     u2280:
  2243                           
  2244                           ;rb_main.c: 515: iter_counter = 0;
  2245  003840  0E00               	movlw	0
  2246  003842  6E54               	movwf	main@iter_counter+1,c
  2247  003844  0E00               	movlw	0
  2248  003846  6E53               	movwf	main@iter_counter,c
  2249  003848  D000               	goto	l2079
  2250  00384A                     l2079:
  2251                           
  2252                           ;rb_main.c: 519: if (iter_counter == 0)
  2253  00384A  5053               	movf	main@iter_counter,w,c
  2254  00384C  1054               	iorwf	main@iter_counter+1,w,c
  2255  00384E  A4D8               	btfss	status,2,c
  2256  003850  D048               	goto	l2099
  2257                           
  2258                           ;rb_main.c: 520: {
  2259                           ;rb_main.c: 521: printf("\n\n\r>>>>>\r\nState (%u) ",state);
  2260  003852  0EAF               	movlw	low STR_1
  2261  003854  6E17               	movwf	printf@f,c
  2262  003856  0E3E               	movlw	high STR_1
  2263  003858  6E18               	movwf	printf@f+1,c
  2264  00385A  C05A  F019         	movff	_state,?_printf+2
  2265  00385E  6A1A               	clrf	?_printf+3,c
  2266  003860  EC09  F018         	call	_printf	;wreg free
  2267                           
  2268                           ;rb_main.c: 522: switch (state)
  2269  003864  D02A               	goto	l2097
  2270  003866                     l2083:
  2271  003866  0EE2               	movlw	low STR_2
  2272  003868  6E17               	movwf	printf@f,c
  2273  00386A  0E3F               	movlw	high STR_2
  2274  00386C  6E18               	movwf	printf@f+1,c
  2275  00386E  EC09  F018         	call	_printf	;wreg free
  2276                           
  2277                           ;rb_main.c: 525: break;
  2278  003872  D037               	goto	l2099
  2279  003874                     l2085:
  2280  003874  0EDC               	movlw	low STR_3
  2281  003876  6E17               	movwf	printf@f,c
  2282  003878  0E3F               	movlw	high STR_3
  2283  00387A  6E18               	movwf	printf@f+1,c
  2284  00387C  EC09  F018         	call	_printf	;wreg free
  2285                           
  2286                           ;rb_main.c: 527: break;
  2287  003880  D030               	goto	l2099
  2288  003882                     l2087:
  2289  003882  0EC7               	movlw	low STR_4
  2290  003884  6E17               	movwf	printf@f,c
  2291  003886  0E3F               	movlw	high STR_4
  2292  003888  6E18               	movwf	printf@f+1,c
  2293  00388A  EC09  F018         	call	_printf	;wreg free
  2294                           
  2295                           ;rb_main.c: 529: break;
  2296  00388E  D029               	goto	l2099
  2297  003890                     l2089:
  2298  003890  0EB7               	movlw	low STR_5
  2299  003892  6E17               	movwf	printf@f,c
  2300  003894  0E3F               	movlw	high STR_5
  2301  003896  6E18               	movwf	printf@f+1,c
  2302  003898  EC09  F018         	call	_printf	;wreg free
  2303                           
  2304                           ;rb_main.c: 531: break;
  2305  00389C  D022               	goto	l2099
  2306  00389E                     l2091:
  2307  00389E  0EBF               	movlw	low STR_6
  2308  0038A0  6E17               	movwf	printf@f,c
  2309  0038A2  0E3F               	movlw	high STR_6
  2310  0038A4  6E18               	movwf	printf@f+1,c
  2311  0038A6  EC09  F018         	call	_printf	;wreg free
  2312                           
  2313                           ;rb_main.c: 533: break;
  2314  0038AA  D01B               	goto	l2099
  2315  0038AC                     l2093:
  2316  0038AC  0EE8               	movlw	low STR_7
  2317  0038AE  6E17               	movwf	printf@f,c
  2318  0038B0  0E3F               	movlw	high STR_7
  2319  0038B2  6E18               	movwf	printf@f+1,c
  2320  0038B4  EC09  F018         	call	_printf	;wreg free
  2321                           
  2322                           ;rb_main.c: 536: }
  2323                           
  2324                           ;rb_main.c: 535: break;
  2325  0038B8  D014               	goto	l2099
  2326  0038BA                     l2097:
  2327  0038BA  505A               	movf	_state,w,c
  2328                           
  2329                           ; Switch size 1, requested type "space"
  2330                           ; Number of cases is 6, Range of values is 0 to 5
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte           19    10 (average)
  2334                           ;	Chosen strategy is simple_byte
  2335  0038BC  0A00               	xorlw	0	; case 0
  2336  0038BE  B4D8               	btfsc	status,2,c
  2337  0038C0  D7D2               	goto	l2083
  2338  0038C2  0A01               	xorlw	1	; case 1
  2339  0038C4  B4D8               	btfsc	status,2,c
  2340  0038C6  D7D6               	goto	l2085
  2341  0038C8  0A03               	xorlw	3	; case 2
  2342  0038CA  B4D8               	btfsc	status,2,c
  2343  0038CC  D7DA               	goto	l2087
  2344  0038CE  0A01               	xorlw	1	; case 3
  2345  0038D0  B4D8               	btfsc	status,2,c
  2346  0038D2  D7DE               	goto	l2089
  2347  0038D4  0A07               	xorlw	7	; case 4
  2348  0038D6  B4D8               	btfsc	status,2,c
  2349  0038D8  D7E2               	goto	l2091
  2350  0038DA  0A01               	xorlw	1	; case 5
  2351  0038DC  B4D8               	btfsc	status,2,c
  2352  0038DE  D7E6               	goto	l2093
  2353  0038E0  D000               	goto	l2099
  2354  0038E2                     l2099:
  2355                           
  2356                           ;rb_main.c: 537: }
  2357                           ;rb_main.c: 540: if (iter_counter == 1)
  2358  0038E2  0453               	decf	main@iter_counter,w,c
  2359  0038E4  1054               	iorwf	main@iter_counter+1,w,c
  2360  0038E6  A4D8               	btfss	status,2,c
  2361  0038E8  D037               	goto	l2107
  2362                           
  2363                           ;rb_main.c: 541: {
  2364                           ;rb_main.c: 542: printf("\r\nFirmware Version = %u.%u",1,0);
  2365  0038EA  0E7D               	movlw	low STR_8
  2366  0038EC  6E17               	movwf	printf@f,c
  2367  0038EE  0E3E               	movlw	high STR_8
  2368  0038F0  6E18               	movwf	printf@f+1,c
  2369  0038F2  0E00               	movlw	0
  2370  0038F4  6E1A               	movwf	?_printf+3,c
  2371  0038F6  0E01               	movlw	1
  2372  0038F8  6E19               	movwf	?_printf+2,c
  2373  0038FA  0E00               	movlw	0
  2374  0038FC  6E1C               	movwf	?_printf+5,c
  2375  0038FE  0E00               	movlw	0
  2376  003900  6E1B               	movwf	?_printf+4,c
  2377  003902  EC09  F018         	call	_printf	;wreg free
  2378                           
  2379                           ;rb_main.c: 543: printf("\r\nRB10 Uptime = %ld seconds",run_counter/(1000/(10)));
  2380  003906  C03D  F001         	movff	main@run_counter,___lldiv@dividend
  2381  00390A  C03E  F002         	movff	main@run_counter+1,___lldiv@dividend+1
  2382  00390E  C03F  F003         	movff	main@run_counter+2,___lldiv@dividend+2
  2383  003912  C040  F004         	movff	main@run_counter+3,___lldiv@dividend+3
  2384  003916  0E64               	movlw	100
  2385  003918  6E05               	movwf	___lldiv@divisor,c
  2386  00391A  0E00               	movlw	0
  2387  00391C  6E06               	movwf	___lldiv@divisor+1,c
  2388  00391E  0E00               	movlw	0
  2389  003920  6E07               	movwf	___lldiv@divisor+2,c
  2390  003922  0E00               	movlw	0
  2391  003924  6E08               	movwf	___lldiv@divisor+3,c
  2392  003926  ECC3  F017         	call	___lldiv	;wreg free
  2393  00392A  C001  F02D         	movff	?___lldiv,_main$780
  2394  00392E  C002  F02E         	movff	?___lldiv+1,_main$780+1
  2395  003932  C003  F02F         	movff	?___lldiv+2,_main$780+2
  2396  003936  C004  F030         	movff	?___lldiv+3,_main$780+3
  2397                           
  2398                           ;rb_main.c: 543: printf("\r\nRB10 Uptime = %ld seconds",run_counter/(1000/(10)));
  2399  00393A  0E46               	movlw	low STR_9
  2400  00393C  6E17               	movwf	printf@f,c
  2401  00393E  0E3E               	movlw	high STR_9
  2402  003940  6E18               	movwf	printf@f+1,c
  2403  003942  C02D  F019         	movff	_main$780,?_printf+2
  2404  003946  C02E  F01A         	movff	_main$780+1,?_printf+3
  2405  00394A  C02F  F01B         	movff	_main$780+2,?_printf+4
  2406  00394E  C030  F01C         	movff	_main$780+3,?_printf+5
  2407  003952  EC09  F018         	call	_printf	;wreg free
  2408  003956  D000               	goto	l2107
  2409  003958                     l2107:
  2410                           
  2411                           ;rb_main.c: 544: }
  2412                           ;rb_main.c: 547: if (iter_counter == 2)
  2413  003958  0E02               	movlw	2
  2414  00395A  1853               	xorwf	main@iter_counter,w,c
  2415  00395C  1054               	iorwf	main@iter_counter+1,w,c
  2416  00395E  A4D8               	btfss	status,2,c
  2417  003960  D055               	goto	l2125
  2418                           
  2419                           ;rb_main.c: 548: {
  2420                           ;rb_main.c: 551: unsigned int temp_int;
  2421                           ;rb_main.c: 552: temp_int = (meas_v24 + 2) << 5;
  2422  003962  C041  F029         	movff	main@meas_v24,??_main
  2423  003966  C042  F02A         	movff	main@meas_v24+1,??_main+1
  2424  00396A  0E05               	movlw	5
  2425  00396C                     u2325:
  2426  00396C  90D8               	bcf	status,0,c
  2427  00396E  3629               	rlcf	??_main,f,c
  2428  003970  362A               	rlcf	??_main+1,f,c
  2429  003972  2EE8               	decfsz	wreg,f,c
  2430  003974  D7FB               	goto	u2325
  2431  003976  0E40               	movlw	64
  2432  003978  2429               	addwf	??_main,w,c
  2433  00397A  6E39               	movwf	main@temp_int,c
  2434  00397C  0E00               	movlw	0
  2435  00397E  202A               	addwfc	??_main+1,w,c
  2436  003980  6E3A               	movwf	main@temp_int+1,c
  2437                           
  2438                           ;rb_main.c: 553: temp_int = temp_int / 149;
  2439  003982  C039  F001         	movff	main@temp_int,___lwdiv@dividend
  2440  003986  C03A  F002         	movff	main@temp_int+1,___lwdiv@dividend+1
  2441  00398A  0E00               	movlw	0
  2442  00398C  6E04               	movwf	___lwdiv@divisor+1,c
  2443  00398E  0E95               	movlw	149
  2444  003990  6E03               	movwf	___lwdiv@divisor,c
  2445  003992  EC5D  F017         	call	___lwdiv	;wreg free
  2446  003996  C001  F039         	movff	?___lwdiv,main@temp_int
  2447  00399A  C002  F03A         	movff	?___lwdiv+1,main@temp_int+1
  2448                           
  2449                           ;rb_main.c: 554: temp_int += 30;
  2450  00399E  0E1E               	movlw	30
  2451  0039A0  2639               	addwf	main@temp_int,f,c
  2452  0039A2  0E00               	movlw	0
  2453  0039A4  223A               	addwfc	main@temp_int+1,f,c
  2454                           
  2455                           ;rb_main.c: 555: printf("\r\nInput voltage = %u",temp_int >> 2);
  2456  0039A6  0EDA               	movlw	low STR_10
  2457  0039A8  6E17               	movwf	printf@f,c
  2458  0039AA  0E3E               	movlw	high STR_10
  2459  0039AC  6E18               	movwf	printf@f+1,c
  2460  0039AE  C039  F029         	movff	main@temp_int,??_main
  2461  0039B2  C03A  F02A         	movff	main@temp_int+1,??_main+1
  2462  0039B6  90D8               	bcf	status,0,c
  2463  0039B8  322A               	rrcf	??_main+1,f,c
  2464  0039BA  3229               	rrcf	??_main,f,c
  2465  0039BC  90D8               	bcf	status,0,c
  2466  0039BE  322A               	rrcf	??_main+1,f,c
  2467  0039C0  3229               	rrcf	??_main,f,c
  2468  0039C2  C029  F019         	movff	??_main,?_printf+2
  2469  0039C6  C02A  F01A         	movff	??_main+1,?_printf+3
  2470  0039CA  EC09  F018         	call	_printf	;wreg free
  2471                           
  2472                           ;rb_main.c: 556: if (temp_int & 3 == 0)
  2473  0039CE  D017               	goto	l2123
  2474                           
  2475                           ;rb_main.c: 557: printf(".00 VDC");
  2476  0039D0  0E97               	movlw	low STR_11
  2477  0039D2  6E17               	movwf	printf@f,c
  2478  0039D4  0E3F               	movlw	high STR_11
  2479  0039D6  6E18               	movwf	printf@f+1,c
  2480  0039D8  EC09  F018         	call	_printf	;wreg free
  2481  0039DC  D017               	goto	l2125
  2482                           
  2483                           ;rb_main.c: 558: else if (temp_int & 3 == 1)
  2484  0039DE  D00F               	goto	l2123
  2485                           
  2486                           ;rb_main.c: 559: printf(".25 VDC");
  2487  0039E0  0EA7               	movlw	low STR_12
  2488  0039E2  6E17               	movwf	printf@f,c
  2489  0039E4  0E3F               	movlw	high STR_12
  2490  0039E6  6E18               	movwf	printf@f+1,c
  2491  0039E8  EC09  F018         	call	_printf	;wreg free
  2492  0039EC  D00F               	goto	l2125
  2493                           
  2494                           ;rb_main.c: 560: else if (temp_int & 3 == 2)
  2495  0039EE  D007               	goto	l2123
  2496                           
  2497                           ;rb_main.c: 561: printf(".50 VDC");
  2498  0039F0  0E9F               	movlw	low STR_13
  2499  0039F2  6E17               	movwf	printf@f,c
  2500  0039F4  0E3F               	movlw	high STR_13
  2501  0039F6  6E18               	movwf	printf@f+1,c
  2502  0039F8  EC09  F018         	call	_printf	;wreg free
  2503  0039FC  D007               	goto	l2125
  2504  0039FE                     l2123:
  2505                           
  2506                           ;rb_main.c: 562: else printf(".75 VDC");
  2507  0039FE  0EAF               	movlw	low STR_14
  2508  003A00  6E17               	movwf	printf@f,c
  2509  003A02  0E3F               	movlw	high STR_14
  2510  003A04  6E18               	movwf	printf@f+1,c
  2511  003A06  EC09  F018         	call	_printf	;wreg free
  2512  003A0A  D000               	goto	l2125
  2513  003A0C                     l2125:
  2514                           
  2515                           ;rb_main.c: 563: }
  2516                           ;rb_main.c: 566: if (iter_counter == 3)
  2517  003A0C  0E03               	movlw	3
  2518  003A0E  1853               	xorwf	main@iter_counter,w,c
  2519  003A10  1054               	iorwf	main@iter_counter+1,w,c
  2520  003A12  A4D8               	btfss	status,2,c
  2521  003A14  D055               	goto	l2143
  2522                           
  2523                           ;rb_main.c: 567: {
  2524                           ;rb_main.c: 570: unsigned int temp_int;
  2525                           ;rb_main.c: 571: temp_int = (meas_v24sw + 2) << 5;
  2526  003A16  C04E  F029         	movff	main@meas_v24sw,??_main
  2527  003A1A  C04F  F02A         	movff	main@meas_v24sw+1,??_main+1
  2528  003A1E  0E05               	movlw	5
  2529  003A20                     u2345:
  2530  003A20  90D8               	bcf	status,0,c
  2531  003A22  3629               	rlcf	??_main,f,c
  2532  003A24  362A               	rlcf	??_main+1,f,c
  2533  003A26  2EE8               	decfsz	wreg,f,c
  2534  003A28  D7FB               	goto	u2345
  2535  003A2A  0E40               	movlw	64
  2536  003A2C  2429               	addwf	??_main,w,c
  2537  003A2E  6E3B               	movwf	main@temp_int_157,c
  2538  003A30  0E00               	movlw	0
  2539  003A32  202A               	addwfc	??_main+1,w,c
  2540  003A34  6E3C               	movwf	main@temp_int_157+1,c
  2541                           
  2542                           ;rb_main.c: 572: temp_int = temp_int / 149;
  2543  003A36  C03B  F001         	movff	main@temp_int_157,___lwdiv@dividend
  2544  003A3A  C03C  F002         	movff	main@temp_int_157+1,___lwdiv@dividend+1
  2545  003A3E  0E00               	movlw	0
  2546  003A40  6E04               	movwf	___lwdiv@divisor+1,c
  2547  003A42  0E95               	movlw	149
  2548  003A44  6E03               	movwf	___lwdiv@divisor,c
  2549  003A46  EC5D  F017         	call	___lwdiv	;wreg free
  2550  003A4A  C001  F03B         	movff	?___lwdiv,main@temp_int_157
  2551  003A4E  C002  F03C         	movff	?___lwdiv+1,main@temp_int_157+1
  2552                           
  2553                           ;rb_main.c: 573: temp_int += 30;
  2554  003A52  0E1E               	movlw	30
  2555  003A54  263B               	addwf	main@temp_int_157,f,c
  2556  003A56  0E00               	movlw	0
  2557  003A58  223C               	addwfc	main@temp_int_157+1,f,c
  2558                           
  2559                           ;rb_main.c: 574: printf("\r\nLPRO voltage = %u",temp_int >> 2);
  2560  003A5A  0E3F               	movlw	low STR_15
  2561  003A5C  6E17               	movwf	printf@f,c
  2562  003A5E  0E3F               	movlw	high STR_15
  2563  003A60  6E18               	movwf	printf@f+1,c
  2564  003A62  C03B  F029         	movff	main@temp_int_157,??_main
  2565  003A66  C03C  F02A         	movff	main@temp_int_157+1,??_main+1
  2566  003A6A  90D8               	bcf	status,0,c
  2567  003A6C  322A               	rrcf	??_main+1,f,c
  2568  003A6E  3229               	rrcf	??_main,f,c
  2569  003A70  90D8               	bcf	status,0,c
  2570  003A72  322A               	rrcf	??_main+1,f,c
  2571  003A74  3229               	rrcf	??_main,f,c
  2572  003A76  C029  F019         	movff	??_main,?_printf+2
  2573  003A7A  C02A  F01A         	movff	??_main+1,?_printf+3
  2574  003A7E  EC09  F018         	call	_printf	;wreg free
  2575                           
  2576                           ;rb_main.c: 575: if (temp_int & 3 == 0)
  2577  003A82  D017               	goto	l2141
  2578                           
  2579                           ;rb_main.c: 576: printf(".00 VDC");
  2580  003A84  0E97               	movlw	low STR_11
  2581  003A86  6E17               	movwf	printf@f,c
  2582  003A88  0E3F               	movlw	high STR_11
  2583  003A8A  6E18               	movwf	printf@f+1,c
  2584  003A8C  EC09  F018         	call	_printf	;wreg free
  2585  003A90  D017               	goto	l2143
  2586                           
  2587                           ;rb_main.c: 577: else if (temp_int & 3 == 1)
  2588  003A92  D00F               	goto	l2141
  2589                           
  2590                           ;rb_main.c: 578: printf(".25 VDC");
  2591  003A94  0EA7               	movlw	low STR_12
  2592  003A96  6E17               	movwf	printf@f,c
  2593  003A98  0E3F               	movlw	high STR_12
  2594  003A9A  6E18               	movwf	printf@f+1,c
  2595  003A9C  EC09  F018         	call	_printf	;wreg free
  2596  003AA0  D00F               	goto	l2143
  2597                           
  2598                           ;rb_main.c: 579: else if (temp_int & 3 == 2)
  2599  003AA2  D007               	goto	l2141
  2600                           
  2601                           ;rb_main.c: 580: printf(".50 VDC");
  2602  003AA4  0E9F               	movlw	low STR_13
  2603  003AA6  6E17               	movwf	printf@f,c
  2604  003AA8  0E3F               	movlw	high STR_13
  2605  003AAA  6E18               	movwf	printf@f+1,c
  2606  003AAC  EC09  F018         	call	_printf	;wreg free
  2607  003AB0  D007               	goto	l2143
  2608  003AB2                     l2141:
  2609                           
  2610                           ;rb_main.c: 581: else printf(".75 VDC");
  2611  003AB2  0EAF               	movlw	low STR_14
  2612  003AB4  6E17               	movwf	printf@f,c
  2613  003AB6  0E3F               	movlw	high STR_14
  2614  003AB8  6E18               	movwf	printf@f+1,c
  2615  003ABA  EC09  F018         	call	_printf	;wreg free
  2616  003ABE  D000               	goto	l2143
  2617  003AC0                     l2143:
  2618                           
  2619                           ;rb_main.c: 582: }
  2620                           ;rb_main.c: 585: if (iter_counter == 4)
  2621  003AC0  0E04               	movlw	4
  2622  003AC2  1853               	xorwf	main@iter_counter,w,c
  2623  003AC4  1054               	iorwf	main@iter_counter+1,w,c
  2624  003AC6  A4D8               	btfss	status,2,c
  2625  003AC8  D010               	goto	l2151
  2626                           
  2627                           ;rb_main.c: 586: {
  2628                           ;rb_main.c: 587: if ((PORTD & (8)) != 0)
  2629  003ACA  A683               	btfss	3971,3,c	;volatile
  2630  003ACC  D007               	goto	l2149
  2631                           
  2632                           ;rb_main.c: 588: printf("\r\n8V Supply rail ON");
  2633  003ACE  0E2B               	movlw	low STR_20
  2634  003AD0  6E17               	movwf	printf@f,c
  2635  003AD2  0E3F               	movlw	high STR_20
  2636  003AD4  6E18               	movwf	printf@f+1,c
  2637  003AD6  EC09  F018         	call	_printf	;wreg free
  2638  003ADA  D007               	goto	l2151
  2639  003ADC                     l2149:
  2640                           
  2641                           ;rb_main.c: 589: else
  2642                           ;rb_main.c: 590: printf("\r\n8V Supply rail OFF");
  2643  003ADC  0EC5               	movlw	low STR_21
  2644  003ADE  6E17               	movwf	printf@f,c
  2645  003AE0  0E3E               	movlw	high STR_21
  2646  003AE2  6E18               	movwf	printf@f+1,c
  2647  003AE4  EC09  F018         	call	_printf	;wreg free
  2648  003AE8  D000               	goto	l2151
  2649  003AEA                     l2151:
  2650                           
  2651                           ;rb_main.c: 591: }
  2652                           ;rb_main.c: 594: if (iter_counter == 5)
  2653  003AEA  0E05               	movlw	5
  2654  003AEC  1853               	xorwf	main@iter_counter,w,c
  2655  003AEE  1054               	iorwf	main@iter_counter+1,w,c
  2656  003AF0  A4D8               	btfss	status,2,c
  2657  003AF2  D048               	goto	l2165
  2658                           
  2659                           ;rb_main.c: 595: {
  2660                           ;rb_main.c: 598: unsigned int temp_int;
  2661                           ;rb_main.c: 599: temp_int = (meas_lampv + 20) >> 4;
  2662  003AF4  0E14               	movlw	20
  2663  003AF6  2446               	addwf	main@meas_lampv,w,c
  2664  003AF8  6E29               	movwf	??_main& (0+255),c
  2665  003AFA  0E00               	movlw	0
  2666  003AFC  2047               	addwfc	main@meas_lampv+1,w,c
  2667  003AFE  6E2A               	movwf	(??_main+1)& (0+255),c
  2668  003B00  0E04               	movlw	4
  2669  003B02  6E2B               	movwf	(??_main+2)& (0+255),c
  2670  003B04                     u2385:
  2671  003B04  90D8               	bcf	status,0,c
  2672  003B06  322A               	rrcf	??_main+1,f,c
  2673  003B08  3229               	rrcf	??_main,f,c
  2674  003B0A  2E2B               	decfsz	(??_main+2)& (0+255),f,c
  2675  003B0C  D7FB               	goto	u2385
  2676  003B0E  C029  F037         	movff	??_main,main@temp_int_165
  2677  003B12  C02A  F038         	movff	??_main+1,main@temp_int_165+1
  2678                           
  2679                           ;rb_main.c: 600: temp_int += 8;
  2680  003B16  0E08               	movlw	8
  2681  003B18  2637               	addwf	main@temp_int_165,f,c
  2682  003B1A  0E00               	movlw	0
  2683  003B1C  2238               	addwfc	main@temp_int_165+1,f,c
  2684                           
  2685                           ;rb_main.c: 601: printf("\r\nLamp voltage = %u",temp_int >> 2);
  2686  003B1E  0E53               	movlw	low STR_22
  2687  003B20  6E17               	movwf	printf@f,c
  2688  003B22  0E3F               	movlw	high STR_22
  2689  003B24  6E18               	movwf	printf@f+1,c
  2690  003B26  C037  F029         	movff	main@temp_int_165,??_main
  2691  003B2A  C038  F02A         	movff	main@temp_int_165+1,??_main+1
  2692  003B2E  90D8               	bcf	status,0,c
  2693  003B30  322A               	rrcf	??_main+1,f,c
  2694  003B32  3229               	rrcf	??_main,f,c
  2695  003B34  90D8               	bcf	status,0,c
  2696  003B36  322A               	rrcf	??_main+1,f,c
  2697  003B38  3229               	rrcf	??_main,f,c
  2698  003B3A  C029  F019         	movff	??_main,?_printf+2
  2699  003B3E  C02A  F01A         	movff	??_main+1,?_printf+3
  2700  003B42  EC09  F018         	call	_printf	;wreg free
  2701                           
  2702                           ;rb_main.c: 602: if (temp_int & 3 == 0)
  2703  003B46  D017               	goto	l2163
  2704                           
  2705                           ;rb_main.c: 603: printf(".00 VDC");
  2706  003B48  0E97               	movlw	low STR_11
  2707  003B4A  6E17               	movwf	printf@f,c
  2708  003B4C  0E3F               	movlw	high STR_11
  2709  003B4E  6E18               	movwf	printf@f+1,c
  2710  003B50  EC09  F018         	call	_printf	;wreg free
  2711  003B54  D017               	goto	l2165
  2712                           
  2713                           ;rb_main.c: 604: else if (temp_int & 3 == 1)
  2714  003B56  D00F               	goto	l2163
  2715                           
  2716                           ;rb_main.c: 605: printf(".25 VDC");
  2717  003B58  0EA7               	movlw	low STR_12
  2718  003B5A  6E17               	movwf	printf@f,c
  2719  003B5C  0E3F               	movlw	high STR_12
  2720  003B5E  6E18               	movwf	printf@f+1,c
  2721  003B60  EC09  F018         	call	_printf	;wreg free
  2722  003B64  D00F               	goto	l2165
  2723                           
  2724                           ;rb_main.c: 606: else if (temp_int & 3 == 2)
  2725  003B66  D007               	goto	l2163
  2726                           
  2727                           ;rb_main.c: 607: printf(".50 VDC");
  2728  003B68  0E9F               	movlw	low STR_13
  2729  003B6A  6E17               	movwf	printf@f,c
  2730  003B6C  0E3F               	movlw	high STR_13
  2731  003B6E  6E18               	movwf	printf@f+1,c
  2732  003B70  EC09  F018         	call	_printf	;wreg free
  2733  003B74  D007               	goto	l2165
  2734  003B76                     l2163:
  2735                           
  2736                           ;rb_main.c: 608: else printf(".75 VDC");
  2737  003B76  0EAF               	movlw	low STR_14
  2738  003B78  6E17               	movwf	printf@f,c
  2739  003B7A  0E3F               	movlw	high STR_14
  2740  003B7C  6E18               	movwf	printf@f+1,c
  2741  003B7E  EC09  F018         	call	_printf	;wreg free
  2742  003B82  D000               	goto	l2165
  2743  003B84                     l2165:
  2744                           
  2745                           ;rb_main.c: 609: }
  2746                           ;rb_main.c: 612: if (iter_counter == 6)
  2747  003B84  0E06               	movlw	6
  2748  003B86  1853               	xorwf	main@iter_counter,w,c
  2749  003B88  1054               	iorwf	main@iter_counter+1,w,c
  2750  003B8A  A4D8               	btfss	status,2,c
  2751  003B8C  D034               	goto	l2177
  2752                           
  2753                           ;rb_main.c: 613: {
  2754                           ;rb_main.c: 616: unsigned int temp_int;
  2755                           ;rb_main.c: 617: if ((meas_caset < 100) || (meas_caset > 400))
  2756  003B8E  5044               	movf	main@meas_caset+1,w,c
  2757  003B90  E104               	bnz	u2400
  2758  003B92  0E64               	movlw	100
  2759  003B94  5C43               	subwf	main@meas_caset,w,c
  2760  003B96  A0D8               	btfss	status,0,c
  2761  003B98  D006               	goto	l2171
  2762  003B9A                     u2400:
  2763  003B9A  0E91               	movlw	145
  2764  003B9C  5C43               	subwf	main@meas_caset,w,c
  2765  003B9E  0E01               	movlw	1
  2766  003BA0  5844               	subwfb	main@meas_caset+1,w,c
  2767  003BA2  A0D8               	btfss	status,0,c
  2768  003BA4  D007               	goto	l2173
  2769  003BA6                     l2171:
  2770                           
  2771                           ;rb_main.c: 618: {
  2772                           ;rb_main.c: 619: printf("\r\nTemp Sensor out-of-range");
  2773  003BA6  0E62               	movlw	low STR_27
  2774  003BA8  6E17               	movwf	printf@f,c
  2775  003BAA  0E3E               	movlw	high STR_27
  2776  003BAC  6E18               	movwf	printf@f+1,c
  2777  003BAE  EC09  F018         	call	_printf	;wreg free
  2778                           
  2779                           ;rb_main.c: 620: }
  2780  003BB2  D021               	goto	l2177
  2781  003BB4                     l2173:
  2782                           
  2783                           ;rb_main.c: 621: else
  2784                           ;rb_main.c: 622: {
  2785                           ;rb_main.c: 623: temp_int = (meas_caset - 80) / 4;
  2786  003BB4  0EB0               	movlw	176
  2787  003BB6  6E29               	movwf	??_main& (0+255),c
  2788  003BB8  0EFF               	movlw	255
  2789  003BBA  6E2A               	movwf	(??_main+1)& (0+255),c
  2790  003BBC  C043  F02B         	movff	main@meas_caset,??_main+2
  2791  003BC0  C044  F02C         	movff	main@meas_caset+1,??_main+3
  2792  003BC4  5029               	movf	??_main,w,c
  2793  003BC6  262B               	addwf	??_main+2,f,c
  2794  003BC8  502A               	movf	??_main+1,w,c
  2795  003BCA  222C               	addwfc	??_main+3,f,c
  2796  003BCC  90D8               	bcf	status,0,c
  2797  003BCE  322C               	rrcf	??_main+3,f,c
  2798  003BD0  322B               	rrcf	??_main+2,f,c
  2799  003BD2  90D8               	bcf	status,0,c
  2800  003BD4  322C               	rrcf	??_main+3,f,c
  2801  003BD6  322B               	rrcf	??_main+2,f,c
  2802  003BD8  C02B  F031         	movff	??_main+2,main@temp_int_171
  2803  003BDC  C02C  F032         	movff	??_main+3,main@temp_int_171+1
  2804                           
  2805                           ;rb_main.c: 624: printf("\r\nLPRO Case temperature = %u C",temp_int);
  2806  003BE0  0E27               	movlw	low STR_28
  2807  003BE2  6E17               	movwf	printf@f,c
  2808  003BE4  0E3E               	movlw	high STR_28
  2809  003BE6  6E18               	movwf	printf@f+1,c
  2810  003BE8  C031  F019         	movff	main@temp_int_171,?_printf+2
  2811  003BEC  C032  F01A         	movff	main@temp_int_171+1,?_printf+3
  2812  003BF0  EC09  F018         	call	_printf	;wreg free
  2813  003BF4  D000               	goto	l2177
  2814  003BF6                     l2177:
  2815                           
  2816                           ;rb_main.c: 625: }
  2817                           ;rb_main.c: 626: }
  2818                           ;rb_main.c: 629: if (iter_counter == 7)
  2819  003BF6  0E07               	movlw	7
  2820  003BF8  1853               	xorwf	main@iter_counter,w,c
  2821  003BFA  1054               	iorwf	main@iter_counter+1,w,c
  2822  003BFC  A4D8               	btfss	status,2,c
  2823  003BFE  D010               	goto	l2185
  2824                           
  2825                           ;rb_main.c: 630: {
  2826                           ;rb_main.c: 631: if ((PORTE & (1)) != 0)
  2827  003C00  A084               	btfss	3972,0,c	;volatile
  2828  003C02  D007               	goto	l2183
  2829                           
  2830                           ;rb_main.c: 632: printf("\r\nCMOS ON");
  2831  003C04  0E8D               	movlw	low STR_29
  2832  003C06  6E17               	movwf	printf@f,c
  2833  003C08  0E3F               	movlw	high STR_29
  2834  003C0A  6E18               	movwf	printf@f+1,c
  2835  003C0C  EC09  F018         	call	_printf	;wreg free
  2836  003C10  D007               	goto	l2185
  2837  003C12                     l2183:
  2838                           
  2839                           ;rb_main.c: 633: else
  2840                           ;rb_main.c: 634: printf("\r\nCMOS OFF");
  2841  003C12  0E82               	movlw	low STR_30
  2842  003C14  6E17               	movwf	printf@f,c
  2843  003C16  0E3F               	movlw	high STR_30
  2844  003C18  6E18               	movwf	printf@f+1,c
  2845  003C1A  EC09  F018         	call	_printf	;wreg free
  2846  003C1E  D000               	goto	l2185
  2847  003C20                     l2185:
  2848                           
  2849                           ;rb_main.c: 635: }
  2850                           ;rb_main.c: 638: if (iter_counter == 8)
  2851  003C20  0E08               	movlw	8
  2852  003C22  1853               	xorwf	main@iter_counter,w,c
  2853  003C24  1054               	iorwf	main@iter_counter+1,w,c
  2854  003C26  A4D8               	btfss	status,2,c
  2855  003C28  D010               	goto	l2193
  2856                           
  2857                           ;rb_main.c: 639: {
  2858                           ;rb_main.c: 640: if ((PORTE & (2)) != 0)
  2859  003C2A  A284               	btfss	3972,1,c	;volatile
  2860  003C2C  D007               	goto	l2191
  2861                           
  2862                           ;rb_main.c: 641: printf("\r\nDivider OFF");
  2863  003C2E  0E67               	movlw	low STR_31
  2864  003C30  6E17               	movwf	printf@f,c
  2865  003C32  0E3F               	movlw	high STR_31
  2866  003C34  6E18               	movwf	printf@f+1,c
  2867  003C36  EC09  F018         	call	_printf	;wreg free
  2868  003C3A  D007               	goto	l2193
  2869  003C3C                     l2191:
  2870                           
  2871                           ;rb_main.c: 642: else
  2872                           ;rb_main.c: 643: printf("\r\nDivider ON");
  2873  003C3C  0E75               	movlw	low STR_32
  2874  003C3E  6E17               	movwf	printf@f,c
  2875  003C40  0E3F               	movlw	high STR_32
  2876  003C42  6E18               	movwf	printf@f+1,c
  2877  003C44  EC09  F018         	call	_printf	;wreg free
  2878  003C48  D000               	goto	l2193
  2879  003C4A                     l2193:
  2880                           
  2881                           ;rb_main.c: 644: }
  2882                           ;rb_main.c: 647: if (iter_counter == 9)
  2883  003C4A  0E09               	movlw	9
  2884  003C4C  1853               	xorwf	main@iter_counter,w,c
  2885  003C4E  1054               	iorwf	main@iter_counter+1,w,c
  2886  003C50  A4D8               	btfss	status,2,c
  2887  003C52  D045               	goto	l2213
  2888                           
  2889                           ;rb_main.c: 648: {
  2890                           ;rb_main.c: 649: printf("\r\nComb generator rate ");
  2891  003C54  0E98               	movlw	low STR_33
  2892  003C56  6E17               	movwf	printf@f,c
  2893  003C58  0E3E               	movlw	high STR_33
  2894  003C5A  6E18               	movwf	printf@f+1,c
  2895  003C5C  EC09  F018         	call	_printf	;wreg free
  2896                           
  2897                           ;rb_main.c: 650: switch (comb_rate)
  2898  003C60  D02A               	goto	l2211
  2899  003C62                     l2197:
  2900  003C62  0E89               	movlw	low (STR_30+7)
  2901  003C64  6E17               	movwf	printf@f,c
  2902  003C66  0E3F               	movlw	high (STR_30+7)
  2903  003C68  6E18               	movwf	printf@f+1,c
  2904  003C6A  EC09  F018         	call	_printf	;wreg free
  2905                           
  2906                           ;rb_main.c: 653: break;
  2907  003C6E  D037               	goto	l2213
  2908  003C70                     l2199:
  2909  003C70  0EEE               	movlw	low STR_35
  2910  003C72  6E17               	movwf	printf@f,c
  2911  003C74  0E3F               	movlw	high STR_35
  2912  003C76  6E18               	movwf	printf@f+1,c
  2913  003C78  EC09  F018         	call	_printf	;wreg free
  2914                           
  2915                           ;rb_main.c: 655: break;
  2916  003C7C  D030               	goto	l2213
  2917  003C7E                     l2201:
  2918  003C7E  0EF9               	movlw	low STR_36
  2919  003C80  6E17               	movwf	printf@f,c
  2920  003C82  0E3F               	movlw	high STR_36
  2921  003C84  6E18               	movwf	printf@f+1,c
  2922  003C86  EC09  F018         	call	_printf	;wreg free
  2923                           
  2924                           ;rb_main.c: 657: break;
  2925  003C8A  D029               	goto	l2213
  2926  003C8C                     l2203:
  2927  003C8C  0EF4               	movlw	low STR_37
  2928  003C8E  6E17               	movwf	printf@f,c
  2929  003C90  0E3F               	movlw	high STR_37
  2930  003C92  6E18               	movwf	printf@f+1,c
  2931  003C94  EC09  F018         	call	_printf	;wreg free
  2932                           
  2933                           ;rb_main.c: 659: break;
  2934  003C98  D022               	goto	l2213
  2935  003C9A                     l2205:
  2936  003C9A  0ED5               	movlw	low STR_38
  2937  003C9C  6E17               	movwf	printf@f,c
  2938  003C9E  0E3F               	movlw	high STR_38
  2939  003CA0  6E18               	movwf	printf@f+1,c
  2940  003CA2  EC09  F018         	call	_printf	;wreg free
  2941                           
  2942                           ;rb_main.c: 661: break;
  2943  003CA6  D01B               	goto	l2213
  2944  003CA8                     l2207:
  2945  003CA8  0ECE               	movlw	low STR_39
  2946  003CAA  6E17               	movwf	printf@f,c
  2947  003CAC  0E3F               	movlw	high STR_39
  2948  003CAE  6E18               	movwf	printf@f+1,c
  2949  003CB0  EC09  F018         	call	_printf	;wreg free
  2950                           
  2951                           ;rb_main.c: 664: }
  2952                           
  2953                           ;rb_main.c: 663: break;
  2954  003CB4  D014               	goto	l2213
  2955  003CB6                     l2211:
  2956  003CB6  5057               	movf	_comb_rate,w,c
  2957                           
  2958                           ; Switch size 1, requested type "space"
  2959                           ; Number of cases is 6, Range of values is 0 to 5
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte           19    10 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964  003CB8  0A00               	xorlw	0	; case 0
  2965  003CBA  B4D8               	btfsc	status,2,c
  2966  003CBC  D7D9               	goto	l2199
  2967  003CBE  0A01               	xorlw	1	; case 1
  2968  003CC0  B4D8               	btfsc	status,2,c
  2969  003CC2  D7DD               	goto	l2201
  2970  003CC4  0A03               	xorlw	3	; case 2
  2971  003CC6  B4D8               	btfsc	status,2,c
  2972  003CC8  D7E1               	goto	l2203
  2973  003CCA  0A01               	xorlw	1	; case 3
  2974  003CCC  B4D8               	btfsc	status,2,c
  2975  003CCE  D7E5               	goto	l2205
  2976  003CD0  0A07               	xorlw	7	; case 4
  2977  003CD2  B4D8               	btfsc	status,2,c
  2978  003CD4  D7E9               	goto	l2207
  2979  003CD6  0A01               	xorlw	1	; case 5
  2980  003CD8  B4D8               	btfsc	status,2,c
  2981  003CDA  D7C3               	goto	l2197
  2982  003CDC  D000               	goto	l2213
  2983  003CDE                     l2213:
  2984                           
  2985                           ;rb_main.c: 665: }
  2986                           ;rb_main.c: 668: if (iter_counter == 10)
  2987  003CDE  0E0A               	movlw	10
  2988  003CE0  1853               	xorwf	main@iter_counter,w,c
  2989  003CE2  1054               	iorwf	main@iter_counter+1,w,c
  2990  003CE4  A4D8               	btfss	status,2,c
  2991  003CE6  D01D               	goto	l2225
  2992                           
  2993                           ;rb_main.c: 669: {
  2994                           ;rb_main.c: 670: printf("\r\nDIST switch (%u) ", (unsigned int) sw_dist_count);
  2995  003CE8  0E17               	movlw	low STR_40
  2996  003CEA  6E17               	movwf	printf@f,c
  2997  003CEC  0E3F               	movlw	high STR_40
  2998  003CEE  6E18               	movwf	printf@f+1,c
  2999  003CF0  C050  F019         	movff	main@sw_dist_count,?_printf+2
  3000  003CF4  6A1A               	clrf	?_printf+3,c
  3001  003CF6  EC09  F018         	call	_printf	;wreg free
  3002                           
  3003                           ;rb_main.c: 671: if (sw_dist_count >= (7))
  3004  003CFA  0E06               	movlw	6
  3005  003CFC  6450               	cpfsgt	main@sw_dist_count,c
  3006  003CFE  D007               	goto	l2221
  3007                           
  3008                           ;rb_main.c: 672: printf("ON");
  3009  003D00  0E94               	movlw	low (STR_29+7)
  3010  003D02  6E17               	movwf	printf@f,c
  3011  003D04  0E3F               	movlw	high (STR_29+7)
  3012  003D06  6E18               	movwf	printf@f+1,c
  3013  003D08  EC09  F018         	call	_printf	;wreg free
  3014  003D0C  D00A               	goto	l2225
  3015  003D0E                     l2221:
  3016                           
  3017                           ;rb_main.c: 673: else if (sw_dist_count == (0))
  3018  003D0E  5050               	movf	main@sw_dist_count,w,c
  3019  003D10  A4D8               	btfss	status,2,c
  3020  003D12  D007               	goto	l2225
  3021                           
  3022                           ;rb_main.c: 674: printf("OFF");
  3023  003D14  0E89               	movlw	low (STR_30+7)
  3024  003D16  6E17               	movwf	printf@f,c
  3025  003D18  0E3F               	movlw	high (STR_30+7)
  3026  003D1A  6E18               	movwf	printf@f+1,c
  3027  003D1C  EC09  F018         	call	_printf	;wreg free
  3028  003D20  D000               	goto	l2225
  3029  003D22                     l2225:
  3030                           
  3031                           ;rb_main.c: 675: }
  3032                           ;rb_main.c: 678: if (iter_counter == 11)
  3033  003D22  0E0B               	movlw	11
  3034  003D24  1853               	xorwf	main@iter_counter,w,c
  3035  003D26  1054               	iorwf	main@iter_counter+1,w,c
  3036  003D28  A4D8               	btfss	status,2,c
  3037  003D2A  D01D               	goto	l2237
  3038                           
  3039                           ;rb_main.c: 679: {
  3040                           ;rb_main.c: 680: printf("\r\nCMOS switch (%u) ", (unsigned int) sw_cmos_count);
  3041  003D2C  0E03               	movlw	low STR_43
  3042  003D2E  6E17               	movwf	printf@f,c
  3043  003D30  0E3F               	movlw	high STR_43
  3044  003D32  6E18               	movwf	printf@f+1,c
  3045  003D34  C051  F019         	movff	main@sw_cmos_count,?_printf+2
  3046  003D38  6A1A               	clrf	?_printf+3,c
  3047  003D3A  EC09  F018         	call	_printf	;wreg free
  3048                           
  3049                           ;rb_main.c: 681: if (sw_cmos_count >= (7))
  3050  003D3E  0E06               	movlw	6
  3051  003D40  6451               	cpfsgt	main@sw_cmos_count,c
  3052  003D42  D007               	goto	l2233
  3053                           
  3054                           ;rb_main.c: 682: printf("ON");
  3055  003D44  0E94               	movlw	low (STR_29+7)
  3056  003D46  6E17               	movwf	printf@f,c
  3057  003D48  0E3F               	movlw	high (STR_29+7)
  3058  003D4A  6E18               	movwf	printf@f+1,c
  3059  003D4C  EC09  F018         	call	_printf	;wreg free
  3060  003D50  D00A               	goto	l2237
  3061  003D52                     l2233:
  3062                           
  3063                           ;rb_main.c: 683: else if (sw_cmos_count == (0))
  3064  003D52  5051               	movf	main@sw_cmos_count,w,c
  3065  003D54  A4D8               	btfss	status,2,c
  3066  003D56  D007               	goto	l2237
  3067                           
  3068                           ;rb_main.c: 684: printf("OFF");
  3069  003D58  0E89               	movlw	low (STR_30+7)
  3070  003D5A  6E17               	movwf	printf@f,c
  3071  003D5C  0E3F               	movlw	high (STR_30+7)
  3072  003D5E  6E18               	movwf	printf@f+1,c
  3073  003D60  EC09  F018         	call	_printf	;wreg free
  3074  003D64  D000               	goto	l2237
  3075  003D66                     l2237:
  3076                           
  3077                           ;rb_main.c: 685: }
  3078                           ;rb_main.c: 688: if (iter_counter == 12)
  3079  003D66  0E0C               	movlw	12
  3080  003D68  1853               	xorwf	main@iter_counter,w,c
  3081  003D6A  1054               	iorwf	main@iter_counter+1,w,c
  3082  003D6C  A4D8               	btfss	status,2,c
  3083  003D6E  D01D               	goto	l2249
  3084                           
  3085                           ;rb_main.c: 689: {
  3086                           ;rb_main.c: 690: printf("\r\nCOMB switch (%u) ", (unsigned int) sw_comb_count);
  3087  003D70  0EEF               	movlw	low STR_46
  3088  003D72  6E17               	movwf	printf@f,c
  3089  003D74  0E3E               	movlw	high STR_46
  3090  003D76  6E18               	movwf	printf@f+1,c
  3091  003D78  C052  F019         	movff	main@sw_comb_count,?_printf+2
  3092  003D7C  6A1A               	clrf	?_printf+3,c
  3093  003D7E  EC09  F018         	call	_printf	;wreg free
  3094                           
  3095                           ;rb_main.c: 691: if (sw_comb_count >= (7))
  3096  003D82  0E06               	movlw	6
  3097  003D84  6452               	cpfsgt	main@sw_comb_count,c
  3098  003D86  D007               	goto	l2245
  3099                           
  3100                           ;rb_main.c: 692: printf("ON");
  3101  003D88  0E94               	movlw	low (STR_29+7)
  3102  003D8A  6E17               	movwf	printf@f,c
  3103  003D8C  0E3F               	movlw	high (STR_29+7)
  3104  003D8E  6E18               	movwf	printf@f+1,c
  3105  003D90  EC09  F018         	call	_printf	;wreg free
  3106  003D94  D00A               	goto	l2249
  3107  003D96                     l2245:
  3108                           
  3109                           ;rb_main.c: 693: else if (sw_comb_count == (0))
  3110  003D96  5052               	movf	main@sw_comb_count,w,c
  3111  003D98  A4D8               	btfss	status,2,c
  3112  003D9A  D007               	goto	l2249
  3113                           
  3114                           ;rb_main.c: 694: printf("OFF");
  3115  003D9C  0E89               	movlw	low (STR_30+7)
  3116  003D9E  6E17               	movwf	printf@f,c
  3117  003DA0  0E3F               	movlw	high (STR_30+7)
  3118  003DA2  6E18               	movwf	printf@f+1,c
  3119  003DA4  EC09  F018         	call	_printf	;wreg free
  3120  003DA8  D000               	goto	l2249
  3121  003DAA                     l2249:
  3122                           
  3123                           ;rb_main.c: 695: }
  3124                           ;rb_main.c: 702: if (prev_color != led_color)
  3125  003DAA  5048               	movf	main@led_color,w,c
  3126  003DAC  1833               	xorwf	main@prev_color,w,c
  3127  003DAE  E10A               	bnz	u2560
  3128  003DB0  5049               	movf	main@led_color+1,w,c
  3129  003DB2  1834               	xorwf	main@prev_color+1,w,c
  3130  003DB4  E107               	bnz	u2560
  3131  003DB6  504A               	movf	main@led_color+2,w,c
  3132  003DB8  1835               	xorwf	main@prev_color+2,w,c
  3133  003DBA  E104               	bnz	u2560
  3134  003DBC  504B               	movf	main@led_color+3,w,c
  3135  003DBE  1836               	xorwf	main@prev_color+3,w,c
  3136  003DC0  B4D8               	btfsc	status,2,c
  3137  003DC2  D015               	goto	l226
  3138  003DC4                     u2560:
  3139                           
  3140                           ;rb_main.c: 703: {
  3141                           ;rb_main.c: 705: OSCTUNEbits.PLLEN = 1;
  3142  003DC4  8C9B               	bsf	3995,6,c	;volatile
  3143                           
  3144                           ;rb_main.c: 707: ws2812_send(led_color);
  3145  003DC6  C048  F001         	movff	main@led_color,ws2812_send@led
  3146  003DCA  C049  F002         	movff	main@led_color+1,ws2812_send@led+1
  3147  003DCE  C04A  F003         	movff	main@led_color+2,ws2812_send@led+2
  3148  003DD2  C04B  F004         	movff	main@led_color+3,ws2812_send@led+3
  3149  003DD6  EC31  F017         	call	_ws2812_send	;wreg free
  3150                           
  3151                           ;rb_main.c: 710: OSCTUNEbits.PLLEN = 0;
  3152  003DDA  9C9B               	bcf	3995,6,c	;volatile
  3153                           
  3154                           ;rb_main.c: 711: prev_color = led_color;
  3155  003DDC  C048  F033         	movff	main@led_color,main@prev_color
  3156  003DE0  C049  F034         	movff	main@led_color+1,main@prev_color+1
  3157  003DE4  C04A  F035         	movff	main@led_color+2,main@prev_color+2
  3158  003DE8  C04B  F036         	movff	main@led_color+3,main@prev_color+3
  3159                           
  3160                           ;rb_main.c: 712: }
  3161                           ;rb_main.c: 715: while (TMR0IF == 0);
  3162  003DEC  D000               	goto	l226
  3163  003DEE                     l226:
  3164  003DEE  B4F2               	btfsc	intcon,2,c	;volatile
  3165  003DF0  EF5C  F019         	goto	l74
  3166  003DF4  D7FC               	goto	l226
  3167  003DF6  EF5C  F019         	goto	l74
  3168  003DFA  EF00  F000         	goto	start
  3169  003DFE                     __end_of_main:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           intcon	equ	0xFF2
  3173                           wreg	equ	0xFE8
  3174                           status	equ	0xFD8
  3175                           
  3176 ;; *************** function _ws2812_send *****************
  3177 ;; Defined at:
  3178 ;;		line 7 in file "ws2812.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  led             4    0[COMRAM] unsigned long 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  j               1    8[COMRAM] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3192 ;;      Params:         4       0       0       0
  3193 ;;      Locals:         1       0       0       0
  3194 ;;      Temps:          4       0       0       0
  3195 ;;      Totals:         9       0       0       0
  3196 ;;Total ram usage:        9 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text1
  3206  002E62                     __ptext1:
  3207                           	opt stack 0
  3208  002E62                     _ws2812_send:
  3209                           	opt stack 30
  3210                           
  3211                           ;ws2812.c: 9: unsigned char j;
  3212                           ;ws2812.c: 16: for(j = 0; j < 24; j++) {
  3213                           
  3214                           ;incstack = 0
  3215  002E62  0E00               	movlw	0
  3216  002E64  6E09               	movwf	ws2812_send@j,c
  3217  002E66                     l1733:
  3218  002E66  0E17               	movlw	23
  3219  002E68  6409               	cpfsgt	ws2812_send@j,c
  3220  002E6A  D001               	goto	l236
  3221  002E6C  D021               	goto	l1743
  3222  002E6E                     l236:
  3223                           
  3224                           ;ws2812.c: 20: if (led & 1 == 1) {
  3225  002E6E  A001               	btfss	ws2812_send@led,0,c
  3226  002E70  D005               	goto	l238
  3227  002E72  8482               	bsf	3970,2,c	;# 
  3228  002E74  F000               	nop		;# 
  3229  002E76  F000               	nop		;# 
  3230  002E78  F000               	nop		;# 
  3231  002E7A  D001               	goto	L6
  3232  002E7C                     l238:
  3233  002E7C  8482               	bsf	3970,2,c	;# 
  3234  002E7E                     L6:
  3235  002E7E  9482               	bcf	3970,2,c	;# 
  3236  002E80  D000               	goto	l1739
  3237  002E82                     l1739:
  3238                           
  3239                           ;ws2812.c: 35: }
  3240                           ;ws2812.c: 37: led = led >> 1;
  3241  002E82  C001  F005         	movff	ws2812_send@led,??_ws2812_send
  3242  002E86  C002  F006         	movff	ws2812_send@led+1,??_ws2812_send+1
  3243  002E8A  C003  F007         	movff	ws2812_send@led+2,??_ws2812_send+2
  3244  002E8E  C004  F008         	movff	ws2812_send@led+3,??_ws2812_send+3
  3245  002E92  90D8               	bcf	status,0,c
  3246  002E94  3208               	rrcf	??_ws2812_send+3,f,c
  3247  002E96  3207               	rrcf	??_ws2812_send+2,f,c
  3248  002E98  3206               	rrcf	??_ws2812_send+1,f,c
  3249  002E9A  3205               	rrcf	??_ws2812_send,f,c
  3250  002E9C  C005  F001         	movff	??_ws2812_send,ws2812_send@led
  3251  002EA0  C006  F002         	movff	??_ws2812_send+1,ws2812_send@led+1
  3252  002EA4  C007  F003         	movff	??_ws2812_send+2,ws2812_send@led+2
  3253  002EA8  C008  F004         	movff	??_ws2812_send+3,ws2812_send@led+3
  3254  002EAC  2A09               	incf	ws2812_send@j,f,c
  3255  002EAE  D7DB               	goto	l1733
  3256  002EB0                     l1743:
  3257                           
  3258                           ;ws2812.c: 38: }
  3259                           ;ws2812.c: 40: _delay((unsigned long)((50)*(64000000/4000000.0)));
  3260  002EB0  0EC8               	movlw	200
  3261  002EB2                     u2587:
  3262  002EB2  F000               	nop	
  3263  002EB4  2EE8               	decfsz	wreg,f,c
  3264  002EB6  D7FD               	goto	u2587
  3265  002EB8  0012               	return		;funcret
  3266  002EBA                     __end_of_ws2812_send:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           intcon	equ	0xFF2
  3270                           wreg	equ	0xFE8
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _usart1_init *****************
  3274 ;; Defined at:
  3275 ;;		line 9 in file "my_usart.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  brgval          2    0[COMRAM] unsigned int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3289 ;;      Params:         2       0       0       0
  3290 ;;      Locals:         0       0       0       0
  3291 ;;      Temps:          0       0       0       0
  3292 ;;      Totals:         2       0       0       0
  3293 ;;Total ram usage:        2 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text2
  3303  002E08                     __ptext2:
  3304                           	opt stack 0
  3305  002E08                     _usart1_init:
  3306                           	opt stack 30
  3307                           
  3308                           ;my_usart.c: 12: BAUDCON1 = 0b00001000;
  3309                           
  3310                           ;incstack = 0
  3311  002E08  0E08               	movlw	8
  3312  002E0A  6EB8               	movwf	4024,c	;volatile
  3313                           
  3314                           ;my_usart.c: 15: SPBRG1 = brgval & 0xff;
  3315  002E0C  C001  FFAF         	movff	usart1_init@brgval,4015	;volatile
  3316                           
  3317                           ;my_usart.c: 16: SPBRGH1 = brgval >> 8;
  3318  002E10  5002               	movf	usart1_init@brgval+1,w,c
  3319  002E12  6EB0               	movwf	4016,c	;volatile
  3320                           
  3321                           ;my_usart.c: 19: TRISC |= 0b11000000;
  3322  002E14  0EC0               	movlw	192
  3323  002E16  1294               	iorwf	3988,f,c	;volatile
  3324                           
  3325                           ;my_usart.c: 23: RCSTA1 = 0b10010000;
  3326  002E18  0E90               	movlw	144
  3327  002E1A  6EAB               	movwf	4011,c	;volatile
  3328                           
  3329                           ;my_usart.c: 27: TXSTA1 = 0b00100100;
  3330  002E1C  0E24               	movlw	36
  3331  002E1E  6EAC               	movwf	4012,c	;volatile
  3332  002E20  0012               	return		;funcret
  3333  002E22                     __end_of_usart1_init:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           intcon	equ	0xFF2
  3337                           wreg	equ	0xFE8
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _printf *****************
  3341 ;; Defined at:
  3342 ;;		line 464 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  f               2   22[COMRAM] PTR const unsigned char 
  3345 ;;		 -> STR_48(4), STR_47(3), STR_46(20), STR_45(4), 
  3346 ;;		 -> STR_44(3), STR_43(20), STR_42(4), STR_41(3), 
  3347 ;;		 -> STR_40(20), STR_39(7), STR_38(7), STR_37(5), 
  3348 ;;		 -> STR_36(5), STR_35(6), STR_34(4), STR_33(23), 
  3349 ;;		 -> STR_32(13), STR_31(14), STR_30(11), STR_29(10), 
  3350 ;;		 -> STR_28(31), STR_27(27), STR_26(8), STR_25(8), 
  3351 ;;		 -> STR_24(8), STR_23(8), STR_22(20), STR_21(21), 
  3352 ;;		 -> STR_20(20), STR_19(8), STR_18(8), STR_17(8), 
  3353 ;;		 -> STR_16(8), STR_15(20), STR_14(8), STR_13(8), 
  3354 ;;		 -> STR_12(8), STR_11(8), STR_10(21), STR_9(28), 
  3355 ;;		 -> STR_8(27), STR_7(6), STR_6(8), STR_5(8), 
  3356 ;;		 -> STR_4(7), STR_3(6), STR_2(6), STR_1(22), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  val             4   32[COMRAM] unsigned long 
  3359 ;;  tmpval          4    0        struct .
  3360 ;;  cp              3    0        PTR const unsigned char 
  3361 ;;  ap              2   36[COMRAM] PTR void [1]
  3362 ;;		 -> ?_printf(2), 
  3363 ;;  prec            2   30[COMRAM] int 
  3364 ;;  len             2    0        unsigned int 
  3365 ;;  c               1   39[COMRAM] char 
  3366 ;;  flag            1   38[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2   22[COMRAM] int 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3376 ;;      Params:         6       0       0       0
  3377 ;;      Locals:        10       0       0       0
  3378 ;;      Temps:          2       0       0       0
  3379 ;;      Totals:        18       0       0       0
  3380 ;;Total ram usage:       18 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    2
  3383 ;; This function calls:
  3384 ;;		___lldiv
  3385 ;;		___llmod
  3386 ;;		_putch
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text3
  3393  003012                     __ptext3:
  3394                           	opt stack 0
  3395  003012                     _printf:
  3396                           	opt stack 28
  3397                           
  3398                           ;doprnt.c: 466: va_list ap;
  3399                           ;doprnt.c: 499: signed char c;
  3400                           ;doprnt.c: 504: int prec;
  3401                           ;doprnt.c: 508: unsigned char flag;
  3402                           ;doprnt.c: 523: union {
  3403                           ;doprnt.c: 524: unsigned long vd;
  3404                           ;doprnt.c: 525: double integ;
  3405                           ;doprnt.c: 526: } tmpval;
  3406                           ;doprnt.c: 528: unsigned long val;
  3407                           ;doprnt.c: 529: unsigned len;
  3408                           ;doprnt.c: 530: const char * cp;
  3409                           ;doprnt.c: 533: *ap = __va_start();
  3410                           
  3411                           ;incstack = 0
  3412  003012  0E19               	movlw	low (?_printf+2)
  3413  003014  6E25               	movwf	printf@ap,c
  3414  003016  0E00               	movlw	high (?_printf+2)
  3415  003018  6E26               	movwf	printf@ap+1,c
  3416                           
  3417                           ;doprnt.c: 536: while(c = *f++) {
  3418  00301A  D0FB               	goto	l1729
  3419  00301C                     l1665:
  3420                           
  3421                           ;doprnt.c: 538: if(c != '%')
  3422  00301C  0E25               	movlw	37
  3423  00301E  1828               	xorwf	printf@c,w,c
  3424  003020  B4D8               	btfsc	status,2,c
  3425  003022  D004               	goto	l1669
  3426                           
  3427                           ;doprnt.c: 540: {
  3428                           ;doprnt.c: 541: (putch(c) );
  3429  003024  5028               	movf	printf@c,w,c
  3430  003026  ECE7  F016         	call	_putch
  3431                           
  3432                           ;doprnt.c: 542: continue;
  3433  00302A  D0F3               	goto	l1729
  3434  00302C                     l1669:
  3435                           
  3436                           ;doprnt.c: 543: }
  3437                           ;doprnt.c: 548: flag = 0;
  3438  00302C  0E00               	movlw	0
  3439  00302E  6E27               	movwf	printf@flag,c
  3440                           
  3441                           ;doprnt.c: 635: switch(c = *f++) {
  3442                           
  3443                           ;doprnt.c: 633: loop:
  3444  003030  D007               	goto	l1677
  3445                           
  3446                           ;doprnt.c: 638: goto alldone;
  3447                           
  3448                           ;doprnt.c: 637: case 0:
  3449  003032  0012               	return	
  3450  003034                     l1671:
  3451                           
  3452                           ;doprnt.c: 643: flag |= 0x10;
  3453  003034  8827               	bsf	printf@flag,4,c
  3454                           
  3455                           ;doprnt.c: 644: goto loop;
  3456  003036  D004               	goto	l1677
  3457                           
  3458                           ;doprnt.c: 698: case 'i':
  3459                           ;doprnt.c: 699: break;
  3460                           
  3461                           ;doprnt.c: 697: case 'd':
  3462  003038  D01D               	goto	l313
  3463                           
  3464                           ;doprnt.c: 813: continue;
  3465                           
  3466                           ;doprnt.c: 802: default:
  3467  00303A  D0EB               	goto	l1729
  3468  00303C                     l1673:
  3469                           
  3470                           ;doprnt.c: 818: flag |= 0x40;
  3471  00303C  8C27               	bsf	printf@flag,6,c
  3472                           
  3473                           ;doprnt.c: 822: }
  3474                           
  3475                           ;doprnt.c: 819: break;
  3476  00303E  D01A               	goto	l313
  3477  003040                     l1677:
  3478  003040  C017  FFF6         	movff	printf@f,tblptrl
  3479  003044  C018  FFF7         	movff	printf@f+1,tblptrh
  3480  003048  4A17               	infsnz	printf@f,f,c
  3481  00304A  2A18               	incf	printf@f+1,f,c
  3482  00304C                     	if	0	;tblptru may be non-zero
  3483  00304C                     	endif
  3484  00304C                     	if	0	;tblptru may be non-zero
  3485  00304C                     	endif
  3486  00304C  0008               	tblrd		*
  3487  00304E  CFF5 F028          	movff	tablat,printf@c
  3488  003052  5028               	movf	printf@c,w,c
  3489                           
  3490                           ; Switch size 1, requested type "space"
  3491                           ; Number of cases is 5, Range of values is 0 to 117
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte           16     9 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496  003054  0A00               	xorlw	0	; case 0
  3497  003056  B4D8               	btfsc	status,2,c
  3498  003058  0012               	return	
  3499  00305A  0A64               	xorlw	100	; case 100
  3500  00305C  B4D8               	btfsc	status,2,c
  3501  00305E  D00A               	goto	l313
  3502  003060  0A0D               	xorlw	13	; case 105
  3503  003062  B4D8               	btfsc	status,2,c
  3504  003064  D007               	goto	l313
  3505  003066  0A05               	xorlw	5	; case 108
  3506  003068  B4D8               	btfsc	status,2,c
  3507  00306A  D7E4               	goto	l1671
  3508  00306C  0A19               	xorlw	25	; case 117
  3509  00306E  B4D8               	btfsc	status,2,c
  3510  003070  D7E5               	goto	l1673
  3511  003072  D0CF               	goto	l1729
  3512  003074                     l313:
  3513                           
  3514                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3515  003074  BC27               	btfsc	printf@flag,6,c
  3516  003076  D02F               	goto	l316
  3517                           
  3518                           ;doprnt.c: 1253: {
  3519                           ;doprnt.c: 1255: if(flag & 0x10)
  3520  003078  A827               	btfss	printf@flag,4,c
  3521  00307A  D00E               	goto	l1685
  3522                           
  3523                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3524  00307C  C025  FFD9         	movff	printf@ap,fsr2l
  3525  003080  C026  FFDA         	movff	printf@ap+1,fsr2h
  3526  003084  CFDE F021          	movff	postinc2,printf@val
  3527  003088  CFDE F022          	movff	postinc2,printf@val+1
  3528  00308C  CFDE F023          	movff	postinc2,printf@val+2
  3529  003090  CFDE F024          	movff	postinc2,printf@val+3
  3530  003094  0E04               	movlw	4
  3531  003096  D00E               	goto	L7
  3532  003098                     l1685:
  3533                           
  3534                           ;doprnt.c: 1257: else
  3535                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3536  003098  C025  FFD9         	movff	printf@ap,fsr2l
  3537  00309C  C026  FFDA         	movff	printf@ap+1,fsr2h
  3538  0030A0  CFDE F021          	movff	postinc2,printf@val
  3539  0030A4  CFDD F022          	movff	postdec2,printf@val+1
  3540  0030A8  0E00               	movlw	0
  3541  0030AA  BE22               	btfsc	printf@val+1,7,c
  3542  0030AC  0EFF               	movlw	-1
  3543  0030AE  6E23               	movwf	printf@val+2,c
  3544  0030B0  6E24               	movwf	printf@val+3,c
  3545  0030B2  0E02               	movlw	2
  3546  0030B4                     L7:
  3547  0030B4  2625               	addwf	printf@ap,f,c
  3548  0030B6  0E00               	movlw	0
  3549  0030B8  2226               	addwfc	printf@ap+1,f,c
  3550  0030BA  D000               	goto	l1689
  3551  0030BC                     l1689:
  3552                           
  3553                           ;doprnt.c: 1261: if((long)val < 0) {
  3554  0030BC  AE24               	btfss	printf@val+3,7,c
  3555  0030BE  D02E               	goto	l1703
  3556                           
  3557                           ;doprnt.c: 1262: flag |= 0x03;
  3558  0030C0  0E03               	movlw	3
  3559  0030C2  1227               	iorwf	printf@flag,f,c
  3560                           
  3561                           ;doprnt.c: 1263: val = -val;
  3562  0030C4  1E24               	comf	printf@val+3,f,c
  3563  0030C6  1E23               	comf	printf@val+2,f,c
  3564  0030C8  1E22               	comf	printf@val+1,f,c
  3565  0030CA  6C21               	negf	printf@val,c
  3566  0030CC  0E00               	movlw	0
  3567  0030CE  2222               	addwfc	printf@val+1,f,c
  3568  0030D0  2223               	addwfc	printf@val+2,f,c
  3569  0030D2  2224               	addwfc	printf@val+3,f,c
  3570                           
  3571                           ;doprnt.c: 1264: }
  3572                           ;doprnt.c: 1266: }
  3573  0030D4  D023               	goto	l1703
  3574  0030D6                     l316:
  3575                           
  3576                           ;doprnt.c: 1268: else
  3577                           ;doprnt.c: 1273: {
  3578                           ;doprnt.c: 1281: if(flag & 0x10)
  3579  0030D6  A827               	btfss	printf@flag,4,c
  3580  0030D8  D00E               	goto	l1699
  3581                           
  3582                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3583  0030DA  C025  FFD9         	movff	printf@ap,fsr2l
  3584  0030DE  C026  FFDA         	movff	printf@ap+1,fsr2h
  3585  0030E2  CFDE F021          	movff	postinc2,printf@val
  3586  0030E6  CFDE F022          	movff	postinc2,printf@val+1
  3587  0030EA  CFDE F023          	movff	postinc2,printf@val+2
  3588  0030EE  CFDE F024          	movff	postinc2,printf@val+3
  3589  0030F2  0E04               	movlw	4
  3590  0030F4  D00F               	goto	L8
  3591  0030F6                     l1699:
  3592                           
  3593                           ;doprnt.c: 1283: else
  3594                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3595  0030F6  C025  FFD9         	movff	printf@ap,fsr2l
  3596  0030FA  C026  FFDA         	movff	printf@ap+1,fsr2h
  3597  0030FE  CFDE F01D          	movff	postinc2,??_printf
  3598  003102  CFDD F01E          	movff	postdec2,??_printf+1
  3599  003106  C01D  F021         	movff	??_printf,printf@val
  3600  00310A  C01E  F022         	movff	??_printf+1,printf@val+1
  3601  00310E  6A23               	clrf	printf@val+2,c
  3602  003110  6A24               	clrf	printf@val+3,c
  3603  003112  0E02               	movlw	2
  3604  003114                     L8:
  3605  003114  2625               	addwf	printf@ap,f,c
  3606  003116  0E00               	movlw	0
  3607  003118  2226               	addwfc	printf@ap+1,f,c
  3608  00311A  D000               	goto	l1703
  3609  00311C                     l1703:
  3610                           
  3611                           ;doprnt.c: 1287: }
  3612                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3613  00311C  0E01               	movlw	1
  3614  00311E  6E28               	movwf	printf@c,c
  3615  003120                     l1705:
  3616  003120  0E0A               	movlw	10
  3617  003122  1828               	xorwf	printf@c,w,c
  3618  003124  B4D8               	btfsc	status,2,c
  3619  003126  D01C               	goto	l1717
  3620  003128  D001               	goto	l1709
  3621  00312A  D01A               	goto	l1717
  3622  00312C                     l1709:
  3623                           
  3624                           ;doprnt.c: 1306: if(val < dpowers[c])
  3625  00312C  5028               	movf	printf@c,w,c
  3626  00312E  0D04               	mullw	4
  3627  003130  0EFF               	movlw	low _dpowers
  3628  003132  24F3               	addwf	prodl,w,c
  3629  003134  6EF6               	movwf	tblptrl,c
  3630  003136  0E3D               	movlw	high _dpowers
  3631  003138  20F4               	addwfc	prodh,w,c
  3632  00313A  6EF7               	movwf	tblptrh,c
  3633  00313C                     	if	0	;There are less than 3 active tblptr bytes
  3634  00313C                     	endif
  3635  00313C  0009               	tblrd		*+
  3636  00313E  50F5               	movf	tablat,w,c
  3637  003140  5C21               	subwf	printf@val,w,c
  3638  003142  0009               	tblrd		*+
  3639  003144  50F5               	movf	tablat,w,c
  3640  003146  5822               	subwfb	printf@val+1,w,c
  3641  003148  0009               	tblrd		*+
  3642  00314A  50F5               	movf	tablat,w,c
  3643  00314C  5823               	subwfb	printf@val+2,w,c
  3644  00314E  0009               	tblrd		*+
  3645  003150  50F5               	movf	tablat,w,c
  3646  003152  5824               	subwfb	printf@val+3,w,c
  3647  003154  A0D8               	btfss	status,0,c
  3648  003156  D004               	goto	l1717
  3649  003158  D001               	goto	l1713
  3650                           
  3651                           ;doprnt.c: 1307: break;
  3652  00315A  D002               	goto	l1717
  3653  00315C                     l1713:
  3654  00315C  2A28               	incf	printf@c,f,c
  3655  00315E  D7E0               	goto	l1705
  3656  003160                     l1717:
  3657                           
  3658                           ;doprnt.c: 1422: {
  3659                           ;doprnt.c: 1438: if(flag & 0x03)
  3660  003160  C027  F01D         	movff	printf@flag,??_printf
  3661  003164  0E03               	movlw	3
  3662  003166  161D               	andwf	??_printf,f,c
  3663  003168  B4D8               	btfsc	status,2,c
  3664  00316A  D004               	goto	l1721
  3665                           
  3666                           ;doprnt.c: 1439: (putch('-') );
  3667  00316C  0E2D               	movlw	45
  3668  00316E  ECE7  F016         	call	_putch
  3669  003172  D000               	goto	l1721
  3670  003174                     l1721:
  3671                           
  3672                           ;doprnt.c: 1469: }
  3673                           ;doprnt.c: 1472: prec = c;
  3674  003174  5028               	movf	printf@c,w,c
  3675  003176  6E1F               	movwf	printf@prec,c
  3676  003178  6A20               	clrf	printf@prec+1,c
  3677  00317A  BE1F               	btfsc	printf@prec,7,c
  3678  00317C  0620               	decf	printf@prec+1,f,c
  3679                           
  3680                           ;doprnt.c: 1474: while(prec--) {
  3681  00317E  D03F               	goto	l1727
  3682  003180                     l1723:
  3683                           
  3684                           ;doprnt.c: 1478: {
  3685                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3686  003180  C01F  F01D         	movff	printf@prec,??_printf
  3687  003184  C020  F01E         	movff	printf@prec+1,??_printf+1
  3688  003188  90D8               	bcf	status,0,c
  3689  00318A  361D               	rlcf	??_printf,f,c
  3690  00318C  361E               	rlcf	??_printf+1,f,c
  3691  00318E  90D8               	bcf	status,0,c
  3692  003190  361D               	rlcf	??_printf,f,c
  3693  003192  361E               	rlcf	??_printf+1,f,c
  3694  003194  0EFF               	movlw	low _dpowers
  3695  003196  241D               	addwf	??_printf,w,c
  3696  003198  6EF6               	movwf	tblptrl,c
  3697  00319A  0E3D               	movlw	high _dpowers
  3698  00319C  201E               	addwfc	??_printf+1,w,c
  3699  00319E  6EF7               	movwf	tblptrh,c
  3700  0031A0                     	if	0	;There are less than 3 active tblptr bytes
  3701  0031A0                     	endif
  3702  0031A0  0009               	tblrd		*+
  3703  0031A2  CFF5 F005          	movff	tablat,___lldiv@divisor
  3704  0031A6  0009               	tblrd		*+
  3705  0031A8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3706  0031AC  0009               	tblrd		*+
  3707  0031AE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3708  0031B2  000A               	tblrd		*-
  3709  0031B4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3710  0031B8  C021  F001         	movff	printf@val,___lldiv@dividend
  3711  0031BC  C022  F002         	movff	printf@val+1,___lldiv@dividend+1
  3712  0031C0  C023  F003         	movff	printf@val+2,___lldiv@dividend+2
  3713  0031C4  C024  F004         	movff	printf@val+3,___lldiv@dividend+3
  3714  0031C8  ECC3  F017         	call	___lldiv	;wreg free
  3715  0031CC  C001  F00E         	movff	?___lldiv,___llmod@dividend
  3716  0031D0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  3717  0031D4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  3718  0031D8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  3719  0031DC  0E0A               	movlw	10
  3720  0031DE  6E12               	movwf	___llmod@divisor,c
  3721  0031E0  0E00               	movlw	0
  3722  0031E2  6E13               	movwf	___llmod@divisor+1,c
  3723  0031E4  0E00               	movlw	0
  3724  0031E6  6E14               	movwf	___llmod@divisor+2,c
  3725  0031E8  0E00               	movlw	0
  3726  0031EA  6E15               	movwf	___llmod@divisor+3,c
  3727  0031EC  EC8B  F017         	call	___llmod	;wreg free
  3728  0031F0  500E               	movf	?___llmod,w,c
  3729  0031F2  0F30               	addlw	48
  3730  0031F4  6E28               	movwf	printf@c,c
  3731                           
  3732                           ;doprnt.c: 1523: }
  3733                           ;doprnt.c: 1524: (putch(c) );
  3734  0031F6  5028               	movf	printf@c,w,c
  3735  0031F8  ECE7  F016         	call	_putch
  3736  0031FC  D000               	goto	l1727
  3737  0031FE                     l1727:
  3738  0031FE  061F               	decf	printf@prec,f,c
  3739  003200  A0D8               	btfss	status,0,c
  3740  003202  0620               	decf	printf@prec+1,f,c
  3741  003204  281F               	incf	printf@prec,w,c
  3742  003206  E1BC               	bnz	l1723
  3743  003208  2820               	incf	printf@prec+1,w,c
  3744  00320A  B4D8               	btfsc	status,2,c
  3745  00320C  D002               	goto	l1729
  3746  00320E  D7B8               	goto	l1723
  3747  003210  D000               	goto	l1729
  3748  003212                     l1729:
  3749  003212  C017  FFF6         	movff	printf@f,tblptrl
  3750  003216  C018  FFF7         	movff	printf@f+1,tblptrh
  3751  00321A  4A17               	infsnz	printf@f,f,c
  3752  00321C  2A18               	incf	printf@f+1,f,c
  3753  00321E                     	if	0	;tblptru may be non-zero
  3754  00321E                     	endif
  3755  00321E                     	if	0	;tblptru may be non-zero
  3756  00321E                     	endif
  3757  00321E  0008               	tblrd		*
  3758  003220  CFF5 F028          	movff	tablat,printf@c
  3759  003224  5028               	movf	printf@c,w,c
  3760  003226  B4D8               	btfsc	status,2,c
  3761  003228  0012               	return	
  3762  00322A  D6F8               	goto	l1665
  3763  00322C  0012               	return	
  3764                           
  3765                           ;doprnt.c: 1540: return 0;
  3766                           ;	Return value of _printf is never used
  3767                           
  3768                           ;doprnt.c: 1525: }
  3769                           ;doprnt.c: 1533: }
  3770                           ;doprnt.c: 1535: alldone:
  3771  00322E  0012               	return		;funcret
  3772  003230                     __end_of_printf:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           intcon	equ	0xFF2
  3781                           wreg	equ	0xFE8
  3782                           postinc2	equ	0xFDE
  3783                           postdec2	equ	0xFDD
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _putch *****************
  3789 ;; Defined at:
  3790 ;;		line 36 in file "rb_main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  data            1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  data            1    1[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3804 ;;      Params:         0       0       0       0
  3805 ;;      Locals:         1       0       0       0
  3806 ;;      Temps:          0       0       0       0
  3807 ;;      Totals:         1       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    1
  3811 ;; This function calls:
  3812 ;;		_usart1_putchar
  3813 ;; This function is called by:
  3814 ;;		_printf
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text4
  3819  002DCE                     __ptext4:
  3820                           	opt stack 0
  3821  002DCE                     _putch:
  3822                           	opt stack 28
  3823                           
  3824                           ;incstack = 0
  3825                           ;putch@data stored from wreg
  3826  002DCE  6E02               	movwf	putch@data,c
  3827                           
  3828                           ;rb_main.c: 38: usart1_putchar(data);
  3829  002DD0  5002               	movf	putch@data,w,c
  3830  002DD2  ECF3  F016         	call	_usart1_putchar
  3831  002DD6  0012               	return		;funcret
  3832  002DD8                     __end_of_putch:
  3833                           	opt stack 0
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           wreg	equ	0xFE8
  3842                           postinc2	equ	0xFDE
  3843                           postdec2	equ	0xFDD
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function _usart1_putchar *****************
  3849 ;; Defined at:
  3850 ;;		line 30 in file "my_usart.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  ch              1    wreg     unsigned char 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  ch              1    0[COMRAM] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      unsigned char 
  3857 ;; Registers used:
  3858 ;;		wreg
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3864 ;;      Params:         0       0       0       0
  3865 ;;      Locals:         1       0       0       0
  3866 ;;      Temps:          0       0       0       0
  3867 ;;      Totals:         1       0       0       0
  3868 ;;Total ram usage:        1 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_putch
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text5
  3878  002DE6                     __ptext5:
  3879                           	opt stack 0
  3880  002DE6                     _usart1_putchar:
  3881                           	opt stack 28
  3882                           
  3883                           ;incstack = 0
  3884                           ;usart1_putchar@ch stored from wreg
  3885  002DE6  6E01               	movwf	usart1_putchar@ch,c
  3886                           
  3887                           ;my_usart.c: 33: while(!PIR1bits.TX1IF);
  3888  002DE8  D000               	goto	l283
  3889  002DEA                     l283:
  3890  002DEA  A89E               	btfss	3998,4,c	;volatile
  3891  002DEC  D7FE               	goto	l283
  3892                           
  3893                           ;my_usart.c: 36: TXREG1=ch;
  3894  002DEE  C001  FFAD         	movff	usart1_putchar@ch,4013	;volatile
  3895  002DF2  0012               	return	
  3896                           
  3897                           ;my_usart.c: 38: return ch;
  3898                           ;	Return value of _usart1_putchar is never used
  3899  002DF4  0012               	return		;funcret
  3900  002DF6                     __end_of_usart1_putchar:
  3901                           	opt stack 0
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           prodh	equ	0xFF4
  3907                           prodl	equ	0xFF3
  3908                           intcon	equ	0xFF2
  3909                           wreg	equ	0xFE8
  3910                           postinc2	equ	0xFDE
  3911                           postdec2	equ	0xFDD
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function ___llmod *****************
  3917 ;; Defined at:
  3918 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\llmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  dividend        4   13[COMRAM] unsigned long 
  3921 ;;  divisor         4   17[COMRAM] unsigned long 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  counter         1   21[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  4   13[COMRAM] unsigned long 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3933 ;;      Params:         8       0       0       0
  3934 ;;      Locals:         1       0       0       0
  3935 ;;      Temps:          0       0       0       0
  3936 ;;      Totals:         9       0       0       0
  3937 ;;Total ram usage:        9 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_printf
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text6
  3947  002F16                     __ptext6:
  3948                           	opt stack 0
  3949  002F16                     ___llmod:
  3950                           	opt stack 29
  3951                           
  3952                           ;incstack = 0
  3953  002F16  5012               	movf	___llmod@divisor,w,c
  3954  002F18  1013               	iorwf	___llmod@divisor+1,w,c
  3955  002F1A  1014               	iorwf	___llmod@divisor+2,w,c
  3956  002F1C  1015               	iorwf	___llmod@divisor+3,w,c
  3957  002F1E  B4D8               	btfsc	status,2,c
  3958  002F20  D029               	goto	l799
  3959  002F22  0E01               	movlw	1
  3960  002F24  6E16               	movwf	___llmod@counter,c
  3961  002F26  D007               	goto	l1629
  3962  002F28                     l1627:
  3963  002F28  90D8               	bcf	status,0,c
  3964  002F2A  3612               	rlcf	___llmod@divisor,f,c
  3965  002F2C  3613               	rlcf	___llmod@divisor+1,f,c
  3966  002F2E  3614               	rlcf	___llmod@divisor+2,f,c
  3967  002F30  3615               	rlcf	___llmod@divisor+3,f,c
  3968  002F32  2A16               	incf	___llmod@counter,f,c
  3969  002F34  D000               	goto	l1629
  3970  002F36                     l1629:
  3971  002F36  BE15               	btfsc	___llmod@divisor+3,7,c
  3972  002F38  D002               	goto	l1631
  3973  002F3A  D7F6               	goto	l1627
  3974  002F3C  D000               	goto	l1631
  3975  002F3E                     l1631:
  3976  002F3E  5012               	movf	___llmod@divisor,w,c
  3977  002F40  5C0E               	subwf	___llmod@dividend,w,c
  3978  002F42  5013               	movf	___llmod@divisor+1,w,c
  3979  002F44  580F               	subwfb	___llmod@dividend+1,w,c
  3980  002F46  5014               	movf	___llmod@divisor+2,w,c
  3981  002F48  5810               	subwfb	___llmod@dividend+2,w,c
  3982  002F4A  5015               	movf	___llmod@divisor+3,w,c
  3983  002F4C  5811               	subwfb	___llmod@dividend+3,w,c
  3984  002F4E  A0D8               	btfss	status,0,c
  3985  002F50  D009               	goto	l1635
  3986  002F52  5012               	movf	___llmod@divisor,w,c
  3987  002F54  5E0E               	subwf	___llmod@dividend,f,c
  3988  002F56  5013               	movf	___llmod@divisor+1,w,c
  3989  002F58  5A0F               	subwfb	___llmod@dividend+1,f,c
  3990  002F5A  5014               	movf	___llmod@divisor+2,w,c
  3991  002F5C  5A10               	subwfb	___llmod@dividend+2,f,c
  3992  002F5E  5015               	movf	___llmod@divisor+3,w,c
  3993  002F60  5A11               	subwfb	___llmod@dividend+3,f,c
  3994  002F62  D000               	goto	l1635
  3995  002F64                     l1635:
  3996  002F64  90D8               	bcf	status,0,c
  3997  002F66  3215               	rrcf	___llmod@divisor+3,f,c
  3998  002F68  3214               	rrcf	___llmod@divisor+2,f,c
  3999  002F6A  3213               	rrcf	___llmod@divisor+1,f,c
  4000  002F6C  3212               	rrcf	___llmod@divisor,f,c
  4001  002F6E  2E16               	decfsz	___llmod@counter,f,c
  4002  002F70  D7E6               	goto	l1631
  4003  002F72  D000               	goto	l799
  4004  002F74                     l799:
  4005  002F74  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4006  002F78  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4007  002F7C  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4008  002F80  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4009  002F84  0012               	return		;funcret
  4010  002F86                     __end_of___llmod:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           intcon	equ	0xFF2
  4019                           wreg	equ	0xFE8
  4020                           postinc2	equ	0xFDE
  4021                           postdec2	equ	0xFDD
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function ___lldiv *****************
  4027 ;; Defined at:
  4028 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  dividend        4    0[COMRAM] unsigned long 
  4031 ;;  divisor         4    4[COMRAM] unsigned long 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  quotient        4    8[COMRAM] unsigned long 
  4034 ;;  counter         1   12[COMRAM] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  4    0[COMRAM] unsigned long 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4044 ;;      Params:         8       0       0       0
  4045 ;;      Locals:         5       0       0       0
  4046 ;;      Temps:          0       0       0       0
  4047 ;;      Totals:        13       0       0       0
  4048 ;;Total ram usage:       13 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;;		_printf
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text7
  4059  002F86                     __ptext7:
  4060                           	opt stack 0
  4061  002F86                     ___lldiv:
  4062                           	opt stack 29
  4063                           
  4064                           ;incstack = 0
  4065  002F86  0E00               	movlw	0
  4066  002F88  6E09               	movwf	___lldiv@quotient,c
  4067  002F8A  0E00               	movlw	0
  4068  002F8C  6E0A               	movwf	___lldiv@quotient+1,c
  4069  002F8E  0E00               	movlw	0
  4070  002F90  6E0B               	movwf	___lldiv@quotient+2,c
  4071  002F92  0E00               	movlw	0
  4072  002F94  6E0C               	movwf	___lldiv@quotient+3,c
  4073  002F96  5005               	movf	___lldiv@divisor,w,c
  4074  002F98  1006               	iorwf	___lldiv@divisor+1,w,c
  4075  002F9A  1007               	iorwf	___lldiv@divisor+2,w,c
  4076  002F9C  1008               	iorwf	___lldiv@divisor+3,w,c
  4077  002F9E  B4D8               	btfsc	status,2,c
  4078  002FA0  D02F               	goto	l789
  4079  002FA2  0E01               	movlw	1
  4080  002FA4  6E0D               	movwf	___lldiv@counter,c
  4081  002FA6  D007               	goto	l1609
  4082  002FA8                     l1607:
  4083  002FA8  90D8               	bcf	status,0,c
  4084  002FAA  3605               	rlcf	___lldiv@divisor,f,c
  4085  002FAC  3606               	rlcf	___lldiv@divisor+1,f,c
  4086  002FAE  3607               	rlcf	___lldiv@divisor+2,f,c
  4087  002FB0  3608               	rlcf	___lldiv@divisor+3,f,c
  4088  002FB2  2A0D               	incf	___lldiv@counter,f,c
  4089  002FB4  D000               	goto	l1609
  4090  002FB6                     l1609:
  4091  002FB6  BE08               	btfsc	___lldiv@divisor+3,7,c
  4092  002FB8  D002               	goto	l1611
  4093  002FBA  D7F6               	goto	l1607
  4094  002FBC  D000               	goto	l1611
  4095  002FBE                     l1611:
  4096  002FBE  90D8               	bcf	status,0,c
  4097  002FC0  3609               	rlcf	___lldiv@quotient,f,c
  4098  002FC2  360A               	rlcf	___lldiv@quotient+1,f,c
  4099  002FC4  360B               	rlcf	___lldiv@quotient+2,f,c
  4100  002FC6  360C               	rlcf	___lldiv@quotient+3,f,c
  4101  002FC8  5005               	movf	___lldiv@divisor,w,c
  4102  002FCA  5C01               	subwf	___lldiv@dividend,w,c
  4103  002FCC  5006               	movf	___lldiv@divisor+1,w,c
  4104  002FCE  5802               	subwfb	___lldiv@dividend+1,w,c
  4105  002FD0  5007               	movf	___lldiv@divisor+2,w,c
  4106  002FD2  5803               	subwfb	___lldiv@dividend+2,w,c
  4107  002FD4  5008               	movf	___lldiv@divisor+3,w,c
  4108  002FD6  5804               	subwfb	___lldiv@dividend+3,w,c
  4109  002FD8  A0D8               	btfss	status,0,c
  4110  002FDA  D00A               	goto	l1619
  4111  002FDC  5005               	movf	___lldiv@divisor,w,c
  4112  002FDE  5E01               	subwf	___lldiv@dividend,f,c
  4113  002FE0  5006               	movf	___lldiv@divisor+1,w,c
  4114  002FE2  5A02               	subwfb	___lldiv@dividend+1,f,c
  4115  002FE4  5007               	movf	___lldiv@divisor+2,w,c
  4116  002FE6  5A03               	subwfb	___lldiv@dividend+2,f,c
  4117  002FE8  5008               	movf	___lldiv@divisor+3,w,c
  4118  002FEA  5A04               	subwfb	___lldiv@dividend+3,f,c
  4119  002FEC  8009               	bsf	___lldiv@quotient,0,c
  4120  002FEE  D000               	goto	l1619
  4121  002FF0                     l1619:
  4122  002FF0  90D8               	bcf	status,0,c
  4123  002FF2  3208               	rrcf	___lldiv@divisor+3,f,c
  4124  002FF4  3207               	rrcf	___lldiv@divisor+2,f,c
  4125  002FF6  3206               	rrcf	___lldiv@divisor+1,f,c
  4126  002FF8  3205               	rrcf	___lldiv@divisor,f,c
  4127  002FFA  2E0D               	decfsz	___lldiv@counter,f,c
  4128  002FFC  D7E0               	goto	l1611
  4129  002FFE  D000               	goto	l789
  4130  003000                     l789:
  4131  003000  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4132  003004  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4133  003008  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4134  00300C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4135  003010  0012               	return		;funcret
  4136  003012                     __end_of___lldiv:
  4137                           	opt stack 0
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           intcon	equ	0xFF2
  4145                           wreg	equ	0xFE8
  4146                           postinc2	equ	0xFDE
  4147                           postdec2	equ	0xFDD
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _adc_measure *****************
  4153 ;; Defined at:
  4154 ;;		line 15 in file "my_adc.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  channel         1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  channel         1    3[COMRAM] unsigned char 
  4159 ;;  retval          2    4[COMRAM] unsigned int 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    0[COMRAM] unsigned int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4169 ;;      Params:         2       0       0       0
  4170 ;;      Locals:         3       0       0       0
  4171 ;;      Temps:          1       0       0       0
  4172 ;;      Totals:         6       0       0       0
  4173 ;;Total ram usage:        6 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text8
  4183  002E22                     __ptext8:
  4184                           	opt stack 0
  4185  002E22                     _adc_measure:
  4186                           	opt stack 30
  4187                           
  4188                           ;incstack = 0
  4189                           ;adc_measure@channel stored from wreg
  4190  002E22  6E04               	movwf	adc_measure@channel,c
  4191                           
  4192                           ;my_adc.c: 17: unsigned int retval;
  4193                           ;my_adc.c: 20: ADCON0 &= 0b10000011;
  4194  002E24  0E83               	movlw	131
  4195  002E26  16C2               	andwf	4034,f,c	;volatile
  4196                           
  4197                           ;my_adc.c: 23: channel = (channel & 0x1f) << 2;
  4198  002E28  C004  F003         	movff	adc_measure@channel,??_adc_measure
  4199  002E2C  0E1F               	movlw	31
  4200  002E2E  1603               	andwf	??_adc_measure,f,c
  4201  002E30  90D8               	bcf	status,0,c
  4202  002E32  3603               	rlcf	??_adc_measure,f,c
  4203  002E34  90D8               	bcf	status,0,c
  4204  002E36  3403               	rlcf	??_adc_measure,w,c
  4205  002E38  6E04               	movwf	adc_measure@channel,c
  4206                           
  4207                           ;my_adc.c: 26: ADCON0 |= channel;
  4208  002E3A  5004               	movf	adc_measure@channel,w,c
  4209  002E3C  12C2               	iorwf	4034,f,c	;volatile
  4210                           
  4211                           ;my_adc.c: 29: ADCON0 |= 0b00000010;
  4212  002E3E  82C2               	bsf	4034,1,c	;volatile
  4213                           
  4214                           ;my_adc.c: 32: while ((ADCON0 & 0b00000010) != 0);
  4215  002E40  D000               	goto	l256
  4216  002E42                     l256:
  4217  002E42  B2C2               	btfsc	4034,1,c	;volatile
  4218  002E44  D7FE               	goto	l256
  4219                           
  4220                           ;my_adc.c: 34: retval = (unsigned int)ADRESH;
  4221  002E46  CFC4 F005          	movff	4036,adc_measure@retval	;volatile
  4222  002E4A  6A06               	clrf	adc_measure@retval+1,c
  4223                           
  4224                           ;my_adc.c: 35: retval = retval << 8;
  4225  002E4C  5005               	movf	adc_measure@retval,w,c
  4226  002E4E  6E06               	movwf	adc_measure@retval+1,c
  4227  002E50  6A05               	clrf	adc_measure@retval,c
  4228                           
  4229                           ;my_adc.c: 36: retval |= ADRESL;
  4230  002E52  50C3               	movf	4035,w,c	;volatile
  4231  002E54  1205               	iorwf	adc_measure@retval,f,c
  4232                           
  4233                           ;my_adc.c: 38: return retval;
  4234  002E56  C005  F001         	movff	adc_measure@retval,?_adc_measure
  4235  002E5A  C006  F002         	movff	adc_measure@retval+1,?_adc_measure+1
  4236  002E5E  0012               	return	
  4237  002E60  0012               	return		;funcret
  4238  002E62                     __end_of_adc_measure:
  4239                           	opt stack 0
  4240                           tblptru	equ	0xFF8
  4241                           tblptrh	equ	0xFF7
  4242                           tblptrl	equ	0xFF6
  4243                           tablat	equ	0xFF5
  4244                           prodh	equ	0xFF4
  4245                           prodl	equ	0xFF3
  4246                           intcon	equ	0xFF2
  4247                           wreg	equ	0xFE8
  4248                           postinc2	equ	0xFDE
  4249                           postdec2	equ	0xFDD
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _adc_init *****************
  4255 ;; Defined at:
  4256 ;;		line 8 in file "my_adc.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4270 ;;      Params:         0       0       0       0
  4271 ;;      Locals:         0       0       0       0
  4272 ;;      Temps:          0       0       0       0
  4273 ;;      Totals:         0       0       0       0
  4274 ;;Total ram usage:        0 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_main
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text9
  4284  002DD8                     __ptext9:
  4285                           	opt stack 0
  4286  002DD8                     _adc_init:
  4287                           	opt stack 30
  4288                           
  4289                           ;my_adc.c: 10: ADCON2 = 0b10101111;
  4290                           
  4291                           ;incstack = 0
  4292  002DD8  0EAF               	movlw	175
  4293  002DDA  6EC0               	movwf	4032,c	;volatile
  4294                           
  4295                           ;my_adc.c: 11: ADCON1 = 0b00000000;
  4296  002DDC  0E00               	movlw	0
  4297  002DDE  6EC1               	movwf	4033,c	;volatile
  4298                           
  4299                           ;my_adc.c: 12: ADCON0 = 0b00000001;
  4300  002DE0  0E01               	movlw	1
  4301  002DE2  6EC2               	movwf	4034,c	;volatile
  4302  002DE4  0012               	return		;funcret
  4303  002DE6                     __end_of_adc_init:
  4304                           	opt stack 0
  4305                           tblptru	equ	0xFF8
  4306                           tblptrh	equ	0xFF7
  4307                           tblptrl	equ	0xFF6
  4308                           tablat	equ	0xFF5
  4309                           prodh	equ	0xFF4
  4310                           prodl	equ	0xFF3
  4311                           intcon	equ	0xFF2
  4312                           wreg	equ	0xFE8
  4313                           postinc2	equ	0xFDE
  4314                           postdec2	equ	0xFDD
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function ___lwdiv *****************
  4320 ;; Defined at:
  4321 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  dividend        2    0[COMRAM] unsigned int 
  4324 ;;  divisor         2    2[COMRAM] unsigned int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  quotient        2    4[COMRAM] unsigned int 
  4327 ;;  counter         1    6[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    0[COMRAM] unsigned int 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4337 ;;      Params:         4       0       0       0
  4338 ;;      Locals:         3       0       0       0
  4339 ;;      Temps:          0       0       0       0
  4340 ;;      Totals:         7       0       0       0
  4341 ;;Total ram usage:        7 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text10
  4351  002EBA                     __ptext10:
  4352                           	opt stack 0
  4353  002EBA                     ___lwdiv:
  4354                           	opt stack 30
  4355                           
  4356                           ;incstack = 0
  4357  002EBA  0E00               	movlw	0
  4358  002EBC  6E06               	movwf	___lwdiv@quotient+1,c
  4359  002EBE  0E00               	movlw	0
  4360  002EC0  6E05               	movwf	___lwdiv@quotient,c
  4361  002EC2  5003               	movf	___lwdiv@divisor,w,c
  4362  002EC4  1004               	iorwf	___lwdiv@divisor+1,w,c
  4363  002EC6  B4D8               	btfsc	status,2,c
  4364  002EC8  D021               	goto	l852
  4365  002ECA  0E01               	movlw	1
  4366  002ECC  6E07               	movwf	___lwdiv@counter,c
  4367  002ECE  D005               	goto	l1753
  4368  002ED0                     l1751:
  4369  002ED0  90D8               	bcf	status,0,c
  4370  002ED2  3603               	rlcf	___lwdiv@divisor,f,c
  4371  002ED4  3604               	rlcf	___lwdiv@divisor+1,f,c
  4372  002ED6  2A07               	incf	___lwdiv@counter,f,c
  4373  002ED8  D000               	goto	l1753
  4374  002EDA                     l1753:
  4375  002EDA  BE04               	btfsc	___lwdiv@divisor+1,7,c
  4376  002EDC  D002               	goto	l1755
  4377  002EDE  D7F8               	goto	l1751
  4378  002EE0  D000               	goto	l1755
  4379  002EE2                     l1755:
  4380  002EE2  90D8               	bcf	status,0,c
  4381  002EE4  3605               	rlcf	___lwdiv@quotient,f,c
  4382  002EE6  3606               	rlcf	___lwdiv@quotient+1,f,c
  4383  002EE8  5003               	movf	___lwdiv@divisor,w,c
  4384  002EEA  5C01               	subwf	___lwdiv@dividend,w,c
  4385  002EEC  5004               	movf	___lwdiv@divisor+1,w,c
  4386  002EEE  5802               	subwfb	___lwdiv@dividend+1,w,c
  4387  002EF0  A0D8               	btfss	status,0,c
  4388  002EF2  D006               	goto	l1763
  4389  002EF4  5003               	movf	___lwdiv@divisor,w,c
  4390  002EF6  5E01               	subwf	___lwdiv@dividend,f,c
  4391  002EF8  5004               	movf	___lwdiv@divisor+1,w,c
  4392  002EFA  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4393  002EFC  8005               	bsf	___lwdiv@quotient,0,c
  4394  002EFE  D000               	goto	l1763
  4395  002F00                     l1763:
  4396  002F00  90D8               	bcf	status,0,c
  4397  002F02  3204               	rrcf	___lwdiv@divisor+1,f,c
  4398  002F04  3203               	rrcf	___lwdiv@divisor,f,c
  4399  002F06  2E07               	decfsz	___lwdiv@counter,f,c
  4400  002F08  D7EC               	goto	l1755
  4401  002F0A  D000               	goto	l852
  4402  002F0C                     l852:
  4403  002F0C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4404  002F10  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4405  002F14  0012               	return		;funcret
  4406  002F16                     __end_of___lwdiv:
  4407                           	opt stack 0
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           intcon	equ	0xFF2
  4415                           wreg	equ	0xFE8
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           tblptru	equ	0xFF8
  4422                           tblptrh	equ	0xFF7
  4423                           tblptrl	equ	0xFF6
  4424                           tablat	equ	0xFF5
  4425                           prodh	equ	0xFF4
  4426                           prodl	equ	0xFF3
  4427                           intcon	equ	0xFF2
  4428                           wreg	equ	0xFE8
  4429                           postinc2	equ	0xFDE
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435                           	psect	rparam
  4436  0000                     tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           prodh	equ	0xFF4
  4441                           prodl	equ	0xFF3
  4442                           intcon	equ	0xFF2
  4443                           wreg	equ	0xFE8
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8


Data Sizes:
    Strings     471
    Constant    40
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_48(CODE[4]), STR_47(CODE[3]), STR_46(CODE[20]), STR_45(CODE[4]), 
		 -> STR_44(CODE[3]), STR_43(CODE[20]), STR_42(CODE[4]), STR_41(CODE[3]), 
		 -> STR_40(CODE[20]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[5]), 
		 -> STR_36(CODE[5]), STR_35(CODE[6]), STR_34(CODE[4]), STR_33(CODE[23]), 
		 -> STR_32(CODE[13]), STR_31(CODE[14]), STR_30(CODE[11]), STR_29(CODE[10]), 
		 -> STR_28(CODE[31]), STR_27(CODE[27]), STR_26(CODE[8]), STR_25(CODE[8]), 
		 -> STR_24(CODE[8]), STR_23(CODE[8]), STR_22(CODE[20]), STR_21(CODE[21]), 
		 -> STR_20(CODE[20]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[20]), STR_14(CODE[8]), STR_13(CODE[8]), 
		 -> STR_12(CODE[8]), STR_11(CODE[8]), STR_10(CODE[21]), STR_9(CODE[28]), 
		 -> STR_8(CODE[27]), STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___llmod
    _putch->_usart1_putchar
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0    6983
                                             40 COMRAM    46    46      0
                            ___lldiv
                            ___lwdiv
                           _adc_init
                        _adc_measure
                             _printf
                        _usart1_init
                        _ws2812_send
 ---------------------------------------------------------------------------------
 (1) _ws2812_send                                          9     5      4     144
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _usart1_init                                          2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    3759
                                             22 COMRAM    18    12      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      50
                                              1 COMRAM     1     1      0
                     _usart1_putchar
 ---------------------------------------------------------------------------------
 (3) _usart1_putchar                                       1     1      0      28
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     265
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_measure                                          6     4      2      92
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     374
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lwdiv
   _adc_init
   _adc_measure
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _usart1_putchar
   _usart1_init
   _ws2812_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       8        0.0%
DATA                 0      0      5A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Jun 28 15:43:27 2015

__size_of_usart1_putchar 0010                       l74 32B8                       l84 3394  
                     l94 33FA             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
                    l105 349C                      l114 34FA                      l119 3560  
                    l128 35BE                      l313 3074                      l145 3770  
                    l226 3DEE                      l146 36DA                      l138 365E  
                    l316 30D6                      l236 2E6E                      l156 37F0  
                    l238 2E7C                      l256 2E42                      l283 2DEA  
                    l852 2F0C                      l789 3000                      l799 2F74  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000              _usart1_init 2E08  
   __size_of_adc_measure 0040                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   l2011 369E                     l2013 36A8                     l2021 36C2  
                   l2031 36F2                     l2015 36AE                     l2201 3C7E  
                   l2041 3734                     l2203 3C8C                     l2211 3CB6  
                   l2123 39FE                     l2107 3958                     PORTC 000F82  
                   l2221 3D0E                     l2205 3C9A                     l2213 3CDE  
                   l2141 3AB2                     l2125 3A0C                     l2037 371A  
                   l2207 3CA8                     l2151 3AEA                     l2143 3AC0  
                   l2233 3D52                     l2225 3D22                     l2057 37C8  
                   l2049 374E                     l1611 2FBE                     l2171 3BA6  
                   l2163 3B76                     l2091 389E                     l2083 3866  
                   l2245 3D96                     l2237 3D66                     l2173 3BB4  
                   l2165 3B84                     l2149 3ADC                     l2093 38AC  
                   l2085 3874                     l1607 2FA8                     l1631 2F3E  
                   l1703 311C                     l2191 3C3C                     l2183 3C12  
                   l2087 3882                     l2079 384A                     l1609 2FB6  
                   l1721 3174                     l1713 315C                     l1705 3120  
                   l2249 3DAA                     l2193 3C4A                     l2185 3C20  
                   l2177 3BF6                     l2089 3890                     l2097 38BA  
                   l1619 2FF0                     l1635 2F64                     l1627 2F28  
                   l1723 3180                     l2099 38E2                     l1803 3352  
                   l1629 2F36                     l1717 3160                     l1709 312C  
                   l1733 2E66                     l2197 3C62                     l1901 34C4  
                   l1821 337C                     l1751 2ED0                     l1727 31FE  
                   l1671 3034                     l1743 2EB0                     l2199 3C70  
                   l1903 34CE                     l1815 336E                     l1753 2EDA  
                   l1673 303C                     l1665 301C                     l1729 3212  
                   l1841 33C6                     l1833 33B4                     l1809 3360  
                   l1763 2F00                     l1755 2EE2                     l1739 2E82  
                   l1931 3534                     l1851 33E6                     l1835 33B8  
                   l1685 3098                     l1677 3040                     l1669 302C  
                   l1941 3570                     l1861 340A                     l1909 34E2  
                   l1863 3410                     l1871 3440                     l1855 33F2  
                   l1839 33C2                     l1791 3336                     l1689 30BC  
                   l1945 3588                     l1937 3558                     l1929 352E  
                   l1953 35A6                     l1865 3416                     l1857 3400  
                   l1849 33E2                     l1785 3328                     l1699 30F6  
                   l1947 3592                     l1875 344C                     l1859 3404  
                   l1779 331A                     l1981 3620                     l1973 35FE  
                   l1893 3494                     l1877 3450                     l1869 341E  
                   l1797 3344                     l1975 3608                     l1991 364A  
                   l1887 3470                     l1985 3636                     l1897 34AC  
                   STR_1 3EAF                     STR_2 3FE2                     STR_3 3FDC  
                   STR_4 3FC7                     STR_5 3FB7                     STR_6 3FBF  
                   STR_7 3FE8                     STR_8 3E7D                     STR_9 3E46  
                   u2000 357C                     u2140 3686                     u2060 35F2  
                   u2150 3692                     u2400 3B9A                     u2240 3766  
                   u2325 396C                     u2280 3840                     u2345 3A20  
                   u2560 3DC4                     u2385 3B04                     u1850 3488  
                   u1880 34B8                     u1970 354C                     u2587 2EB2  
                   _main 3230                     fsr2h 000FDA                     fsr2l 000FD9  
          __CFG_BORV$285 000000                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000010  
    main@diag_bite_count 004C                    ?_main 0001                    STR_10 3EDA  
                  STR_11 3F97                    STR_12 3FA7                    STR_20 3F2B  
                  STR_13 3F9F                    STR_21 3EC5             main@meas_v24 0041  
                  STR_14 3FAF                    STR_30 3F82                    STR_22 3F53  
                  STR_23 3F97                    STR_31 3F67                    STR_15 3F3F  
                  STR_16 3F97                    STR_24 3FA7                    STR_32 3F75  
                  STR_40 3F17                    STR_25 3F9F                    STR_17 3FA7  
                  STR_41 3F94                    STR_33 3E98                    STR_18 3F9F  
                  STR_26 3FAF                    STR_42 3F89                    STR_34 3F89  
                  STR_19 3FAF                    STR_35 3FEE                    STR_43 3F03  
                  STR_27 3E62                    STR_44 3F94                    STR_36 3FF9  
                  STR_28 3E27                    STR_45 3F89                    STR_37 3FF4  
                  STR_29 3F8D                    STR_38 3FD5                    STR_46 3EEF  
                  STR_47 3F94                    STR_39 3FCE                    STR_48 3F89  
        __end_of___lldiv 3012                    _T0CON 000FD5          __end_of___llmod 2F86  
        __end_of___lwdiv 2F16                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_dpowers 3E27       __CFG_MCLRE$EXTMCLR 000000  
                  _state 005A                    _putch 2DCE             main@temp_int 0039  
                  tablat 000FF5       adc_measure@channel 0004                    status 000FD8  
         __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000          __initialization 2DF6  
           __end_of_main 3DFE     __size_of_ws2812_send 0058                   ??_main 0029  
          __activetblptr 000002           __CFG_PLLCFG$ON 000000            main@led_color 0048  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 000E                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELA 000F38                   ?_putch 0001                   _ANSELB 000F39  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
       __end_of_adc_init 2DE6           __CFG_WDTEN$OFF 000000                   _INTCON 000FF2  
                 _RCREG1 000FAE                   _RCSTA1 000FAB                   _OSCCON 000FD3  
                 _SPBRG1 000FAF                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _TXREG1 000FAD                   _TXSTA1 000FAC           ws2812_send@led 0001  
         __CFG_XINST$OFF 000000           _usart1_putchar 2DE6           __CFG_STVREN$ON 000000  
              ??___lldiv 0009                ??___llmod 0016                ??___lwdiv 0005  
                 _printf 3012             __mediumconst 3DFE                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 2DFE            ___rparam_used 000001   __end_of_usart1_putchar 2DF6  
         __pcstackCOMRAM 0001            __end_of_putch 2DD8             ?_usart1_init 0001  
                ??_putch 0002          ?_usart1_putchar 0001        usart1_init@brgval 0001  
     __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000            ??_adc_measure 0003  
         main@meas_v24sw 004E                  ?_printf 0017                ?_adc_init 0001  
         main@meas_caset 0043               _fault_code 0058           main@meas_lampv 0046  
                _OSCCON2 000FD2        __CFG_PRICLKEN$OFF 000000                  _SPBRGH1 000FB0  
         main@read_portd 004D          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 2F86                  ___llmod 2F16  
                ___lwdiv 2EBA                  __pcinit 2DF6                  __ramtop 0300  
             ??_adc_init 0001                  __ptext0 3230                  __ptext1 2E62  
                __ptext2 2E08                  __ptext3 3012                  __ptext4 2DCE  
                __ptext5 2DE6                  __ptext6 2F16                  __ptext7 2F86  
                __ptext8 2E22                  __ptext9 2DD8          __size_of_printf 021E  
                _dpowers 3DFF      __end_of_adc_measure 2E62     end_of_initialization 2DFE  
         main@prev_color 0033            __Lmediumconst 3DFE          ___lldiv@divisor 0005  
         main@st_counter 0055          ___lldiv@counter 000D            ??_ws2812_send 0005  
                printf@c 0028                  printf@f 0017                  postdec2 000FDD  
                postinc2 000FDE               _prev_state 0059     __size_of_usart1_init 001A  
    __end_of_ws2812_send 2EBA              _adc_measure 2E22           __end_of_printf 3230  
    start_initialization 2DF6        adc_measure@retval 0005         main@iter_counter 0053  
       ??_usart1_putchar 0001          ___llmod@divisor 0012          ___llmod@counter 0016  
               ??_printf 001D        __size_of_adc_init 000E              __pbssCOMRAM 0057  
       ___lwdiv@dividend 0001              _ws2812_send 2E62            __pmediumconst 3DFE  
               ?___lldiv 0001                 ?___llmod 000E                 ?___lwdiv 0001  
              _comb_rate 0057                 _BAUDCON1 000FB8         ___lwdiv@quotient 0005  
         __size_of_putch 000A                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
       main@temp_int_171 0031         main@temp_int_157 003B         main@temp_int_165 0037  
             printf@flag 0027               printf@prec 001F        main@sw_comb_count 0052  
      main@sw_comb_ready 0045         usart1_putchar@ch 0001        main@sw_cmos_count 0051  
      main@sw_dist_count 0050                 __Hrparam 0000             ws2812_send@j 0009  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
       __size_of___lldiv 008C         __size_of___llmod 0070         __size_of___lwdiv 005C  
           ?_adc_measure 0001                 _adc_init 2DD8            ??_usart1_init 0003  
               _main$780 002D          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 2EBA            __size_of_main 0BCE                printf@val 0021  
              putch@data 0002              _OSCTUNEbits 000F9B      __end_of_usart1_init 2E22  
       ___lldiv@dividend 0001             ?_ws2812_send 0001                 printf@ap 0025  
        main@run_counter 003D         ___lldiv@quotient 0009        __CFG_T3CMX$PORTC0 000000  
      __CFG_FOSC$INTIO67 000000  
